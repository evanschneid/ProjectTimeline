{
  "version": 3,
  "sources": ["../../@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js", "../../vue/compiler-sfc/index.mjs", "../../@vitejs/plugin-vue/dist/index.js", "dep:@vitejs_plugin-vue"],
  "sourcesContent": ["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\r\n\r\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* PatchFlags.TEXT */]: `TEXT`,\r\n    [2 /* PatchFlags.CLASS */]: `CLASS`,\r\n    [4 /* PatchFlags.STYLE */]: `STYLE`,\r\n    [8 /* PatchFlags.PROPS */]: `PROPS`,\r\n    [16 /* PatchFlags.FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* PatchFlags.HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* PatchFlags.STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* PatchFlags.KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* PatchFlags.UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* PatchFlags.NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* PatchFlags.DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* PatchFlags.HOISTED */]: `HOISTED`,\r\n    [-2 /* PatchFlags.BAIL */]: `BAIL`\r\n};\r\n\r\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* SlotFlags.STABLE */]: 'STABLE',\r\n    [2 /* SlotFlags.DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* SlotFlags.FORWARDED */]: 'FORWARDED'\r\n};\r\n\r\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\r\n\r\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\r\n\r\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:([^]+)/;\r\nconst styleCommentRE = /\\/\\*.*?\\*\\//gs;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText\r\n        .replace(styleCommentRE, '')\r\n        .split(listDelimiterRE)\r\n        .forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) || typeof value === 'number') {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\n\r\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `true` flag.\r\n */\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\r\n\r\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return isString(val)\r\n        ? val\r\n        : val == null\r\n            ? ''\r\n            : isArray(val) ||\r\n                (isObject(val) &&\r\n                    (val.toString === objectToString || !isFunction(val.toString)))\r\n                ? JSON.stringify(val, replacer, 2)\r\n                : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\r\n\r\nconst EMPTY_OBJ = Object.freeze({})\r\n    ;\r\nObject.freeze([]) ;\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst extend = Object.assign;\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\r\nfunction genPropsAccessExp(name) {\r\n    return identRE.test(name)\r\n        ? `__props.${name}`\r\n        : `__props[${JSON.stringify(name)}]`;\r\n}\r\n\r\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        ;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* ErrorCodes.EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* ErrorCodes.EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* ErrorCodes.EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* ErrorCodes.MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* ErrorCodes.NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* ErrorCodes.UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* ErrorCodes.X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* ErrorCodes.X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* ErrorCodes.X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* ErrorCodes.X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* ErrorCodes.X_V_MODEL_ON_PROPS */]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\r\n    [45 /* ErrorCodes.X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [51 /* ErrorCodes.__EXTEND_POINT__ */]: ``\r\n};\r\n\r\nconst FRAGMENT = Symbol(`Fragment` );\r\nconst TELEPORT = Symbol(`Teleport` );\r\nconst SUSPENSE = Symbol(`Suspense` );\r\nconst KEEP_ALIVE = Symbol(`KeepAlive` );\r\nconst BASE_TRANSITION = Symbol(`BaseTransition` );\r\nconst OPEN_BLOCK = Symbol(`openBlock` );\r\nconst CREATE_BLOCK = Symbol(`createBlock` );\r\nconst CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock` );\r\nconst CREATE_VNODE = Symbol(`createVNode` );\r\nconst CREATE_ELEMENT_VNODE = Symbol(`createElementVNode` );\r\nconst CREATE_COMMENT = Symbol(`createCommentVNode` );\r\nconst CREATE_TEXT = Symbol(`createTextVNode` );\r\nconst CREATE_STATIC = Symbol(`createStaticVNode` );\r\nconst RESOLVE_COMPONENT = Symbol(`resolveComponent` );\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(`resolveDynamicComponent` );\r\nconst RESOLVE_DIRECTIVE = Symbol(`resolveDirective` );\r\nconst RESOLVE_FILTER = Symbol(`resolveFilter` );\r\nconst WITH_DIRECTIVES = Symbol(`withDirectives` );\r\nconst RENDER_LIST = Symbol(`renderList` );\r\nconst RENDER_SLOT = Symbol(`renderSlot` );\r\nconst CREATE_SLOTS = Symbol(`createSlots` );\r\nconst TO_DISPLAY_STRING = Symbol(`toDisplayString` );\r\nconst MERGE_PROPS = Symbol(`mergeProps` );\r\nconst NORMALIZE_CLASS = Symbol(`normalizeClass` );\r\nconst NORMALIZE_STYLE = Symbol(`normalizeStyle` );\r\nconst NORMALIZE_PROPS = Symbol(`normalizeProps` );\r\nconst GUARD_REACTIVE_PROPS = Symbol(`guardReactiveProps` );\r\nconst TO_HANDLERS = Symbol(`toHandlers` );\r\nconst CAMELIZE = Symbol(`camelize` );\r\nconst CAPITALIZE = Symbol(`capitalize` );\r\nconst TO_HANDLER_KEY = Symbol(`toHandlerKey` );\r\nconst SET_BLOCK_TRACKING = Symbol(`setBlockTracking` );\r\nconst PUSH_SCOPE_ID = Symbol(`pushScopeId` );\r\nconst POP_SCOPE_ID = Symbol(`popScopeId` );\r\nconst WITH_CTX = Symbol(`withCtx` );\r\nconst UNREF = Symbol(`unref` );\r\nconst IS_REF = Symbol(`isRef` );\r\nconst WITH_MEMO = Symbol(`withMemo` );\r\nconst IS_MEMO_SAME = Symbol(`isMemoSame` );\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\r\n\r\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* NodeTypes.ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* NodeTypes.VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* NodeTypes.JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* NodeTypes.JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* NodeTypes.JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* NodeTypes.INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* NodeTypes.COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* NodeTypes.JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* NodeTypes.JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* NodeTypes.JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* NodeTypes.JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* NodeTypes.JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\r\n\r\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\r\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\r\nfunction isNewLine(code) {\r\n  switch (code) {\r\n    case 10:\r\n    case 13:\r\n    case 8232:\r\n    case 8233:\r\n      return true;\r\n\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\r\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\r\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\r\nfunction isWhitespace(code) {\r\n  switch (code) {\r\n    case 0x0009:\r\n    case 0x000b:\r\n    case 0x000c:\r\n    case 32:\r\n    case 160:\r\n    case 5760:\r\n    case 0x2000:\r\n    case 0x2001:\r\n    case 0x2002:\r\n    case 0x2003:\r\n    case 0x2004:\r\n    case 0x2005:\r\n    case 0x2006:\r\n    case 0x2007:\r\n    case 0x2008:\r\n    case 0x2009:\r\n    case 0x200a:\r\n    case 0x202f:\r\n    case 0x205f:\r\n    case 0x3000:\r\n    case 0xfeff:\r\n      return true;\r\n\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nclass Position {\r\n  constructor(line, col) {\r\n    this.line = void 0;\r\n    this.column = void 0;\r\n    this.line = line;\r\n    this.column = col;\r\n  }\r\n\r\n}\r\nclass SourceLocation {\r\n  constructor(start, end) {\r\n    this.start = void 0;\r\n    this.end = void 0;\r\n    this.filename = void 0;\r\n    this.identifierName = void 0;\r\n    this.start = start;\r\n    this.end = end;\r\n  }\r\n\r\n}\r\nfunction getLineInfo(input, offset) {\r\n  let line = 1;\r\n  let lineStart = 0;\r\n  let match;\r\n  lineBreakG.lastIndex = 0;\r\n\r\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\r\n    line++;\r\n    lineStart = lineBreakG.lastIndex;\r\n  }\r\n\r\n  return new Position(line, offset - lineStart);\r\n}\r\n\r\nclass BaseParser {\r\n  constructor() {\r\n    this.sawUnambiguousESM = false;\r\n    this.ambiguousScriptDifferentAst = false;\r\n  }\r\n\r\n  hasPlugin(name) {\r\n    return this.plugins.has(name);\r\n  }\r\n\r\n  getPluginOption(plugin, name) {\r\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\r\n  }\r\n\r\n}\r\n\r\nfunction setTrailingComments(node, comments) {\r\n  if (node.trailingComments === undefined) {\r\n    node.trailingComments = comments;\r\n  } else {\r\n    node.trailingComments.unshift(...comments);\r\n  }\r\n}\r\n\r\nfunction setLeadingComments(node, comments) {\r\n  if (node.leadingComments === undefined) {\r\n    node.leadingComments = comments;\r\n  } else {\r\n    node.leadingComments.unshift(...comments);\r\n  }\r\n}\r\n\r\nfunction setInnerComments(node, comments) {\r\n  if (node.innerComments === undefined) {\r\n    node.innerComments = comments;\r\n  } else {\r\n    node.innerComments.unshift(...comments);\r\n  }\r\n}\r\n\r\nfunction adjustInnerComments(node, elements, commentWS) {\r\n  let lastElement = null;\r\n  let i = elements.length;\r\n\r\n  while (lastElement === null && i > 0) {\r\n    lastElement = elements[--i];\r\n  }\r\n\r\n  if (lastElement === null || lastElement.start > commentWS.start) {\r\n    setInnerComments(node, commentWS.comments);\r\n  } else {\r\n    setTrailingComments(lastElement, commentWS.comments);\r\n  }\r\n}\r\n\r\nclass CommentsParser extends BaseParser {\r\n  addComment(comment) {\r\n    if (this.filename) comment.loc.filename = this.filename;\r\n    this.state.comments.push(comment);\r\n  }\r\n\r\n  processComment(node) {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n    const commentStackLength = commentStack.length;\r\n    if (commentStackLength === 0) return;\r\n    let i = commentStackLength - 1;\r\n    const lastCommentWS = commentStack[i];\r\n\r\n    if (lastCommentWS.start === node.end) {\r\n      lastCommentWS.leadingNode = node;\r\n      i--;\r\n    }\r\n\r\n    const {\r\n      start: nodeStart\r\n    } = node;\r\n\r\n    for (; i >= 0; i--) {\r\n      const commentWS = commentStack[i];\r\n      const commentEnd = commentWS.end;\r\n\r\n      if (commentEnd > nodeStart) {\r\n        commentWS.containingNode = node;\r\n        this.finalizeComment(commentWS);\r\n        commentStack.splice(i, 1);\r\n      } else {\r\n        if (commentEnd === nodeStart) {\r\n          commentWS.trailingNode = node;\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  finalizeComment(commentWS) {\r\n    const {\r\n      comments\r\n    } = commentWS;\r\n\r\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\r\n      if (commentWS.leadingNode !== null) {\r\n        setTrailingComments(commentWS.leadingNode, comments);\r\n      }\r\n\r\n      if (commentWS.trailingNode !== null) {\r\n        setLeadingComments(commentWS.trailingNode, comments);\r\n      }\r\n    } else {\r\n      const {\r\n        containingNode: node,\r\n        start: commentStart\r\n      } = commentWS;\r\n\r\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\r\n        switch (node.type) {\r\n          case \"ObjectExpression\":\r\n          case \"ObjectPattern\":\r\n          case \"RecordExpression\":\r\n            adjustInnerComments(node, node.properties, commentWS);\r\n            break;\r\n\r\n          case \"CallExpression\":\r\n          case \"OptionalCallExpression\":\r\n            adjustInnerComments(node, node.arguments, commentWS);\r\n            break;\r\n\r\n          case \"FunctionDeclaration\":\r\n          case \"FunctionExpression\":\r\n          case \"ArrowFunctionExpression\":\r\n          case \"ObjectMethod\":\r\n          case \"ClassMethod\":\r\n          case \"ClassPrivateMethod\":\r\n            adjustInnerComments(node, node.params, commentWS);\r\n            break;\r\n\r\n          case \"ArrayExpression\":\r\n          case \"ArrayPattern\":\r\n          case \"TupleExpression\":\r\n            adjustInnerComments(node, node.elements, commentWS);\r\n            break;\r\n\r\n          case \"ExportNamedDeclaration\":\r\n          case \"ImportDeclaration\":\r\n            adjustInnerComments(node, node.specifiers, commentWS);\r\n            break;\r\n\r\n          default:\r\n            {\r\n              setInnerComments(node, comments);\r\n            }\r\n        }\r\n      } else {\r\n        setInnerComments(node, comments);\r\n      }\r\n    }\r\n  }\r\n\r\n  finalizeRemainingComments() {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n\r\n    for (let i = commentStack.length - 1; i >= 0; i--) {\r\n      this.finalizeComment(commentStack[i]);\r\n    }\r\n\r\n    this.state.commentStack = [];\r\n  }\r\n\r\n  resetPreviousNodeTrailingComments(node) {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n    const {\r\n      length\r\n    } = commentStack;\r\n    if (length === 0) return;\r\n    const commentWS = commentStack[length - 1];\r\n\r\n    if (commentWS.leadingNode === node) {\r\n      commentWS.leadingNode = null;\r\n    }\r\n  }\r\n\r\n  takeSurroundingComments(node, start, end) {\r\n    const {\r\n      commentStack\r\n    } = this.state;\r\n    const commentStackLength = commentStack.length;\r\n    if (commentStackLength === 0) return;\r\n    let i = commentStackLength - 1;\r\n\r\n    for (; i >= 0; i--) {\r\n      const commentWS = commentStack[i];\r\n      const commentEnd = commentWS.end;\r\n      const commentStart = commentWS.start;\r\n\r\n      if (commentStart === end) {\r\n        commentWS.leadingNode = node;\r\n      } else if (commentEnd === start) {\r\n        commentWS.trailingNode = node;\r\n      } else if (commentEnd < start) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst ErrorCodes = Object.freeze({\r\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\r\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\r\n});\r\n\r\nconst ErrorMessages = makeErrorTemplates({\r\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\r\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\r\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\r\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\r\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\r\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\r\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\r\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\r\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\r\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\r\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\r\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\r\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\r\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\r\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\r\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\r\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\r\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\r\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\r\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\r\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\r\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\r\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\r\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\r\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\r\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\r\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\r\n  DuplicateProto: \"Redefinition of __proto__ property.\",\r\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\r\n  ElementAfterRest: \"Rest element must be last element.\",\r\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\r\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\r\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\r\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\r\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\r\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\r\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\r\n  IllegalBreakContinue: \"Unsyntactic %0.\",\r\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\r\n  IllegalReturn: \"'return' outside of function.\",\r\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\r\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\r\n  ImportCallArity: \"`import()` requires exactly %0.\",\r\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\r\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\r\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\r\n  InvalidCodePoint: \"Code point out of bounds.\",\r\n  InvalidDecimal: \"Invalid decimal.\",\r\n  InvalidDigit: \"Expected number in radix %0.\",\r\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\r\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\r\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\r\n  InvalidIdentifier: \"Invalid identifier %0.\",\r\n  InvalidLhs: \"Invalid left-hand side in %0.\",\r\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\r\n  InvalidNumber: \"Invalid number.\",\r\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\r\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\r\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\r\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\r\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\r\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\r\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\r\n  LabelRedeclaration: \"Label '%0' is already declared.\",\r\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\r\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\r\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\r\n  MissingClassName: \"A class name is required.\",\r\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\r\n  MissingSemicolon: \"Missing semicolon.\",\r\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\r\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\r\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\r\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\r\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\r\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\r\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\r\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\r\n  NewlineAfterThrow: \"Illegal newline after throw.\",\r\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\r\n  NumberIdentifier: \"Identifier directly after number.\",\r\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\r\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\r\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\r\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\r\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\r\n  ParamDupe: \"Argument name clash.\",\r\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\r\n  PatternHasMethod: \"Object pattern can't contain methods.\",\r\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\r\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\r\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\r\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\r\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\r\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\r\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\r\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\r\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\r\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\r\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\r\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\r\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\r\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\r\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\r\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\r\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\r\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\r\n  StaticPrototype: \"Classes may not have static property named prototype.\",\r\n  StrictDelete: \"Deleting local variable in strict mode.\",\r\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\r\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\r\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\r\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\r\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\r\n  StrictWith: \"'with' in strict mode.\",\r\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\r\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\r\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\r\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\r\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\r\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\r\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\r\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\r\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\r\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\r\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\r\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\r\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\r\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\r\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\r\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\r\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\r\n  UnexpectedToken: \"Unexpected token '%0'.\",\r\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\r\n  UnsupportedBind: \"Binding should be performed on object property.\",\r\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\r\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\r\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\r\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\r\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\r\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\r\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\r\n  UnterminatedComment: \"Unterminated comment.\",\r\n  UnterminatedRegExp: \"Unterminated regular expression.\",\r\n  UnterminatedString: \"Unterminated string constant.\",\r\n  UnterminatedTemplate: \"Unterminated template.\",\r\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\r\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\r\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\r\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\r\n}, ErrorCodes.SyntaxError);\r\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\r\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\r\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\r\n}, ErrorCodes.SourceTypeModuleError);\r\n\r\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\r\n  {\r\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\r\n      return \"OptionalBindingPattern\";\r\n    }\r\n  }\r\n  return reasonCode;\r\n}\r\n\r\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\r\n  const templates = {};\r\n  Object.keys(messages).forEach(reasonCode => {\r\n    templates[reasonCode] = Object.freeze({\r\n      code,\r\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\r\n      template: messages[reasonCode]\r\n    });\r\n  });\r\n  return Object.freeze(templates);\r\n}\r\nclass ParserError extends CommentsParser {\r\n  getLocationForPosition(pos) {\r\n    let loc;\r\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\r\n    return loc;\r\n  }\r\n\r\n  raise(pos, {\r\n    code,\r\n    reasonCode,\r\n    template\r\n  }, ...params) {\r\n    return this.raiseWithData(pos, {\r\n      code,\r\n      reasonCode\r\n    }, template, ...params);\r\n  }\r\n\r\n  raiseOverwrite(pos, {\r\n    code,\r\n    template\r\n  }, ...params) {\r\n    const loc = this.getLocationForPosition(pos);\r\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\r\n\r\n    if (this.options.errorRecovery) {\r\n      const errors = this.state.errors;\r\n\r\n      for (let i = errors.length - 1; i >= 0; i--) {\r\n        const error = errors[i];\r\n\r\n        if (error.pos === pos) {\r\n          return Object.assign(error, {\r\n            message\r\n          });\r\n        } else if (error.pos < pos) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this._raise({\r\n      code,\r\n      loc,\r\n      pos\r\n    }, message);\r\n  }\r\n\r\n  raiseWithData(pos, data, errorTemplate, ...params) {\r\n    const loc = this.getLocationForPosition(pos);\r\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\r\n    return this._raise(Object.assign({\r\n      loc,\r\n      pos\r\n    }, data), message);\r\n  }\r\n\r\n  _raise(errorContext, message) {\r\n    const err = new SyntaxError(message);\r\n    Object.assign(err, errorContext);\r\n\r\n    if (this.options.errorRecovery) {\r\n      if (!this.isLookahead) this.state.errors.push(err);\r\n      return err;\r\n    } else {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nvar estree = (superClass => class extends superClass {\r\n  parseRegExpLiteral({\r\n    pattern,\r\n    flags\r\n  }) {\r\n    let regex = null;\r\n\r\n    try {\r\n      regex = new RegExp(pattern, flags);\r\n    } catch (e) {}\r\n\r\n    const node = this.estreeParseLiteral(regex);\r\n    node.regex = {\r\n      pattern,\r\n      flags\r\n    };\r\n    return node;\r\n  }\r\n\r\n  parseBigIntLiteral(value) {\r\n    let bigInt;\r\n\r\n    try {\r\n      bigInt = BigInt(value);\r\n    } catch (_unused) {\r\n      bigInt = null;\r\n    }\r\n\r\n    const node = this.estreeParseLiteral(bigInt);\r\n    node.bigint = String(node.value || value);\r\n    return node;\r\n  }\r\n\r\n  parseDecimalLiteral(value) {\r\n    const decimal = null;\r\n    const node = this.estreeParseLiteral(decimal);\r\n    node.decimal = String(node.value || value);\r\n    return node;\r\n  }\r\n\r\n  estreeParseLiteral(value) {\r\n    return this.parseLiteral(value, \"Literal\");\r\n  }\r\n\r\n  parseStringLiteral(value) {\r\n    return this.estreeParseLiteral(value);\r\n  }\r\n\r\n  parseNumericLiteral(value) {\r\n    return this.estreeParseLiteral(value);\r\n  }\r\n\r\n  parseNullLiteral() {\r\n    return this.estreeParseLiteral(null);\r\n  }\r\n\r\n  parseBooleanLiteral(value) {\r\n    return this.estreeParseLiteral(value);\r\n  }\r\n\r\n  directiveToStmt(directive) {\r\n    const directiveLiteral = directive.value;\r\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\r\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\r\n    expression.value = directiveLiteral.extra.expressionValue;\r\n    expression.raw = directiveLiteral.extra.raw;\r\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\r\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\r\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\r\n  }\r\n\r\n  initFunction(node, isAsync) {\r\n    super.initFunction(node, isAsync);\r\n    node.expression = false;\r\n  }\r\n\r\n  checkDeclaration(node) {\r\n    if (node != null && this.isObjectProperty(node)) {\r\n      this.checkDeclaration(node.value);\r\n    } else {\r\n      super.checkDeclaration(node);\r\n    }\r\n  }\r\n\r\n  getObjectOrClassMethodParams(method) {\r\n    return method.value.params;\r\n  }\r\n\r\n  isValidDirective(stmt) {\r\n    var _stmt$expression$extr;\r\n\r\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\r\n  }\r\n\r\n  parseBlockBody(node, ...args) {\r\n    super.parseBlockBody(node, ...args);\r\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\r\n    node.body = directiveStatements.concat(node.body);\r\n    delete node.directives;\r\n  }\r\n\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\r\n\r\n    if (method.typeParameters) {\r\n      method.value.typeParameters = method.typeParameters;\r\n      delete method.typeParameters;\r\n    }\r\n\r\n    classBody.body.push(method);\r\n  }\r\n\r\n  parsePrivateName() {\r\n    const node = super.parsePrivateName();\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return node;\r\n      }\r\n    }\r\n    return this.convertPrivateNameToPrivateIdentifier(node);\r\n  }\r\n\r\n  convertPrivateNameToPrivateIdentifier(node) {\r\n    const name = super.getPrivateNameSV(node);\r\n    node = node;\r\n    delete node.id;\r\n    node.name = name;\r\n    node.type = \"PrivateIdentifier\";\r\n    return node;\r\n  }\r\n\r\n  isPrivateName(node) {\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return super.isPrivateName(node);\r\n      }\r\n    }\r\n    return node.type === \"PrivateIdentifier\";\r\n  }\r\n\r\n  getPrivateNameSV(node) {\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return super.getPrivateNameSV(node);\r\n      }\r\n    }\r\n    return node.name;\r\n  }\r\n\r\n  parseLiteral(value, type) {\r\n    const node = super.parseLiteral(value, type);\r\n    node.raw = node.extra.raw;\r\n    delete node.extra;\r\n    return node;\r\n  }\r\n\r\n  parseFunctionBody(node, allowExpression, isMethod = false) {\r\n    super.parseFunctionBody(node, allowExpression, isMethod);\r\n    node.expression = node.body.type !== \"BlockStatement\";\r\n  }\r\n\r\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\r\n    let funcNode = this.startNode();\r\n    funcNode.kind = node.kind;\r\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\r\n    funcNode.type = \"FunctionExpression\";\r\n    delete funcNode.kind;\r\n    node.value = funcNode;\r\n\r\n    if (type === \"ClassPrivateMethod\") {\r\n      node.computed = false;\r\n    }\r\n\r\n    type = \"MethodDefinition\";\r\n    return this.finishNode(node, type);\r\n  }\r\n\r\n  parseClassProperty(...args) {\r\n    const propertyNode = super.parseClassProperty(...args);\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return propertyNode;\r\n      }\r\n    }\r\n    propertyNode.type = \"PropertyDefinition\";\r\n    return propertyNode;\r\n  }\r\n\r\n  parseClassPrivateProperty(...args) {\r\n    const propertyNode = super.parseClassPrivateProperty(...args);\r\n    {\r\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\r\n        return propertyNode;\r\n      }\r\n    }\r\n    propertyNode.type = \"PropertyDefinition\";\r\n    propertyNode.computed = false;\r\n    return propertyNode;\r\n  }\r\n\r\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\r\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\r\n\r\n    if (node) {\r\n      node.type = \"Property\";\r\n      if (node.kind === \"method\") node.kind = \"init\";\r\n      node.shorthand = false;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\r\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\r\n\r\n    if (node) {\r\n      node.kind = \"init\";\r\n      node.type = \"Property\";\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  isAssignable(node, isBinding) {\r\n    if (node != null && this.isObjectProperty(node)) {\r\n      return this.isAssignable(node.value, isBinding);\r\n    }\r\n\r\n    return super.isAssignable(node, isBinding);\r\n  }\r\n\r\n  toAssignable(node, isLHS = false) {\r\n    if (node != null && this.isObjectProperty(node)) {\r\n      this.toAssignable(node.value, isLHS);\r\n      return node;\r\n    }\r\n\r\n    return super.toAssignable(node, isLHS);\r\n  }\r\n\r\n  toAssignableObjectExpressionProp(prop, ...args) {\r\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\r\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\r\n    } else if (prop.method) {\r\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\r\n    } else {\r\n      super.toAssignableObjectExpressionProp(prop, ...args);\r\n    }\r\n  }\r\n\r\n  finishCallExpression(node, optional) {\r\n    super.finishCallExpression(node, optional);\r\n\r\n    if (node.callee.type === \"Import\") {\r\n      node.type = \"ImportExpression\";\r\n      node.source = node.arguments[0];\r\n\r\n      if (this.hasPlugin(\"importAssertions\")) {\r\n        var _node$arguments$;\r\n\r\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\r\n      }\r\n\r\n      delete node.arguments;\r\n      delete node.callee;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  toReferencedArguments(node) {\r\n    if (node.type === \"ImportExpression\") {\r\n      return;\r\n    }\r\n\r\n    super.toReferencedArguments(node);\r\n  }\r\n\r\n  parseExport(node) {\r\n    super.parseExport(node);\r\n\r\n    switch (node.type) {\r\n      case \"ExportAllDeclaration\":\r\n        node.exported = null;\r\n        break;\r\n\r\n      case \"ExportNamedDeclaration\":\r\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\r\n          node.type = \"ExportAllDeclaration\";\r\n          node.exported = node.specifiers[0].exported;\r\n          delete node.specifiers;\r\n        }\r\n\r\n        break;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\r\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\r\n\r\n    if (state.optionalChainMember) {\r\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\r\n        node.type = node.type.substring(8);\r\n      }\r\n\r\n      if (state.stop) {\r\n        const chain = this.startNodeAtNode(node);\r\n        chain.expression = node;\r\n        return this.finishNode(chain, \"ChainExpression\");\r\n      }\r\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\r\n      node.optional = false;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  hasPropertyAsPrivateName(node) {\r\n    if (node.type === \"ChainExpression\") {\r\n      node = node.expression;\r\n    }\r\n\r\n    return super.hasPropertyAsPrivateName(node);\r\n  }\r\n\r\n  isOptionalChain(node) {\r\n    return node.type === \"ChainExpression\";\r\n  }\r\n\r\n  isObjectProperty(node) {\r\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\r\n  }\r\n\r\n  isObjectMethod(node) {\r\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\r\n  }\r\n\r\n});\r\n\r\nclass TokContext {\r\n  constructor(token, preserveSpace) {\r\n    this.token = void 0;\r\n    this.preserveSpace = void 0;\r\n    this.token = token;\r\n    this.preserveSpace = !!preserveSpace;\r\n  }\r\n\r\n}\r\nconst types = {\r\n  brace: new TokContext(\"{\"),\r\n  template: new TokContext(\"`\", true)\r\n};\r\n\r\nconst beforeExpr = true;\r\nconst startsExpr = true;\r\nconst isLoop = true;\r\nconst isAssign = true;\r\nconst prefix = true;\r\nconst postfix = true;\r\nclass ExportedTokenType {\r\n  constructor(label, conf = {}) {\r\n    this.label = void 0;\r\n    this.keyword = void 0;\r\n    this.beforeExpr = void 0;\r\n    this.startsExpr = void 0;\r\n    this.rightAssociative = void 0;\r\n    this.isLoop = void 0;\r\n    this.isAssign = void 0;\r\n    this.prefix = void 0;\r\n    this.postfix = void 0;\r\n    this.binop = void 0;\r\n    this.label = label;\r\n    this.keyword = conf.keyword;\r\n    this.beforeExpr = !!conf.beforeExpr;\r\n    this.startsExpr = !!conf.startsExpr;\r\n    this.rightAssociative = !!conf.rightAssociative;\r\n    this.isLoop = !!conf.isLoop;\r\n    this.isAssign = !!conf.isAssign;\r\n    this.prefix = !!conf.prefix;\r\n    this.postfix = !!conf.postfix;\r\n    this.binop = conf.binop != null ? conf.binop : null;\r\n    {\r\n      this.updateContext = null;\r\n    }\r\n  }\r\n\r\n}\r\nconst keywords$1 = new Map();\r\n\r\nfunction createKeyword(name, options = {}) {\r\n  options.keyword = name;\r\n  const token = createToken(name, options);\r\n  keywords$1.set(name, token);\r\n  return token;\r\n}\r\n\r\nfunction createBinop(name, binop) {\r\n  return createToken(name, {\r\n    beforeExpr,\r\n    binop\r\n  });\r\n}\r\n\r\nlet tokenTypeCounter = -1;\r\nconst tokenTypes = [];\r\nconst tokenLabels = [];\r\nconst tokenBinops = [];\r\nconst tokenBeforeExprs = [];\r\nconst tokenStartsExprs = [];\r\nconst tokenPrefixes = [];\r\n\r\nfunction createToken(name, options = {}) {\r\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\r\n\r\n  ++tokenTypeCounter;\r\n  tokenLabels.push(name);\r\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\r\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\r\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\r\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\r\n  tokenTypes.push(new ExportedTokenType(name, options));\r\n  return tokenTypeCounter;\r\n}\r\n\r\nfunction createKeywordLike(name, options = {}) {\r\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\r\n\r\n  ++tokenTypeCounter;\r\n  keywords$1.set(name, tokenTypeCounter);\r\n  tokenLabels.push(name);\r\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\r\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\r\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\r\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\r\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\r\n  return tokenTypeCounter;\r\n}\r\n\r\nconst tt = {\r\n  bracketL: createToken(\"[\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  bracketHashL: createToken(\"#[\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  bracketBarL: createToken(\"[|\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  bracketR: createToken(\"]\"),\r\n  bracketBarR: createToken(\"|]\"),\r\n  braceL: createToken(\"{\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  braceBarL: createToken(\"{|\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  braceHashL: createToken(\"#{\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  braceR: createToken(\"}\", {\r\n    beforeExpr\r\n  }),\r\n  braceBarR: createToken(\"|}\"),\r\n  parenL: createToken(\"(\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  parenR: createToken(\")\"),\r\n  comma: createToken(\",\", {\r\n    beforeExpr\r\n  }),\r\n  semi: createToken(\";\", {\r\n    beforeExpr\r\n  }),\r\n  colon: createToken(\":\", {\r\n    beforeExpr\r\n  }),\r\n  doubleColon: createToken(\"::\", {\r\n    beforeExpr\r\n  }),\r\n  dot: createToken(\".\"),\r\n  question: createToken(\"?\", {\r\n    beforeExpr\r\n  }),\r\n  questionDot: createToken(\"?.\"),\r\n  arrow: createToken(\"=>\", {\r\n    beforeExpr\r\n  }),\r\n  template: createToken(\"template\"),\r\n  ellipsis: createToken(\"...\", {\r\n    beforeExpr\r\n  }),\r\n  backQuote: createToken(\"`\", {\r\n    startsExpr\r\n  }),\r\n  dollarBraceL: createToken(\"${\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  at: createToken(\"@\"),\r\n  hash: createToken(\"#\", {\r\n    startsExpr\r\n  }),\r\n  interpreterDirective: createToken(\"#!...\"),\r\n  eq: createToken(\"=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  assign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  slashAssign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  xorAssign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  moduloAssign: createToken(\"_=\", {\r\n    beforeExpr,\r\n    isAssign\r\n  }),\r\n  incDec: createToken(\"++/--\", {\r\n    prefix,\r\n    postfix,\r\n    startsExpr\r\n  }),\r\n  bang: createToken(\"!\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  tilde: createToken(\"~\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  pipeline: createBinop(\"|>\", 0),\r\n  nullishCoalescing: createBinop(\"??\", 1),\r\n  logicalOR: createBinop(\"||\", 1),\r\n  logicalAND: createBinop(\"&&\", 2),\r\n  bitwiseOR: createBinop(\"|\", 3),\r\n  bitwiseXOR: createBinop(\"^\", 4),\r\n  bitwiseAND: createBinop(\"&\", 5),\r\n  equality: createBinop(\"==/!=/===/!==\", 6),\r\n  lt: createBinop(\"</>/<=/>=\", 7),\r\n  gt: createBinop(\"</>/<=/>=\", 7),\r\n  relational: createBinop(\"</>/<=/>=\", 7),\r\n  bitShift: createBinop(\"<</>>/>>>\", 8),\r\n  plusMin: createToken(\"+/-\", {\r\n    beforeExpr,\r\n    binop: 9,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  modulo: createToken(\"%\", {\r\n    binop: 10,\r\n    startsExpr\r\n  }),\r\n  star: createToken(\"*\", {\r\n    binop: 10\r\n  }),\r\n  slash: createBinop(\"/\", 10),\r\n  exponent: createToken(\"**\", {\r\n    beforeExpr,\r\n    binop: 11,\r\n    rightAssociative: true\r\n  }),\r\n  _in: createKeyword(\"in\", {\r\n    beforeExpr,\r\n    binop: 7\r\n  }),\r\n  _instanceof: createKeyword(\"instanceof\", {\r\n    beforeExpr,\r\n    binop: 7\r\n  }),\r\n  _break: createKeyword(\"break\"),\r\n  _case: createKeyword(\"case\", {\r\n    beforeExpr\r\n  }),\r\n  _catch: createKeyword(\"catch\"),\r\n  _continue: createKeyword(\"continue\"),\r\n  _debugger: createKeyword(\"debugger\"),\r\n  _default: createKeyword(\"default\", {\r\n    beforeExpr\r\n  }),\r\n  _else: createKeyword(\"else\", {\r\n    beforeExpr\r\n  }),\r\n  _finally: createKeyword(\"finally\"),\r\n  _function: createKeyword(\"function\", {\r\n    startsExpr\r\n  }),\r\n  _if: createKeyword(\"if\"),\r\n  _return: createKeyword(\"return\", {\r\n    beforeExpr\r\n  }),\r\n  _switch: createKeyword(\"switch\"),\r\n  _throw: createKeyword(\"throw\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _try: createKeyword(\"try\"),\r\n  _var: createKeyword(\"var\"),\r\n  _const: createKeyword(\"const\"),\r\n  _with: createKeyword(\"with\"),\r\n  _new: createKeyword(\"new\", {\r\n    beforeExpr,\r\n    startsExpr\r\n  }),\r\n  _this: createKeyword(\"this\", {\r\n    startsExpr\r\n  }),\r\n  _super: createKeyword(\"super\", {\r\n    startsExpr\r\n  }),\r\n  _class: createKeyword(\"class\", {\r\n    startsExpr\r\n  }),\r\n  _extends: createKeyword(\"extends\", {\r\n    beforeExpr\r\n  }),\r\n  _export: createKeyword(\"export\"),\r\n  _import: createKeyword(\"import\", {\r\n    startsExpr\r\n  }),\r\n  _null: createKeyword(\"null\", {\r\n    startsExpr\r\n  }),\r\n  _true: createKeyword(\"true\", {\r\n    startsExpr\r\n  }),\r\n  _false: createKeyword(\"false\", {\r\n    startsExpr\r\n  }),\r\n  _typeof: createKeyword(\"typeof\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _void: createKeyword(\"void\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _delete: createKeyword(\"delete\", {\r\n    beforeExpr,\r\n    prefix,\r\n    startsExpr\r\n  }),\r\n  _do: createKeyword(\"do\", {\r\n    isLoop,\r\n    beforeExpr\r\n  }),\r\n  _for: createKeyword(\"for\", {\r\n    isLoop\r\n  }),\r\n  _while: createKeyword(\"while\", {\r\n    isLoop\r\n  }),\r\n  _as: createKeywordLike(\"as\", {\r\n    startsExpr\r\n  }),\r\n  _assert: createKeywordLike(\"assert\", {\r\n    startsExpr\r\n  }),\r\n  _async: createKeywordLike(\"async\", {\r\n    startsExpr\r\n  }),\r\n  _await: createKeywordLike(\"await\", {\r\n    startsExpr\r\n  }),\r\n  _from: createKeywordLike(\"from\", {\r\n    startsExpr\r\n  }),\r\n  _get: createKeywordLike(\"get\", {\r\n    startsExpr\r\n  }),\r\n  _let: createKeywordLike(\"let\", {\r\n    startsExpr\r\n  }),\r\n  _meta: createKeywordLike(\"meta\", {\r\n    startsExpr\r\n  }),\r\n  _of: createKeywordLike(\"of\", {\r\n    startsExpr\r\n  }),\r\n  _sent: createKeywordLike(\"sent\", {\r\n    startsExpr\r\n  }),\r\n  _set: createKeywordLike(\"set\", {\r\n    startsExpr\r\n  }),\r\n  _static: createKeywordLike(\"static\", {\r\n    startsExpr\r\n  }),\r\n  _yield: createKeywordLike(\"yield\", {\r\n    startsExpr\r\n  }),\r\n  _asserts: createKeywordLike(\"asserts\", {\r\n    startsExpr\r\n  }),\r\n  _checks: createKeywordLike(\"checks\", {\r\n    startsExpr\r\n  }),\r\n  _exports: createKeywordLike(\"exports\", {\r\n    startsExpr\r\n  }),\r\n  _global: createKeywordLike(\"global\", {\r\n    startsExpr\r\n  }),\r\n  _implements: createKeywordLike(\"implements\", {\r\n    startsExpr\r\n  }),\r\n  _intrinsic: createKeywordLike(\"intrinsic\", {\r\n    startsExpr\r\n  }),\r\n  _infer: createKeywordLike(\"infer\", {\r\n    startsExpr\r\n  }),\r\n  _is: createKeywordLike(\"is\", {\r\n    startsExpr\r\n  }),\r\n  _mixins: createKeywordLike(\"mixins\", {\r\n    startsExpr\r\n  }),\r\n  _proto: createKeywordLike(\"proto\", {\r\n    startsExpr\r\n  }),\r\n  _require: createKeywordLike(\"require\", {\r\n    startsExpr\r\n  }),\r\n  _keyof: createKeywordLike(\"keyof\", {\r\n    startsExpr\r\n  }),\r\n  _readonly: createKeywordLike(\"readonly\", {\r\n    startsExpr\r\n  }),\r\n  _unique: createKeywordLike(\"unique\", {\r\n    startsExpr\r\n  }),\r\n  _abstract: createKeywordLike(\"abstract\", {\r\n    startsExpr\r\n  }),\r\n  _declare: createKeywordLike(\"declare\", {\r\n    startsExpr\r\n  }),\r\n  _enum: createKeywordLike(\"enum\", {\r\n    startsExpr\r\n  }),\r\n  _module: createKeywordLike(\"module\", {\r\n    startsExpr\r\n  }),\r\n  _namespace: createKeywordLike(\"namespace\", {\r\n    startsExpr\r\n  }),\r\n  _interface: createKeywordLike(\"interface\", {\r\n    startsExpr\r\n  }),\r\n  _type: createKeywordLike(\"type\", {\r\n    startsExpr\r\n  }),\r\n  _opaque: createKeywordLike(\"opaque\", {\r\n    startsExpr\r\n  }),\r\n  name: createToken(\"name\", {\r\n    startsExpr\r\n  }),\r\n  string: createToken(\"string\", {\r\n    startsExpr\r\n  }),\r\n  num: createToken(\"num\", {\r\n    startsExpr\r\n  }),\r\n  bigint: createToken(\"bigint\", {\r\n    startsExpr\r\n  }),\r\n  decimal: createToken(\"decimal\", {\r\n    startsExpr\r\n  }),\r\n  regexp: createToken(\"regexp\", {\r\n    startsExpr\r\n  }),\r\n  privateName: createToken(\"#name\", {\r\n    startsExpr\r\n  }),\r\n  eof: createToken(\"eof\"),\r\n  jsxName: createToken(\"jsxName\"),\r\n  jsxText: createToken(\"jsxText\", {\r\n    beforeExpr: true\r\n  }),\r\n  jsxTagStart: createToken(\"jsxTagStart\", {\r\n    startsExpr: true\r\n  }),\r\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\r\n  placeholder: createToken(\"%%\", {\r\n    startsExpr: true\r\n  })\r\n};\r\nfunction tokenIsIdentifier(token) {\r\n  return token >= 87 && token <= 122;\r\n}\r\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\r\n  return token <= 86;\r\n}\r\nfunction tokenIsKeywordOrIdentifier(token) {\r\n  return token >= 52 && token <= 122;\r\n}\r\nfunction tokenIsLiteralPropertyName(token) {\r\n  return token >= 52 && token <= 126;\r\n}\r\nfunction tokenComesBeforeExpression(token) {\r\n  return tokenBeforeExprs[token];\r\n}\r\nfunction tokenCanStartExpression(token) {\r\n  return tokenStartsExprs[token];\r\n}\r\nfunction tokenIsAssignment(token) {\r\n  return token >= 27 && token <= 31;\r\n}\r\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\r\n  return token >= 119 && token <= 121;\r\n}\r\nfunction tokenIsLoop(token) {\r\n  return token >= 84 && token <= 86;\r\n}\r\nfunction tokenIsKeyword(token) {\r\n  return token >= 52 && token <= 86;\r\n}\r\nfunction tokenIsOperator(token) {\r\n  return token >= 35 && token <= 53;\r\n}\r\nfunction tokenIsPostfix(token) {\r\n  return token === 32;\r\n}\r\nfunction tokenIsPrefix(token) {\r\n  return tokenPrefixes[token];\r\n}\r\nfunction tokenIsTSTypeOperator(token) {\r\n  return token >= 111 && token <= 113;\r\n}\r\nfunction tokenIsTSDeclarationStart(token) {\r\n  return token >= 114 && token <= 120;\r\n}\r\nfunction tokenLabelName(token) {\r\n  return tokenLabels[token];\r\n}\r\nfunction tokenOperatorPrecedence(token) {\r\n  return tokenBinops[token];\r\n}\r\nfunction tokenIsRightAssociative(token) {\r\n  return token === 51;\r\n}\r\nfunction getExportedToken(token) {\r\n  return tokenTypes[token];\r\n}\r\nfunction isTokenType(obj) {\r\n  return typeof obj === \"number\";\r\n}\r\n{\r\n  tokenTypes[8].updateContext = context => {\r\n    context.pop();\r\n  };\r\n\r\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\r\n    context.push(types.brace);\r\n  };\r\n\r\n  tokenTypes[22].updateContext = context => {\r\n    if (context[context.length - 1] === types.template) {\r\n      context.pop();\r\n    } else {\r\n      context.push(types.template);\r\n    }\r\n  };\r\n\r\n  tokenTypes[132].updateContext = context => {\r\n    context.push(types.j_expr, types.j_oTag);\r\n  };\r\n}\r\n\r\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\r\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\r\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\r\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\r\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\r\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\r\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\r\n\r\nfunction isInAstralSet(code, set) {\r\n  let pos = 0x10000;\r\n\r\n  for (let i = 0, length = set.length; i < length; i += 2) {\r\n    pos += set[i];\r\n    if (pos > code) return false;\r\n    pos += set[i + 1];\r\n    if (pos >= code) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction isIdentifierStart(code) {\r\n  if (code < 65) return code === 36;\r\n  if (code <= 90) return true;\r\n  if (code < 97) return code === 95;\r\n  if (code <= 122) return true;\r\n\r\n  if (code <= 0xffff) {\r\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\r\n  }\r\n\r\n  return isInAstralSet(code, astralIdentifierStartCodes);\r\n}\r\nfunction isIdentifierChar(code) {\r\n  if (code < 48) return code === 36;\r\n  if (code < 58) return true;\r\n  if (code < 65) return false;\r\n  if (code <= 90) return true;\r\n  if (code < 97) return code === 95;\r\n  if (code <= 122) return true;\r\n\r\n  if (code <= 0xffff) {\r\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\r\n  }\r\n\r\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\r\n}\r\n\r\nconst reservedWords = {\r\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\r\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\r\n  strictBind: [\"eval\", \"arguments\"]\r\n};\r\nconst keywords = new Set(reservedWords.keyword);\r\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\r\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\r\nfunction isReservedWord(word, inModule) {\r\n  return inModule && word === \"await\" || word === \"enum\";\r\n}\r\nfunction isStrictReservedWord(word, inModule) {\r\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\r\n}\r\nfunction isStrictBindOnlyReservedWord(word) {\r\n  return reservedWordsStrictBindSet.has(word);\r\n}\r\nfunction isStrictBindReservedWord(word, inModule) {\r\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\r\n}\r\nfunction isKeyword(word) {\r\n  return keywords.has(word);\r\n}\r\n\r\nfunction isIteratorStart(current, next) {\r\n  return current === 64 && next === 64;\r\n}\r\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\r\nfunction canBeReservedWord(word) {\r\n  return reservedWordLikeSet.has(word);\r\n}\r\n\r\nconst SCOPE_OTHER = 0b000000000,\r\n      SCOPE_PROGRAM = 0b000000001,\r\n      SCOPE_FUNCTION = 0b000000010,\r\n      SCOPE_ARROW = 0b000000100,\r\n      SCOPE_SIMPLE_CATCH = 0b000001000,\r\n      SCOPE_SUPER = 0b000010000,\r\n      SCOPE_DIRECT_SUPER = 0b000100000,\r\n      SCOPE_CLASS = 0b001000000,\r\n      SCOPE_STATIC_BLOCK = 0b010000000,\r\n      SCOPE_TS_MODULE = 0b100000000,\r\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\r\nconst BIND_KIND_VALUE = 0b000000000001,\r\n      BIND_KIND_TYPE = 0b000000000010,\r\n      BIND_SCOPE_VAR = 0b000000000100,\r\n      BIND_SCOPE_LEXICAL = 0b000000001000,\r\n      BIND_SCOPE_FUNCTION = 0b000000010000,\r\n      BIND_FLAGS_NONE = 0b000001000000,\r\n      BIND_FLAGS_CLASS = 0b000010000000,\r\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\r\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\r\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\r\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\r\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\r\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\r\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\r\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\r\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\r\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\r\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\r\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\r\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\r\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\r\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\r\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\r\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\r\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\r\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\r\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\r\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\r\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\r\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\r\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\r\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\r\n      CLASS_ELEMENT_OTHER = 0;\r\n\r\nclass Scope {\r\n  constructor(flags) {\r\n    this.var = new Set();\r\n    this.lexical = new Set();\r\n    this.functions = new Set();\r\n    this.flags = flags;\r\n  }\r\n\r\n}\r\nclass ScopeHandler {\r\n  constructor(raise, inModule) {\r\n    this.scopeStack = [];\r\n    this.undefinedExports = new Map();\r\n    this.undefinedPrivateNames = new Map();\r\n    this.raise = raise;\r\n    this.inModule = inModule;\r\n  }\r\n\r\n  get inFunction() {\r\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\r\n  }\r\n\r\n  get allowSuper() {\r\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\r\n  }\r\n\r\n  get allowDirectSuper() {\r\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\r\n  }\r\n\r\n  get inClass() {\r\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\r\n  }\r\n\r\n  get inClassAndNotInNonArrowFunction() {\r\n    const flags = this.currentThisScopeFlags();\r\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\r\n  }\r\n\r\n  get inStaticBlock() {\r\n    for (let i = this.scopeStack.length - 1;; i--) {\r\n      const {\r\n        flags\r\n      } = this.scopeStack[i];\r\n\r\n      if (flags & SCOPE_STATIC_BLOCK) {\r\n        return true;\r\n      }\r\n\r\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  get inNonArrowFunction() {\r\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\r\n  }\r\n\r\n  get treatFunctionsAsVar() {\r\n    return this.treatFunctionsAsVarInScope(this.currentScope());\r\n  }\r\n\r\n  createScope(flags) {\r\n    return new Scope(flags);\r\n  }\r\n\r\n  enter(flags) {\r\n    this.scopeStack.push(this.createScope(flags));\r\n  }\r\n\r\n  exit() {\r\n    this.scopeStack.pop();\r\n  }\r\n\r\n  treatFunctionsAsVarInScope(scope) {\r\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\r\n  }\r\n\r\n  declareName(name, bindingType, pos) {\r\n    let scope = this.currentScope();\r\n\r\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\r\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\r\n\r\n      if (bindingType & BIND_SCOPE_FUNCTION) {\r\n        scope.functions.add(name);\r\n      } else {\r\n        scope.lexical.add(name);\r\n      }\r\n\r\n      if (bindingType & BIND_SCOPE_LEXICAL) {\r\n        this.maybeExportDefined(scope, name);\r\n      }\r\n    } else if (bindingType & BIND_SCOPE_VAR) {\r\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\r\n        scope = this.scopeStack[i];\r\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\r\n        scope.var.add(name);\r\n        this.maybeExportDefined(scope, name);\r\n        if (scope.flags & SCOPE_VAR) break;\r\n      }\r\n    }\r\n\r\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\r\n      this.undefinedExports.delete(name);\r\n    }\r\n  }\r\n\r\n  maybeExportDefined(scope, name) {\r\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\r\n      this.undefinedExports.delete(name);\r\n    }\r\n  }\r\n\r\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\r\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\r\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\r\n    }\r\n  }\r\n\r\n  isRedeclaredInScope(scope, name, bindingType) {\r\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\r\n\r\n    if (bindingType & BIND_SCOPE_LEXICAL) {\r\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\r\n    }\r\n\r\n    if (bindingType & BIND_SCOPE_FUNCTION) {\r\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\r\n    }\r\n\r\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\r\n  }\r\n\r\n  checkLocalExport(id) {\r\n    const {\r\n      name\r\n    } = id;\r\n    const topLevelScope = this.scopeStack[0];\r\n\r\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\r\n      this.undefinedExports.set(name, id.start);\r\n    }\r\n  }\r\n\r\n  currentScope() {\r\n    return this.scopeStack[this.scopeStack.length - 1];\r\n  }\r\n\r\n  currentVarScopeFlags() {\r\n    for (let i = this.scopeStack.length - 1;; i--) {\r\n      const {\r\n        flags\r\n      } = this.scopeStack[i];\r\n\r\n      if (flags & SCOPE_VAR) {\r\n        return flags;\r\n      }\r\n    }\r\n  }\r\n\r\n  currentThisScopeFlags() {\r\n    for (let i = this.scopeStack.length - 1;; i--) {\r\n      const {\r\n        flags\r\n      } = this.scopeStack[i];\r\n\r\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\r\n        return flags;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass FlowScope extends Scope {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.declareFunctions = new Set();\r\n  }\r\n\r\n}\r\n\r\nclass FlowScopeHandler extends ScopeHandler {\r\n  createScope(flags) {\r\n    return new FlowScope(flags);\r\n  }\r\n\r\n  declareName(name, bindingType, pos) {\r\n    const scope = this.currentScope();\r\n\r\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\r\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\r\n      this.maybeExportDefined(scope, name);\r\n      scope.declareFunctions.add(name);\r\n      return;\r\n    }\r\n\r\n    super.declareName(...arguments);\r\n  }\r\n\r\n  isRedeclaredInScope(scope, name, bindingType) {\r\n    if (super.isRedeclaredInScope(...arguments)) return true;\r\n\r\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\r\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  checkLocalExport(id) {\r\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\r\n      super.checkLocalExport(id);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass State {\r\n  constructor() {\r\n    this.strict = void 0;\r\n    this.curLine = void 0;\r\n    this.lineStart = void 0;\r\n    this.startLoc = void 0;\r\n    this.endLoc = void 0;\r\n    this.errors = [];\r\n    this.potentialArrowAt = -1;\r\n    this.noArrowAt = [];\r\n    this.noArrowParamsConversionAt = [];\r\n    this.maybeInArrowParameters = false;\r\n    this.inType = false;\r\n    this.noAnonFunctionType = false;\r\n    this.hasFlowComment = false;\r\n    this.isAmbientContext = false;\r\n    this.inAbstractClass = false;\r\n    this.topicContext = {\r\n      maxNumOfResolvableTopics: 0,\r\n      maxTopicIndex: null\r\n    };\r\n    this.soloAwait = false;\r\n    this.inFSharpPipelineDirectBody = false;\r\n    this.labels = [];\r\n    this.decoratorStack = [[]];\r\n    this.comments = [];\r\n    this.commentStack = [];\r\n    this.pos = 0;\r\n    this.type = 129;\r\n    this.value = null;\r\n    this.start = 0;\r\n    this.end = 0;\r\n    this.lastTokEndLoc = null;\r\n    this.lastTokStartLoc = null;\r\n    this.lastTokStart = 0;\r\n    this.lastTokEnd = 0;\r\n    this.context = [types.brace];\r\n    this.canStartJSXElement = true;\r\n    this.containsEsc = false;\r\n    this.strictErrors = new Map();\r\n    this.tokensLength = 0;\r\n  }\r\n\r\n  init({\r\n    strictMode,\r\n    sourceType,\r\n    startLine,\r\n    startColumn\r\n  }) {\r\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\r\n    this.curLine = startLine;\r\n    this.lineStart = -startColumn;\r\n    this.startLoc = this.endLoc = new Position(startLine, startColumn);\r\n  }\r\n\r\n  curPosition() {\r\n    return new Position(this.curLine, this.pos - this.lineStart);\r\n  }\r\n\r\n  clone(skipArrays) {\r\n    const state = new State();\r\n    const keys = Object.keys(this);\r\n\r\n    for (let i = 0, length = keys.length; i < length; i++) {\r\n      const key = keys[i];\r\n      let val = this[key];\r\n\r\n      if (!skipArrays && Array.isArray(val)) {\r\n        val = val.slice();\r\n      }\r\n\r\n      state[key] = val;\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n}\r\n\r\nvar _isDigit = function isDigit(code) {\r\n  return code >= 48 && code <= 57;\r\n};\r\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\r\nconst forbiddenNumericSeparatorSiblings = {\r\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\r\n  hex: [46, 88, 95, 120]\r\n};\r\nconst allowedNumericSeparatorSiblings = {};\r\nallowedNumericSeparatorSiblings.bin = [48, 49];\r\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\r\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\r\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\r\nclass Token {\r\n  constructor(state) {\r\n    this.type = state.type;\r\n    this.value = state.value;\r\n    this.start = state.start;\r\n    this.end = state.end;\r\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\r\n  }\r\n\r\n}\r\nclass Tokenizer extends ParserError {\r\n  constructor(options, input) {\r\n    super();\r\n    this.isLookahead = void 0;\r\n    this.tokens = [];\r\n    this.state = new State();\r\n    this.state.init(options);\r\n    this.input = input;\r\n    this.length = input.length;\r\n    this.isLookahead = false;\r\n  }\r\n\r\n  pushToken(token) {\r\n    this.tokens.length = this.state.tokensLength;\r\n    this.tokens.push(token);\r\n    ++this.state.tokensLength;\r\n  }\r\n\r\n  next() {\r\n    this.checkKeywordEscapes();\r\n\r\n    if (this.options.tokens) {\r\n      this.pushToken(new Token(this.state));\r\n    }\r\n\r\n    this.state.lastTokEnd = this.state.end;\r\n    this.state.lastTokStart = this.state.start;\r\n    this.state.lastTokEndLoc = this.state.endLoc;\r\n    this.state.lastTokStartLoc = this.state.startLoc;\r\n    this.nextToken();\r\n  }\r\n\r\n  eat(type) {\r\n    if (this.match(type)) {\r\n      this.next();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  match(type) {\r\n    return this.state.type === type;\r\n  }\r\n\r\n  createLookaheadState(state) {\r\n    return {\r\n      pos: state.pos,\r\n      value: null,\r\n      type: state.type,\r\n      start: state.start,\r\n      end: state.end,\r\n      lastTokEnd: state.end,\r\n      context: [this.curContext()],\r\n      inType: state.inType\r\n    };\r\n  }\r\n\r\n  lookahead() {\r\n    const old = this.state;\r\n    this.state = this.createLookaheadState(old);\r\n    this.isLookahead = true;\r\n    this.nextToken();\r\n    this.isLookahead = false;\r\n    const curr = this.state;\r\n    this.state = old;\r\n    return curr;\r\n  }\r\n\r\n  nextTokenStart() {\r\n    return this.nextTokenStartSince(this.state.pos);\r\n  }\r\n\r\n  nextTokenStartSince(pos) {\r\n    skipWhiteSpace.lastIndex = pos;\r\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\r\n  }\r\n\r\n  lookaheadCharCode() {\r\n    return this.input.charCodeAt(this.nextTokenStart());\r\n  }\r\n\r\n  codePointAtPos(pos) {\r\n    let cp = this.input.charCodeAt(pos);\r\n\r\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\r\n      const trail = this.input.charCodeAt(pos);\r\n\r\n      if ((trail & 0xfc00) === 0xdc00) {\r\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\r\n      }\r\n    }\r\n\r\n    return cp;\r\n  }\r\n\r\n  setStrict(strict) {\r\n    this.state.strict = strict;\r\n\r\n    if (strict) {\r\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\r\n      this.state.strictErrors.clear();\r\n    }\r\n  }\r\n\r\n  curContext() {\r\n    return this.state.context[this.state.context.length - 1];\r\n  }\r\n\r\n  nextToken() {\r\n    const curContext = this.curContext();\r\n    if (!curContext.preserveSpace) this.skipSpace();\r\n    this.state.start = this.state.pos;\r\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\r\n\r\n    if (this.state.pos >= this.length) {\r\n      this.finishToken(129);\r\n      return;\r\n    }\r\n\r\n    if (curContext === types.template) {\r\n      this.readTmplToken();\r\n    } else {\r\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\r\n    }\r\n  }\r\n\r\n  skipBlockComment() {\r\n    let startLoc;\r\n    if (!this.isLookahead) startLoc = this.state.curPosition();\r\n    const start = this.state.pos;\r\n    const end = this.input.indexOf(\"*/\", start + 2);\r\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\r\n    this.state.pos = end + 2;\r\n    lineBreakG.lastIndex = start + 2;\r\n\r\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\r\n      ++this.state.curLine;\r\n      this.state.lineStart = lineBreakG.lastIndex;\r\n    }\r\n\r\n    if (this.isLookahead) return;\r\n    const comment = {\r\n      type: \"CommentBlock\",\r\n      value: this.input.slice(start + 2, end),\r\n      start,\r\n      end: end + 2,\r\n      loc: new SourceLocation(startLoc, this.state.curPosition())\r\n    };\r\n    if (this.options.tokens) this.pushToken(comment);\r\n    return comment;\r\n  }\r\n\r\n  skipLineComment(startSkip) {\r\n    const start = this.state.pos;\r\n    let startLoc;\r\n    if (!this.isLookahead) startLoc = this.state.curPosition();\r\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\r\n\r\n    if (this.state.pos < this.length) {\r\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\r\n        ch = this.input.charCodeAt(this.state.pos);\r\n      }\r\n    }\r\n\r\n    if (this.isLookahead) return;\r\n    const end = this.state.pos;\r\n    const value = this.input.slice(start + startSkip, end);\r\n    const comment = {\r\n      type: \"CommentLine\",\r\n      value,\r\n      start,\r\n      end,\r\n      loc: new SourceLocation(startLoc, this.state.curPosition())\r\n    };\r\n    if (this.options.tokens) this.pushToken(comment);\r\n    return comment;\r\n  }\r\n\r\n  skipSpace() {\r\n    const spaceStart = this.state.pos;\r\n    const comments = [];\r\n\r\n    loop: while (this.state.pos < this.length) {\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n\r\n      switch (ch) {\r\n        case 32:\r\n        case 160:\r\n        case 9:\r\n          ++this.state.pos;\r\n          break;\r\n\r\n        case 13:\r\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\r\n            ++this.state.pos;\r\n          }\r\n\r\n        case 10:\r\n        case 8232:\r\n        case 8233:\r\n          ++this.state.pos;\r\n          ++this.state.curLine;\r\n          this.state.lineStart = this.state.pos;\r\n          break;\r\n\r\n        case 47:\r\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\r\n            case 42:\r\n              {\r\n                const comment = this.skipBlockComment();\r\n\r\n                if (comment !== undefined) {\r\n                  this.addComment(comment);\r\n                  if (this.options.attachComment) comments.push(comment);\r\n                }\r\n\r\n                break;\r\n              }\r\n\r\n            case 47:\r\n              {\r\n                const comment = this.skipLineComment(2);\r\n\r\n                if (comment !== undefined) {\r\n                  this.addComment(comment);\r\n                  if (this.options.attachComment) comments.push(comment);\r\n                }\r\n\r\n                break;\r\n              }\r\n\r\n            default:\r\n              break loop;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          if (isWhitespace(ch)) {\r\n            ++this.state.pos;\r\n          } else if (ch === 45 && !this.inModule) {\r\n            const pos = this.state.pos;\r\n\r\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\r\n              const comment = this.skipLineComment(3);\r\n\r\n              if (comment !== undefined) {\r\n                this.addComment(comment);\r\n                if (this.options.attachComment) comments.push(comment);\r\n              }\r\n            } else {\r\n              break loop;\r\n            }\r\n          } else if (ch === 60 && !this.inModule) {\r\n            const pos = this.state.pos;\r\n\r\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\r\n              const comment = this.skipLineComment(4);\r\n\r\n              if (comment !== undefined) {\r\n                this.addComment(comment);\r\n                if (this.options.attachComment) comments.push(comment);\r\n              }\r\n            } else {\r\n              break loop;\r\n            }\r\n          } else {\r\n            break loop;\r\n          }\r\n\r\n      }\r\n    }\r\n\r\n    if (comments.length > 0) {\r\n      const end = this.state.pos;\r\n      const CommentWhitespace = {\r\n        start: spaceStart,\r\n        end,\r\n        comments,\r\n        leadingNode: null,\r\n        trailingNode: null,\r\n        containingNode: null\r\n      };\r\n      this.state.commentStack.push(CommentWhitespace);\r\n    }\r\n  }\r\n\r\n  finishToken(type, val) {\r\n    this.state.end = this.state.pos;\r\n    const prevType = this.state.type;\r\n    this.state.type = type;\r\n    this.state.value = val;\r\n\r\n    if (!this.isLookahead) {\r\n      this.state.endLoc = this.state.curPosition();\r\n      this.updateContext(prevType);\r\n    }\r\n  }\r\n\r\n  replaceToken(type) {\r\n    this.state.type = type;\r\n    this.updateContext();\r\n  }\r\n\r\n  readToken_numberSign() {\r\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\r\n      return;\r\n    }\r\n\r\n    const nextPos = this.state.pos + 1;\r\n    const next = this.codePointAtPos(nextPos);\r\n\r\n    if (next >= 48 && next <= 57) {\r\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\r\n    }\r\n\r\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\r\n      this.expectPlugin(\"recordAndTuple\");\r\n\r\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\r\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\r\n      }\r\n\r\n      this.state.pos += 2;\r\n\r\n      if (next === 123) {\r\n        this.finishToken(7);\r\n      } else {\r\n        this.finishToken(1);\r\n      }\r\n    } else if (isIdentifierStart(next)) {\r\n      ++this.state.pos;\r\n      this.finishToken(128, this.readWord1(next));\r\n    } else if (next === 92) {\r\n      ++this.state.pos;\r\n      this.finishToken(128, this.readWord1());\r\n    } else {\r\n      this.finishOp(25, 1);\r\n    }\r\n  }\r\n\r\n  readToken_dot() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (next >= 48 && next <= 57) {\r\n      this.readNumber(true);\r\n      return;\r\n    }\r\n\r\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\r\n      this.state.pos += 3;\r\n      this.finishToken(21);\r\n    } else {\r\n      ++this.state.pos;\r\n      this.finishToken(16);\r\n    }\r\n  }\r\n\r\n  readToken_slash() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (next === 61) {\r\n      this.finishOp(29, 2);\r\n    } else {\r\n      this.finishOp(50, 1);\r\n    }\r\n  }\r\n\r\n  readToken_interpreter() {\r\n    if (this.state.pos !== 0 || this.length < 2) return false;\r\n    let ch = this.input.charCodeAt(this.state.pos + 1);\r\n    if (ch !== 33) return false;\r\n    const start = this.state.pos;\r\n    this.state.pos += 1;\r\n\r\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\r\n      ch = this.input.charCodeAt(this.state.pos);\r\n    }\r\n\r\n    const value = this.input.slice(start + 2, this.state.pos);\r\n    this.finishToken(26, value);\r\n    return true;\r\n  }\r\n\r\n  readToken_mult_modulo(code) {\r\n    let type = code === 42 ? 49 : 48;\r\n    let width = 1;\r\n    let next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (code === 42 && next === 42) {\r\n      width++;\r\n      next = this.input.charCodeAt(this.state.pos + 2);\r\n      type = 51;\r\n    }\r\n\r\n    if (next === 61 && !this.state.inType) {\r\n      width++;\r\n      type = code === 37 ? 31 : 28;\r\n    }\r\n\r\n    this.finishOp(type, width);\r\n  }\r\n\r\n  readToken_pipe_amp(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (next === code) {\r\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\r\n        this.finishOp(28, 3);\r\n      } else {\r\n        this.finishOp(code === 124 ? 37 : 38, 2);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (code === 124) {\r\n      if (next === 62) {\r\n        this.finishOp(35, 2);\r\n        return;\r\n      }\r\n\r\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\r\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\r\n        }\r\n\r\n        this.state.pos += 2;\r\n        this.finishToken(9);\r\n        return;\r\n      }\r\n\r\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\r\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\r\n        }\r\n\r\n        this.state.pos += 2;\r\n        this.finishToken(4);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (next === 61) {\r\n      this.finishOp(28, 2);\r\n      return;\r\n    }\r\n\r\n    this.finishOp(code === 124 ? 39 : 41, 1);\r\n  }\r\n\r\n  readToken_caret() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (next === 61 && !this.state.inType) {\r\n      this.finishOp(30, 2);\r\n    } else {\r\n      this.finishOp(40, 1);\r\n    }\r\n  }\r\n\r\n  readToken_plus_min(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (next === code) {\r\n      this.finishOp(32, 2);\r\n      return;\r\n    }\r\n\r\n    if (next === 61) {\r\n      this.finishOp(28, 2);\r\n    } else {\r\n      this.finishOp(47, 1);\r\n    }\r\n  }\r\n\r\n  readToken_lt() {\r\n    const {\r\n      pos\r\n    } = this.state;\r\n    const next = this.input.charCodeAt(pos + 1);\r\n\r\n    if (next === 60) {\r\n      if (this.input.charCodeAt(pos + 2) === 61) {\r\n        this.finishOp(28, 3);\r\n        return;\r\n      }\r\n\r\n      this.finishOp(46, 2);\r\n      return;\r\n    }\r\n\r\n    if (next === 61) {\r\n      this.finishOp(45, 2);\r\n      return;\r\n    }\r\n\r\n    this.finishOp(43, 1);\r\n  }\r\n\r\n  readToken_gt() {\r\n    const {\r\n      pos\r\n    } = this.state;\r\n    const next = this.input.charCodeAt(pos + 1);\r\n\r\n    if (next === 62) {\r\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\r\n\r\n      if (this.input.charCodeAt(pos + size) === 61) {\r\n        this.finishOp(28, size + 1);\r\n        return;\r\n      }\r\n\r\n      this.finishOp(46, size);\r\n      return;\r\n    }\r\n\r\n    if (next === 61) {\r\n      this.finishOp(45, 2);\r\n      return;\r\n    }\r\n\r\n    this.finishOp(44, 1);\r\n  }\r\n\r\n  readToken_eq_excl(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (next === 61) {\r\n      this.finishOp(42, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\r\n      return;\r\n    }\r\n\r\n    if (code === 61 && next === 62) {\r\n      this.state.pos += 2;\r\n      this.finishToken(19);\r\n      return;\r\n    }\r\n\r\n    this.finishOp(code === 61 ? 27 : 33, 1);\r\n  }\r\n\r\n  readToken_question() {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\r\n\r\n    if (next === 63) {\r\n      if (next2 === 61) {\r\n        this.finishOp(28, 3);\r\n      } else {\r\n        this.finishOp(36, 2);\r\n      }\r\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\r\n      this.state.pos += 2;\r\n      this.finishToken(18);\r\n    } else {\r\n      ++this.state.pos;\r\n      this.finishToken(17);\r\n    }\r\n  }\r\n\r\n  getTokenFromCode(code) {\r\n    switch (code) {\r\n      case 46:\r\n        this.readToken_dot();\r\n        return;\r\n\r\n      case 40:\r\n        ++this.state.pos;\r\n        this.finishToken(10);\r\n        return;\r\n\r\n      case 41:\r\n        ++this.state.pos;\r\n        this.finishToken(11);\r\n        return;\r\n\r\n      case 59:\r\n        ++this.state.pos;\r\n        this.finishToken(13);\r\n        return;\r\n\r\n      case 44:\r\n        ++this.state.pos;\r\n        this.finishToken(12);\r\n        return;\r\n\r\n      case 91:\r\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\r\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\r\n          }\r\n\r\n          this.state.pos += 2;\r\n          this.finishToken(2);\r\n        } else {\r\n          ++this.state.pos;\r\n          this.finishToken(0);\r\n        }\r\n\r\n        return;\r\n\r\n      case 93:\r\n        ++this.state.pos;\r\n        this.finishToken(3);\r\n        return;\r\n\r\n      case 123:\r\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\r\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\r\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\r\n          }\r\n\r\n          this.state.pos += 2;\r\n          this.finishToken(6);\r\n        } else {\r\n          ++this.state.pos;\r\n          this.finishToken(5);\r\n        }\r\n\r\n        return;\r\n\r\n      case 125:\r\n        ++this.state.pos;\r\n        this.finishToken(8);\r\n        return;\r\n\r\n      case 58:\r\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\r\n          this.finishOp(15, 2);\r\n        } else {\r\n          ++this.state.pos;\r\n          this.finishToken(14);\r\n        }\r\n\r\n        return;\r\n\r\n      case 63:\r\n        this.readToken_question();\r\n        return;\r\n\r\n      case 96:\r\n        ++this.state.pos;\r\n        this.finishToken(22);\r\n        return;\r\n\r\n      case 48:\r\n        {\r\n          const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n          if (next === 120 || next === 88) {\r\n            this.readRadixNumber(16);\r\n            return;\r\n          }\r\n\r\n          if (next === 111 || next === 79) {\r\n            this.readRadixNumber(8);\r\n            return;\r\n          }\r\n\r\n          if (next === 98 || next === 66) {\r\n            this.readRadixNumber(2);\r\n            return;\r\n          }\r\n        }\r\n\r\n      case 49:\r\n      case 50:\r\n      case 51:\r\n      case 52:\r\n      case 53:\r\n      case 54:\r\n      case 55:\r\n      case 56:\r\n      case 57:\r\n        this.readNumber(false);\r\n        return;\r\n\r\n      case 34:\r\n      case 39:\r\n        this.readString(code);\r\n        return;\r\n\r\n      case 47:\r\n        this.readToken_slash();\r\n        return;\r\n\r\n      case 37:\r\n      case 42:\r\n        this.readToken_mult_modulo(code);\r\n        return;\r\n\r\n      case 124:\r\n      case 38:\r\n        this.readToken_pipe_amp(code);\r\n        return;\r\n\r\n      case 94:\r\n        this.readToken_caret();\r\n        return;\r\n\r\n      case 43:\r\n      case 45:\r\n        this.readToken_plus_min(code);\r\n        return;\r\n\r\n      case 60:\r\n        this.readToken_lt();\r\n        return;\r\n\r\n      case 62:\r\n        this.readToken_gt();\r\n        return;\r\n\r\n      case 61:\r\n      case 33:\r\n        this.readToken_eq_excl(code);\r\n        return;\r\n\r\n      case 126:\r\n        this.finishOp(34, 1);\r\n        return;\r\n\r\n      case 64:\r\n        ++this.state.pos;\r\n        this.finishToken(24);\r\n        return;\r\n\r\n      case 35:\r\n        this.readToken_numberSign();\r\n        return;\r\n\r\n      case 92:\r\n        this.readWord();\r\n        return;\r\n\r\n      default:\r\n        if (isIdentifierStart(code)) {\r\n          this.readWord(code);\r\n          return;\r\n        }\r\n\r\n    }\r\n\r\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\r\n  }\r\n\r\n  finishOp(type, size) {\r\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\r\n    this.state.pos += size;\r\n    this.finishToken(type, str);\r\n  }\r\n\r\n  readRegexp() {\r\n    const start = this.state.start + 1;\r\n    let escaped, inClass;\r\n    let {\r\n      pos\r\n    } = this.state;\r\n\r\n    for (;; ++pos) {\r\n      if (pos >= this.length) {\r\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\r\n      }\r\n\r\n      const ch = this.input.charCodeAt(pos);\r\n\r\n      if (isNewLine(ch)) {\r\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\r\n      }\r\n\r\n      if (escaped) {\r\n        escaped = false;\r\n      } else {\r\n        if (ch === 91) {\r\n          inClass = true;\r\n        } else if (ch === 93 && inClass) {\r\n          inClass = false;\r\n        } else if (ch === 47 && !inClass) {\r\n          break;\r\n        }\r\n\r\n        escaped = ch === 92;\r\n      }\r\n    }\r\n\r\n    const content = this.input.slice(start, pos);\r\n    ++pos;\r\n    let mods = \"\";\r\n\r\n    while (pos < this.length) {\r\n      const cp = this.codePointAtPos(pos);\r\n      const char = String.fromCharCode(cp);\r\n\r\n      if (VALID_REGEX_FLAGS.has(cp)) {\r\n        if (mods.includes(char)) {\r\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\r\n        }\r\n      } else if (isIdentifierChar(cp) || cp === 92) {\r\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\r\n      } else {\r\n        break;\r\n      }\r\n\r\n      ++pos;\r\n      mods += char;\r\n    }\r\n\r\n    this.state.pos = pos;\r\n    this.finishToken(127, {\r\n      pattern: content,\r\n      flags: mods\r\n    });\r\n  }\r\n\r\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\r\n    const start = this.state.pos;\r\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\r\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\r\n    let invalid = false;\r\n    let total = 0;\r\n\r\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\r\n      const code = this.input.charCodeAt(this.state.pos);\r\n      let val;\r\n\r\n      if (code === 95) {\r\n        const prev = this.input.charCodeAt(this.state.pos - 1);\r\n        const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n        if (allowedSiblings.indexOf(next) === -1) {\r\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\r\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\r\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\r\n        }\r\n\r\n        if (!allowNumSeparator) {\r\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\r\n        }\r\n\r\n        ++this.state.pos;\r\n        continue;\r\n      }\r\n\r\n      if (code >= 97) {\r\n        val = code - 97 + 10;\r\n      } else if (code >= 65) {\r\n        val = code - 65 + 10;\r\n      } else if (_isDigit(code)) {\r\n        val = code - 48;\r\n      } else {\r\n        val = Infinity;\r\n      }\r\n\r\n      if (val >= radix) {\r\n        if (this.options.errorRecovery && val <= 9) {\r\n          val = 0;\r\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\r\n        } else if (forceLen) {\r\n          val = 0;\r\n          invalid = true;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      ++this.state.pos;\r\n      total = total * radix + val;\r\n    }\r\n\r\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\r\n      return null;\r\n    }\r\n\r\n    return total;\r\n  }\r\n\r\n  readRadixNumber(radix) {\r\n    const start = this.state.pos;\r\n    let isBigInt = false;\r\n    this.state.pos += 2;\r\n    const val = this.readInt(radix);\r\n\r\n    if (val == null) {\r\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\r\n    }\r\n\r\n    const next = this.input.charCodeAt(this.state.pos);\r\n\r\n    if (next === 110) {\r\n      ++this.state.pos;\r\n      isBigInt = true;\r\n    } else if (next === 109) {\r\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\r\n    }\r\n\r\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\r\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\r\n    }\r\n\r\n    if (isBigInt) {\r\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\r\n      this.finishToken(125, str);\r\n      return;\r\n    }\r\n\r\n    this.finishToken(124, val);\r\n  }\r\n\r\n  readNumber(startsWithDot) {\r\n    const start = this.state.pos;\r\n    let isFloat = false;\r\n    let isBigInt = false;\r\n    let isDecimal = false;\r\n    let hasExponent = false;\r\n    let isOctal = false;\r\n\r\n    if (!startsWithDot && this.readInt(10) === null) {\r\n      this.raise(start, ErrorMessages.InvalidNumber);\r\n    }\r\n\r\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\r\n\r\n    if (hasLeadingZero) {\r\n      const integer = this.input.slice(start, this.state.pos);\r\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\r\n\r\n      if (!this.state.strict) {\r\n        const underscorePos = integer.indexOf(\"_\");\r\n\r\n        if (underscorePos > 0) {\r\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\r\n        }\r\n      }\r\n\r\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\r\n    }\r\n\r\n    let next = this.input.charCodeAt(this.state.pos);\r\n\r\n    if (next === 46 && !isOctal) {\r\n      ++this.state.pos;\r\n      this.readInt(10);\r\n      isFloat = true;\r\n      next = this.input.charCodeAt(this.state.pos);\r\n    }\r\n\r\n    if ((next === 69 || next === 101) && !isOctal) {\r\n      next = this.input.charCodeAt(++this.state.pos);\r\n\r\n      if (next === 43 || next === 45) {\r\n        ++this.state.pos;\r\n      }\r\n\r\n      if (this.readInt(10) === null) {\r\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\r\n      }\r\n\r\n      isFloat = true;\r\n      hasExponent = true;\r\n      next = this.input.charCodeAt(this.state.pos);\r\n    }\r\n\r\n    if (next === 110) {\r\n      if (isFloat || hasLeadingZero) {\r\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\r\n      }\r\n\r\n      ++this.state.pos;\r\n      isBigInt = true;\r\n    }\r\n\r\n    if (next === 109) {\r\n      this.expectPlugin(\"decimal\", this.state.pos);\r\n\r\n      if (hasExponent || hasLeadingZero) {\r\n        this.raise(start, ErrorMessages.InvalidDecimal);\r\n      }\r\n\r\n      ++this.state.pos;\r\n      isDecimal = true;\r\n    }\r\n\r\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\r\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\r\n    }\r\n\r\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\r\n\r\n    if (isBigInt) {\r\n      this.finishToken(125, str);\r\n      return;\r\n    }\r\n\r\n    if (isDecimal) {\r\n      this.finishToken(126, str);\r\n      return;\r\n    }\r\n\r\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\r\n    this.finishToken(124, val);\r\n  }\r\n\r\n  readCodePoint(throwOnInvalid) {\r\n    const ch = this.input.charCodeAt(this.state.pos);\r\n    let code;\r\n\r\n    if (ch === 123) {\r\n      const codePos = ++this.state.pos;\r\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\r\n      ++this.state.pos;\r\n\r\n      if (code !== null && code > 0x10ffff) {\r\n        if (throwOnInvalid) {\r\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else {\r\n      code = this.readHexChar(4, false, throwOnInvalid);\r\n    }\r\n\r\n    return code;\r\n  }\r\n\r\n  readString(quote) {\r\n    let out = \"\",\r\n        chunkStart = ++this.state.pos;\r\n\r\n    for (;;) {\r\n      if (this.state.pos >= this.length) {\r\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\r\n      }\r\n\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n      if (ch === quote) break;\r\n\r\n      if (ch === 92) {\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        out += this.readEscapedChar(false);\r\n        chunkStart = this.state.pos;\r\n      } else if (ch === 8232 || ch === 8233) {\r\n        ++this.state.pos;\r\n        ++this.state.curLine;\r\n        this.state.lineStart = this.state.pos;\r\n      } else if (isNewLine(ch)) {\r\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\r\n      } else {\r\n        ++this.state.pos;\r\n      }\r\n    }\r\n\r\n    out += this.input.slice(chunkStart, this.state.pos++);\r\n    this.finishToken(123, out);\r\n  }\r\n\r\n  readTmplToken() {\r\n    let out = \"\",\r\n        chunkStart = this.state.pos,\r\n        containsInvalid = false;\r\n\r\n    for (;;) {\r\n      if (this.state.pos >= this.length) {\r\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\r\n      }\r\n\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n\r\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\r\n        if (this.state.pos === this.state.start && this.match(20)) {\r\n          if (ch === 36) {\r\n            this.state.pos += 2;\r\n            this.finishToken(23);\r\n            return;\r\n          } else {\r\n            ++this.state.pos;\r\n            this.finishToken(22);\r\n            return;\r\n          }\r\n        }\r\n\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        this.finishToken(20, containsInvalid ? null : out);\r\n        return;\r\n      }\r\n\r\n      if (ch === 92) {\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        const escaped = this.readEscapedChar(true);\r\n\r\n        if (escaped === null) {\r\n          containsInvalid = true;\r\n        } else {\r\n          out += escaped;\r\n        }\r\n\r\n        chunkStart = this.state.pos;\r\n      } else if (isNewLine(ch)) {\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        ++this.state.pos;\r\n\r\n        switch (ch) {\r\n          case 13:\r\n            if (this.input.charCodeAt(this.state.pos) === 10) {\r\n              ++this.state.pos;\r\n            }\r\n\r\n          case 10:\r\n            out += \"\\n\";\r\n            break;\r\n\r\n          default:\r\n            out += String.fromCharCode(ch);\r\n            break;\r\n        }\r\n\r\n        ++this.state.curLine;\r\n        this.state.lineStart = this.state.pos;\r\n        chunkStart = this.state.pos;\r\n      } else {\r\n        ++this.state.pos;\r\n      }\r\n    }\r\n  }\r\n\r\n  recordStrictModeErrors(pos, message) {\r\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\r\n      this.raise(pos, message);\r\n    } else {\r\n      this.state.strictErrors.set(pos, message);\r\n    }\r\n  }\r\n\r\n  readEscapedChar(inTemplate) {\r\n    const throwOnInvalid = !inTemplate;\r\n    const ch = this.input.charCodeAt(++this.state.pos);\r\n    ++this.state.pos;\r\n\r\n    switch (ch) {\r\n      case 110:\r\n        return \"\\n\";\r\n\r\n      case 114:\r\n        return \"\\r\";\r\n\r\n      case 120:\r\n        {\r\n          const code = this.readHexChar(2, false, throwOnInvalid);\r\n          return code === null ? null : String.fromCharCode(code);\r\n        }\r\n\r\n      case 117:\r\n        {\r\n          const code = this.readCodePoint(throwOnInvalid);\r\n          return code === null ? null : String.fromCodePoint(code);\r\n        }\r\n\r\n      case 116:\r\n        return \"\\t\";\r\n\r\n      case 98:\r\n        return \"\\b\";\r\n\r\n      case 118:\r\n        return \"\\u000b\";\r\n\r\n      case 102:\r\n        return \"\\f\";\r\n\r\n      case 13:\r\n        if (this.input.charCodeAt(this.state.pos) === 10) {\r\n          ++this.state.pos;\r\n        }\r\n\r\n      case 10:\r\n        this.state.lineStart = this.state.pos;\r\n        ++this.state.curLine;\r\n\r\n      case 8232:\r\n      case 8233:\r\n        return \"\";\r\n\r\n      case 56:\r\n      case 57:\r\n        if (inTemplate) {\r\n          return null;\r\n        } else {\r\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\r\n        }\r\n\r\n      default:\r\n        if (ch >= 48 && ch <= 55) {\r\n          const codePos = this.state.pos - 1;\r\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\r\n          let octalStr = match[0];\r\n          let octal = parseInt(octalStr, 8);\r\n\r\n          if (octal > 255) {\r\n            octalStr = octalStr.slice(0, -1);\r\n            octal = parseInt(octalStr, 8);\r\n          }\r\n\r\n          this.state.pos += octalStr.length - 1;\r\n          const next = this.input.charCodeAt(this.state.pos);\r\n\r\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\r\n            if (inTemplate) {\r\n              return null;\r\n            } else {\r\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\r\n            }\r\n          }\r\n\r\n          return String.fromCharCode(octal);\r\n        }\r\n\r\n        return String.fromCharCode(ch);\r\n    }\r\n  }\r\n\r\n  readHexChar(len, forceLen, throwOnInvalid) {\r\n    const codePos = this.state.pos;\r\n    const n = this.readInt(16, len, forceLen, false);\r\n\r\n    if (n === null) {\r\n      if (throwOnInvalid) {\r\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\r\n      } else {\r\n        this.state.pos = codePos - 1;\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  readWord1(firstCode) {\r\n    this.state.containsEsc = false;\r\n    let word = \"\";\r\n    const start = this.state.pos;\r\n    let chunkStart = this.state.pos;\r\n\r\n    if (firstCode !== undefined) {\r\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\r\n    }\r\n\r\n    while (this.state.pos < this.length) {\r\n      const ch = this.codePointAtPos(this.state.pos);\r\n\r\n      if (isIdentifierChar(ch)) {\r\n        this.state.pos += ch <= 0xffff ? 1 : 2;\r\n      } else if (ch === 92) {\r\n        this.state.containsEsc = true;\r\n        word += this.input.slice(chunkStart, this.state.pos);\r\n        const escStart = this.state.pos;\r\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\r\n\r\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\r\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\r\n          chunkStart = this.state.pos - 1;\r\n          continue;\r\n        }\r\n\r\n        ++this.state.pos;\r\n        const esc = this.readCodePoint(true);\r\n\r\n        if (esc !== null) {\r\n          if (!identifierCheck(esc)) {\r\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\r\n          }\r\n\r\n          word += String.fromCodePoint(esc);\r\n        }\r\n\r\n        chunkStart = this.state.pos;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return word + this.input.slice(chunkStart, this.state.pos);\r\n  }\r\n\r\n  readWord(firstCode) {\r\n    const word = this.readWord1(firstCode);\r\n    const type = keywords$1.get(word);\r\n\r\n    if (type !== undefined) {\r\n      this.finishToken(type, tokenLabelName(type));\r\n    } else {\r\n      this.finishToken(122, word);\r\n    }\r\n  }\r\n\r\n  checkKeywordEscapes() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\r\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, tokenLabelName(type));\r\n    }\r\n  }\r\n\r\n  updateContext(prevType) {\r\n    const {\r\n      context,\r\n      type\r\n    } = this.state;\r\n\r\n    switch (type) {\r\n      case 8:\r\n        context.pop();\r\n        break;\r\n\r\n      case 5:\r\n      case 7:\r\n      case 23:\r\n        context.push(types.brace);\r\n        break;\r\n\r\n      case 22:\r\n        if (context[context.length - 1] === types.template) {\r\n          context.pop();\r\n        } else {\r\n          context.push(types.template);\r\n        }\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass ClassScope {\r\n  constructor() {\r\n    this.privateNames = new Set();\r\n    this.loneAccessors = new Map();\r\n    this.undefinedPrivateNames = new Map();\r\n  }\r\n\r\n}\r\nclass ClassScopeHandler {\r\n  constructor(raise) {\r\n    this.stack = [];\r\n    this.undefinedPrivateNames = new Map();\r\n    this.raise = raise;\r\n  }\r\n\r\n  current() {\r\n    return this.stack[this.stack.length - 1];\r\n  }\r\n\r\n  enter() {\r\n    this.stack.push(new ClassScope());\r\n  }\r\n\r\n  exit() {\r\n    const oldClassScope = this.stack.pop();\r\n    const current = this.current();\r\n\r\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\r\n      if (current) {\r\n        if (!current.undefinedPrivateNames.has(name)) {\r\n          current.undefinedPrivateNames.set(name, pos);\r\n        }\r\n      } else {\r\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\r\n      }\r\n    }\r\n  }\r\n\r\n  declarePrivateName(name, elementType, pos) {\r\n    const classScope = this.current();\r\n    let redefined = classScope.privateNames.has(name);\r\n\r\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\r\n      const accessor = redefined && classScope.loneAccessors.get(name);\r\n\r\n      if (accessor) {\r\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\r\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\r\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\r\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\r\n        redefined = oldKind === newKind || oldStatic !== newStatic;\r\n        if (!redefined) classScope.loneAccessors.delete(name);\r\n      } else if (!redefined) {\r\n        classScope.loneAccessors.set(name, elementType);\r\n      }\r\n    }\r\n\r\n    if (redefined) {\r\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\r\n    }\r\n\r\n    classScope.privateNames.add(name);\r\n    classScope.undefinedPrivateNames.delete(name);\r\n  }\r\n\r\n  usePrivateName(name, pos) {\r\n    let classScope;\r\n\r\n    for (classScope of this.stack) {\r\n      if (classScope.privateNames.has(name)) return;\r\n    }\r\n\r\n    if (classScope) {\r\n      classScope.undefinedPrivateNames.set(name, pos);\r\n    } else {\r\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst kExpression = 0,\r\n      kMaybeArrowParameterDeclaration = 1,\r\n      kMaybeAsyncArrowParameterDeclaration = 2,\r\n      kParameterDeclaration = 3;\r\n\r\nclass ExpressionScope {\r\n  constructor(type = kExpression) {\r\n    this.type = void 0;\r\n    this.type = type;\r\n  }\r\n\r\n  canBeArrowParameterDeclaration() {\r\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\r\n  }\r\n\r\n  isCertainlyParameterDeclaration() {\r\n    return this.type === kParameterDeclaration;\r\n  }\r\n\r\n}\r\n\r\nclass ArrowHeadParsingScope extends ExpressionScope {\r\n  constructor(type) {\r\n    super(type);\r\n    this.errors = new Map();\r\n  }\r\n\r\n  recordDeclarationError(pos, template) {\r\n    this.errors.set(pos, template);\r\n  }\r\n\r\n  clearDeclarationError(pos) {\r\n    this.errors.delete(pos);\r\n  }\r\n\r\n  iterateErrors(iterator) {\r\n    this.errors.forEach(iterator);\r\n  }\r\n\r\n}\r\n\r\nclass ExpressionScopeHandler {\r\n  constructor(raise) {\r\n    this.stack = [new ExpressionScope()];\r\n    this.raise = raise;\r\n  }\r\n\r\n  enter(scope) {\r\n    this.stack.push(scope);\r\n  }\r\n\r\n  exit() {\r\n    this.stack.pop();\r\n  }\r\n\r\n  recordParameterInitializerError(pos, template) {\r\n    const {\r\n      stack\r\n    } = this;\r\n    let i = stack.length - 1;\r\n    let scope = stack[i];\r\n\r\n    while (!scope.isCertainlyParameterDeclaration()) {\r\n      if (scope.canBeArrowParameterDeclaration()) {\r\n        scope.recordDeclarationError(pos, template);\r\n      } else {\r\n        return;\r\n      }\r\n\r\n      scope = stack[--i];\r\n    }\r\n\r\n    this.raise(pos, template);\r\n  }\r\n\r\n  recordParenthesizedIdentifierError(pos, template) {\r\n    const {\r\n      stack\r\n    } = this;\r\n    const scope = stack[stack.length - 1];\r\n\r\n    if (scope.isCertainlyParameterDeclaration()) {\r\n      this.raise(pos, template);\r\n    } else if (scope.canBeArrowParameterDeclaration()) {\r\n      scope.recordDeclarationError(pos, template);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  recordAsyncArrowParametersError(pos, template) {\r\n    const {\r\n      stack\r\n    } = this;\r\n    let i = stack.length - 1;\r\n    let scope = stack[i];\r\n\r\n    while (scope.canBeArrowParameterDeclaration()) {\r\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\r\n        scope.recordDeclarationError(pos, template);\r\n      }\r\n\r\n      scope = stack[--i];\r\n    }\r\n  }\r\n\r\n  validateAsPattern() {\r\n    const {\r\n      stack\r\n    } = this;\r\n    const currentScope = stack[stack.length - 1];\r\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\r\n    currentScope.iterateErrors((template, pos) => {\r\n      this.raise(pos, template);\r\n      let i = stack.length - 2;\r\n      let scope = stack[i];\r\n\r\n      while (scope.canBeArrowParameterDeclaration()) {\r\n        scope.clearDeclarationError(pos);\r\n        scope = stack[--i];\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\nfunction newParameterDeclarationScope() {\r\n  return new ExpressionScope(kParameterDeclaration);\r\n}\r\nfunction newArrowHeadScope() {\r\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\r\n}\r\nfunction newAsyncArrowScope() {\r\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\r\n}\r\nfunction newExpressionScope() {\r\n  return new ExpressionScope();\r\n}\r\n\r\nconst PARAM = 0b0000,\r\n      PARAM_YIELD = 0b0001,\r\n      PARAM_AWAIT = 0b0010,\r\n      PARAM_RETURN = 0b0100,\r\n      PARAM_IN = 0b1000;\r\nclass ProductionParameterHandler {\r\n  constructor() {\r\n    this.stacks = [];\r\n  }\r\n\r\n  enter(flags) {\r\n    this.stacks.push(flags);\r\n  }\r\n\r\n  exit() {\r\n    this.stacks.pop();\r\n  }\r\n\r\n  currentFlags() {\r\n    return this.stacks[this.stacks.length - 1];\r\n  }\r\n\r\n  get hasAwait() {\r\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\r\n  }\r\n\r\n  get hasYield() {\r\n    return (this.currentFlags() & PARAM_YIELD) > 0;\r\n  }\r\n\r\n  get hasReturn() {\r\n    return (this.currentFlags() & PARAM_RETURN) > 0;\r\n  }\r\n\r\n  get hasIn() {\r\n    return (this.currentFlags() & PARAM_IN) > 0;\r\n  }\r\n\r\n}\r\nfunction functionFlags(isAsync, isGenerator) {\r\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\r\n}\r\n\r\nclass UtilParser extends Tokenizer {\r\n  addExtra(node, key, val) {\r\n    if (!node) return;\r\n    const extra = node.extra = node.extra || {};\r\n    extra[key] = val;\r\n  }\r\n\r\n  isContextual(token) {\r\n    return this.state.type === token && !this.state.containsEsc;\r\n  }\r\n\r\n  isUnparsedContextual(nameStart, name) {\r\n    const nameEnd = nameStart + name.length;\r\n\r\n    if (this.input.slice(nameStart, nameEnd) === name) {\r\n      const nextCh = this.input.charCodeAt(nameEnd);\r\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isLookaheadContextual(name) {\r\n    const next = this.nextTokenStart();\r\n    return this.isUnparsedContextual(next, name);\r\n  }\r\n\r\n  eatContextual(token) {\r\n    if (this.isContextual(token)) {\r\n      this.next();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  expectContextual(token, template) {\r\n    if (!this.eatContextual(token)) this.unexpected(null, template);\r\n  }\r\n\r\n  canInsertSemicolon() {\r\n    return this.match(129) || this.match(8) || this.hasPrecedingLineBreak();\r\n  }\r\n\r\n  hasPrecedingLineBreak() {\r\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\r\n  }\r\n\r\n  hasFollowingLineBreak() {\r\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\r\n    return skipWhiteSpaceToLineBreak.test(this.input);\r\n  }\r\n\r\n  isLineTerminator() {\r\n    return this.eat(13) || this.canInsertSemicolon();\r\n  }\r\n\r\n  semicolon(allowAsi = true) {\r\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\r\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\r\n  }\r\n\r\n  expect(type, pos) {\r\n    this.eat(type) || this.unexpected(pos, type);\r\n  }\r\n\r\n  assertNoSpace(message = \"Unexpected space.\") {\r\n    if (this.state.start > this.state.lastTokEnd) {\r\n      this.raise(this.state.lastTokEnd, {\r\n        code: ErrorCodes.SyntaxError,\r\n        reasonCode: \"UnexpectedSpace\",\r\n        template: message\r\n      });\r\n    }\r\n  }\r\n\r\n  unexpected(pos, messageOrType = {\r\n    code: ErrorCodes.SyntaxError,\r\n    reasonCode: \"UnexpectedToken\",\r\n    template: \"Unexpected token\"\r\n  }) {\r\n    if (isTokenType(messageOrType)) {\r\n      messageOrType = {\r\n        code: ErrorCodes.SyntaxError,\r\n        reasonCode: \"UnexpectedToken\",\r\n        template: `Unexpected token, expected \"${tokenLabelName(messageOrType)}\"`\r\n      };\r\n    }\r\n\r\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\r\n  }\r\n\r\n  expectPlugin(name, pos) {\r\n    if (!this.hasPlugin(name)) {\r\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\r\n        missingPlugin: [name]\r\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  expectOnePlugin(names, pos) {\r\n    if (!names.some(n => this.hasPlugin(n))) {\r\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\r\n        missingPlugin: names\r\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\r\n    }\r\n  }\r\n\r\n  tryParse(fn, oldState = this.state.clone()) {\r\n    const abortSignal = {\r\n      node: null\r\n    };\r\n\r\n    try {\r\n      const node = fn((node = null) => {\r\n        abortSignal.node = node;\r\n        throw abortSignal;\r\n      });\r\n\r\n      if (this.state.errors.length > oldState.errors.length) {\r\n        const failState = this.state;\r\n        this.state = oldState;\r\n        this.state.tokensLength = failState.tokensLength;\r\n        return {\r\n          node,\r\n          error: failState.errors[oldState.errors.length],\r\n          thrown: false,\r\n          aborted: false,\r\n          failState\r\n        };\r\n      }\r\n\r\n      return {\r\n        node,\r\n        error: null,\r\n        thrown: false,\r\n        aborted: false,\r\n        failState: null\r\n      };\r\n    } catch (error) {\r\n      const failState = this.state;\r\n      this.state = oldState;\r\n\r\n      if (error instanceof SyntaxError) {\r\n        return {\r\n          node: null,\r\n          error,\r\n          thrown: true,\r\n          aborted: false,\r\n          failState\r\n        };\r\n      }\r\n\r\n      if (error === abortSignal) {\r\n        return {\r\n          node: abortSignal.node,\r\n          error: null,\r\n          thrown: false,\r\n          aborted: true,\r\n          failState\r\n        };\r\n      }\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  checkExpressionErrors(refExpressionErrors, andThrow) {\r\n    if (!refExpressionErrors) return false;\r\n    const {\r\n      shorthandAssign,\r\n      doubleProto,\r\n      optionalParameters\r\n    } = refExpressionErrors;\r\n    const hasErrors = shorthandAssign + doubleProto + optionalParameters > -3;\r\n\r\n    if (!andThrow) {\r\n      return hasErrors;\r\n    } else if (hasErrors) {\r\n      if (shorthandAssign >= 0) {\r\n        this.unexpected(shorthandAssign);\r\n      }\r\n\r\n      if (doubleProto >= 0) {\r\n        this.raise(doubleProto, ErrorMessages.DuplicateProto);\r\n      }\r\n\r\n      if (optionalParameters >= 0) {\r\n        this.unexpected(optionalParameters);\r\n      }\r\n    }\r\n  }\r\n\r\n  isLiteralPropertyName() {\r\n    return tokenIsLiteralPropertyName(this.state.type);\r\n  }\r\n\r\n  isPrivateName(node) {\r\n    return node.type === \"PrivateName\";\r\n  }\r\n\r\n  getPrivateNameSV(node) {\r\n    return node.id.name;\r\n  }\r\n\r\n  hasPropertyAsPrivateName(node) {\r\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\r\n  }\r\n\r\n  isOptionalChain(node) {\r\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\r\n  }\r\n\r\n  isObjectProperty(node) {\r\n    return node.type === \"ObjectProperty\";\r\n  }\r\n\r\n  isObjectMethod(node) {\r\n    return node.type === \"ObjectMethod\";\r\n  }\r\n\r\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\r\n    const oldLabels = this.state.labels;\r\n    this.state.labels = [];\r\n    const oldExportedIdentifiers = this.exportedIdentifiers;\r\n    this.exportedIdentifiers = new Set();\r\n    const oldInModule = this.inModule;\r\n    this.inModule = inModule;\r\n    const oldScope = this.scope;\r\n    const ScopeHandler = this.getScopeHandler();\r\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\r\n    const oldProdParam = this.prodParam;\r\n    this.prodParam = new ProductionParameterHandler();\r\n    const oldClassScope = this.classScope;\r\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\r\n    const oldExpressionScope = this.expressionScope;\r\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\r\n    return () => {\r\n      this.state.labels = oldLabels;\r\n      this.exportedIdentifiers = oldExportedIdentifiers;\r\n      this.inModule = oldInModule;\r\n      this.scope = oldScope;\r\n      this.prodParam = oldProdParam;\r\n      this.classScope = oldClassScope;\r\n      this.expressionScope = oldExpressionScope;\r\n    };\r\n  }\r\n\r\n  enterInitialScopes() {\r\n    let paramFlags = PARAM;\r\n\r\n    if (this.inModule) {\r\n      paramFlags |= PARAM_AWAIT;\r\n    }\r\n\r\n    this.scope.enter(SCOPE_PROGRAM);\r\n    this.prodParam.enter(paramFlags);\r\n  }\r\n\r\n}\r\nclass ExpressionErrors {\r\n  constructor() {\r\n    this.shorthandAssign = -1;\r\n    this.doubleProto = -1;\r\n    this.optionalParameters = -1;\r\n  }\r\n\r\n}\r\n\r\nclass Node {\r\n  constructor(parser, pos, loc) {\r\n    this.type = \"\";\r\n    this.start = pos;\r\n    this.end = 0;\r\n    this.loc = new SourceLocation(loc);\r\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\r\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\r\n  }\r\n\r\n}\r\n\r\nconst NodePrototype = Node.prototype;\r\n{\r\n  NodePrototype.__clone = function () {\r\n    const newNode = new Node();\r\n    const keys = Object.keys(this);\r\n\r\n    for (let i = 0, length = keys.length; i < length; i++) {\r\n      const key = keys[i];\r\n\r\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\r\n        newNode[key] = this[key];\r\n      }\r\n    }\r\n\r\n    return newNode;\r\n  };\r\n}\r\n\r\nfunction clonePlaceholder(node) {\r\n  return cloneIdentifier(node);\r\n}\r\n\r\nfunction cloneIdentifier(node) {\r\n  const {\r\n    type,\r\n    start,\r\n    end,\r\n    loc,\r\n    range,\r\n    extra,\r\n    name\r\n  } = node;\r\n  const cloned = Object.create(NodePrototype);\r\n  cloned.type = type;\r\n  cloned.start = start;\r\n  cloned.end = end;\r\n  cloned.loc = loc;\r\n  cloned.range = range;\r\n  cloned.extra = extra;\r\n  cloned.name = name;\r\n\r\n  if (type === \"Placeholder\") {\r\n    cloned.expectedNode = node.expectedNode;\r\n  }\r\n\r\n  return cloned;\r\n}\r\nfunction cloneStringLiteral(node) {\r\n  const {\r\n    type,\r\n    start,\r\n    end,\r\n    loc,\r\n    range,\r\n    extra\r\n  } = node;\r\n\r\n  if (type === \"Placeholder\") {\r\n    return clonePlaceholder(node);\r\n  }\r\n\r\n  const cloned = Object.create(NodePrototype);\r\n  cloned.type = \"StringLiteral\";\r\n  cloned.start = start;\r\n  cloned.end = end;\r\n  cloned.loc = loc;\r\n  cloned.range = range;\r\n  cloned.extra = extra;\r\n  cloned.value = node.value;\r\n  return cloned;\r\n}\r\nclass NodeUtils extends UtilParser {\r\n  startNode() {\r\n    return new Node(this, this.state.start, this.state.startLoc);\r\n  }\r\n\r\n  startNodeAt(pos, loc) {\r\n    return new Node(this, pos, loc);\r\n  }\r\n\r\n  startNodeAtNode(type) {\r\n    return this.startNodeAt(type.start, type.loc.start);\r\n  }\r\n\r\n  finishNode(node, type) {\r\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\r\n  }\r\n\r\n  finishNodeAt(node, type, pos, loc) {\r\n\r\n    node.type = type;\r\n    node.end = pos;\r\n    node.loc.end = loc;\r\n    if (this.options.ranges) node.range[1] = pos;\r\n    if (this.options.attachComment) this.processComment(node);\r\n    return node;\r\n  }\r\n\r\n  resetStartLocation(node, start, startLoc) {\r\n    node.start = start;\r\n    node.loc.start = startLoc;\r\n    if (this.options.ranges) node.range[0] = start;\r\n  }\r\n\r\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\r\n    node.end = end;\r\n    node.loc.end = endLoc;\r\n    if (this.options.ranges) node.range[1] = end;\r\n  }\r\n\r\n  resetStartLocationFromNode(node, locationNode) {\r\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\r\n  }\r\n\r\n}\r\n\r\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\r\nconst FlowErrors = makeErrorTemplates({\r\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\r\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\r\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\r\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\r\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\r\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\r\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\r\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\r\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\r\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\r\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\r\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\r\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\r\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\r\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\r\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\r\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\r\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\r\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\r\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\r\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\r\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\r\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\r\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\r\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\r\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\r\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\r\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\r\n  SpreadVariance: \"Spread properties cannot have variance.\",\r\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\r\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\r\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\r\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\r\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\r\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\r\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\r\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\r\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\r\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\r\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\r\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\r\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\r\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\r\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\r\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\r\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\r\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\r\n}, ErrorCodes.SyntaxError, \"flow\");\r\n\r\nfunction isEsModuleType(bodyElement) {\r\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\r\n}\r\n\r\nfunction hasTypeImportKind(node) {\r\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\r\n}\r\n\r\nfunction isMaybeDefaultImport(type) {\r\n  return tokenIsKeywordOrIdentifier(type) && type !== 91;\r\n}\r\n\r\nconst exportSuggestions = {\r\n  const: \"declare export var\",\r\n  let: \"declare export var\",\r\n  type: \"export type\",\r\n  interface: \"export interface\"\r\n};\r\n\r\nfunction partition(list, test) {\r\n  const list1 = [];\r\n  const list2 = [];\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\r\n  }\r\n\r\n  return [list1, list2];\r\n}\r\n\r\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\r\nvar flow = (superClass => class extends superClass {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.flowPragma = undefined;\r\n  }\r\n\r\n  getScopeHandler() {\r\n    return FlowScopeHandler;\r\n  }\r\n\r\n  shouldParseTypes() {\r\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\r\n  }\r\n\r\n  shouldParseEnums() {\r\n    return !!this.getPluginOption(\"flow\", \"enums\");\r\n  }\r\n\r\n  finishToken(type, val) {\r\n    if (type !== 123 && type !== 13 && type !== 26) {\r\n      if (this.flowPragma === undefined) {\r\n        this.flowPragma = null;\r\n      }\r\n    }\r\n\r\n    return super.finishToken(type, val);\r\n  }\r\n\r\n  addComment(comment) {\r\n    if (this.flowPragma === undefined) {\r\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\r\n\r\n      if (!matches) ; else if (matches[1] === \"flow\") {\r\n        this.flowPragma = \"flow\";\r\n      } else if (matches[1] === \"noflow\") {\r\n        this.flowPragma = \"noflow\";\r\n      } else {\r\n        throw new Error(\"Unexpected flow pragma\");\r\n      }\r\n    }\r\n\r\n    return super.addComment(comment);\r\n  }\r\n\r\n  flowParseTypeInitialiser(tok) {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    this.expect(tok || 14);\r\n    const type = this.flowParseType();\r\n    this.state.inType = oldInType;\r\n    return type;\r\n  }\r\n\r\n  flowParsePredicate() {\r\n    const node = this.startNode();\r\n    const moduloPos = this.state.start;\r\n    this.next();\r\n    this.expectContextual(101);\r\n\r\n    if (this.state.lastTokStart > moduloPos + 1) {\r\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\r\n    }\r\n\r\n    if (this.eat(10)) {\r\n      node.value = this.parseExpression();\r\n      this.expect(11);\r\n      return this.finishNode(node, \"DeclaredPredicate\");\r\n    } else {\r\n      return this.finishNode(node, \"InferredPredicate\");\r\n    }\r\n  }\r\n\r\n  flowParseTypeAndPredicateInitialiser() {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    this.expect(14);\r\n    let type = null;\r\n    let predicate = null;\r\n\r\n    if (this.match(48)) {\r\n      this.state.inType = oldInType;\r\n      predicate = this.flowParsePredicate();\r\n    } else {\r\n      type = this.flowParseType();\r\n      this.state.inType = oldInType;\r\n\r\n      if (this.match(48)) {\r\n        predicate = this.flowParsePredicate();\r\n      }\r\n    }\r\n\r\n    return [type, predicate];\r\n  }\r\n\r\n  flowParseDeclareClass(node) {\r\n    this.next();\r\n    this.flowParseInterfaceish(node, true);\r\n    return this.finishNode(node, \"DeclareClass\");\r\n  }\r\n\r\n  flowParseDeclareFunction(node) {\r\n    this.next();\r\n    const id = node.id = this.parseIdentifier();\r\n    const typeNode = this.startNode();\r\n    const typeContainer = this.startNode();\r\n\r\n    if (this.match(43)) {\r\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      typeNode.typeParameters = null;\r\n    }\r\n\r\n    this.expect(10);\r\n    const tmp = this.flowParseFunctionTypeParams();\r\n    typeNode.params = tmp.params;\r\n    typeNode.rest = tmp.rest;\r\n    typeNode.this = tmp._this;\r\n    this.expect(11);\r\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\r\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\r\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\r\n    this.resetEndLocation(id);\r\n    this.semicolon();\r\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\r\n    return this.finishNode(node, \"DeclareFunction\");\r\n  }\r\n\r\n  flowParseDeclare(node, insideModule) {\r\n    if (this.match(74)) {\r\n      return this.flowParseDeclareClass(node);\r\n    } else if (this.match(62)) {\r\n      return this.flowParseDeclareFunction(node);\r\n    } else if (this.match(68)) {\r\n      return this.flowParseDeclareVariable(node);\r\n    } else if (this.eatContextual(117)) {\r\n      if (this.match(16)) {\r\n        return this.flowParseDeclareModuleExports(node);\r\n      } else {\r\n        if (insideModule) {\r\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\r\n        }\r\n\r\n        return this.flowParseDeclareModule(node);\r\n      }\r\n    } else if (this.isContextual(120)) {\r\n      return this.flowParseDeclareTypeAlias(node);\r\n    } else if (this.isContextual(121)) {\r\n      return this.flowParseDeclareOpaqueType(node);\r\n    } else if (this.isContextual(119)) {\r\n      return this.flowParseDeclareInterface(node);\r\n    } else if (this.match(76)) {\r\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\r\n    } else {\r\n      throw this.unexpected();\r\n    }\r\n  }\r\n\r\n  flowParseDeclareVariable(node) {\r\n    this.next();\r\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\r\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"DeclareVariable\");\r\n  }\r\n\r\n  flowParseDeclareModule(node) {\r\n    this.scope.enter(SCOPE_OTHER);\r\n\r\n    if (this.match(123)) {\r\n      node.id = this.parseExprAtom();\r\n    } else {\r\n      node.id = this.parseIdentifier();\r\n    }\r\n\r\n    const bodyNode = node.body = this.startNode();\r\n    const body = bodyNode.body = [];\r\n    this.expect(5);\r\n\r\n    while (!this.match(8)) {\r\n      let bodyNode = this.startNode();\r\n\r\n      if (this.match(77)) {\r\n        this.next();\r\n\r\n        if (!this.isContextual(120) && !this.match(81)) {\r\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\r\n        }\r\n\r\n        this.parseImport(bodyNode);\r\n      } else {\r\n        this.expectContextual(115, FlowErrors.UnsupportedStatementInDeclareModule);\r\n        bodyNode = this.flowParseDeclare(bodyNode, true);\r\n      }\r\n\r\n      body.push(bodyNode);\r\n    }\r\n\r\n    this.scope.exit();\r\n    this.expect(8);\r\n    this.finishNode(bodyNode, \"BlockStatement\");\r\n    let kind = null;\r\n    let hasModuleExport = false;\r\n    body.forEach(bodyElement => {\r\n      if (isEsModuleType(bodyElement)) {\r\n        if (kind === \"CommonJS\") {\r\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\r\n        }\r\n\r\n        kind = \"ES\";\r\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\r\n        if (hasModuleExport) {\r\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\r\n        }\r\n\r\n        if (kind === \"ES\") {\r\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\r\n        }\r\n\r\n        kind = \"CommonJS\";\r\n        hasModuleExport = true;\r\n      }\r\n    });\r\n    node.kind = kind || \"CommonJS\";\r\n    return this.finishNode(node, \"DeclareModule\");\r\n  }\r\n\r\n  flowParseDeclareExportDeclaration(node, insideModule) {\r\n    this.expect(76);\r\n\r\n    if (this.eat(59)) {\r\n      if (this.match(62) || this.match(74)) {\r\n        node.declaration = this.flowParseDeclare(this.startNode());\r\n      } else {\r\n        node.declaration = this.flowParseType();\r\n        this.semicolon();\r\n      }\r\n\r\n      node.default = true;\r\n      return this.finishNode(node, \"DeclareExportDeclaration\");\r\n    } else {\r\n      if (this.match(69) || this.isLet() || (this.isContextual(120) || this.isContextual(119)) && !insideModule) {\r\n        const label = this.state.value;\r\n        const suggestion = exportSuggestions[label];\r\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\r\n      }\r\n\r\n      if (this.match(68) || this.match(62) || this.match(74) || this.isContextual(121)) {\r\n        node.declaration = this.flowParseDeclare(this.startNode());\r\n        node.default = false;\r\n        return this.finishNode(node, \"DeclareExportDeclaration\");\r\n      } else if (this.match(49) || this.match(5) || this.isContextual(119) || this.isContextual(120) || this.isContextual(121)) {\r\n        node = this.parseExport(node);\r\n\r\n        if (node.type === \"ExportNamedDeclaration\") {\r\n          node.type = \"ExportDeclaration\";\r\n          node.default = false;\r\n          delete node.exportKind;\r\n        }\r\n\r\n        node.type = \"Declare\" + node.type;\r\n        return node;\r\n      }\r\n    }\r\n\r\n    throw this.unexpected();\r\n  }\r\n\r\n  flowParseDeclareModuleExports(node) {\r\n    this.next();\r\n    this.expectContextual(102);\r\n    node.typeAnnotation = this.flowParseTypeAnnotation();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"DeclareModuleExports\");\r\n  }\r\n\r\n  flowParseDeclareTypeAlias(node) {\r\n    this.next();\r\n    this.flowParseTypeAlias(node);\r\n    node.type = \"DeclareTypeAlias\";\r\n    return node;\r\n  }\r\n\r\n  flowParseDeclareOpaqueType(node) {\r\n    this.next();\r\n    this.flowParseOpaqueType(node, true);\r\n    node.type = \"DeclareOpaqueType\";\r\n    return node;\r\n  }\r\n\r\n  flowParseDeclareInterface(node) {\r\n    this.next();\r\n    this.flowParseInterfaceish(node);\r\n    return this.finishNode(node, \"DeclareInterface\");\r\n  }\r\n\r\n  flowParseInterfaceish(node, isClass = false) {\r\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\r\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n\r\n    node.extends = [];\r\n    node.implements = [];\r\n    node.mixins = [];\r\n\r\n    if (this.eat(75)) {\r\n      do {\r\n        node.extends.push(this.flowParseInterfaceExtends());\r\n      } while (!isClass && this.eat(12));\r\n    }\r\n\r\n    if (this.isContextual(108)) {\r\n      this.next();\r\n\r\n      do {\r\n        node.mixins.push(this.flowParseInterfaceExtends());\r\n      } while (this.eat(12));\r\n    }\r\n\r\n    if (this.isContextual(104)) {\r\n      this.next();\r\n\r\n      do {\r\n        node.implements.push(this.flowParseInterfaceExtends());\r\n      } while (this.eat(12));\r\n    }\r\n\r\n    node.body = this.flowParseObjectType({\r\n      allowStatic: isClass,\r\n      allowExact: false,\r\n      allowSpread: false,\r\n      allowProto: isClass,\r\n      allowInexact: false\r\n    });\r\n  }\r\n\r\n  flowParseInterfaceExtends() {\r\n    const node = this.startNode();\r\n    node.id = this.flowParseQualifiedTypeIdentifier();\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n\r\n    return this.finishNode(node, \"InterfaceExtends\");\r\n  }\r\n\r\n  flowParseInterface(node) {\r\n    this.flowParseInterfaceish(node);\r\n    return this.finishNode(node, \"InterfaceDeclaration\");\r\n  }\r\n\r\n  checkNotUnderscore(word) {\r\n    if (word === \"_\") {\r\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\r\n    }\r\n  }\r\n\r\n  checkReservedType(word, startLoc, declaration) {\r\n    if (!reservedTypes.has(word)) return;\r\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\r\n  }\r\n\r\n  flowParseRestrictedIdentifier(liberal, declaration) {\r\n    this.checkReservedType(this.state.value, this.state.start, declaration);\r\n    return this.parseIdentifier(liberal);\r\n  }\r\n\r\n  flowParseTypeAlias(node) {\r\n    node.id = this.flowParseRestrictedIdentifier(false, true);\r\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n\r\n    node.right = this.flowParseTypeInitialiser(27);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"TypeAlias\");\r\n  }\r\n\r\n  flowParseOpaqueType(node, declare) {\r\n    this.expectContextual(120);\r\n    node.id = this.flowParseRestrictedIdentifier(true, true);\r\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    } else {\r\n      node.typeParameters = null;\r\n    }\r\n\r\n    node.supertype = null;\r\n\r\n    if (this.match(14)) {\r\n      node.supertype = this.flowParseTypeInitialiser(14);\r\n    }\r\n\r\n    node.impltype = null;\r\n\r\n    if (!declare) {\r\n      node.impltype = this.flowParseTypeInitialiser(27);\r\n    }\r\n\r\n    this.semicolon();\r\n    return this.finishNode(node, \"OpaqueType\");\r\n  }\r\n\r\n  flowParseTypeParameter(requireDefault = false) {\r\n    const nodeStart = this.state.start;\r\n    const node = this.startNode();\r\n    const variance = this.flowParseVariance();\r\n    const ident = this.flowParseTypeAnnotatableIdentifier();\r\n    node.name = ident.name;\r\n    node.variance = variance;\r\n    node.bound = ident.typeAnnotation;\r\n\r\n    if (this.match(27)) {\r\n      this.eat(27);\r\n      node.default = this.flowParseType();\r\n    } else {\r\n      if (requireDefault) {\r\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\r\n      }\r\n    }\r\n\r\n    return this.finishNode(node, \"TypeParameter\");\r\n  }\r\n\r\n  flowParseTypeParameterDeclaration() {\r\n    const oldInType = this.state.inType;\r\n    const node = this.startNode();\r\n    node.params = [];\r\n    this.state.inType = true;\r\n\r\n    if (this.match(43) || this.match(132)) {\r\n      this.next();\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n\r\n    let defaultRequired = false;\r\n\r\n    do {\r\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\r\n      node.params.push(typeParameter);\r\n\r\n      if (typeParameter.default) {\r\n        defaultRequired = true;\r\n      }\r\n\r\n      if (!this.match(44)) {\r\n        this.expect(12);\r\n      }\r\n    } while (!this.match(44));\r\n\r\n    this.expect(44);\r\n    this.state.inType = oldInType;\r\n    return this.finishNode(node, \"TypeParameterDeclaration\");\r\n  }\r\n\r\n  flowParseTypeParameterInstantiation() {\r\n    const node = this.startNode();\r\n    const oldInType = this.state.inType;\r\n    node.params = [];\r\n    this.state.inType = true;\r\n    this.expect(43);\r\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n    this.state.noAnonFunctionType = false;\r\n\r\n    while (!this.match(44)) {\r\n      node.params.push(this.flowParseType());\r\n\r\n      if (!this.match(44)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n\r\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n    this.expect(44);\r\n    this.state.inType = oldInType;\r\n    return this.finishNode(node, \"TypeParameterInstantiation\");\r\n  }\r\n\r\n  flowParseTypeParameterInstantiationCallOrNew() {\r\n    const node = this.startNode();\r\n    const oldInType = this.state.inType;\r\n    node.params = [];\r\n    this.state.inType = true;\r\n    this.expect(43);\r\n\r\n    while (!this.match(44)) {\r\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\r\n\r\n      if (!this.match(44)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n\r\n    this.expect(44);\r\n    this.state.inType = oldInType;\r\n    return this.finishNode(node, \"TypeParameterInstantiation\");\r\n  }\r\n\r\n  flowParseInterfaceType() {\r\n    const node = this.startNode();\r\n    this.expectContextual(119);\r\n    node.extends = [];\r\n\r\n    if (this.eat(75)) {\r\n      do {\r\n        node.extends.push(this.flowParseInterfaceExtends());\r\n      } while (this.eat(12));\r\n    }\r\n\r\n    node.body = this.flowParseObjectType({\r\n      allowStatic: false,\r\n      allowExact: false,\r\n      allowSpread: false,\r\n      allowProto: false,\r\n      allowInexact: false\r\n    });\r\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\r\n  }\r\n\r\n  flowParseObjectPropertyKey() {\r\n    return this.match(124) || this.match(123) ? this.parseExprAtom() : this.parseIdentifier(true);\r\n  }\r\n\r\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\r\n    node.static = isStatic;\r\n\r\n    if (this.lookahead().type === 14) {\r\n      node.id = this.flowParseObjectPropertyKey();\r\n      node.key = this.flowParseTypeInitialiser();\r\n    } else {\r\n      node.id = null;\r\n      node.key = this.flowParseType();\r\n    }\r\n\r\n    this.expect(3);\r\n    node.value = this.flowParseTypeInitialiser();\r\n    node.variance = variance;\r\n    return this.finishNode(node, \"ObjectTypeIndexer\");\r\n  }\r\n\r\n  flowParseObjectTypeInternalSlot(node, isStatic) {\r\n    node.static = isStatic;\r\n    node.id = this.flowParseObjectPropertyKey();\r\n    this.expect(3);\r\n    this.expect(3);\r\n\r\n    if (this.match(43) || this.match(10)) {\r\n      node.method = true;\r\n      node.optional = false;\r\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\r\n    } else {\r\n      node.method = false;\r\n\r\n      if (this.eat(17)) {\r\n        node.optional = true;\r\n      }\r\n\r\n      node.value = this.flowParseTypeInitialiser();\r\n    }\r\n\r\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\r\n  }\r\n\r\n  flowParseObjectTypeMethodish(node) {\r\n    node.params = [];\r\n    node.rest = null;\r\n    node.typeParameters = null;\r\n    node.this = null;\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n\r\n    this.expect(10);\r\n\r\n    if (this.match(72)) {\r\n      node.this = this.flowParseFunctionTypeParam(true);\r\n      node.this.name = null;\r\n\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n\r\n    while (!this.match(11) && !this.match(21)) {\r\n      node.params.push(this.flowParseFunctionTypeParam(false));\r\n\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n\r\n    if (this.eat(21)) {\r\n      node.rest = this.flowParseFunctionTypeParam(false);\r\n    }\r\n\r\n    this.expect(11);\r\n    node.returnType = this.flowParseTypeInitialiser();\r\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n  }\r\n\r\n  flowParseObjectTypeCallProperty(node, isStatic) {\r\n    const valueNode = this.startNode();\r\n    node.static = isStatic;\r\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\r\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\r\n  }\r\n\r\n  flowParseObjectType({\r\n    allowStatic,\r\n    allowExact,\r\n    allowSpread,\r\n    allowProto,\r\n    allowInexact\r\n  }) {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    const nodeStart = this.startNode();\r\n    nodeStart.callProperties = [];\r\n    nodeStart.properties = [];\r\n    nodeStart.indexers = [];\r\n    nodeStart.internalSlots = [];\r\n    let endDelim;\r\n    let exact;\r\n    let inexact = false;\r\n\r\n    if (allowExact && this.match(6)) {\r\n      this.expect(6);\r\n      endDelim = 9;\r\n      exact = true;\r\n    } else {\r\n      this.expect(5);\r\n      endDelim = 8;\r\n      exact = false;\r\n    }\r\n\r\n    nodeStart.exact = exact;\r\n\r\n    while (!this.match(endDelim)) {\r\n      let isStatic = false;\r\n      let protoStart = null;\r\n      let inexactStart = null;\r\n      const node = this.startNode();\r\n\r\n      if (allowProto && this.isContextual(109)) {\r\n        const lookahead = this.lookahead();\r\n\r\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\r\n          this.next();\r\n          protoStart = this.state.start;\r\n          allowStatic = false;\r\n        }\r\n      }\r\n\r\n      if (allowStatic && this.isContextual(98)) {\r\n        const lookahead = this.lookahead();\r\n\r\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\r\n          this.next();\r\n          isStatic = true;\r\n        }\r\n      }\r\n\r\n      const variance = this.flowParseVariance();\r\n\r\n      if (this.eat(0)) {\r\n        if (protoStart != null) {\r\n          this.unexpected(protoStart);\r\n        }\r\n\r\n        if (this.eat(0)) {\r\n          if (variance) {\r\n            this.unexpected(variance.start);\r\n          }\r\n\r\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\r\n        } else {\r\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\r\n        }\r\n      } else if (this.match(10) || this.match(43)) {\r\n        if (protoStart != null) {\r\n          this.unexpected(protoStart);\r\n        }\r\n\r\n        if (variance) {\r\n          this.unexpected(variance.start);\r\n        }\r\n\r\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\r\n      } else {\r\n        let kind = \"init\";\r\n\r\n        if (this.isContextual(92) || this.isContextual(97)) {\r\n          const lookahead = this.lookahead();\r\n\r\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\r\n            kind = this.state.value;\r\n            this.next();\r\n          }\r\n        }\r\n\r\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\r\n\r\n        if (propOrInexact === null) {\r\n          inexact = true;\r\n          inexactStart = this.state.lastTokStart;\r\n        } else {\r\n          nodeStart.properties.push(propOrInexact);\r\n        }\r\n      }\r\n\r\n      this.flowObjectTypeSemicolon();\r\n\r\n      if (inexactStart && !this.match(8) && !this.match(9)) {\r\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\r\n      }\r\n    }\r\n\r\n    this.expect(endDelim);\r\n\r\n    if (allowSpread) {\r\n      nodeStart.inexact = inexact;\r\n    }\r\n\r\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\r\n    this.state.inType = oldInType;\r\n    return out;\r\n  }\r\n\r\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\r\n    if (this.eat(21)) {\r\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\r\n\r\n      if (isInexactToken) {\r\n        if (!allowSpread) {\r\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\r\n        } else if (!allowInexact) {\r\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\r\n        }\r\n\r\n        if (variance) {\r\n          this.raise(variance.start, FlowErrors.InexactVariance);\r\n        }\r\n\r\n        return null;\r\n      }\r\n\r\n      if (!allowSpread) {\r\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\r\n      }\r\n\r\n      if (protoStart != null) {\r\n        this.unexpected(protoStart);\r\n      }\r\n\r\n      if (variance) {\r\n        this.raise(variance.start, FlowErrors.SpreadVariance);\r\n      }\r\n\r\n      node.argument = this.flowParseType();\r\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\r\n    } else {\r\n      node.key = this.flowParseObjectPropertyKey();\r\n      node.static = isStatic;\r\n      node.proto = protoStart != null;\r\n      node.kind = kind;\r\n      let optional = false;\r\n\r\n      if (this.match(43) || this.match(10)) {\r\n        node.method = true;\r\n\r\n        if (protoStart != null) {\r\n          this.unexpected(protoStart);\r\n        }\r\n\r\n        if (variance) {\r\n          this.unexpected(variance.start);\r\n        }\r\n\r\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\r\n\r\n        if (kind === \"get\" || kind === \"set\") {\r\n          this.flowCheckGetterSetterParams(node);\r\n        }\r\n\r\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\r\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\r\n        }\r\n      } else {\r\n        if (kind !== \"init\") this.unexpected();\r\n        node.method = false;\r\n\r\n        if (this.eat(17)) {\r\n          optional = true;\r\n        }\r\n\r\n        node.value = this.flowParseTypeInitialiser();\r\n        node.variance = variance;\r\n      }\r\n\r\n      node.optional = optional;\r\n      return this.finishNode(node, \"ObjectTypeProperty\");\r\n    }\r\n  }\r\n\r\n  flowCheckGetterSetterParams(property) {\r\n    const paramCount = property.kind === \"get\" ? 0 : 1;\r\n    const start = property.start;\r\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\r\n\r\n    if (property.value.this) {\r\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\r\n    }\r\n\r\n    if (length !== paramCount) {\r\n      if (property.kind === \"get\") {\r\n        this.raise(start, ErrorMessages.BadGetterArity);\r\n      } else {\r\n        this.raise(start, ErrorMessages.BadSetterArity);\r\n      }\r\n    }\r\n\r\n    if (property.kind === \"set\" && property.value.rest) {\r\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\r\n    }\r\n  }\r\n\r\n  flowObjectTypeSemicolon() {\r\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\r\n      this.unexpected();\r\n    }\r\n  }\r\n\r\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\r\n    startPos = startPos || this.state.start;\r\n    startLoc = startLoc || this.state.startLoc;\r\n    let node = id || this.flowParseRestrictedIdentifier(true);\r\n\r\n    while (this.eat(16)) {\r\n      const node2 = this.startNodeAt(startPos, startLoc);\r\n      node2.qualification = node;\r\n      node2.id = this.flowParseRestrictedIdentifier(true);\r\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  flowParseGenericType(startPos, startLoc, id) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    node.typeParameters = null;\r\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\r\n    }\r\n\r\n    return this.finishNode(node, \"GenericTypeAnnotation\");\r\n  }\r\n\r\n  flowParseTypeofType() {\r\n    const node = this.startNode();\r\n    this.expect(81);\r\n    node.argument = this.flowParsePrimaryType();\r\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\r\n  }\r\n\r\n  flowParseTupleType() {\r\n    const node = this.startNode();\r\n    node.types = [];\r\n    this.expect(0);\r\n\r\n    while (this.state.pos < this.length && !this.match(3)) {\r\n      node.types.push(this.flowParseType());\r\n      if (this.match(3)) break;\r\n      this.expect(12);\r\n    }\r\n\r\n    this.expect(3);\r\n    return this.finishNode(node, \"TupleTypeAnnotation\");\r\n  }\r\n\r\n  flowParseFunctionTypeParam(first) {\r\n    let name = null;\r\n    let optional = false;\r\n    let typeAnnotation = null;\r\n    const node = this.startNode();\r\n    const lh = this.lookahead();\r\n    const isThis = this.state.type === 72;\r\n\r\n    if (lh.type === 14 || lh.type === 17) {\r\n      if (isThis && !first) {\r\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\r\n      }\r\n\r\n      name = this.parseIdentifier(isThis);\r\n\r\n      if (this.eat(17)) {\r\n        optional = true;\r\n\r\n        if (isThis) {\r\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\r\n        }\r\n      }\r\n\r\n      typeAnnotation = this.flowParseTypeInitialiser();\r\n    } else {\r\n      typeAnnotation = this.flowParseType();\r\n    }\r\n\r\n    node.name = name;\r\n    node.optional = optional;\r\n    node.typeAnnotation = typeAnnotation;\r\n    return this.finishNode(node, \"FunctionTypeParam\");\r\n  }\r\n\r\n  reinterpretTypeAsFunctionTypeParam(type) {\r\n    const node = this.startNodeAt(type.start, type.loc.start);\r\n    node.name = null;\r\n    node.optional = false;\r\n    node.typeAnnotation = type;\r\n    return this.finishNode(node, \"FunctionTypeParam\");\r\n  }\r\n\r\n  flowParseFunctionTypeParams(params = []) {\r\n    let rest = null;\r\n    let _this = null;\r\n\r\n    if (this.match(72)) {\r\n      _this = this.flowParseFunctionTypeParam(true);\r\n      _this.name = null;\r\n\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n\r\n    while (!this.match(11) && !this.match(21)) {\r\n      params.push(this.flowParseFunctionTypeParam(false));\r\n\r\n      if (!this.match(11)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n\r\n    if (this.eat(21)) {\r\n      rest = this.flowParseFunctionTypeParam(false);\r\n    }\r\n\r\n    return {\r\n      params,\r\n      rest,\r\n      _this\r\n    };\r\n  }\r\n\r\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\r\n    switch (id.name) {\r\n      case \"any\":\r\n        return this.finishNode(node, \"AnyTypeAnnotation\");\r\n\r\n      case \"bool\":\r\n      case \"boolean\":\r\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\r\n\r\n      case \"mixed\":\r\n        return this.finishNode(node, \"MixedTypeAnnotation\");\r\n\r\n      case \"empty\":\r\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\r\n\r\n      case \"number\":\r\n        return this.finishNode(node, \"NumberTypeAnnotation\");\r\n\r\n      case \"string\":\r\n        return this.finishNode(node, \"StringTypeAnnotation\");\r\n\r\n      case \"symbol\":\r\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\r\n\r\n      default:\r\n        this.checkNotUnderscore(id.name);\r\n        return this.flowParseGenericType(startPos, startLoc, id);\r\n    }\r\n  }\r\n\r\n  flowParsePrimaryType() {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const node = this.startNode();\r\n    let tmp;\r\n    let type;\r\n    let isGroupedType = false;\r\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n\r\n    switch (this.state.type) {\r\n      case 5:\r\n        return this.flowParseObjectType({\r\n          allowStatic: false,\r\n          allowExact: false,\r\n          allowSpread: true,\r\n          allowProto: false,\r\n          allowInexact: true\r\n        });\r\n\r\n      case 6:\r\n        return this.flowParseObjectType({\r\n          allowStatic: false,\r\n          allowExact: true,\r\n          allowSpread: true,\r\n          allowProto: false,\r\n          allowInexact: false\r\n        });\r\n\r\n      case 0:\r\n        this.state.noAnonFunctionType = false;\r\n        type = this.flowParseTupleType();\r\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n        return type;\r\n\r\n      case 43:\r\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n        this.expect(10);\r\n        tmp = this.flowParseFunctionTypeParams();\r\n        node.params = tmp.params;\r\n        node.rest = tmp.rest;\r\n        node.this = tmp._this;\r\n        this.expect(11);\r\n        this.expect(19);\r\n        node.returnType = this.flowParseType();\r\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n\r\n      case 10:\r\n        this.next();\r\n\r\n        if (!this.match(11) && !this.match(21)) {\r\n          if (tokenIsIdentifier(this.state.type) || this.match(72)) {\r\n            const token = this.lookahead().type;\r\n            isGroupedType = token !== 17 && token !== 14;\r\n          } else {\r\n            isGroupedType = true;\r\n          }\r\n        }\r\n\r\n        if (isGroupedType) {\r\n          this.state.noAnonFunctionType = false;\r\n          type = this.flowParseType();\r\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n\r\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\r\n            this.expect(11);\r\n            return type;\r\n          } else {\r\n            this.eat(12);\r\n          }\r\n        }\r\n\r\n        if (type) {\r\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\r\n        } else {\r\n          tmp = this.flowParseFunctionTypeParams();\r\n        }\r\n\r\n        node.params = tmp.params;\r\n        node.rest = tmp.rest;\r\n        node.this = tmp._this;\r\n        this.expect(11);\r\n        this.expect(19);\r\n        node.returnType = this.flowParseType();\r\n        node.typeParameters = null;\r\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n\r\n      case 123:\r\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\r\n\r\n      case 79:\r\n      case 80:\r\n        node.value = this.match(79);\r\n        this.next();\r\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\r\n\r\n      case 47:\r\n        if (this.state.value === \"-\") {\r\n          this.next();\r\n\r\n          if (this.match(124)) {\r\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\r\n          }\r\n\r\n          if (this.match(125)) {\r\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\r\n          }\r\n\r\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\r\n        }\r\n\r\n        throw this.unexpected();\r\n\r\n      case 124:\r\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\r\n\r\n      case 125:\r\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\r\n\r\n      case 82:\r\n        this.next();\r\n        return this.finishNode(node, \"VoidTypeAnnotation\");\r\n\r\n      case 78:\r\n        this.next();\r\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\r\n\r\n      case 72:\r\n        this.next();\r\n        return this.finishNode(node, \"ThisTypeAnnotation\");\r\n\r\n      case 49:\r\n        this.next();\r\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\r\n\r\n      case 81:\r\n        return this.flowParseTypeofType();\r\n\r\n      default:\r\n        if (tokenIsKeyword(this.state.type)) {\r\n          const label = tokenLabelName(this.state.type);\r\n          this.next();\r\n          return super.createIdentifier(node, label);\r\n        } else if (tokenIsIdentifier(this.state.type)) {\r\n          if (this.isContextual(119)) {\r\n            return this.flowParseInterfaceType();\r\n          }\r\n\r\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\r\n        }\r\n\r\n    }\r\n\r\n    throw this.unexpected();\r\n  }\r\n\r\n  flowParsePostfixType() {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    let type = this.flowParsePrimaryType();\r\n    let seenOptionalIndexedAccess = false;\r\n\r\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      const optional = this.eat(18);\r\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\r\n      this.expect(0);\r\n\r\n      if (!optional && this.match(3)) {\r\n        node.elementType = type;\r\n        this.next();\r\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\r\n      } else {\r\n        node.objectType = type;\r\n        node.indexType = this.flowParseType();\r\n        this.expect(3);\r\n\r\n        if (seenOptionalIndexedAccess) {\r\n          node.optional = optional;\r\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\r\n        } else {\r\n          type = this.finishNode(node, \"IndexedAccessType\");\r\n        }\r\n      }\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  flowParsePrefixType() {\r\n    const node = this.startNode();\r\n\r\n    if (this.eat(17)) {\r\n      node.typeAnnotation = this.flowParsePrefixType();\r\n      return this.finishNode(node, \"NullableTypeAnnotation\");\r\n    } else {\r\n      return this.flowParsePostfixType();\r\n    }\r\n  }\r\n\r\n  flowParseAnonFunctionWithoutParens() {\r\n    const param = this.flowParsePrefixType();\r\n\r\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\r\n      const node = this.startNodeAt(param.start, param.loc.start);\r\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\r\n      node.rest = null;\r\n      node.this = null;\r\n      node.returnType = this.flowParseType();\r\n      node.typeParameters = null;\r\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\r\n    }\r\n\r\n    return param;\r\n  }\r\n\r\n  flowParseIntersectionType() {\r\n    const node = this.startNode();\r\n    this.eat(41);\r\n    const type = this.flowParseAnonFunctionWithoutParens();\r\n    node.types = [type];\r\n\r\n    while (this.eat(41)) {\r\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\r\n    }\r\n\r\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\r\n  }\r\n\r\n  flowParseUnionType() {\r\n    const node = this.startNode();\r\n    this.eat(39);\r\n    const type = this.flowParseIntersectionType();\r\n    node.types = [type];\r\n\r\n    while (this.eat(39)) {\r\n      node.types.push(this.flowParseIntersectionType());\r\n    }\r\n\r\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\r\n  }\r\n\r\n  flowParseType() {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n    const type = this.flowParseUnionType();\r\n    this.state.inType = oldInType;\r\n    return type;\r\n  }\r\n\r\n  flowParseTypeOrImplicitInstantiation() {\r\n    if (this.state.type === 122 && this.state.value === \"_\") {\r\n      const startPos = this.state.start;\r\n      const startLoc = this.state.startLoc;\r\n      const node = this.parseIdentifier();\r\n      return this.flowParseGenericType(startPos, startLoc, node);\r\n    } else {\r\n      return this.flowParseType();\r\n    }\r\n  }\r\n\r\n  flowParseTypeAnnotation() {\r\n    const node = this.startNode();\r\n    node.typeAnnotation = this.flowParseTypeInitialiser();\r\n    return this.finishNode(node, \"TypeAnnotation\");\r\n  }\r\n\r\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\r\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\r\n\r\n    if (this.match(14)) {\r\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\r\n      this.resetEndLocation(ident);\r\n    }\r\n\r\n    return ident;\r\n  }\r\n\r\n  typeCastToParameter(node) {\r\n    node.expression.typeAnnotation = node.typeAnnotation;\r\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\r\n    return node.expression;\r\n  }\r\n\r\n  flowParseVariance() {\r\n    let variance = null;\r\n\r\n    if (this.match(47)) {\r\n      variance = this.startNode();\r\n\r\n      if (this.state.value === \"+\") {\r\n        variance.kind = \"plus\";\r\n      } else {\r\n        variance.kind = \"minus\";\r\n      }\r\n\r\n      this.next();\r\n      this.finishNode(variance, \"Variance\");\r\n    }\r\n\r\n    return variance;\r\n  }\r\n\r\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\r\n    if (allowExpressionBody) {\r\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\r\n    }\r\n\r\n    return super.parseFunctionBody(node, false, isMethod);\r\n  }\r\n\r\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\r\n    if (this.match(14)) {\r\n      const typeNode = this.startNode();\r\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\r\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\r\n    }\r\n\r\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\r\n  }\r\n\r\n  parseStatement(context, topLevel) {\r\n    if (this.state.strict && this.isContextual(119)) {\r\n      const lookahead = this.lookahead();\r\n\r\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\r\n        const node = this.startNode();\r\n        this.next();\r\n        return this.flowParseInterface(node);\r\n      }\r\n    } else if (this.shouldParseEnums() && this.isContextual(116)) {\r\n      const node = this.startNode();\r\n      this.next();\r\n      return this.flowParseEnumDeclaration(node);\r\n    }\r\n\r\n    const stmt = super.parseStatement(context, topLevel);\r\n\r\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\r\n      this.flowPragma = null;\r\n    }\r\n\r\n    return stmt;\r\n  }\r\n\r\n  parseExpressionStatement(node, expr) {\r\n    if (expr.type === \"Identifier\") {\r\n      if (expr.name === \"declare\") {\r\n        if (this.match(74) || tokenIsIdentifier(this.state.type) || this.match(62) || this.match(68) || this.match(76)) {\r\n          return this.flowParseDeclare(node);\r\n        }\r\n      } else if (tokenIsIdentifier(this.state.type)) {\r\n        if (expr.name === \"interface\") {\r\n          return this.flowParseInterface(node);\r\n        } else if (expr.name === \"type\") {\r\n          return this.flowParseTypeAlias(node);\r\n        } else if (expr.name === \"opaque\") {\r\n          return this.flowParseOpaqueType(node, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    return super.parseExpressionStatement(node, expr);\r\n  }\r\n\r\n  shouldParseExportDeclaration() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 116) {\r\n      return !this.state.containsEsc;\r\n    }\r\n\r\n    return super.shouldParseExportDeclaration();\r\n  }\r\n\r\n  isExportDefaultSpecifier() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 116) {\r\n      return this.state.containsEsc;\r\n    }\r\n\r\n    return super.isExportDefaultSpecifier();\r\n  }\r\n\r\n  parseExportDefaultExpression() {\r\n    if (this.shouldParseEnums() && this.isContextual(116)) {\r\n      const node = this.startNode();\r\n      this.next();\r\n      return this.flowParseEnumDeclaration(node);\r\n    }\r\n\r\n    return super.parseExportDefaultExpression();\r\n  }\r\n\r\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\r\n    if (!this.match(17)) return expr;\r\n\r\n    if (this.state.maybeInArrowParameters) {\r\n      const nextCh = this.lookaheadCharCode();\r\n\r\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\r\n        this.setOptionalParametersError(refExpressionErrors);\r\n        return expr;\r\n      }\r\n    }\r\n\r\n    this.expect(17);\r\n    const state = this.state.clone();\r\n    const originalNoArrowAt = this.state.noArrowAt;\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    let {\r\n      consequent,\r\n      failed\r\n    } = this.tryParseConditionalConsequent();\r\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\r\n\r\n    if (failed || invalid.length > 0) {\r\n      const noArrowAt = [...originalNoArrowAt];\r\n\r\n      if (invalid.length > 0) {\r\n        this.state = state;\r\n        this.state.noArrowAt = noArrowAt;\r\n\r\n        for (let i = 0; i < invalid.length; i++) {\r\n          noArrowAt.push(invalid[i].start);\r\n        }\r\n\r\n        ({\r\n          consequent,\r\n          failed\r\n        } = this.tryParseConditionalConsequent());\r\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\r\n      }\r\n\r\n      if (failed && valid.length > 1) {\r\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\r\n      }\r\n\r\n      if (failed && valid.length === 1) {\r\n        this.state = state;\r\n        noArrowAt.push(valid[0].start);\r\n        this.state.noArrowAt = noArrowAt;\r\n        ({\r\n          consequent,\r\n          failed\r\n        } = this.tryParseConditionalConsequent());\r\n      }\r\n    }\r\n\r\n    this.getArrowLikeExpressions(consequent, true);\r\n    this.state.noArrowAt = originalNoArrowAt;\r\n    this.expect(14);\r\n    node.test = expr;\r\n    node.consequent = consequent;\r\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\r\n    return this.finishNode(node, \"ConditionalExpression\");\r\n  }\r\n\r\n  tryParseConditionalConsequent() {\r\n    this.state.noArrowParamsConversionAt.push(this.state.start);\r\n    const consequent = this.parseMaybeAssignAllowIn();\r\n    const failed = !this.match(14);\r\n    this.state.noArrowParamsConversionAt.pop();\r\n    return {\r\n      consequent,\r\n      failed\r\n    };\r\n  }\r\n\r\n  getArrowLikeExpressions(node, disallowInvalid) {\r\n    const stack = [node];\r\n    const arrows = [];\r\n\r\n    while (stack.length !== 0) {\r\n      const node = stack.pop();\r\n\r\n      if (node.type === \"ArrowFunctionExpression\") {\r\n        if (node.typeParameters || !node.returnType) {\r\n          this.finishArrowValidation(node);\r\n        } else {\r\n          arrows.push(node);\r\n        }\r\n\r\n        stack.push(node.body);\r\n      } else if (node.type === \"ConditionalExpression\") {\r\n        stack.push(node.consequent);\r\n        stack.push(node.alternate);\r\n      }\r\n    }\r\n\r\n    if (disallowInvalid) {\r\n      arrows.forEach(node => this.finishArrowValidation(node));\r\n      return [arrows, []];\r\n    }\r\n\r\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\r\n  }\r\n\r\n  finishArrowValidation(node) {\r\n    var _node$extra;\r\n\r\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\r\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\r\n    super.checkParams(node, false, true);\r\n    this.scope.exit();\r\n  }\r\n\r\n  forwardNoArrowParamsConversionAt(node, parse) {\r\n    let result;\r\n\r\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\r\n      this.state.noArrowParamsConversionAt.push(this.state.start);\r\n      result = parse();\r\n      this.state.noArrowParamsConversionAt.pop();\r\n    } else {\r\n      result = parse();\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  parseParenItem(node, startPos, startLoc) {\r\n    node = super.parseParenItem(node, startPos, startLoc);\r\n\r\n    if (this.eat(17)) {\r\n      node.optional = true;\r\n      this.resetEndLocation(node);\r\n    }\r\n\r\n    if (this.match(14)) {\r\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\r\n      typeCastNode.expression = node;\r\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\r\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  assertModuleNodeAllowed(node) {\r\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\r\n      return;\r\n    }\r\n\r\n    super.assertModuleNodeAllowed(node);\r\n  }\r\n\r\n  parseExport(node) {\r\n    const decl = super.parseExport(node);\r\n\r\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\r\n      decl.exportKind = decl.exportKind || \"value\";\r\n    }\r\n\r\n    return decl;\r\n  }\r\n\r\n  parseExportDeclaration(node) {\r\n    if (this.isContextual(120)) {\r\n      node.exportKind = \"type\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n\r\n      if (this.match(5)) {\r\n        node.specifiers = this.parseExportSpecifiers(true);\r\n        this.parseExportFrom(node);\r\n        return null;\r\n      } else {\r\n        return this.flowParseTypeAlias(declarationNode);\r\n      }\r\n    } else if (this.isContextual(121)) {\r\n      node.exportKind = \"type\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n      return this.flowParseOpaqueType(declarationNode, false);\r\n    } else if (this.isContextual(119)) {\r\n      node.exportKind = \"type\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n      return this.flowParseInterface(declarationNode);\r\n    } else if (this.shouldParseEnums() && this.isContextual(116)) {\r\n      node.exportKind = \"value\";\r\n      const declarationNode = this.startNode();\r\n      this.next();\r\n      return this.flowParseEnumDeclaration(declarationNode);\r\n    } else {\r\n      return super.parseExportDeclaration(node);\r\n    }\r\n  }\r\n\r\n  eatExportStar(node) {\r\n    if (super.eatExportStar(...arguments)) return true;\r\n\r\n    if (this.isContextual(120) && this.lookahead().type === 49) {\r\n      node.exportKind = \"type\";\r\n      this.next();\r\n      this.next();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  maybeParseExportNamespaceSpecifier(node) {\r\n    const pos = this.state.start;\r\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\r\n\r\n    if (hasNamespace && node.exportKind === \"type\") {\r\n      this.unexpected(pos);\r\n    }\r\n\r\n    return hasNamespace;\r\n  }\r\n\r\n  parseClassId(node, isStatement, optionalId) {\r\n    super.parseClassId(node, isStatement, optionalId);\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n  }\r\n\r\n  parseClassMember(classBody, member, state) {\r\n    const pos = this.state.start;\r\n\r\n    if (this.isContextual(115)) {\r\n      if (this.parseClassMemberFromModifier(classBody, member)) {\r\n        return;\r\n      }\r\n\r\n      member.declare = true;\r\n    }\r\n\r\n    super.parseClassMember(classBody, member, state);\r\n\r\n    if (member.declare) {\r\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\r\n        this.raise(pos, FlowErrors.DeclareClassElement);\r\n      } else if (member.value) {\r\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\r\n      }\r\n    }\r\n  }\r\n\r\n  isIterator(word) {\r\n    return word === \"iterator\" || word === \"asyncIterator\";\r\n  }\r\n\r\n  readIterator() {\r\n    const word = super.readWord1();\r\n    const fullWord = \"@@\" + word;\r\n\r\n    if (!this.isIterator(word) || !this.state.inType) {\r\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\r\n    }\r\n\r\n    this.finishToken(122, fullWord);\r\n  }\r\n\r\n  getTokenFromCode(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (code === 123 && next === 124) {\r\n      return this.finishOp(6, 2);\r\n    } else if (this.state.inType && (code === 62 || code === 60)) {\r\n      return this.finishOp(code === 62 ? 44 : 43, 1);\r\n    } else if (this.state.inType && code === 63) {\r\n      if (next === 46) {\r\n        return this.finishOp(18, 2);\r\n      }\r\n\r\n      return this.finishOp(17, 1);\r\n    } else if (isIteratorStart(code, next)) {\r\n      this.state.pos += 2;\r\n      return this.readIterator();\r\n    } else {\r\n      return super.getTokenFromCode(code);\r\n    }\r\n  }\r\n\r\n  isAssignable(node, isBinding) {\r\n    if (node.type === \"TypeCastExpression\") {\r\n      return this.isAssignable(node.expression, isBinding);\r\n    } else {\r\n      return super.isAssignable(node, isBinding);\r\n    }\r\n  }\r\n\r\n  toAssignable(node, isLHS = false) {\r\n    if (node.type === \"TypeCastExpression\") {\r\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\r\n    } else {\r\n      return super.toAssignable(node, isLHS);\r\n    }\r\n  }\r\n\r\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\r\n    for (let i = 0; i < exprList.length; i++) {\r\n      const expr = exprList[i];\r\n\r\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\r\n        exprList[i] = this.typeCastToParameter(expr);\r\n      }\r\n    }\r\n\r\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\r\n  }\r\n\r\n  toReferencedList(exprList, isParenthesizedExpr) {\r\n    for (let i = 0; i < exprList.length; i++) {\r\n      var _expr$extra;\r\n\r\n      const expr = exprList[i];\r\n\r\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\r\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\r\n      }\r\n    }\r\n\r\n    return exprList;\r\n  }\r\n\r\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\r\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\r\n\r\n    if (canBePattern && !this.state.maybeInArrowParameters) {\r\n      this.toReferencedList(node.elements);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  checkLVal(expr, ...args) {\r\n    if (expr.type !== \"TypeCastExpression\") {\r\n      return super.checkLVal(expr, ...args);\r\n    }\r\n  }\r\n\r\n  parseClassProperty(node) {\r\n    if (this.match(14)) {\r\n      node.typeAnnotation = this.flowParseTypeAnnotation();\r\n    }\r\n\r\n    return super.parseClassProperty(node);\r\n  }\r\n\r\n  parseClassPrivateProperty(node) {\r\n    if (this.match(14)) {\r\n      node.typeAnnotation = this.flowParseTypeAnnotation();\r\n    }\r\n\r\n    return super.parseClassPrivateProperty(node);\r\n  }\r\n\r\n  isClassMethod() {\r\n    return this.match(43) || super.isClassMethod();\r\n  }\r\n\r\n  isClassProperty() {\r\n    return this.match(14) || super.isClassProperty();\r\n  }\r\n\r\n  isNonstaticConstructor(method) {\r\n    return !this.match(14) && super.isNonstaticConstructor(method);\r\n  }\r\n\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    if (method.variance) {\r\n      this.unexpected(method.variance.start);\r\n    }\r\n\r\n    delete method.variance;\r\n\r\n    if (this.match(43)) {\r\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n\r\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\r\n\r\n    if (method.params && isConstructor) {\r\n      const params = method.params;\r\n\r\n      if (params.length > 0 && this.isThisParam(params[0])) {\r\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\r\n      }\r\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\r\n      const params = method.value.params;\r\n\r\n      if (params.length > 0 && this.isThisParam(params[0])) {\r\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\r\n      }\r\n    }\r\n  }\r\n\r\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\r\n    if (method.variance) {\r\n      this.unexpected(method.variance.start);\r\n    }\r\n\r\n    delete method.variance;\r\n\r\n    if (this.match(43)) {\r\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n\r\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\r\n  }\r\n\r\n  parseClassSuper(node) {\r\n    super.parseClassSuper(node);\r\n\r\n    if (node.superClass && this.match(43)) {\r\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\r\n    }\r\n\r\n    if (this.isContextual(104)) {\r\n      this.next();\r\n      const implemented = node.implements = [];\r\n\r\n      do {\r\n        const node = this.startNode();\r\n        node.id = this.flowParseRestrictedIdentifier(true);\r\n\r\n        if (this.match(43)) {\r\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\r\n        } else {\r\n          node.typeParameters = null;\r\n        }\r\n\r\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\r\n      } while (this.eat(12));\r\n    }\r\n  }\r\n\r\n  checkGetterSetterParams(method) {\r\n    super.checkGetterSetterParams(method);\r\n    const params = this.getObjectOrClassMethodParams(method);\r\n\r\n    if (params.length > 0) {\r\n      const param = params[0];\r\n\r\n      if (this.isThisParam(param) && method.kind === \"get\") {\r\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\r\n      } else if (this.isThisParam(param)) {\r\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\r\n      }\r\n    }\r\n  }\r\n\r\n  parsePropertyNamePrefixOperator(node) {\r\n    node.variance = this.flowParseVariance();\r\n  }\r\n\r\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\r\n    if (prop.variance) {\r\n      this.unexpected(prop.variance.start);\r\n    }\r\n\r\n    delete prop.variance;\r\n    let typeParameters;\r\n\r\n    if (this.match(43) && !isAccessor) {\r\n      typeParameters = this.flowParseTypeParameterDeclaration();\r\n      if (!this.match(10)) this.unexpected();\r\n    }\r\n\r\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\r\n\r\n    if (typeParameters) {\r\n      (prop.value || prop).typeParameters = typeParameters;\r\n    }\r\n  }\r\n\r\n  parseAssignableListItemTypes(param) {\r\n    if (this.eat(17)) {\r\n      if (param.type !== \"Identifier\") {\r\n        this.raise(param.start, FlowErrors.PatternIsOptional);\r\n      }\r\n\r\n      if (this.isThisParam(param)) {\r\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\r\n      }\r\n\r\n      param.optional = true;\r\n    }\r\n\r\n    if (this.match(14)) {\r\n      param.typeAnnotation = this.flowParseTypeAnnotation();\r\n    } else if (this.isThisParam(param)) {\r\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\r\n    }\r\n\r\n    if (this.match(27) && this.isThisParam(param)) {\r\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\r\n    }\r\n\r\n    this.resetEndLocation(param);\r\n    return param;\r\n  }\r\n\r\n  parseMaybeDefault(startPos, startLoc, left) {\r\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\r\n\r\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\r\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  shouldParseDefaultImport(node) {\r\n    if (!hasTypeImportKind(node)) {\r\n      return super.shouldParseDefaultImport(node);\r\n    }\r\n\r\n    return isMaybeDefaultImport(this.state.type);\r\n  }\r\n\r\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\r\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\r\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\r\n    node.specifiers.push(this.finishNode(specifier, type));\r\n  }\r\n\r\n  maybeParseDefaultImportSpecifier(node) {\r\n    node.importKind = \"value\";\r\n    let kind = null;\r\n\r\n    if (this.match(81)) {\r\n      kind = \"typeof\";\r\n    } else if (this.isContextual(120)) {\r\n      kind = \"type\";\r\n    }\r\n\r\n    if (kind) {\r\n      const lh = this.lookahead();\r\n      const {\r\n        type\r\n      } = lh;\r\n\r\n      if (kind === \"type\" && type === 49) {\r\n        this.unexpected(lh.start);\r\n      }\r\n\r\n      if (isMaybeDefaultImport(type) || type === 5 || type === 49) {\r\n        this.next();\r\n        node.importKind = kind;\r\n      }\r\n    }\r\n\r\n    return super.maybeParseDefaultImportSpecifier(node);\r\n  }\r\n\r\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\r\n    const firstIdent = specifier.imported;\r\n    let specifierTypeKind = null;\r\n\r\n    if (firstIdent.type === \"Identifier\") {\r\n      if (firstIdent.name === \"type\") {\r\n        specifierTypeKind = \"type\";\r\n      } else if (firstIdent.name === \"typeof\") {\r\n        specifierTypeKind = \"typeof\";\r\n      }\r\n    }\r\n\r\n    let isBinding = false;\r\n\r\n    if (this.isContextual(87) && !this.isLookaheadContextual(\"as\")) {\r\n      const as_ident = this.parseIdentifier(true);\r\n\r\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\r\n        specifier.imported = as_ident;\r\n        specifier.importKind = specifierTypeKind;\r\n        specifier.local = cloneIdentifier(as_ident);\r\n      } else {\r\n        specifier.imported = firstIdent;\r\n        specifier.importKind = null;\r\n        specifier.local = this.parseIdentifier();\r\n      }\r\n    } else {\r\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\r\n        specifier.imported = this.parseIdentifier(true);\r\n        specifier.importKind = specifierTypeKind;\r\n      } else {\r\n        if (importedIsString) {\r\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\r\n        }\r\n\r\n        specifier.imported = firstIdent;\r\n        specifier.importKind = null;\r\n      }\r\n\r\n      if (this.eatContextual(87)) {\r\n        specifier.local = this.parseIdentifier();\r\n      } else {\r\n        isBinding = true;\r\n        specifier.local = cloneIdentifier(specifier.imported);\r\n      }\r\n    }\r\n\r\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\r\n\r\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\r\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\r\n    }\r\n\r\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\r\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\r\n    }\r\n\r\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\r\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\r\n    }\r\n\r\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\r\n    return this.finishNode(specifier, \"ImportSpecifier\");\r\n  }\r\n\r\n  parseBindingAtom() {\r\n    switch (this.state.type) {\r\n      case 72:\r\n        return this.parseIdentifier(true);\r\n\r\n      default:\r\n        return super.parseBindingAtom();\r\n    }\r\n  }\r\n\r\n  parseFunctionParams(node, allowModifiers) {\r\n    const kind = node.kind;\r\n\r\n    if (kind !== \"get\" && kind !== \"set\" && this.match(43)) {\r\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\r\n    }\r\n\r\n    super.parseFunctionParams(node, allowModifiers);\r\n  }\r\n\r\n  parseVarId(decl, kind) {\r\n    super.parseVarId(decl, kind);\r\n\r\n    if (this.match(14)) {\r\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\r\n      this.resetEndLocation(decl.id);\r\n    }\r\n  }\r\n\r\n  parseAsyncArrowFromCallExpression(node, call) {\r\n    if (this.match(14)) {\r\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n      this.state.noAnonFunctionType = true;\r\n      node.returnType = this.flowParseTypeAnnotation();\r\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n    }\r\n\r\n    return super.parseAsyncArrowFromCallExpression(node, call);\r\n  }\r\n\r\n  shouldParseAsyncArrow() {\r\n    return this.match(14) || super.shouldParseAsyncArrow();\r\n  }\r\n\r\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\r\n    var _jsx;\r\n\r\n    let state = null;\r\n    let jsx;\r\n\r\n    if (this.hasPlugin(\"jsx\") && (this.match(132) || this.match(43))) {\r\n      state = this.state.clone();\r\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\r\n      if (!jsx.error) return jsx.node;\r\n      const {\r\n        context\r\n      } = this.state;\r\n      const curContext = context[context.length - 1];\r\n\r\n      if (curContext === types.j_oTag) {\r\n        context.length -= 2;\r\n      } else if (curContext === types.j_expr) {\r\n        context.length -= 1;\r\n      }\r\n    }\r\n\r\n    if ((_jsx = jsx) != null && _jsx.error || this.match(43)) {\r\n      var _jsx2, _jsx3;\r\n\r\n      state = state || this.state.clone();\r\n      let typeParameters;\r\n      const arrow = this.tryParse(abort => {\r\n        var _arrowExpression$extr;\r\n\r\n        typeParameters = this.flowParseTypeParameterDeclaration();\r\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\r\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\r\n          this.resetStartLocationFromNode(result, typeParameters);\r\n          return result;\r\n        });\r\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\r\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\r\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\r\n        expr.typeParameters = typeParameters;\r\n        this.resetStartLocationFromNode(expr, typeParameters);\r\n        return arrowExpression;\r\n      }, state);\r\n      let arrowExpression = null;\r\n\r\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\r\n        if (!arrow.error && !arrow.aborted) {\r\n          if (arrow.node.async) {\r\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\r\n          }\r\n\r\n          return arrow.node;\r\n        }\r\n\r\n        arrowExpression = arrow.node;\r\n      }\r\n\r\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\r\n        this.state = jsx.failState;\r\n        return jsx.node;\r\n      }\r\n\r\n      if (arrowExpression) {\r\n        this.state = arrow.failState;\r\n        return arrowExpression;\r\n      }\r\n\r\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\r\n      if (arrow.thrown) throw arrow.error;\r\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\r\n    }\r\n\r\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\r\n  }\r\n\r\n  parseArrow(node) {\r\n    if (this.match(14)) {\r\n      const result = this.tryParse(() => {\r\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\r\n        this.state.noAnonFunctionType = true;\r\n        const typeNode = this.startNode();\r\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\r\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\r\n        if (this.canInsertSemicolon()) this.unexpected();\r\n        if (!this.match(19)) this.unexpected();\r\n        return typeNode;\r\n      });\r\n      if (result.thrown) return null;\r\n      if (result.error) this.state = result.failState;\r\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\r\n    }\r\n\r\n    return super.parseArrow(node);\r\n  }\r\n\r\n  shouldParseArrow(params) {\r\n    return this.match(14) || super.shouldParseArrow(params);\r\n  }\r\n\r\n  setArrowFunctionParameters(node, params) {\r\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\r\n      node.params = params;\r\n    } else {\r\n      super.setArrowFunctionParameters(node, params);\r\n    }\r\n  }\r\n\r\n  checkParams(node, allowDuplicates, isArrowFunction) {\r\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < node.params.length; i++) {\r\n      if (this.isThisParam(node.params[i]) && i > 0) {\r\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\r\n      }\r\n    }\r\n\r\n    return super.checkParams(...arguments);\r\n  }\r\n\r\n  parseParenAndDistinguishExpression(canBeArrow) {\r\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\r\n  }\r\n\r\n  parseSubscripts(base, startPos, startLoc, noCalls) {\r\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\r\n      this.next();\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      node.callee = base;\r\n      node.arguments = this.parseCallExpressionArguments(11, false);\r\n      base = this.finishNode(node, \"CallExpression\");\r\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(43)) {\r\n      const state = this.state.clone();\r\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\r\n      if (!arrow.error && !arrow.aborted) return arrow.node;\r\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\r\n      if (result.node && !result.error) return result.node;\r\n\r\n      if (arrow.node) {\r\n        this.state = arrow.failState;\r\n        return arrow.node;\r\n      }\r\n\r\n      if (result.node) {\r\n        this.state = result.failState;\r\n        return result.node;\r\n      }\r\n\r\n      throw arrow.error || result.error;\r\n    }\r\n\r\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\r\n  }\r\n\r\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\r\n    if (this.match(18) && this.isLookaheadToken_lt()) {\r\n      subscriptState.optionalChainMember = true;\r\n\r\n      if (noCalls) {\r\n        subscriptState.stop = true;\r\n        return base;\r\n      }\r\n\r\n      this.next();\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      node.callee = base;\r\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\r\n      this.expect(10);\r\n      node.arguments = this.parseCallExpressionArguments(11, false);\r\n      node.optional = true;\r\n      return this.finishCallExpression(node, true);\r\n    } else if (!noCalls && this.shouldParseTypes() && this.match(43)) {\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      node.callee = base;\r\n      const result = this.tryParse(() => {\r\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\r\n        this.expect(10);\r\n        node.arguments = this.parseCallExpressionArguments(11, false);\r\n        if (subscriptState.optionalChainMember) node.optional = false;\r\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\r\n      });\r\n\r\n      if (result.node) {\r\n        if (result.error) this.state = result.failState;\r\n        return result.node;\r\n      }\r\n    }\r\n\r\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\r\n  }\r\n\r\n  parseNewArguments(node) {\r\n    let targs = null;\r\n\r\n    if (this.shouldParseTypes() && this.match(43)) {\r\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\r\n    }\r\n\r\n    node.typeArguments = targs;\r\n    super.parseNewArguments(node);\r\n  }\r\n\r\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    this.parseFunctionParams(node);\r\n    if (!this.parseArrow(node)) return;\r\n    return this.parseArrowExpression(node, undefined, true);\r\n  }\r\n\r\n  readToken_mult_modulo(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\r\n      this.state.hasFlowComment = false;\r\n      this.state.pos += 2;\r\n      this.nextToken();\r\n      return;\r\n    }\r\n\r\n    super.readToken_mult_modulo(code);\r\n  }\r\n\r\n  readToken_pipe_amp(code) {\r\n    const next = this.input.charCodeAt(this.state.pos + 1);\r\n\r\n    if (code === 124 && next === 125) {\r\n      this.finishOp(9, 2);\r\n      return;\r\n    }\r\n\r\n    super.readToken_pipe_amp(code);\r\n  }\r\n\r\n  parseTopLevel(file, program) {\r\n    const fileNode = super.parseTopLevel(file, program);\r\n\r\n    if (this.state.hasFlowComment) {\r\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\r\n    }\r\n\r\n    return fileNode;\r\n  }\r\n\r\n  skipBlockComment() {\r\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\r\n      if (this.state.hasFlowComment) {\r\n        this.unexpected(null, FlowErrors.NestedFlowComment);\r\n      }\r\n\r\n      this.hasFlowCommentCompletion();\r\n      this.state.pos += this.skipFlowComment();\r\n      this.state.hasFlowComment = true;\r\n      return;\r\n    }\r\n\r\n    if (this.state.hasFlowComment) {\r\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\r\n\r\n      if (end === -1) {\r\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\r\n      }\r\n\r\n      this.state.pos = end + 3;\r\n      return;\r\n    }\r\n\r\n    return super.skipBlockComment();\r\n  }\r\n\r\n  skipFlowComment() {\r\n    const {\r\n      pos\r\n    } = this.state;\r\n    let shiftToFirstNonWhiteSpace = 2;\r\n\r\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\r\n      shiftToFirstNonWhiteSpace++;\r\n    }\r\n\r\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\r\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\r\n\r\n    if (ch2 === 58 && ch3 === 58) {\r\n      return shiftToFirstNonWhiteSpace + 2;\r\n    }\r\n\r\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\r\n      return shiftToFirstNonWhiteSpace + 12;\r\n    }\r\n\r\n    if (ch2 === 58 && ch3 !== 58) {\r\n      return shiftToFirstNonWhiteSpace;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  hasFlowCommentCompletion() {\r\n    const end = this.input.indexOf(\"*/\", this.state.pos);\r\n\r\n    if (end === -1) {\r\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\r\n    }\r\n  }\r\n\r\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\r\n    enumName,\r\n    memberName\r\n  }) {\r\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\r\n  }\r\n\r\n  flowEnumErrorInvalidMemberName(pos, {\r\n    enumName,\r\n    memberName\r\n  }) {\r\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\r\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\r\n  }\r\n\r\n  flowEnumErrorDuplicateMemberName(pos, {\r\n    enumName,\r\n    memberName\r\n  }) {\r\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\r\n  }\r\n\r\n  flowEnumErrorInconsistentMemberValues(pos, {\r\n    enumName\r\n  }) {\r\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\r\n  }\r\n\r\n  flowEnumErrorInvalidExplicitType(pos, {\r\n    enumName,\r\n    suppliedType\r\n  }) {\r\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\r\n  }\r\n\r\n  flowEnumErrorInvalidMemberInitializer(pos, {\r\n    enumName,\r\n    explicitType,\r\n    memberName\r\n  }) {\r\n    let message = null;\r\n\r\n    switch (explicitType) {\r\n      case \"boolean\":\r\n      case \"number\":\r\n      case \"string\":\r\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\r\n        break;\r\n\r\n      case \"symbol\":\r\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\r\n        break;\r\n\r\n      default:\r\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\r\n    }\r\n\r\n    return this.raise(pos, message, enumName, memberName, explicitType);\r\n  }\r\n\r\n  flowEnumErrorNumberMemberNotInitialized(pos, {\r\n    enumName,\r\n    memberName\r\n  }) {\r\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\r\n  }\r\n\r\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\r\n    enumName\r\n  }) {\r\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\r\n  }\r\n\r\n  flowEnumMemberInit() {\r\n    const startPos = this.state.start;\r\n\r\n    const endOfInit = () => this.match(12) || this.match(8);\r\n\r\n    switch (this.state.type) {\r\n      case 124:\r\n        {\r\n          const literal = this.parseNumericLiteral(this.state.value);\r\n\r\n          if (endOfInit()) {\r\n            return {\r\n              type: \"number\",\r\n              pos: literal.start,\r\n              value: literal\r\n            };\r\n          }\r\n\r\n          return {\r\n            type: \"invalid\",\r\n            pos: startPos\r\n          };\r\n        }\r\n\r\n      case 123:\r\n        {\r\n          const literal = this.parseStringLiteral(this.state.value);\r\n\r\n          if (endOfInit()) {\r\n            return {\r\n              type: \"string\",\r\n              pos: literal.start,\r\n              value: literal\r\n            };\r\n          }\r\n\r\n          return {\r\n            type: \"invalid\",\r\n            pos: startPos\r\n          };\r\n        }\r\n\r\n      case 79:\r\n      case 80:\r\n        {\r\n          const literal = this.parseBooleanLiteral(this.match(79));\r\n\r\n          if (endOfInit()) {\r\n            return {\r\n              type: \"boolean\",\r\n              pos: literal.start,\r\n              value: literal\r\n            };\r\n          }\r\n\r\n          return {\r\n            type: \"invalid\",\r\n            pos: startPos\r\n          };\r\n        }\r\n\r\n      default:\r\n        return {\r\n          type: \"invalid\",\r\n          pos: startPos\r\n        };\r\n    }\r\n  }\r\n\r\n  flowEnumMemberRaw() {\r\n    const pos = this.state.start;\r\n    const id = this.parseIdentifier(true);\r\n    const init = this.eat(27) ? this.flowEnumMemberInit() : {\r\n      type: \"none\",\r\n      pos\r\n    };\r\n    return {\r\n      id,\r\n      init\r\n    };\r\n  }\r\n\r\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\r\n    const {\r\n      explicitType\r\n    } = context;\r\n\r\n    if (explicitType === null) {\r\n      return;\r\n    }\r\n\r\n    if (explicitType !== expectedType) {\r\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\r\n    }\r\n  }\r\n\r\n  flowEnumMembers({\r\n    enumName,\r\n    explicitType\r\n  }) {\r\n    const seenNames = new Set();\r\n    const members = {\r\n      booleanMembers: [],\r\n      numberMembers: [],\r\n      stringMembers: [],\r\n      defaultedMembers: []\r\n    };\r\n    let hasUnknownMembers = false;\r\n\r\n    while (!this.match(8)) {\r\n      if (this.eat(21)) {\r\n        hasUnknownMembers = true;\r\n        break;\r\n      }\r\n\r\n      const memberNode = this.startNode();\r\n      const {\r\n        id,\r\n        init\r\n      } = this.flowEnumMemberRaw();\r\n      const memberName = id.name;\r\n\r\n      if (memberName === \"\") {\r\n        continue;\r\n      }\r\n\r\n      if (/^[a-z]/.test(memberName)) {\r\n        this.flowEnumErrorInvalidMemberName(id.start, {\r\n          enumName,\r\n          memberName\r\n        });\r\n      }\r\n\r\n      if (seenNames.has(memberName)) {\r\n        this.flowEnumErrorDuplicateMemberName(id.start, {\r\n          enumName,\r\n          memberName\r\n        });\r\n      }\r\n\r\n      seenNames.add(memberName);\r\n      const context = {\r\n        enumName,\r\n        explicitType,\r\n        memberName\r\n      };\r\n      memberNode.id = id;\r\n\r\n      switch (init.type) {\r\n        case \"boolean\":\r\n          {\r\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\r\n            memberNode.init = init.value;\r\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\r\n            break;\r\n          }\r\n\r\n        case \"number\":\r\n          {\r\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\r\n            memberNode.init = init.value;\r\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\r\n            break;\r\n          }\r\n\r\n        case \"string\":\r\n          {\r\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\r\n            memberNode.init = init.value;\r\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\r\n            break;\r\n          }\r\n\r\n        case \"invalid\":\r\n          {\r\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\r\n          }\r\n\r\n        case \"none\":\r\n          {\r\n            switch (explicitType) {\r\n              case \"boolean\":\r\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\r\n                break;\r\n\r\n              case \"number\":\r\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\r\n                break;\r\n\r\n              default:\r\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\r\n            }\r\n          }\r\n      }\r\n\r\n      if (!this.match(8)) {\r\n        this.expect(12);\r\n      }\r\n    }\r\n\r\n    return {\r\n      members,\r\n      hasUnknownMembers\r\n    };\r\n  }\r\n\r\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\r\n    enumName\r\n  }) {\r\n    if (initializedMembers.length === 0) {\r\n      return defaultedMembers;\r\n    } else if (defaultedMembers.length === 0) {\r\n      return initializedMembers;\r\n    } else if (defaultedMembers.length > initializedMembers.length) {\r\n      for (const member of initializedMembers) {\r\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\r\n          enumName\r\n        });\r\n      }\r\n\r\n      return defaultedMembers;\r\n    } else {\r\n      for (const member of defaultedMembers) {\r\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\r\n          enumName\r\n        });\r\n      }\r\n\r\n      return initializedMembers;\r\n    }\r\n  }\r\n\r\n  flowEnumParseExplicitType({\r\n    enumName\r\n  }) {\r\n    if (this.eatContextual(95)) {\r\n      if (!tokenIsIdentifier(this.state.type)) {\r\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\r\n          enumName,\r\n          suppliedType: null\r\n        });\r\n      }\r\n\r\n      const {\r\n        value\r\n      } = this.state;\r\n      this.next();\r\n\r\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\r\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\r\n          enumName,\r\n          suppliedType: value\r\n        });\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  flowEnumBody(node, {\r\n    enumName,\r\n    nameLoc\r\n  }) {\r\n    const explicitType = this.flowEnumParseExplicitType({\r\n      enumName\r\n    });\r\n    this.expect(5);\r\n    const {\r\n      members,\r\n      hasUnknownMembers\r\n    } = this.flowEnumMembers({\r\n      enumName,\r\n      explicitType\r\n    });\r\n    node.hasUnknownMembers = hasUnknownMembers;\r\n\r\n    switch (explicitType) {\r\n      case \"boolean\":\r\n        node.explicitType = true;\r\n        node.members = members.booleanMembers;\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumBooleanBody\");\r\n\r\n      case \"number\":\r\n        node.explicitType = true;\r\n        node.members = members.numberMembers;\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumNumberBody\");\r\n\r\n      case \"string\":\r\n        node.explicitType = true;\r\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\r\n          enumName\r\n        });\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumStringBody\");\r\n\r\n      case \"symbol\":\r\n        node.members = members.defaultedMembers;\r\n        this.expect(8);\r\n        return this.finishNode(node, \"EnumSymbolBody\");\r\n\r\n      default:\r\n        {\r\n          const empty = () => {\r\n            node.members = [];\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumStringBody\");\r\n          };\r\n\r\n          node.explicitType = false;\r\n          const boolsLen = members.booleanMembers.length;\r\n          const numsLen = members.numberMembers.length;\r\n          const strsLen = members.stringMembers.length;\r\n          const defaultedLen = members.defaultedMembers.length;\r\n\r\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\r\n            return empty();\r\n          } else if (!boolsLen && !numsLen) {\r\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\r\n              enumName\r\n            });\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumStringBody\");\r\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\r\n            for (const member of members.defaultedMembers) {\r\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\r\n                enumName,\r\n                memberName: member.id.name\r\n              });\r\n            }\r\n\r\n            node.members = members.booleanMembers;\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumBooleanBody\");\r\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\r\n            for (const member of members.defaultedMembers) {\r\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\r\n                enumName,\r\n                memberName: member.id.name\r\n              });\r\n            }\r\n\r\n            node.members = members.numberMembers;\r\n            this.expect(8);\r\n            return this.finishNode(node, \"EnumNumberBody\");\r\n          } else {\r\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\r\n              enumName\r\n            });\r\n            return empty();\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  flowParseEnumDeclaration(node) {\r\n    const id = this.parseIdentifier();\r\n    node.id = id;\r\n    node.body = this.flowEnumBody(this.startNode(), {\r\n      enumName: id.name,\r\n      nameLoc: id.start\r\n    });\r\n    return this.finishNode(node, \"EnumDeclaration\");\r\n  }\r\n\r\n  isLookaheadToken_lt() {\r\n    const next = this.nextTokenStart();\r\n\r\n    if (this.input.charCodeAt(next) === 60) {\r\n      const afterNext = this.input.charCodeAt(next + 1);\r\n      return afterNext !== 60 && afterNext !== 61;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  maybeUnwrapTypeCastExpression(node) {\r\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\r\n  }\r\n\r\n});\r\n\r\nconst entities = {\r\n  quot: \"\\u0022\",\r\n  amp: \"&\",\r\n  apos: \"\\u0027\",\r\n  lt: \"<\",\r\n  gt: \">\",\r\n  nbsp: \"\\u00A0\",\r\n  iexcl: \"\\u00A1\",\r\n  cent: \"\\u00A2\",\r\n  pound: \"\\u00A3\",\r\n  curren: \"\\u00A4\",\r\n  yen: \"\\u00A5\",\r\n  brvbar: \"\\u00A6\",\r\n  sect: \"\\u00A7\",\r\n  uml: \"\\u00A8\",\r\n  copy: \"\\u00A9\",\r\n  ordf: \"\\u00AA\",\r\n  laquo: \"\\u00AB\",\r\n  not: \"\\u00AC\",\r\n  shy: \"\\u00AD\",\r\n  reg: \"\\u00AE\",\r\n  macr: \"\\u00AF\",\r\n  deg: \"\\u00B0\",\r\n  plusmn: \"\\u00B1\",\r\n  sup2: \"\\u00B2\",\r\n  sup3: \"\\u00B3\",\r\n  acute: \"\\u00B4\",\r\n  micro: \"\\u00B5\",\r\n  para: \"\\u00B6\",\r\n  middot: \"\\u00B7\",\r\n  cedil: \"\\u00B8\",\r\n  sup1: \"\\u00B9\",\r\n  ordm: \"\\u00BA\",\r\n  raquo: \"\\u00BB\",\r\n  frac14: \"\\u00BC\",\r\n  frac12: \"\\u00BD\",\r\n  frac34: \"\\u00BE\",\r\n  iquest: \"\\u00BF\",\r\n  Agrave: \"\\u00C0\",\r\n  Aacute: \"\\u00C1\",\r\n  Acirc: \"\\u00C2\",\r\n  Atilde: \"\\u00C3\",\r\n  Auml: \"\\u00C4\",\r\n  Aring: \"\\u00C5\",\r\n  AElig: \"\\u00C6\",\r\n  Ccedil: \"\\u00C7\",\r\n  Egrave: \"\\u00C8\",\r\n  Eacute: \"\\u00C9\",\r\n  Ecirc: \"\\u00CA\",\r\n  Euml: \"\\u00CB\",\r\n  Igrave: \"\\u00CC\",\r\n  Iacute: \"\\u00CD\",\r\n  Icirc: \"\\u00CE\",\r\n  Iuml: \"\\u00CF\",\r\n  ETH: \"\\u00D0\",\r\n  Ntilde: \"\\u00D1\",\r\n  Ograve: \"\\u00D2\",\r\n  Oacute: \"\\u00D3\",\r\n  Ocirc: \"\\u00D4\",\r\n  Otilde: \"\\u00D5\",\r\n  Ouml: \"\\u00D6\",\r\n  times: \"\\u00D7\",\r\n  Oslash: \"\\u00D8\",\r\n  Ugrave: \"\\u00D9\",\r\n  Uacute: \"\\u00DA\",\r\n  Ucirc: \"\\u00DB\",\r\n  Uuml: \"\\u00DC\",\r\n  Yacute: \"\\u00DD\",\r\n  THORN: \"\\u00DE\",\r\n  szlig: \"\\u00DF\",\r\n  agrave: \"\\u00E0\",\r\n  aacute: \"\\u00E1\",\r\n  acirc: \"\\u00E2\",\r\n  atilde: \"\\u00E3\",\r\n  auml: \"\\u00E4\",\r\n  aring: \"\\u00E5\",\r\n  aelig: \"\\u00E6\",\r\n  ccedil: \"\\u00E7\",\r\n  egrave: \"\\u00E8\",\r\n  eacute: \"\\u00E9\",\r\n  ecirc: \"\\u00EA\",\r\n  euml: \"\\u00EB\",\r\n  igrave: \"\\u00EC\",\r\n  iacute: \"\\u00ED\",\r\n  icirc: \"\\u00EE\",\r\n  iuml: \"\\u00EF\",\r\n  eth: \"\\u00F0\",\r\n  ntilde: \"\\u00F1\",\r\n  ograve: \"\\u00F2\",\r\n  oacute: \"\\u00F3\",\r\n  ocirc: \"\\u00F4\",\r\n  otilde: \"\\u00F5\",\r\n  ouml: \"\\u00F6\",\r\n  divide: \"\\u00F7\",\r\n  oslash: \"\\u00F8\",\r\n  ugrave: \"\\u00F9\",\r\n  uacute: \"\\u00FA\",\r\n  ucirc: \"\\u00FB\",\r\n  uuml: \"\\u00FC\",\r\n  yacute: \"\\u00FD\",\r\n  thorn: \"\\u00FE\",\r\n  yuml: \"\\u00FF\",\r\n  OElig: \"\\u0152\",\r\n  oelig: \"\\u0153\",\r\n  Scaron: \"\\u0160\",\r\n  scaron: \"\\u0161\",\r\n  Yuml: \"\\u0178\",\r\n  fnof: \"\\u0192\",\r\n  circ: \"\\u02C6\",\r\n  tilde: \"\\u02DC\",\r\n  Alpha: \"\\u0391\",\r\n  Beta: \"\\u0392\",\r\n  Gamma: \"\\u0393\",\r\n  Delta: \"\\u0394\",\r\n  Epsilon: \"\\u0395\",\r\n  Zeta: \"\\u0396\",\r\n  Eta: \"\\u0397\",\r\n  Theta: \"\\u0398\",\r\n  Iota: \"\\u0399\",\r\n  Kappa: \"\\u039A\",\r\n  Lambda: \"\\u039B\",\r\n  Mu: \"\\u039C\",\r\n  Nu: \"\\u039D\",\r\n  Xi: \"\\u039E\",\r\n  Omicron: \"\\u039F\",\r\n  Pi: \"\\u03A0\",\r\n  Rho: \"\\u03A1\",\r\n  Sigma: \"\\u03A3\",\r\n  Tau: \"\\u03A4\",\r\n  Upsilon: \"\\u03A5\",\r\n  Phi: \"\\u03A6\",\r\n  Chi: \"\\u03A7\",\r\n  Psi: \"\\u03A8\",\r\n  Omega: \"\\u03A9\",\r\n  alpha: \"\\u03B1\",\r\n  beta: \"\\u03B2\",\r\n  gamma: \"\\u03B3\",\r\n  delta: \"\\u03B4\",\r\n  epsilon: \"\\u03B5\",\r\n  zeta: \"\\u03B6\",\r\n  eta: \"\\u03B7\",\r\n  theta: \"\\u03B8\",\r\n  iota: \"\\u03B9\",\r\n  kappa: \"\\u03BA\",\r\n  lambda: \"\\u03BB\",\r\n  mu: \"\\u03BC\",\r\n  nu: \"\\u03BD\",\r\n  xi: \"\\u03BE\",\r\n  omicron: \"\\u03BF\",\r\n  pi: \"\\u03C0\",\r\n  rho: \"\\u03C1\",\r\n  sigmaf: \"\\u03C2\",\r\n  sigma: \"\\u03C3\",\r\n  tau: \"\\u03C4\",\r\n  upsilon: \"\\u03C5\",\r\n  phi: \"\\u03C6\",\r\n  chi: \"\\u03C7\",\r\n  psi: \"\\u03C8\",\r\n  omega: \"\\u03C9\",\r\n  thetasym: \"\\u03D1\",\r\n  upsih: \"\\u03D2\",\r\n  piv: \"\\u03D6\",\r\n  ensp: \"\\u2002\",\r\n  emsp: \"\\u2003\",\r\n  thinsp: \"\\u2009\",\r\n  zwnj: \"\\u200C\",\r\n  zwj: \"\\u200D\",\r\n  lrm: \"\\u200E\",\r\n  rlm: \"\\u200F\",\r\n  ndash: \"\\u2013\",\r\n  mdash: \"\\u2014\",\r\n  lsquo: \"\\u2018\",\r\n  rsquo: \"\\u2019\",\r\n  sbquo: \"\\u201A\",\r\n  ldquo: \"\\u201C\",\r\n  rdquo: \"\\u201D\",\r\n  bdquo: \"\\u201E\",\r\n  dagger: \"\\u2020\",\r\n  Dagger: \"\\u2021\",\r\n  bull: \"\\u2022\",\r\n  hellip: \"\\u2026\",\r\n  permil: \"\\u2030\",\r\n  prime: \"\\u2032\",\r\n  Prime: \"\\u2033\",\r\n  lsaquo: \"\\u2039\",\r\n  rsaquo: \"\\u203A\",\r\n  oline: \"\\u203E\",\r\n  frasl: \"\\u2044\",\r\n  euro: \"\\u20AC\",\r\n  image: \"\\u2111\",\r\n  weierp: \"\\u2118\",\r\n  real: \"\\u211C\",\r\n  trade: \"\\u2122\",\r\n  alefsym: \"\\u2135\",\r\n  larr: \"\\u2190\",\r\n  uarr: \"\\u2191\",\r\n  rarr: \"\\u2192\",\r\n  darr: \"\\u2193\",\r\n  harr: \"\\u2194\",\r\n  crarr: \"\\u21B5\",\r\n  lArr: \"\\u21D0\",\r\n  uArr: \"\\u21D1\",\r\n  rArr: \"\\u21D2\",\r\n  dArr: \"\\u21D3\",\r\n  hArr: \"\\u21D4\",\r\n  forall: \"\\u2200\",\r\n  part: \"\\u2202\",\r\n  exist: \"\\u2203\",\r\n  empty: \"\\u2205\",\r\n  nabla: \"\\u2207\",\r\n  isin: \"\\u2208\",\r\n  notin: \"\\u2209\",\r\n  ni: \"\\u220B\",\r\n  prod: \"\\u220F\",\r\n  sum: \"\\u2211\",\r\n  minus: \"\\u2212\",\r\n  lowast: \"\\u2217\",\r\n  radic: \"\\u221A\",\r\n  prop: \"\\u221D\",\r\n  infin: \"\\u221E\",\r\n  ang: \"\\u2220\",\r\n  and: \"\\u2227\",\r\n  or: \"\\u2228\",\r\n  cap: \"\\u2229\",\r\n  cup: \"\\u222A\",\r\n  int: \"\\u222B\",\r\n  there4: \"\\u2234\",\r\n  sim: \"\\u223C\",\r\n  cong: \"\\u2245\",\r\n  asymp: \"\\u2248\",\r\n  ne: \"\\u2260\",\r\n  equiv: \"\\u2261\",\r\n  le: \"\\u2264\",\r\n  ge: \"\\u2265\",\r\n  sub: \"\\u2282\",\r\n  sup: \"\\u2283\",\r\n  nsub: \"\\u2284\",\r\n  sube: \"\\u2286\",\r\n  supe: \"\\u2287\",\r\n  oplus: \"\\u2295\",\r\n  otimes: \"\\u2297\",\r\n  perp: \"\\u22A5\",\r\n  sdot: \"\\u22C5\",\r\n  lceil: \"\\u2308\",\r\n  rceil: \"\\u2309\",\r\n  lfloor: \"\\u230A\",\r\n  rfloor: \"\\u230B\",\r\n  lang: \"\\u2329\",\r\n  rang: \"\\u232A\",\r\n  loz: \"\\u25CA\",\r\n  spades: \"\\u2660\",\r\n  clubs: \"\\u2663\",\r\n  hearts: \"\\u2665\",\r\n  diams: \"\\u2666\"\r\n};\r\n\r\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\r\nconst DECIMAL_NUMBER = /^\\d+$/;\r\nconst JsxErrors = makeErrorTemplates({\r\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\r\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\r\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\r\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\r\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\r\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\r\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\r\n}, ErrorCodes.SyntaxError, \"jsx\");\r\ntypes.j_oTag = new TokContext(\"<tag\");\r\ntypes.j_cTag = new TokContext(\"</tag\");\r\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\r\n\r\nfunction isFragment(object) {\r\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\r\n}\r\n\r\nfunction getQualifiedJSXName(object) {\r\n  if (object.type === \"JSXIdentifier\") {\r\n    return object.name;\r\n  }\r\n\r\n  if (object.type === \"JSXNamespacedName\") {\r\n    return object.namespace.name + \":\" + object.name.name;\r\n  }\r\n\r\n  if (object.type === \"JSXMemberExpression\") {\r\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\r\n  }\r\n\r\n  throw new Error(\"Node had unexpected type: \" + object.type);\r\n}\r\n\r\nvar jsx = (superClass => class extends superClass {\r\n  jsxReadToken() {\r\n    let out = \"\";\r\n    let chunkStart = this.state.pos;\r\n\r\n    for (;;) {\r\n      if (this.state.pos >= this.length) {\r\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\r\n      }\r\n\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n\r\n      switch (ch) {\r\n        case 60:\r\n        case 123:\r\n          if (this.state.pos === this.state.start) {\r\n            if (ch === 60 && this.state.canStartJSXElement) {\r\n              ++this.state.pos;\r\n              return this.finishToken(132);\r\n            }\r\n\r\n            return super.getTokenFromCode(ch);\r\n          }\r\n\r\n          out += this.input.slice(chunkStart, this.state.pos);\r\n          return this.finishToken(131, out);\r\n\r\n        case 38:\r\n          out += this.input.slice(chunkStart, this.state.pos);\r\n          out += this.jsxReadEntity();\r\n          chunkStart = this.state.pos;\r\n          break;\r\n\r\n        case 62:\r\n        case 125:\r\n\r\n        default:\r\n          if (isNewLine(ch)) {\r\n            out += this.input.slice(chunkStart, this.state.pos);\r\n            out += this.jsxReadNewLine(true);\r\n            chunkStart = this.state.pos;\r\n          } else {\r\n            ++this.state.pos;\r\n          }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  jsxReadNewLine(normalizeCRLF) {\r\n    const ch = this.input.charCodeAt(this.state.pos);\r\n    let out;\r\n    ++this.state.pos;\r\n\r\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\r\n      ++this.state.pos;\r\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\r\n    } else {\r\n      out = String.fromCharCode(ch);\r\n    }\r\n\r\n    ++this.state.curLine;\r\n    this.state.lineStart = this.state.pos;\r\n    return out;\r\n  }\r\n\r\n  jsxReadString(quote) {\r\n    let out = \"\";\r\n    let chunkStart = ++this.state.pos;\r\n\r\n    for (;;) {\r\n      if (this.state.pos >= this.length) {\r\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\r\n      }\r\n\r\n      const ch = this.input.charCodeAt(this.state.pos);\r\n      if (ch === quote) break;\r\n\r\n      if (ch === 38) {\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        out += this.jsxReadEntity();\r\n        chunkStart = this.state.pos;\r\n      } else if (isNewLine(ch)) {\r\n        out += this.input.slice(chunkStart, this.state.pos);\r\n        out += this.jsxReadNewLine(false);\r\n        chunkStart = this.state.pos;\r\n      } else {\r\n        ++this.state.pos;\r\n      }\r\n    }\r\n\r\n    out += this.input.slice(chunkStart, this.state.pos++);\r\n    return this.finishToken(123, out);\r\n  }\r\n\r\n  jsxReadEntity() {\r\n    let str = \"\";\r\n    let count = 0;\r\n    let entity;\r\n    let ch = this.input[this.state.pos];\r\n    const startPos = ++this.state.pos;\r\n\r\n    while (this.state.pos < this.length && count++ < 10) {\r\n      ch = this.input[this.state.pos++];\r\n\r\n      if (ch === \";\") {\r\n        if (str[0] === \"#\") {\r\n          if (str[1] === \"x\") {\r\n            str = str.substr(2);\r\n\r\n            if (HEX_NUMBER.test(str)) {\r\n              entity = String.fromCodePoint(parseInt(str, 16));\r\n            }\r\n          } else {\r\n            str = str.substr(1);\r\n\r\n            if (DECIMAL_NUMBER.test(str)) {\r\n              entity = String.fromCodePoint(parseInt(str, 10));\r\n            }\r\n          }\r\n        } else {\r\n          entity = entities[str];\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      str += ch;\r\n    }\r\n\r\n    if (!entity) {\r\n      this.state.pos = startPos;\r\n      return \"&\";\r\n    }\r\n\r\n    return entity;\r\n  }\r\n\r\n  jsxReadWord() {\r\n    let ch;\r\n    const start = this.state.pos;\r\n\r\n    do {\r\n      ch = this.input.charCodeAt(++this.state.pos);\r\n    } while (isIdentifierChar(ch) || ch === 45);\r\n\r\n    return this.finishToken(130, this.input.slice(start, this.state.pos));\r\n  }\r\n\r\n  jsxParseIdentifier() {\r\n    const node = this.startNode();\r\n\r\n    if (this.match(130)) {\r\n      node.name = this.state.value;\r\n    } else if (tokenIsKeyword(this.state.type)) {\r\n      node.name = tokenLabelName(this.state.type);\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n\r\n    this.next();\r\n    return this.finishNode(node, \"JSXIdentifier\");\r\n  }\r\n\r\n  jsxParseNamespacedName() {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const name = this.jsxParseIdentifier();\r\n    if (!this.eat(14)) return name;\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    node.namespace = name;\r\n    node.name = this.jsxParseIdentifier();\r\n    return this.finishNode(node, \"JSXNamespacedName\");\r\n  }\r\n\r\n  jsxParseElementName() {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    let node = this.jsxParseNamespacedName();\r\n\r\n    if (node.type === \"JSXNamespacedName\") {\r\n      return node;\r\n    }\r\n\r\n    while (this.eat(16)) {\r\n      const newNode = this.startNodeAt(startPos, startLoc);\r\n      newNode.object = node;\r\n      newNode.property = this.jsxParseIdentifier();\r\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  jsxParseAttributeValue() {\r\n    let node;\r\n\r\n    switch (this.state.type) {\r\n      case 5:\r\n        node = this.startNode();\r\n        this.next();\r\n        node = this.jsxParseExpressionContainer(node);\r\n\r\n        if (node.expression.type === \"JSXEmptyExpression\") {\r\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\r\n        }\r\n\r\n        return node;\r\n\r\n      case 132:\r\n      case 123:\r\n        return this.parseExprAtom();\r\n\r\n      default:\r\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\r\n    }\r\n  }\r\n\r\n  jsxParseEmptyExpression() {\r\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\r\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\r\n  }\r\n\r\n  jsxParseSpreadChild(node) {\r\n    this.next();\r\n    node.expression = this.parseExpression();\r\n    this.expect(8);\r\n    return this.finishNode(node, \"JSXSpreadChild\");\r\n  }\r\n\r\n  jsxParseExpressionContainer(node) {\r\n    if (this.match(8)) {\r\n      node.expression = this.jsxParseEmptyExpression();\r\n    } else {\r\n      const expression = this.parseExpression();\r\n      node.expression = expression;\r\n    }\r\n\r\n    this.expect(8);\r\n    return this.finishNode(node, \"JSXExpressionContainer\");\r\n  }\r\n\r\n  jsxParseAttribute() {\r\n    const node = this.startNode();\r\n\r\n    if (this.eat(5)) {\r\n      this.expect(21);\r\n      node.argument = this.parseMaybeAssignAllowIn();\r\n      this.expect(8);\r\n      return this.finishNode(node, \"JSXSpreadAttribute\");\r\n    }\r\n\r\n    node.name = this.jsxParseNamespacedName();\r\n    node.value = this.eat(27) ? this.jsxParseAttributeValue() : null;\r\n    return this.finishNode(node, \"JSXAttribute\");\r\n  }\r\n\r\n  jsxParseOpeningElementAt(startPos, startLoc) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n\r\n    if (this.match(133)) {\r\n      this.expect(133);\r\n      return this.finishNode(node, \"JSXOpeningFragment\");\r\n    }\r\n\r\n    node.name = this.jsxParseElementName();\r\n    return this.jsxParseOpeningElementAfterName(node);\r\n  }\r\n\r\n  jsxParseOpeningElementAfterName(node) {\r\n    const attributes = [];\r\n\r\n    while (!this.match(50) && !this.match(133)) {\r\n      attributes.push(this.jsxParseAttribute());\r\n    }\r\n\r\n    node.attributes = attributes;\r\n    node.selfClosing = this.eat(50);\r\n    this.expect(133);\r\n    return this.finishNode(node, \"JSXOpeningElement\");\r\n  }\r\n\r\n  jsxParseClosingElementAt(startPos, startLoc) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n\r\n    if (this.match(133)) {\r\n      this.expect(133);\r\n      return this.finishNode(node, \"JSXClosingFragment\");\r\n    }\r\n\r\n    node.name = this.jsxParseElementName();\r\n    this.expect(133);\r\n    return this.finishNode(node, \"JSXClosingElement\");\r\n  }\r\n\r\n  jsxParseElementAt(startPos, startLoc) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    const children = [];\r\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\r\n    let closingElement = null;\r\n\r\n    if (!openingElement.selfClosing) {\r\n      contents: for (;;) {\r\n        switch (this.state.type) {\r\n          case 132:\r\n            startPos = this.state.start;\r\n            startLoc = this.state.startLoc;\r\n            this.next();\r\n\r\n            if (this.eat(50)) {\r\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\r\n              break contents;\r\n            }\r\n\r\n            children.push(this.jsxParseElementAt(startPos, startLoc));\r\n            break;\r\n\r\n          case 131:\r\n            children.push(this.parseExprAtom());\r\n            break;\r\n\r\n          case 5:\r\n            {\r\n              const node = this.startNode();\r\n              this.next();\r\n\r\n              if (this.match(21)) {\r\n                children.push(this.jsxParseSpreadChild(node));\r\n              } else {\r\n                children.push(this.jsxParseExpressionContainer(node));\r\n              }\r\n\r\n              break;\r\n            }\r\n\r\n          default:\r\n            throw this.unexpected();\r\n        }\r\n      }\r\n\r\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\r\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\r\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\r\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\r\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\r\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\r\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (isFragment(openingElement)) {\r\n      node.openingFragment = openingElement;\r\n      node.closingFragment = closingElement;\r\n    } else {\r\n      node.openingElement = openingElement;\r\n      node.closingElement = closingElement;\r\n    }\r\n\r\n    node.children = children;\r\n\r\n    if (this.match(43)) {\r\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\r\n    }\r\n\r\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\r\n  }\r\n\r\n  jsxParseElement() {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    this.next();\r\n    return this.jsxParseElementAt(startPos, startLoc);\r\n  }\r\n\r\n  parseExprAtom(refExpressionErrors) {\r\n    if (this.match(131)) {\r\n      return this.parseLiteral(this.state.value, \"JSXText\");\r\n    } else if (this.match(132)) {\r\n      return this.jsxParseElement();\r\n    } else if (this.match(43) && this.input.charCodeAt(this.state.pos) !== 33) {\r\n      this.replaceToken(132);\r\n      return this.jsxParseElement();\r\n    } else {\r\n      return super.parseExprAtom(refExpressionErrors);\r\n    }\r\n  }\r\n\r\n  getTokenFromCode(code) {\r\n    const context = this.curContext();\r\n\r\n    if (context === types.j_expr) {\r\n      return this.jsxReadToken();\r\n    }\r\n\r\n    if (context === types.j_oTag || context === types.j_cTag) {\r\n      if (isIdentifierStart(code)) {\r\n        return this.jsxReadWord();\r\n      }\r\n\r\n      if (code === 62) {\r\n        ++this.state.pos;\r\n        return this.finishToken(133);\r\n      }\r\n\r\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\r\n        return this.jsxReadString(code);\r\n      }\r\n    }\r\n\r\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\r\n      ++this.state.pos;\r\n      return this.finishToken(132);\r\n    }\r\n\r\n    return super.getTokenFromCode(code);\r\n  }\r\n\r\n  updateContext(prevType) {\r\n    super.updateContext(prevType);\r\n    const {\r\n      context,\r\n      type\r\n    } = this.state;\r\n\r\n    if (type === 50 && prevType === 132) {\r\n      context.splice(-2, 2, types.j_cTag);\r\n      this.state.canStartJSXElement = false;\r\n    } else if (type === 132) {\r\n      context.push(types.j_expr, types.j_oTag);\r\n    } else if (type === 133) {\r\n      const out = context.pop();\r\n\r\n      if (out === types.j_oTag && prevType === 50 || out === types.j_cTag) {\r\n        context.pop();\r\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\r\n      } else {\r\n        this.state.canStartJSXElement = true;\r\n      }\r\n    } else {\r\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\r\n    }\r\n  }\r\n\r\n});\r\n\r\nclass TypeScriptScope extends Scope {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.types = new Set();\r\n    this.enums = new Set();\r\n    this.constEnums = new Set();\r\n    this.classes = new Set();\r\n    this.exportOnlyBindings = new Set();\r\n  }\r\n\r\n}\r\n\r\nclass TypeScriptScopeHandler extends ScopeHandler {\r\n  createScope(flags) {\r\n    return new TypeScriptScope(flags);\r\n  }\r\n\r\n  declareName(name, bindingType, pos) {\r\n    const scope = this.currentScope();\r\n\r\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\r\n      this.maybeExportDefined(scope, name);\r\n      scope.exportOnlyBindings.add(name);\r\n      return;\r\n    }\r\n\r\n    super.declareName(...arguments);\r\n\r\n    if (bindingType & BIND_KIND_TYPE) {\r\n      if (!(bindingType & BIND_KIND_VALUE)) {\r\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\r\n        this.maybeExportDefined(scope, name);\r\n      }\r\n\r\n      scope.types.add(name);\r\n    }\r\n\r\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\r\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\r\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\r\n  }\r\n\r\n  isRedeclaredInScope(scope, name, bindingType) {\r\n    if (scope.enums.has(name)) {\r\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\r\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\r\n        const wasConst = scope.constEnums.has(name);\r\n        return isConst !== wasConst;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\r\n      if (scope.lexical.has(name)) {\r\n        return !!(bindingType & BIND_KIND_VALUE);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\r\n      return true;\r\n    }\r\n\r\n    return super.isRedeclaredInScope(...arguments);\r\n  }\r\n\r\n  checkLocalExport(id) {\r\n    const topLevelScope = this.scopeStack[0];\r\n    const {\r\n      name\r\n    } = id;\r\n\r\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\r\n      super.checkLocalExport(id);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction nonNull(x) {\r\n  if (x == null) {\r\n    throw new Error(`Unexpected ${x} value.`);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\nfunction assert(x) {\r\n  if (!x) {\r\n    throw new Error(\"Assert fail\");\r\n  }\r\n}\r\n\r\nconst TSErrors = makeErrorTemplates({\r\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\r\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\r\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\r\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\r\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\r\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\r\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\r\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\r\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\r\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\r\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\r\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\r\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\r\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\r\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\r\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\r\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\r\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\r\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\r\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\r\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\r\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\r\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\r\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\r\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\r\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\r\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\r\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\r\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\r\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\r\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\r\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\r\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\r\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\r\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\r\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\r\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\r\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\r\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\r\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\r\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\r\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\r\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\r\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\r\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\r\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\r\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\r\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\r\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\r\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\r\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\r\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\r\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\r\n}, ErrorCodes.SyntaxError, \"typescript\");\r\n\r\nfunction keywordTypeFromName(value) {\r\n  switch (value) {\r\n    case \"any\":\r\n      return \"TSAnyKeyword\";\r\n\r\n    case \"boolean\":\r\n      return \"TSBooleanKeyword\";\r\n\r\n    case \"bigint\":\r\n      return \"TSBigIntKeyword\";\r\n\r\n    case \"never\":\r\n      return \"TSNeverKeyword\";\r\n\r\n    case \"number\":\r\n      return \"TSNumberKeyword\";\r\n\r\n    case \"object\":\r\n      return \"TSObjectKeyword\";\r\n\r\n    case \"string\":\r\n      return \"TSStringKeyword\";\r\n\r\n    case \"symbol\":\r\n      return \"TSSymbolKeyword\";\r\n\r\n    case \"undefined\":\r\n      return \"TSUndefinedKeyword\";\r\n\r\n    case \"unknown\":\r\n      return \"TSUnknownKeyword\";\r\n\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\nfunction tsIsAccessModifier(modifier) {\r\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\r\n}\r\n\r\nvar typescript = (superClass => class extends superClass {\r\n  getScopeHandler() {\r\n    return TypeScriptScopeHandler;\r\n  }\r\n\r\n  tsIsIdentifier() {\r\n    return tokenIsIdentifier(this.state.type);\r\n  }\r\n\r\n  tsTokenCanFollowModifier() {\r\n    return (this.match(0) || this.match(5) || this.match(49) || this.match(21) || this.match(128) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\r\n  }\r\n\r\n  tsNextTokenCanFollowModifier() {\r\n    this.next();\r\n    return this.tsTokenCanFollowModifier();\r\n  }\r\n\r\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\r\n    if (!tokenIsIdentifier(this.state.type)) {\r\n      return undefined;\r\n    }\r\n\r\n    const modifier = this.state.value;\r\n\r\n    if (allowedModifiers.indexOf(modifier) !== -1) {\r\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\r\n        return undefined;\r\n      }\r\n\r\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\r\n        return modifier;\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\r\n    const enforceOrder = (pos, modifier, before, after) => {\r\n      if (modifier === before && modified[after]) {\r\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\r\n      }\r\n    };\r\n\r\n    const incompatible = (pos, modifier, mod1, mod2) => {\r\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\r\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\r\n      }\r\n    };\r\n\r\n    for (;;) {\r\n      const startPos = this.state.start;\r\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\r\n      if (!modifier) break;\r\n\r\n      if (tsIsAccessModifier(modifier)) {\r\n        if (modified.accessibility) {\r\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\r\n        } else {\r\n          enforceOrder(startPos, modifier, modifier, \"override\");\r\n          enforceOrder(startPos, modifier, modifier, \"static\");\r\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\r\n          modified.accessibility = modifier;\r\n        }\r\n      } else {\r\n        if (Object.hasOwnProperty.call(modified, modifier)) {\r\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\r\n        } else {\r\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\r\n          enforceOrder(startPos, modifier, \"static\", \"override\");\r\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\r\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\r\n          incompatible(startPos, modifier, \"declare\", \"override\");\r\n          incompatible(startPos, modifier, \"static\", \"abstract\");\r\n        }\r\n\r\n        modified[modifier] = true;\r\n      }\r\n\r\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\r\n        this.raise(startPos, errorTemplate, modifier);\r\n      }\r\n    }\r\n  }\r\n\r\n  tsIsListTerminator(kind) {\r\n    switch (kind) {\r\n      case \"EnumMembers\":\r\n      case \"TypeMembers\":\r\n        return this.match(8);\r\n\r\n      case \"HeritageClauseElement\":\r\n        return this.match(5);\r\n\r\n      case \"TupleElementTypes\":\r\n        return this.match(3);\r\n\r\n      case \"TypeParametersOrArguments\":\r\n        return this.match(44);\r\n    }\r\n\r\n    throw new Error(\"Unreachable\");\r\n  }\r\n\r\n  tsParseList(kind, parseElement) {\r\n    const result = [];\r\n\r\n    while (!this.tsIsListTerminator(kind)) {\r\n      result.push(parseElement());\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\r\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\r\n  }\r\n\r\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\r\n    const result = [];\r\n    let trailingCommaPos = -1;\r\n\r\n    for (;;) {\r\n      if (this.tsIsListTerminator(kind)) {\r\n        break;\r\n      }\r\n\r\n      trailingCommaPos = -1;\r\n      const element = parseElement();\r\n\r\n      if (element == null) {\r\n        return undefined;\r\n      }\r\n\r\n      result.push(element);\r\n\r\n      if (this.eat(12)) {\r\n        trailingCommaPos = this.state.lastTokStart;\r\n        continue;\r\n      }\r\n\r\n      if (this.tsIsListTerminator(kind)) {\r\n        break;\r\n      }\r\n\r\n      if (expectSuccess) {\r\n        this.expect(12);\r\n      }\r\n\r\n      return undefined;\r\n    }\r\n\r\n    if (refTrailingCommaPos) {\r\n      refTrailingCommaPos.value = trailingCommaPos;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\r\n    if (!skipFirstToken) {\r\n      if (bracket) {\r\n        this.expect(0);\r\n      } else {\r\n        this.expect(43);\r\n      }\r\n    }\r\n\r\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\r\n\r\n    if (bracket) {\r\n      this.expect(3);\r\n    } else {\r\n      this.expect(44);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  tsParseImportType() {\r\n    const node = this.startNode();\r\n    this.expect(77);\r\n    this.expect(10);\r\n\r\n    if (!this.match(123)) {\r\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\r\n    }\r\n\r\n    node.argument = this.parseExprAtom();\r\n    this.expect(11);\r\n\r\n    if (this.eat(16)) {\r\n      node.qualifier = this.tsParseEntityName(true);\r\n    }\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.tsParseTypeArguments();\r\n    }\r\n\r\n    return this.finishNode(node, \"TSImportType\");\r\n  }\r\n\r\n  tsParseEntityName(allowReservedWords) {\r\n    let entity = this.parseIdentifier();\r\n\r\n    while (this.eat(16)) {\r\n      const node = this.startNodeAtNode(entity);\r\n      node.left = entity;\r\n      node.right = this.parseIdentifier(allowReservedWords);\r\n      entity = this.finishNode(node, \"TSQualifiedName\");\r\n    }\r\n\r\n    return entity;\r\n  }\r\n\r\n  tsParseTypeReference() {\r\n    const node = this.startNode();\r\n    node.typeName = this.tsParseEntityName(false);\r\n\r\n    if (!this.hasPrecedingLineBreak() && this.match(43)) {\r\n      node.typeParameters = this.tsParseTypeArguments();\r\n    }\r\n\r\n    return this.finishNode(node, \"TSTypeReference\");\r\n  }\r\n\r\n  tsParseThisTypePredicate(lhs) {\r\n    this.next();\r\n    const node = this.startNodeAtNode(lhs);\r\n    node.parameterName = lhs;\r\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\r\n    node.asserts = false;\r\n    return this.finishNode(node, \"TSTypePredicate\");\r\n  }\r\n\r\n  tsParseThisTypeNode() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    return this.finishNode(node, \"TSThisType\");\r\n  }\r\n\r\n  tsParseTypeQuery() {\r\n    const node = this.startNode();\r\n    this.expect(81);\r\n\r\n    if (this.match(77)) {\r\n      node.exprName = this.tsParseImportType();\r\n    } else {\r\n      node.exprName = this.tsParseEntityName(true);\r\n    }\r\n\r\n    return this.finishNode(node, \"TSTypeQuery\");\r\n  }\r\n\r\n  tsParseTypeParameter() {\r\n    const node = this.startNode();\r\n    node.name = this.tsParseTypeParameterName();\r\n    node.constraint = this.tsEatThenParseType(75);\r\n    node.default = this.tsEatThenParseType(27);\r\n    return this.finishNode(node, \"TSTypeParameter\");\r\n  }\r\n\r\n  tsTryParseTypeParameters() {\r\n    if (this.match(43)) {\r\n      return this.tsParseTypeParameters();\r\n    }\r\n  }\r\n\r\n  tsParseTypeParameters() {\r\n    const node = this.startNode();\r\n\r\n    if (this.match(43) || this.match(132)) {\r\n      this.next();\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n\r\n    const refTrailingCommaPos = {\r\n      value: -1\r\n    };\r\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true, refTrailingCommaPos);\r\n\r\n    if (node.params.length === 0) {\r\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\r\n    }\r\n\r\n    if (refTrailingCommaPos.value !== -1) {\r\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\r\n    }\r\n\r\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\r\n  }\r\n\r\n  tsTryNextParseConstantContext() {\r\n    if (this.lookahead().type === 69) {\r\n      this.next();\r\n      return this.tsParseTypeReference();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  tsFillSignature(returnToken, signature) {\r\n    const returnTokenRequired = returnToken === 19;\r\n    signature.typeParameters = this.tsTryParseTypeParameters();\r\n    this.expect(10);\r\n    signature.parameters = this.tsParseBindingListForSignature();\r\n\r\n    if (returnTokenRequired) {\r\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\r\n    } else if (this.match(returnToken)) {\r\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\r\n    }\r\n  }\r\n\r\n  tsParseBindingListForSignature() {\r\n    return this.parseBindingList(11, 41).map(pattern => {\r\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\r\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\r\n      }\r\n\r\n      return pattern;\r\n    });\r\n  }\r\n\r\n  tsParseTypeMemberSemicolon() {\r\n    if (!this.eat(12) && !this.isLineTerminator()) {\r\n      this.expect(13);\r\n    }\r\n  }\r\n\r\n  tsParseSignatureMember(kind, node) {\r\n    this.tsFillSignature(14, node);\r\n    this.tsParseTypeMemberSemicolon();\r\n    return this.finishNode(node, kind);\r\n  }\r\n\r\n  tsIsUnambiguouslyIndexSignature() {\r\n    this.next();\r\n\r\n    if (tokenIsIdentifier(this.state.type)) {\r\n      this.next();\r\n      return this.match(14);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  tsTryParseIndexSignature(node) {\r\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\r\n      return undefined;\r\n    }\r\n\r\n    this.expect(0);\r\n    const id = this.parseIdentifier();\r\n    id.typeAnnotation = this.tsParseTypeAnnotation();\r\n    this.resetEndLocation(id);\r\n    this.expect(3);\r\n    node.parameters = [id];\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) node.typeAnnotation = type;\r\n    this.tsParseTypeMemberSemicolon();\r\n    return this.finishNode(node, \"TSIndexSignature\");\r\n  }\r\n\r\n  tsParsePropertyOrMethodSignature(node, readonly) {\r\n    if (this.eat(17)) node.optional = true;\r\n    const nodeAny = node;\r\n\r\n    if (this.match(10) || this.match(43)) {\r\n      if (readonly) {\r\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\r\n      }\r\n\r\n      const method = nodeAny;\r\n\r\n      if (method.kind && this.match(43)) {\r\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\r\n      }\r\n\r\n      this.tsFillSignature(14, method);\r\n      this.tsParseTypeMemberSemicolon();\r\n\r\n      if (method.kind === \"get\") {\r\n        if (method.parameters.length > 0) {\r\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\r\n\r\n          if (this.isThisParam(method.parameters[0])) {\r\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\r\n          }\r\n        }\r\n      } else if (method.kind === \"set\") {\r\n        if (method.parameters.length !== 1) {\r\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\r\n        } else {\r\n          const firstParameter = method.parameters[0];\r\n\r\n          if (this.isThisParam(firstParameter)) {\r\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\r\n          }\r\n\r\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\r\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\r\n          }\r\n\r\n          if (firstParameter.type === \"RestElement\") {\r\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\r\n          }\r\n        }\r\n\r\n        if (method.typeAnnotation) {\r\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\r\n        }\r\n      } else {\r\n        method.kind = \"method\";\r\n      }\r\n\r\n      return this.finishNode(method, \"TSMethodSignature\");\r\n    } else {\r\n      const property = nodeAny;\r\n      if (readonly) property.readonly = true;\r\n      const type = this.tsTryParseTypeAnnotation();\r\n      if (type) property.typeAnnotation = type;\r\n      this.tsParseTypeMemberSemicolon();\r\n      return this.finishNode(property, \"TSPropertySignature\");\r\n    }\r\n  }\r\n\r\n  tsParseTypeMember() {\r\n    const node = this.startNode();\r\n\r\n    if (this.match(10) || this.match(43)) {\r\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\r\n    }\r\n\r\n    if (this.match(71)) {\r\n      const id = this.startNode();\r\n      this.next();\r\n\r\n      if (this.match(10) || this.match(43)) {\r\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\r\n      } else {\r\n        node.key = this.createIdentifier(id, \"new\");\r\n        return this.tsParsePropertyOrMethodSignature(node, false);\r\n      }\r\n    }\r\n\r\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\r\n    const idx = this.tsTryParseIndexSignature(node);\r\n\r\n    if (idx) {\r\n      return idx;\r\n    }\r\n\r\n    this.parsePropertyName(node);\r\n\r\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\r\n      node.kind = node.key.name;\r\n      this.parsePropertyName(node);\r\n    }\r\n\r\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\r\n  }\r\n\r\n  tsParseTypeLiteral() {\r\n    const node = this.startNode();\r\n    node.members = this.tsParseObjectTypeMembers();\r\n    return this.finishNode(node, \"TSTypeLiteral\");\r\n  }\r\n\r\n  tsParseObjectTypeMembers() {\r\n    this.expect(5);\r\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\r\n    this.expect(8);\r\n    return members;\r\n  }\r\n\r\n  tsIsStartOfMappedType() {\r\n    this.next();\r\n\r\n    if (this.eat(47)) {\r\n      return this.isContextual(112);\r\n    }\r\n\r\n    if (this.isContextual(112)) {\r\n      this.next();\r\n    }\r\n\r\n    if (!this.match(0)) {\r\n      return false;\r\n    }\r\n\r\n    this.next();\r\n\r\n    if (!this.tsIsIdentifier()) {\r\n      return false;\r\n    }\r\n\r\n    this.next();\r\n    return this.match(52);\r\n  }\r\n\r\n  tsParseMappedTypeParameter() {\r\n    const node = this.startNode();\r\n    node.name = this.tsParseTypeParameterName();\r\n    node.constraint = this.tsExpectThenParseType(52);\r\n    return this.finishNode(node, \"TSTypeParameter\");\r\n  }\r\n\r\n  tsParseMappedType() {\r\n    const node = this.startNode();\r\n    this.expect(5);\r\n\r\n    if (this.match(47)) {\r\n      node.readonly = this.state.value;\r\n      this.next();\r\n      this.expectContextual(112);\r\n    } else if (this.eatContextual(112)) {\r\n      node.readonly = true;\r\n    }\r\n\r\n    this.expect(0);\r\n    node.typeParameter = this.tsParseMappedTypeParameter();\r\n    node.nameType = this.eatContextual(87) ? this.tsParseType() : null;\r\n    this.expect(3);\r\n\r\n    if (this.match(47)) {\r\n      node.optional = this.state.value;\r\n      this.next();\r\n      this.expect(17);\r\n    } else if (this.eat(17)) {\r\n      node.optional = true;\r\n    }\r\n\r\n    node.typeAnnotation = this.tsTryParseType();\r\n    this.semicolon();\r\n    this.expect(8);\r\n    return this.finishNode(node, \"TSMappedType\");\r\n  }\r\n\r\n  tsParseTupleType() {\r\n    const node = this.startNode();\r\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\r\n    let seenOptionalElement = false;\r\n    let labeledElements = null;\r\n    node.elementTypes.forEach(elementNode => {\r\n      var _labeledElements;\r\n\r\n      let {\r\n        type\r\n      } = elementNode;\r\n\r\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\r\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\r\n      }\r\n\r\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\r\n\r\n      if (type === \"TSRestType\") {\r\n        elementNode = elementNode.typeAnnotation;\r\n        type = elementNode.type;\r\n      }\r\n\r\n      const isLabeled = type === \"TSNamedTupleMember\";\r\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\r\n\r\n      if (labeledElements !== isLabeled) {\r\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\r\n      }\r\n    });\r\n    return this.finishNode(node, \"TSTupleType\");\r\n  }\r\n\r\n  tsParseTupleElementType() {\r\n    const {\r\n      start: startPos,\r\n      startLoc\r\n    } = this.state;\r\n    const rest = this.eat(21);\r\n    let type = this.tsParseType();\r\n    const optional = this.eat(17);\r\n    const labeled = this.eat(14);\r\n\r\n    if (labeled) {\r\n      const labeledNode = this.startNodeAtNode(type);\r\n      labeledNode.optional = optional;\r\n\r\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\r\n        labeledNode.label = type.typeName;\r\n      } else {\r\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\r\n        labeledNode.label = type;\r\n      }\r\n\r\n      labeledNode.elementType = this.tsParseType();\r\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\r\n    } else if (optional) {\r\n      const optionalTypeNode = this.startNodeAtNode(type);\r\n      optionalTypeNode.typeAnnotation = type;\r\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\r\n    }\r\n\r\n    if (rest) {\r\n      const restNode = this.startNodeAt(startPos, startLoc);\r\n      restNode.typeAnnotation = type;\r\n      type = this.finishNode(restNode, \"TSRestType\");\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  tsParseParenthesizedType() {\r\n    const node = this.startNode();\r\n    this.expect(10);\r\n    node.typeAnnotation = this.tsParseType();\r\n    this.expect(11);\r\n    return this.finishNode(node, \"TSParenthesizedType\");\r\n  }\r\n\r\n  tsParseFunctionOrConstructorType(type, abstract) {\r\n    const node = this.startNode();\r\n\r\n    if (type === \"TSConstructorType\") {\r\n      node.abstract = !!abstract;\r\n      if (abstract) this.next();\r\n      this.next();\r\n    }\r\n\r\n    this.tsFillSignature(19, node);\r\n    return this.finishNode(node, type);\r\n  }\r\n\r\n  tsParseLiteralTypeNode() {\r\n    const node = this.startNode();\r\n\r\n    node.literal = (() => {\r\n      switch (this.state.type) {\r\n        case 124:\r\n        case 125:\r\n        case 123:\r\n        case 79:\r\n        case 80:\r\n          return this.parseExprAtom();\r\n\r\n        default:\r\n          throw this.unexpected();\r\n      }\r\n    })();\r\n\r\n    return this.finishNode(node, \"TSLiteralType\");\r\n  }\r\n\r\n  tsParseTemplateLiteralType() {\r\n    const node = this.startNode();\r\n    node.literal = this.parseTemplate(false);\r\n    return this.finishNode(node, \"TSLiteralType\");\r\n  }\r\n\r\n  parseTemplateSubstitution() {\r\n    if (this.state.inType) return this.tsParseType();\r\n    return super.parseTemplateSubstitution();\r\n  }\r\n\r\n  tsParseThisTypeOrThisTypePredicate() {\r\n    const thisKeyword = this.tsParseThisTypeNode();\r\n\r\n    if (this.isContextual(107) && !this.hasPrecedingLineBreak()) {\r\n      return this.tsParseThisTypePredicate(thisKeyword);\r\n    } else {\r\n      return thisKeyword;\r\n    }\r\n  }\r\n\r\n  tsParseNonArrayType() {\r\n    switch (this.state.type) {\r\n      case 123:\r\n      case 124:\r\n      case 125:\r\n      case 79:\r\n      case 80:\r\n        return this.tsParseLiteralTypeNode();\r\n\r\n      case 47:\r\n        if (this.state.value === \"-\") {\r\n          const node = this.startNode();\r\n          const nextToken = this.lookahead();\r\n\r\n          if (nextToken.type !== 124 && nextToken.type !== 125) {\r\n            throw this.unexpected();\r\n          }\r\n\r\n          node.literal = this.parseMaybeUnary();\r\n          return this.finishNode(node, \"TSLiteralType\");\r\n        }\r\n\r\n        break;\r\n\r\n      case 72:\r\n        return this.tsParseThisTypeOrThisTypePredicate();\r\n\r\n      case 81:\r\n        return this.tsParseTypeQuery();\r\n\r\n      case 77:\r\n        return this.tsParseImportType();\r\n\r\n      case 5:\r\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\r\n\r\n      case 0:\r\n        return this.tsParseTupleType();\r\n\r\n      case 10:\r\n        return this.tsParseParenthesizedType();\r\n\r\n      case 22:\r\n        return this.tsParseTemplateLiteralType();\r\n\r\n      default:\r\n        {\r\n          const {\r\n            type\r\n          } = this.state;\r\n\r\n          if (tokenIsIdentifier(type) || type === 82 || type === 78) {\r\n            const nodeType = type === 82 ? \"TSVoidKeyword\" : type === 78 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\r\n\r\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\r\n              const node = this.startNode();\r\n              this.next();\r\n              return this.finishNode(node, nodeType);\r\n            }\r\n\r\n            return this.tsParseTypeReference();\r\n          }\r\n        }\r\n    }\r\n\r\n    throw this.unexpected();\r\n  }\r\n\r\n  tsParseArrayTypeOrHigher() {\r\n    let type = this.tsParseNonArrayType();\r\n\r\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\r\n      if (this.match(3)) {\r\n        const node = this.startNodeAtNode(type);\r\n        node.elementType = type;\r\n        this.expect(3);\r\n        type = this.finishNode(node, \"TSArrayType\");\r\n      } else {\r\n        const node = this.startNodeAtNode(type);\r\n        node.objectType = type;\r\n        node.indexType = this.tsParseType();\r\n        this.expect(3);\r\n        type = this.finishNode(node, \"TSIndexedAccessType\");\r\n      }\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  tsParseTypeOperator() {\r\n    const node = this.startNode();\r\n    const operator = this.state.value;\r\n    this.next();\r\n    node.operator = operator;\r\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\r\n\r\n    if (operator === \"readonly\") {\r\n      this.tsCheckTypeAnnotationForReadOnly(node);\r\n    }\r\n\r\n    return this.finishNode(node, \"TSTypeOperator\");\r\n  }\r\n\r\n  tsCheckTypeAnnotationForReadOnly(node) {\r\n    switch (node.typeAnnotation.type) {\r\n      case \"TSTupleType\":\r\n      case \"TSArrayType\":\r\n        return;\r\n\r\n      default:\r\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\r\n    }\r\n  }\r\n\r\n  tsParseInferType() {\r\n    const node = this.startNode();\r\n    this.expectContextual(106);\r\n    const typeParameter = this.startNode();\r\n    typeParameter.name = this.tsParseTypeParameterName();\r\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\r\n    return this.finishNode(node, \"TSInferType\");\r\n  }\r\n\r\n  tsParseTypeOperatorOrHigher() {\r\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\r\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(106) ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\r\n  }\r\n\r\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\r\n    const node = this.startNode();\r\n    const hasLeadingOperator = this.eat(operator);\r\n    const types = [];\r\n\r\n    do {\r\n      types.push(parseConstituentType());\r\n    } while (this.eat(operator));\r\n\r\n    if (types.length === 1 && !hasLeadingOperator) {\r\n      return types[0];\r\n    }\r\n\r\n    node.types = types;\r\n    return this.finishNode(node, kind);\r\n  }\r\n\r\n  tsParseIntersectionTypeOrHigher() {\r\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 41);\r\n  }\r\n\r\n  tsParseUnionTypeOrHigher() {\r\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 39);\r\n  }\r\n\r\n  tsIsStartOfFunctionType() {\r\n    if (this.match(43)) {\r\n      return true;\r\n    }\r\n\r\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\r\n  }\r\n\r\n  tsSkipParameterStart() {\r\n    if (tokenIsIdentifier(this.state.type) || this.match(72)) {\r\n      this.next();\r\n      return true;\r\n    }\r\n\r\n    if (this.match(5)) {\r\n      let braceStackCounter = 1;\r\n      this.next();\r\n\r\n      while (braceStackCounter > 0) {\r\n        if (this.match(5)) {\r\n          ++braceStackCounter;\r\n        } else if (this.match(8)) {\r\n          --braceStackCounter;\r\n        }\r\n\r\n        this.next();\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (this.match(0)) {\r\n      let braceStackCounter = 1;\r\n      this.next();\r\n\r\n      while (braceStackCounter > 0) {\r\n        if (this.match(0)) {\r\n          ++braceStackCounter;\r\n        } else if (this.match(3)) {\r\n          --braceStackCounter;\r\n        }\r\n\r\n        this.next();\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  tsIsUnambiguouslyStartOfFunctionType() {\r\n    this.next();\r\n\r\n    if (this.match(11) || this.match(21)) {\r\n      return true;\r\n    }\r\n\r\n    if (this.tsSkipParameterStart()) {\r\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(27)) {\r\n        return true;\r\n      }\r\n\r\n      if (this.match(11)) {\r\n        this.next();\r\n\r\n        if (this.match(19)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\r\n    return this.tsInType(() => {\r\n      const t = this.startNode();\r\n      this.expect(returnToken);\r\n      const node = this.startNode();\r\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\r\n\r\n      if (asserts && this.match(72)) {\r\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\r\n\r\n        if (thisTypePredicate.type === \"TSThisType\") {\r\n          node.parameterName = thisTypePredicate;\r\n          node.asserts = true;\r\n          node.typeAnnotation = null;\r\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\r\n        } else {\r\n          this.resetStartLocationFromNode(thisTypePredicate, node);\r\n          thisTypePredicate.asserts = true;\r\n        }\r\n\r\n        t.typeAnnotation = thisTypePredicate;\r\n        return this.finishNode(t, \"TSTypeAnnotation\");\r\n      }\r\n\r\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\r\n\r\n      if (!typePredicateVariable) {\r\n        if (!asserts) {\r\n          return this.tsParseTypeAnnotation(false, t);\r\n        }\r\n\r\n        node.parameterName = this.parseIdentifier();\r\n        node.asserts = asserts;\r\n        node.typeAnnotation = null;\r\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\r\n        return this.finishNode(t, \"TSTypeAnnotation\");\r\n      }\r\n\r\n      const type = this.tsParseTypeAnnotation(false);\r\n      node.parameterName = typePredicateVariable;\r\n      node.typeAnnotation = type;\r\n      node.asserts = asserts;\r\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\r\n      return this.finishNode(t, \"TSTypeAnnotation\");\r\n    });\r\n  }\r\n\r\n  tsTryParseTypeOrTypePredicateAnnotation() {\r\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\r\n  }\r\n\r\n  tsTryParseTypeAnnotation() {\r\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\r\n  }\r\n\r\n  tsTryParseType() {\r\n    return this.tsEatThenParseType(14);\r\n  }\r\n\r\n  tsParseTypePredicatePrefix() {\r\n    const id = this.parseIdentifier();\r\n\r\n    if (this.isContextual(107) && !this.hasPrecedingLineBreak()) {\r\n      this.next();\r\n      return id;\r\n    }\r\n  }\r\n\r\n  tsParseTypePredicateAsserts() {\r\n    if (this.state.type !== 100) {\r\n      return false;\r\n    }\r\n\r\n    const containsEsc = this.state.containsEsc;\r\n    this.next();\r\n\r\n    if (!tokenIsIdentifier(this.state.type) && !this.match(72)) {\r\n      return false;\r\n    }\r\n\r\n    if (containsEsc) {\r\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\r\n    this.tsInType(() => {\r\n      if (eatColon) this.expect(14);\r\n      t.typeAnnotation = this.tsParseType();\r\n    });\r\n    return this.finishNode(t, \"TSTypeAnnotation\");\r\n  }\r\n\r\n  tsParseType() {\r\n    assert(this.state.inType);\r\n    const type = this.tsParseNonConditionalType();\r\n\r\n    if (this.hasPrecedingLineBreak() || !this.eat(75)) {\r\n      return type;\r\n    }\r\n\r\n    const node = this.startNodeAtNode(type);\r\n    node.checkType = type;\r\n    node.extendsType = this.tsParseNonConditionalType();\r\n    this.expect(17);\r\n    node.trueType = this.tsParseType();\r\n    this.expect(14);\r\n    node.falseType = this.tsParseType();\r\n    return this.finishNode(node, \"TSConditionalType\");\r\n  }\r\n\r\n  isAbstractConstructorSignature() {\r\n    return this.isContextual(114) && this.lookahead().type === 71;\r\n  }\r\n\r\n  tsParseNonConditionalType() {\r\n    if (this.tsIsStartOfFunctionType()) {\r\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\r\n    }\r\n\r\n    if (this.match(71)) {\r\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\r\n    } else if (this.isAbstractConstructorSignature()) {\r\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\r\n    }\r\n\r\n    return this.tsParseUnionTypeOrHigher();\r\n  }\r\n\r\n  tsParseTypeAssertion() {\r\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\r\n      this.raise(this.state.start, TSErrors.ReservedTypeAssertion);\r\n    }\r\n\r\n    const node = this.startNode();\r\n\r\n    const _const = this.tsTryNextParseConstantContext();\r\n\r\n    node.typeAnnotation = _const || this.tsNextThenParseType();\r\n    this.expect(44);\r\n    node.expression = this.parseMaybeUnary();\r\n    return this.finishNode(node, \"TSTypeAssertion\");\r\n  }\r\n\r\n  tsParseHeritageClause(descriptor) {\r\n    const originalStart = this.state.start;\r\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\r\n\r\n    if (!delimitedList.length) {\r\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\r\n    }\r\n\r\n    return delimitedList;\r\n  }\r\n\r\n  tsParseExpressionWithTypeArguments() {\r\n    const node = this.startNode();\r\n    node.expression = this.tsParseEntityName(false);\r\n\r\n    if (this.match(43)) {\r\n      node.typeParameters = this.tsParseTypeArguments();\r\n    }\r\n\r\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\r\n  }\r\n\r\n  tsParseInterfaceDeclaration(node) {\r\n    if (tokenIsIdentifier(this.state.type)) {\r\n      node.id = this.parseIdentifier();\r\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\r\n    } else {\r\n      node.id = null;\r\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\r\n    }\r\n\r\n    node.typeParameters = this.tsTryParseTypeParameters();\r\n\r\n    if (this.eat(75)) {\r\n      node.extends = this.tsParseHeritageClause(\"extends\");\r\n    }\r\n\r\n    const body = this.startNode();\r\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\r\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\r\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\r\n  }\r\n\r\n  tsParseTypeAliasDeclaration(node) {\r\n    node.id = this.parseIdentifier();\r\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\r\n    node.typeParameters = this.tsTryParseTypeParameters();\r\n    node.typeAnnotation = this.tsInType(() => {\r\n      this.expect(27);\r\n\r\n      if (this.isContextual(105) && this.lookahead().type !== 16) {\r\n        const node = this.startNode();\r\n        this.next();\r\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\r\n      }\r\n\r\n      return this.tsParseType();\r\n    });\r\n    this.semicolon();\r\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\r\n  }\r\n\r\n  tsInNoContext(cb) {\r\n    const oldContext = this.state.context;\r\n    this.state.context = [oldContext[0]];\r\n\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.context = oldContext;\r\n    }\r\n  }\r\n\r\n  tsInType(cb) {\r\n    const oldInType = this.state.inType;\r\n    this.state.inType = true;\r\n\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.inType = oldInType;\r\n    }\r\n  }\r\n\r\n  tsEatThenParseType(token) {\r\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\r\n  }\r\n\r\n  tsExpectThenParseType(token) {\r\n    return this.tsDoThenParseType(() => this.expect(token));\r\n  }\r\n\r\n  tsNextThenParseType() {\r\n    return this.tsDoThenParseType(() => this.next());\r\n  }\r\n\r\n  tsDoThenParseType(cb) {\r\n    return this.tsInType(() => {\r\n      cb();\r\n      return this.tsParseType();\r\n    });\r\n  }\r\n\r\n  tsParseEnumMember() {\r\n    const node = this.startNode();\r\n    node.id = this.match(123) ? this.parseExprAtom() : this.parseIdentifier(true);\r\n\r\n    if (this.eat(27)) {\r\n      node.initializer = this.parseMaybeAssignAllowIn();\r\n    }\r\n\r\n    return this.finishNode(node, \"TSEnumMember\");\r\n  }\r\n\r\n  tsParseEnumDeclaration(node, isConst) {\r\n    if (isConst) node.const = true;\r\n    node.id = this.parseIdentifier();\r\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\r\n    this.expect(5);\r\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\r\n    this.expect(8);\r\n    return this.finishNode(node, \"TSEnumDeclaration\");\r\n  }\r\n\r\n  tsParseModuleBlock() {\r\n    const node = this.startNode();\r\n    this.scope.enter(SCOPE_OTHER);\r\n    this.expect(5);\r\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\r\n    this.scope.exit();\r\n    return this.finishNode(node, \"TSModuleBlock\");\r\n  }\r\n\r\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\r\n    node.id = this.parseIdentifier();\r\n\r\n    if (!nested) {\r\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\r\n    }\r\n\r\n    if (this.eat(16)) {\r\n      const inner = this.startNode();\r\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\r\n      node.body = inner;\r\n    } else {\r\n      this.scope.enter(SCOPE_TS_MODULE);\r\n      this.prodParam.enter(PARAM);\r\n      node.body = this.tsParseModuleBlock();\r\n      this.prodParam.exit();\r\n      this.scope.exit();\r\n    }\r\n\r\n    return this.finishNode(node, \"TSModuleDeclaration\");\r\n  }\r\n\r\n  tsParseAmbientExternalModuleDeclaration(node) {\r\n    if (this.isContextual(103)) {\r\n      node.global = true;\r\n      node.id = this.parseIdentifier();\r\n    } else if (this.match(123)) {\r\n      node.id = this.parseExprAtom();\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n\r\n    if (this.match(5)) {\r\n      this.scope.enter(SCOPE_TS_MODULE);\r\n      this.prodParam.enter(PARAM);\r\n      node.body = this.tsParseModuleBlock();\r\n      this.prodParam.exit();\r\n      this.scope.exit();\r\n    } else {\r\n      this.semicolon();\r\n    }\r\n\r\n    return this.finishNode(node, \"TSModuleDeclaration\");\r\n  }\r\n\r\n  tsParseImportEqualsDeclaration(node, isExport) {\r\n    node.isExport = isExport || false;\r\n    node.id = this.parseIdentifier();\r\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\r\n    this.expect(27);\r\n    const moduleReference = this.tsParseModuleReference();\r\n\r\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\r\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\r\n    }\r\n\r\n    node.moduleReference = moduleReference;\r\n    this.semicolon();\r\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\r\n  }\r\n\r\n  tsIsExternalModuleReference() {\r\n    return this.isContextual(110) && this.lookaheadCharCode() === 40;\r\n  }\r\n\r\n  tsParseModuleReference() {\r\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\r\n  }\r\n\r\n  tsParseExternalModuleReference() {\r\n    const node = this.startNode();\r\n    this.expectContextual(110);\r\n    this.expect(10);\r\n\r\n    if (!this.match(123)) {\r\n      throw this.unexpected();\r\n    }\r\n\r\n    node.expression = this.parseExprAtom();\r\n    this.expect(11);\r\n    return this.finishNode(node, \"TSExternalModuleReference\");\r\n  }\r\n\r\n  tsLookAhead(f) {\r\n    const state = this.state.clone();\r\n    const res = f();\r\n    this.state = state;\r\n    return res;\r\n  }\r\n\r\n  tsTryParseAndCatch(f) {\r\n    const result = this.tryParse(abort => f() || abort());\r\n    if (result.aborted || !result.node) return undefined;\r\n    if (result.error) this.state = result.failState;\r\n    return result.node;\r\n  }\r\n\r\n  tsTryParse(f) {\r\n    const state = this.state.clone();\r\n    const result = f();\r\n\r\n    if (result !== undefined && result !== false) {\r\n      return result;\r\n    } else {\r\n      this.state = state;\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  tsTryParseDeclare(nany) {\r\n    if (this.isLineTerminator()) {\r\n      return;\r\n    }\r\n\r\n    let starttype = this.state.type;\r\n    let kind;\r\n\r\n    if (this.isContextual(93)) {\r\n      starttype = 68;\r\n      kind = \"let\";\r\n    }\r\n\r\n    return this.tsInAmbientContext(() => {\r\n      switch (starttype) {\r\n        case 62:\r\n          nany.declare = true;\r\n          return this.parseFunctionStatement(nany, false, true);\r\n\r\n        case 74:\r\n          nany.declare = true;\r\n          return this.parseClass(nany, true, false);\r\n\r\n        case 69:\r\n          if (this.match(69) && this.isLookaheadContextual(\"enum\")) {\r\n            this.expect(69);\r\n            this.expectContextual(116);\r\n            return this.tsParseEnumDeclaration(nany, true);\r\n          }\r\n\r\n        case 68:\r\n          kind = kind || this.state.value;\r\n          return this.parseVarStatement(nany, kind);\r\n\r\n        case 103:\r\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\r\n\r\n        default:\r\n          {\r\n            if (tokenIsIdentifier(starttype)) {\r\n              return this.tsParseDeclaration(nany, this.state.value, true);\r\n            }\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  tsTryParseExportDeclaration() {\r\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\r\n  }\r\n\r\n  tsParseExpressionStatement(node, expr) {\r\n    switch (expr.name) {\r\n      case \"declare\":\r\n        {\r\n          const declaration = this.tsTryParseDeclare(node);\r\n\r\n          if (declaration) {\r\n            declaration.declare = true;\r\n            return declaration;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case \"global\":\r\n        if (this.match(5)) {\r\n          this.scope.enter(SCOPE_TS_MODULE);\r\n          this.prodParam.enter(PARAM);\r\n          const mod = node;\r\n          mod.global = true;\r\n          mod.id = expr;\r\n          mod.body = this.tsParseModuleBlock();\r\n          this.scope.exit();\r\n          this.prodParam.exit();\r\n          return this.finishNode(mod, \"TSModuleDeclaration\");\r\n        }\r\n\r\n        break;\r\n\r\n      default:\r\n        return this.tsParseDeclaration(node, expr.name, false);\r\n    }\r\n  }\r\n\r\n  tsParseDeclaration(node, value, next) {\r\n    switch (value) {\r\n      case \"abstract\":\r\n        if (this.tsCheckLineTerminator(next) && (this.match(74) || tokenIsIdentifier(this.state.type))) {\r\n          return this.tsParseAbstractDeclaration(node);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"enum\":\r\n        if (next || tokenIsIdentifier(this.state.type)) {\r\n          if (next) this.next();\r\n          return this.tsParseEnumDeclaration(node, false);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"interface\":\r\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\r\n          return this.tsParseInterfaceDeclaration(node);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"module\":\r\n        if (this.tsCheckLineTerminator(next)) {\r\n          if (this.match(123)) {\r\n            return this.tsParseAmbientExternalModuleDeclaration(node);\r\n          } else if (tokenIsIdentifier(this.state.type)) {\r\n            return this.tsParseModuleOrNamespaceDeclaration(node);\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case \"namespace\":\r\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\r\n          return this.tsParseModuleOrNamespaceDeclaration(node);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"type\":\r\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\r\n          return this.tsParseTypeAliasDeclaration(node);\r\n        }\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  tsCheckLineTerminator(next) {\r\n    if (next) {\r\n      if (this.hasFollowingLineBreak()) return false;\r\n      this.next();\r\n      return true;\r\n    }\r\n\r\n    return !this.isLineTerminator();\r\n  }\r\n\r\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\r\n    if (!this.match(43)) {\r\n      return undefined;\r\n    }\r\n\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    this.state.maybeInArrowParameters = true;\r\n    const res = this.tsTryParseAndCatch(() => {\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      node.typeParameters = this.tsParseTypeParameters();\r\n      super.parseFunctionParams(node);\r\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\r\n      this.expect(19);\r\n      return node;\r\n    });\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n\r\n    if (!res) {\r\n      return undefined;\r\n    }\r\n\r\n    return this.parseArrowExpression(res, null, true);\r\n  }\r\n\r\n  tsParseTypeArguments() {\r\n    const node = this.startNode();\r\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\r\n      this.expect(43);\r\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\r\n    }));\r\n\r\n    if (node.params.length === 0) {\r\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\r\n    }\r\n\r\n    this.expect(44);\r\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\r\n  }\r\n\r\n  tsIsDeclarationStart() {\r\n    return tokenIsTSDeclarationStart(this.state.type);\r\n  }\r\n\r\n  isExportDefaultSpecifier() {\r\n    if (this.tsIsDeclarationStart()) return false;\r\n    return super.isExportDefaultSpecifier();\r\n  }\r\n\r\n  parseAssignableListItem(allowModifiers, decorators) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    let accessibility;\r\n    let readonly = false;\r\n    let override = false;\r\n\r\n    if (allowModifiers !== undefined) {\r\n      const modified = {};\r\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\r\n      accessibility = modified.accessibility;\r\n      override = modified.override;\r\n      readonly = modified.readonly;\r\n\r\n      if (allowModifiers === false && (accessibility || readonly || override)) {\r\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\r\n      }\r\n    }\r\n\r\n    const left = this.parseMaybeDefault();\r\n    this.parseAssignableListItemTypes(left);\r\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\r\n\r\n    if (accessibility || readonly || override) {\r\n      const pp = this.startNodeAt(startPos, startLoc);\r\n\r\n      if (decorators.length) {\r\n        pp.decorators = decorators;\r\n      }\r\n\r\n      if (accessibility) pp.accessibility = accessibility;\r\n      if (readonly) pp.readonly = readonly;\r\n      if (override) pp.override = override;\r\n\r\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\r\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\r\n      }\r\n\r\n      pp.parameter = elt;\r\n      return this.finishNode(pp, \"TSParameterProperty\");\r\n    }\r\n\r\n    if (decorators.length) {\r\n      left.decorators = decorators;\r\n    }\r\n\r\n    return elt;\r\n  }\r\n\r\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\r\n    if (this.match(14)) {\r\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\r\n    }\r\n\r\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\r\n\r\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\r\n      this.finishNode(node, bodilessType);\r\n      return;\r\n    }\r\n\r\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\r\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\r\n\r\n      if (node.declare) {\r\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\r\n        return;\r\n      }\r\n    }\r\n\r\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\r\n  }\r\n\r\n  registerFunctionStatementId(node) {\r\n    if (!node.body && node.id) {\r\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\r\n    } else {\r\n      super.registerFunctionStatementId(...arguments);\r\n    }\r\n  }\r\n\r\n  tsCheckForInvalidTypeCasts(items) {\r\n    items.forEach(node => {\r\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\r\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\r\n      }\r\n    });\r\n  }\r\n\r\n  toReferencedList(exprList, isInParens) {\r\n    this.tsCheckForInvalidTypeCasts(exprList);\r\n    return exprList;\r\n  }\r\n\r\n  parseArrayLike(...args) {\r\n    const node = super.parseArrayLike(...args);\r\n\r\n    if (node.type === \"ArrayExpression\") {\r\n      this.tsCheckForInvalidTypeCasts(node.elements);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\r\n    if (!this.hasPrecedingLineBreak() && this.match(33)) {\r\n      this.state.canStartJSXElement = false;\r\n      this.next();\r\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\r\n      nonNullExpression.expression = base;\r\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\r\n    }\r\n\r\n    let isOptionalCall = false;\r\n\r\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\r\n      if (noCalls) {\r\n        state.stop = true;\r\n        return base;\r\n      }\r\n\r\n      state.optionalChainMember = isOptionalCall = true;\r\n      this.next();\r\n    }\r\n\r\n    if (this.match(43)) {\r\n      let missingParenErrorPos;\r\n      const result = this.tsTryParseAndCatch(() => {\r\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\r\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\r\n\r\n          if (asyncArrowFn) {\r\n            return asyncArrowFn;\r\n          }\r\n        }\r\n\r\n        const node = this.startNodeAt(startPos, startLoc);\r\n        node.callee = base;\r\n        const typeArguments = this.tsParseTypeArguments();\r\n\r\n        if (typeArguments) {\r\n          if (isOptionalCall && !this.match(10)) {\r\n            missingParenErrorPos = this.state.pos;\r\n            this.unexpected();\r\n          }\r\n\r\n          if (!noCalls && this.eat(10)) {\r\n            node.arguments = this.parseCallExpressionArguments(11, false);\r\n            this.tsCheckForInvalidTypeCasts(node.arguments);\r\n            node.typeParameters = typeArguments;\r\n\r\n            if (state.optionalChainMember) {\r\n              node.optional = isOptionalCall;\r\n            }\r\n\r\n            return this.finishCallExpression(node, state.optionalChainMember);\r\n          } else if (this.match(22)) {\r\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\r\n            result.typeParameters = typeArguments;\r\n            return result;\r\n          }\r\n        }\r\n\r\n        this.unexpected();\r\n      });\r\n\r\n      if (missingParenErrorPos) {\r\n        this.unexpected(missingParenErrorPos, 10);\r\n      }\r\n\r\n      if (result) return result;\r\n    }\r\n\r\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\r\n  }\r\n\r\n  parseNewArguments(node) {\r\n    if (this.match(43)) {\r\n      const typeParameters = this.tsTryParseAndCatch(() => {\r\n        const args = this.tsParseTypeArguments();\r\n        if (!this.match(10)) this.unexpected();\r\n        return args;\r\n      });\r\n\r\n      if (typeParameters) {\r\n        node.typeParameters = typeParameters;\r\n      }\r\n    }\r\n\r\n    super.parseNewArguments(node);\r\n  }\r\n\r\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\r\n    if (tokenOperatorPrecedence(52) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(87)) {\r\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\r\n      node.expression = left;\r\n\r\n      const _const = this.tsTryNextParseConstantContext();\r\n\r\n      if (_const) {\r\n        node.typeAnnotation = _const;\r\n      } else {\r\n        node.typeAnnotation = this.tsNextThenParseType();\r\n      }\r\n\r\n      this.finishNode(node, \"TSAsExpression\");\r\n      this.reScan_lt_gt();\r\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\r\n    }\r\n\r\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\r\n  }\r\n\r\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\r\n\r\n  checkDuplicateExports() {}\r\n\r\n  parseImport(node) {\r\n    node.importKind = \"value\";\r\n\r\n    if (tokenIsIdentifier(this.state.type) || this.match(49) || this.match(5)) {\r\n      let ahead = this.lookahead();\r\n\r\n      if (this.isContextual(120) && ahead.type !== 12 && ahead.type !== 91 && ahead.type !== 27) {\r\n        node.importKind = \"type\";\r\n        this.next();\r\n        ahead = this.lookahead();\r\n      }\r\n\r\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 27) {\r\n        return this.tsParseImportEqualsDeclaration(node);\r\n      }\r\n    }\r\n\r\n    const importNode = super.parseImport(node);\r\n\r\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\r\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\r\n    }\r\n\r\n    return importNode;\r\n  }\r\n\r\n  parseExport(node) {\r\n    if (this.match(77)) {\r\n      this.next();\r\n\r\n      if (this.isContextual(120) && this.lookaheadCharCode() !== 61) {\r\n        node.importKind = \"type\";\r\n        this.next();\r\n      } else {\r\n        node.importKind = \"value\";\r\n      }\r\n\r\n      return this.tsParseImportEqualsDeclaration(node, true);\r\n    } else if (this.eat(27)) {\r\n      const assign = node;\r\n      assign.expression = this.parseExpression();\r\n      this.semicolon();\r\n      return this.finishNode(assign, \"TSExportAssignment\");\r\n    } else if (this.eatContextual(87)) {\r\n      const decl = node;\r\n      this.expectContextual(118);\r\n      decl.id = this.parseIdentifier();\r\n      this.semicolon();\r\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\r\n    } else {\r\n      if (this.isContextual(120) && this.lookahead().type === 5) {\r\n        this.next();\r\n        node.exportKind = \"type\";\r\n      } else {\r\n        node.exportKind = \"value\";\r\n      }\r\n\r\n      return super.parseExport(node);\r\n    }\r\n  }\r\n\r\n  isAbstractClass() {\r\n    return this.isContextual(114) && this.lookahead().type === 74;\r\n  }\r\n\r\n  parseExportDefaultExpression() {\r\n    if (this.isAbstractClass()) {\r\n      const cls = this.startNode();\r\n      this.next();\r\n      cls.abstract = true;\r\n      this.parseClass(cls, true, true);\r\n      return cls;\r\n    }\r\n\r\n    if (this.match(119)) {\r\n      const interfaceNode = this.startNode();\r\n      this.next();\r\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\r\n      if (result) return result;\r\n    }\r\n\r\n    return super.parseExportDefaultExpression();\r\n  }\r\n\r\n  parseStatementContent(context, topLevel) {\r\n    if (this.state.type === 69) {\r\n      const ahead = this.lookahead();\r\n\r\n      if (ahead.type === 116) {\r\n        const node = this.startNode();\r\n        this.next();\r\n        this.expectContextual(116);\r\n        return this.tsParseEnumDeclaration(node, true);\r\n      }\r\n    }\r\n\r\n    return super.parseStatementContent(context, topLevel);\r\n  }\r\n\r\n  parseAccessModifier() {\r\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\r\n  }\r\n\r\n  tsHasSomeModifiers(member, modifiers) {\r\n    return modifiers.some(modifier => {\r\n      if (tsIsAccessModifier(modifier)) {\r\n        return member.accessibility === modifier;\r\n      }\r\n\r\n      return !!member[modifier];\r\n    });\r\n  }\r\n\r\n  tsIsStartOfStaticBlocks() {\r\n    return this.isContextual(98) && this.lookaheadCharCode() === 123;\r\n  }\r\n\r\n  parseClassMember(classBody, member, state) {\r\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\r\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\r\n\r\n    const callParseClassMemberWithIsStatic = () => {\r\n      if (this.tsIsStartOfStaticBlocks()) {\r\n        this.next();\r\n        this.next();\r\n\r\n        if (this.tsHasSomeModifiers(member, modifiers)) {\r\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\r\n        }\r\n\r\n        this.parseClassStaticBlock(classBody, member);\r\n      } else {\r\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\r\n      }\r\n    };\r\n\r\n    if (member.declare) {\r\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\r\n    } else {\r\n      callParseClassMemberWithIsStatic();\r\n    }\r\n  }\r\n\r\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\r\n    const idx = this.tsTryParseIndexSignature(member);\r\n\r\n    if (idx) {\r\n      classBody.body.push(idx);\r\n\r\n      if (member.abstract) {\r\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\r\n      }\r\n\r\n      if (member.accessibility) {\r\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\r\n      }\r\n\r\n      if (member.declare) {\r\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\r\n      }\r\n\r\n      if (member.override) {\r\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (!this.state.inAbstractClass && member.abstract) {\r\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\r\n    }\r\n\r\n    if (member.override) {\r\n      if (!state.hadSuperClass) {\r\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\r\n      }\r\n    }\r\n\r\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\r\n  }\r\n\r\n  parsePostMemberNameModifiers(methodOrProp) {\r\n    const optional = this.eat(17);\r\n    if (optional) methodOrProp.optional = true;\r\n\r\n    if (methodOrProp.readonly && this.match(10)) {\r\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\r\n    }\r\n\r\n    if (methodOrProp.declare && this.match(10)) {\r\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\r\n    }\r\n  }\r\n\r\n  parseExpressionStatement(node, expr) {\r\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\r\n    return decl || super.parseExpressionStatement(node, expr);\r\n  }\r\n\r\n  shouldParseExportDeclaration() {\r\n    if (this.tsIsDeclarationStart()) return true;\r\n    return super.shouldParseExportDeclaration();\r\n  }\r\n\r\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\r\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\r\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\r\n    }\r\n\r\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\r\n\r\n    if (!result.node) {\r\n      if (result.error) {\r\n        super.setOptionalParametersError(refExpressionErrors, result.error);\r\n      }\r\n\r\n      return expr;\r\n    }\r\n\r\n    if (result.error) this.state = result.failState;\r\n    return result.node;\r\n  }\r\n\r\n  parseParenItem(node, startPos, startLoc) {\r\n    node = super.parseParenItem(node, startPos, startLoc);\r\n\r\n    if (this.eat(17)) {\r\n      node.optional = true;\r\n      this.resetEndLocation(node);\r\n    }\r\n\r\n    if (this.match(14)) {\r\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\r\n      typeCastNode.expression = node;\r\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\r\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  parseExportDeclaration(node) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const isDeclare = this.eatContextual(115);\r\n\r\n    if (isDeclare && (this.isContextual(115) || !this.shouldParseExportDeclaration())) {\r\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\r\n    }\r\n\r\n    let declaration;\r\n\r\n    if (tokenIsIdentifier(this.state.type)) {\r\n      declaration = this.tsTryParseExportDeclaration();\r\n    }\r\n\r\n    if (!declaration) {\r\n      declaration = super.parseExportDeclaration(node);\r\n    }\r\n\r\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\r\n      node.exportKind = \"type\";\r\n    }\r\n\r\n    if (declaration && isDeclare) {\r\n      this.resetStartLocation(declaration, startPos, startLoc);\r\n      declaration.declare = true;\r\n    }\r\n\r\n    return declaration;\r\n  }\r\n\r\n  parseClassId(node, isStatement, optionalId) {\r\n    if ((!isStatement || optionalId) && this.isContextual(104)) {\r\n      return;\r\n    }\r\n\r\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\r\n    const typeParameters = this.tsTryParseTypeParameters();\r\n    if (typeParameters) node.typeParameters = typeParameters;\r\n  }\r\n\r\n  parseClassPropertyAnnotation(node) {\r\n    if (!node.optional && this.eat(33)) {\r\n      node.definite = true;\r\n    }\r\n\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) node.typeAnnotation = type;\r\n  }\r\n\r\n  parseClassProperty(node) {\r\n    this.parseClassPropertyAnnotation(node);\r\n\r\n    if (this.state.isAmbientContext && this.match(27)) {\r\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\r\n    }\r\n\r\n    if (node.abstract && this.match(27)) {\r\n      const {\r\n        key\r\n      } = node;\r\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\r\n    }\r\n\r\n    return super.parseClassProperty(node);\r\n  }\r\n\r\n  parseClassPrivateProperty(node) {\r\n    if (node.abstract) {\r\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\r\n    }\r\n\r\n    if (node.accessibility) {\r\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\r\n    }\r\n\r\n    this.parseClassPropertyAnnotation(node);\r\n    return super.parseClassPrivateProperty(node);\r\n  }\r\n\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    const typeParameters = this.tsTryParseTypeParameters();\r\n\r\n    if (typeParameters && isConstructor) {\r\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\r\n    }\r\n\r\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\r\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\r\n    }\r\n\r\n    if (typeParameters) method.typeParameters = typeParameters;\r\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\r\n  }\r\n\r\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\r\n    const typeParameters = this.tsTryParseTypeParameters();\r\n    if (typeParameters) method.typeParameters = typeParameters;\r\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\r\n  }\r\n\r\n  declareClassPrivateMethodInScope(node, kind) {\r\n    if (node.type === \"TSDeclareMethod\") return;\r\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\r\n    super.declareClassPrivateMethodInScope(node, kind);\r\n  }\r\n\r\n  parseClassSuper(node) {\r\n    super.parseClassSuper(node);\r\n\r\n    if (node.superClass && this.match(43)) {\r\n      node.superTypeParameters = this.tsParseTypeArguments();\r\n    }\r\n\r\n    if (this.eatContextual(104)) {\r\n      node.implements = this.tsParseHeritageClause(\"implements\");\r\n    }\r\n  }\r\n\r\n  parseObjPropValue(prop, ...args) {\r\n    const typeParameters = this.tsTryParseTypeParameters();\r\n    if (typeParameters) prop.typeParameters = typeParameters;\r\n    super.parseObjPropValue(prop, ...args);\r\n  }\r\n\r\n  parseFunctionParams(node, allowModifiers) {\r\n    const typeParameters = this.tsTryParseTypeParameters();\r\n    if (typeParameters) node.typeParameters = typeParameters;\r\n    super.parseFunctionParams(node, allowModifiers);\r\n  }\r\n\r\n  parseVarId(decl, kind) {\r\n    super.parseVarId(decl, kind);\r\n\r\n    if (decl.id.type === \"Identifier\" && this.eat(33)) {\r\n      decl.definite = true;\r\n    }\r\n\r\n    const type = this.tsTryParseTypeAnnotation();\r\n\r\n    if (type) {\r\n      decl.id.typeAnnotation = type;\r\n      this.resetEndLocation(decl.id);\r\n    }\r\n  }\r\n\r\n  parseAsyncArrowFromCallExpression(node, call) {\r\n    if (this.match(14)) {\r\n      node.returnType = this.tsParseTypeAnnotation();\r\n    }\r\n\r\n    return super.parseAsyncArrowFromCallExpression(node, call);\r\n  }\r\n\r\n  parseMaybeAssign(...args) {\r\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\r\n\r\n    let state;\r\n    let jsx;\r\n    let typeCast;\r\n\r\n    if (this.hasPlugin(\"jsx\") && (this.match(132) || this.match(43))) {\r\n      state = this.state.clone();\r\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\r\n      if (!jsx.error) return jsx.node;\r\n      const {\r\n        context\r\n      } = this.state;\r\n\r\n      if (context[context.length - 1] === types.j_oTag) {\r\n        context.length -= 2;\r\n      } else if (context[context.length - 1] === types.j_expr) {\r\n        context.length -= 1;\r\n      }\r\n    }\r\n\r\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(43)) {\r\n      return super.parseMaybeAssign(...args);\r\n    }\r\n\r\n    let typeParameters;\r\n    state = state || this.state.clone();\r\n    const arrow = this.tryParse(abort => {\r\n      var _expr$extra, _typeParameters;\r\n\r\n      typeParameters = this.tsParseTypeParameters();\r\n      const expr = super.parseMaybeAssign(...args);\r\n\r\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\r\n        abort();\r\n      }\r\n\r\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\r\n        this.resetStartLocationFromNode(expr, typeParameters);\r\n      }\r\n\r\n      expr.typeParameters = typeParameters;\r\n      return expr;\r\n    }, state);\r\n\r\n    if (!arrow.error && !arrow.aborted) {\r\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\r\n      return arrow.node;\r\n    }\r\n\r\n    if (!jsx) {\r\n      assert(!this.hasPlugin(\"jsx\"));\r\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\r\n      if (!typeCast.error) return typeCast.node;\r\n    }\r\n\r\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\r\n      this.state = jsx.failState;\r\n      return jsx.node;\r\n    }\r\n\r\n    if (arrow.node) {\r\n      this.state = arrow.failState;\r\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\r\n      return arrow.node;\r\n    }\r\n\r\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\r\n      this.state = typeCast.failState;\r\n      return typeCast.node;\r\n    }\r\n\r\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\r\n    if (arrow.thrown) throw arrow.error;\r\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\r\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\r\n  }\r\n\r\n  reportReservedArrowTypeParam(node) {\r\n    var _node$extra;\r\n\r\n    if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\r\n      this.raise(node.start, TSErrors.ReservedArrowTypeParam);\r\n    }\r\n  }\r\n\r\n  parseMaybeUnary(refExpressionErrors) {\r\n    if (!this.hasPlugin(\"jsx\") && this.match(43)) {\r\n      return this.tsParseTypeAssertion();\r\n    } else {\r\n      return super.parseMaybeUnary(refExpressionErrors);\r\n    }\r\n  }\r\n\r\n  parseArrow(node) {\r\n    if (this.match(14)) {\r\n      const result = this.tryParse(abort => {\r\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\r\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\r\n        return returnType;\r\n      });\r\n      if (result.aborted) return;\r\n\r\n      if (!result.thrown) {\r\n        if (result.error) this.state = result.failState;\r\n        node.returnType = result.node;\r\n      }\r\n    }\r\n\r\n    return super.parseArrow(node);\r\n  }\r\n\r\n  parseAssignableListItemTypes(param) {\r\n    if (this.eat(17)) {\r\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\r\n        this.raise(param.start, TSErrors.PatternIsOptional);\r\n      }\r\n\r\n      param.optional = true;\r\n    }\r\n\r\n    const type = this.tsTryParseTypeAnnotation();\r\n    if (type) param.typeAnnotation = type;\r\n    this.resetEndLocation(param);\r\n    return param;\r\n  }\r\n\r\n  isAssignable(node, isBinding) {\r\n    switch (node.type) {\r\n      case \"TSTypeCastExpression\":\r\n        return this.isAssignable(node.expression, isBinding);\r\n\r\n      case \"TSParameterProperty\":\r\n        return true;\r\n\r\n      default:\r\n        return super.isAssignable(node, isBinding);\r\n    }\r\n  }\r\n\r\n  toAssignable(node, isLHS = false) {\r\n    switch (node.type) {\r\n      case \"TSTypeCastExpression\":\r\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\r\n\r\n      case \"TSParameterProperty\":\r\n        return super.toAssignable(node, isLHS);\r\n\r\n      case \"ParenthesizedExpression\":\r\n        return this.toAssignableParenthesizedExpression(node, isLHS);\r\n\r\n      case \"TSAsExpression\":\r\n      case \"TSNonNullExpression\":\r\n      case \"TSTypeAssertion\":\r\n        node.expression = this.toAssignable(node.expression, isLHS);\r\n        return node;\r\n\r\n      default:\r\n        return super.toAssignable(node, isLHS);\r\n    }\r\n  }\r\n\r\n  toAssignableParenthesizedExpression(node, isLHS) {\r\n    switch (node.expression.type) {\r\n      case \"TSAsExpression\":\r\n      case \"TSNonNullExpression\":\r\n      case \"TSTypeAssertion\":\r\n      case \"ParenthesizedExpression\":\r\n        node.expression = this.toAssignable(node.expression, isLHS);\r\n        return node;\r\n\r\n      default:\r\n        return super.toAssignable(node, isLHS);\r\n    }\r\n  }\r\n\r\n  checkLVal(expr, contextDescription, ...args) {\r\n    var _expr$extra2;\r\n\r\n    switch (expr.type) {\r\n      case \"TSTypeCastExpression\":\r\n        return;\r\n\r\n      case \"TSParameterProperty\":\r\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\r\n        return;\r\n\r\n      case \"TSAsExpression\":\r\n      case \"TSTypeAssertion\":\r\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\r\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\r\n          break;\r\n        }\r\n\r\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\r\n        return;\r\n\r\n      case \"TSNonNullExpression\":\r\n        this.checkLVal(expr.expression, contextDescription, ...args);\r\n        return;\r\n\r\n      default:\r\n        super.checkLVal(expr, contextDescription, ...args);\r\n        return;\r\n    }\r\n  }\r\n\r\n  parseBindingAtom() {\r\n    switch (this.state.type) {\r\n      case 72:\r\n        return this.parseIdentifier(true);\r\n\r\n      default:\r\n        return super.parseBindingAtom();\r\n    }\r\n  }\r\n\r\n  parseMaybeDecoratorArguments(expr) {\r\n    if (this.match(43)) {\r\n      const typeArguments = this.tsParseTypeArguments();\r\n\r\n      if (this.match(10)) {\r\n        const call = super.parseMaybeDecoratorArguments(expr);\r\n        call.typeParameters = typeArguments;\r\n        return call;\r\n      }\r\n\r\n      this.unexpected(this.state.start, 10);\r\n    }\r\n\r\n    return super.parseMaybeDecoratorArguments(expr);\r\n  }\r\n\r\n  checkCommaAfterRest(close) {\r\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\r\n      this.next();\r\n    } else {\r\n      super.checkCommaAfterRest(close);\r\n    }\r\n  }\r\n\r\n  isClassMethod() {\r\n    return this.match(43) || super.isClassMethod();\r\n  }\r\n\r\n  isClassProperty() {\r\n    return this.match(33) || this.match(14) || super.isClassProperty();\r\n  }\r\n\r\n  parseMaybeDefault(...args) {\r\n    const node = super.parseMaybeDefault(...args);\r\n\r\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\r\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  getTokenFromCode(code) {\r\n    if (this.state.inType) {\r\n      if (code === 62) {\r\n        return this.finishOp(44, 1);\r\n      }\r\n\r\n      if (code === 60) {\r\n        return this.finishOp(43, 1);\r\n      }\r\n    }\r\n\r\n    return super.getTokenFromCode(code);\r\n  }\r\n\r\n  reScan_lt_gt() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    if (type === 43) {\r\n      this.state.pos -= 1;\r\n      this.readToken_lt();\r\n    } else if (type === 44) {\r\n      this.state.pos -= 1;\r\n      this.readToken_gt();\r\n    }\r\n  }\r\n\r\n  toAssignableList(exprList) {\r\n    for (let i = 0; i < exprList.length; i++) {\r\n      const expr = exprList[i];\r\n      if (!expr) continue;\r\n\r\n      switch (expr.type) {\r\n        case \"TSTypeCastExpression\":\r\n          exprList[i] = this.typeCastToParameter(expr);\r\n          break;\r\n\r\n        case \"TSAsExpression\":\r\n        case \"TSTypeAssertion\":\r\n          if (!this.state.maybeInArrowParameters) {\r\n            exprList[i] = this.typeCastToParameter(expr);\r\n          } else {\r\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\r\n          }\r\n\r\n          break;\r\n      }\r\n    }\r\n\r\n    return super.toAssignableList(...arguments);\r\n  }\r\n\r\n  typeCastToParameter(node) {\r\n    node.expression.typeAnnotation = node.typeAnnotation;\r\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\r\n    return node.expression;\r\n  }\r\n\r\n  shouldParseArrow(params) {\r\n    if (this.match(14)) {\r\n      return params.every(expr => this.isAssignable(expr, true));\r\n    }\r\n\r\n    return super.shouldParseArrow(params);\r\n  }\r\n\r\n  shouldParseAsyncArrow() {\r\n    return this.match(14) || super.shouldParseAsyncArrow();\r\n  }\r\n\r\n  canHaveLeadingDecorator() {\r\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\r\n  }\r\n\r\n  jsxParseOpeningElementAfterName(node) {\r\n    if (this.match(43)) {\r\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\r\n      if (typeArguments) node.typeParameters = typeArguments;\r\n    }\r\n\r\n    return super.jsxParseOpeningElementAfterName(node);\r\n  }\r\n\r\n  getGetterSetterExpectedParamCount(method) {\r\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\r\n    const params = this.getObjectOrClassMethodParams(method);\r\n    const firstParam = params[0];\r\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\r\n    return hasContextParam ? baseCount + 1 : baseCount;\r\n  }\r\n\r\n  parseCatchClauseParam() {\r\n    const param = super.parseCatchClauseParam();\r\n    const type = this.tsTryParseTypeAnnotation();\r\n\r\n    if (type) {\r\n      param.typeAnnotation = type;\r\n      this.resetEndLocation(param);\r\n    }\r\n\r\n    return param;\r\n  }\r\n\r\n  tsInAmbientContext(cb) {\r\n    const oldIsAmbientContext = this.state.isAmbientContext;\r\n    this.state.isAmbientContext = true;\r\n\r\n    try {\r\n      return cb();\r\n    } finally {\r\n      this.state.isAmbientContext = oldIsAmbientContext;\r\n    }\r\n  }\r\n\r\n  parseClass(node, ...args) {\r\n    const oldInAbstractClass = this.state.inAbstractClass;\r\n    this.state.inAbstractClass = !!node.abstract;\r\n\r\n    try {\r\n      return super.parseClass(node, ...args);\r\n    } finally {\r\n      this.state.inAbstractClass = oldInAbstractClass;\r\n    }\r\n  }\r\n\r\n  tsParseAbstractDeclaration(node) {\r\n    if (this.match(74)) {\r\n      node.abstract = true;\r\n      return this.parseClass(node, true, false);\r\n    } else if (this.isContextual(119)) {\r\n      if (!this.hasFollowingLineBreak()) {\r\n        node.abstract = true;\r\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\r\n        this.next();\r\n        return this.tsParseInterfaceDeclaration(node);\r\n      }\r\n    } else {\r\n      this.unexpected(null, 74);\r\n    }\r\n  }\r\n\r\n  parseMethod(...args) {\r\n    const method = super.parseMethod(...args);\r\n\r\n    if (method.abstract) {\r\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\r\n\r\n      if (hasBody) {\r\n        const {\r\n          key\r\n        } = method;\r\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\r\n      }\r\n    }\r\n\r\n    return method;\r\n  }\r\n\r\n  tsParseTypeParameterName() {\r\n    const typeName = this.parseIdentifier();\r\n    return typeName.name;\r\n  }\r\n\r\n  shouldParseAsAmbientContext() {\r\n    return !!this.getPluginOption(\"typescript\", \"dts\");\r\n  }\r\n\r\n  parse() {\r\n    if (this.shouldParseAsAmbientContext()) {\r\n      this.state.isAmbientContext = true;\r\n    }\r\n\r\n    return super.parse();\r\n  }\r\n\r\n  getExpression() {\r\n    if (this.shouldParseAsAmbientContext()) {\r\n      this.state.isAmbientContext = true;\r\n    }\r\n\r\n    return super.getExpression();\r\n  }\r\n\r\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\r\n    if (!isString && isMaybeTypeOnly) {\r\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\r\n      return this.finishNode(node, \"ExportSpecifier\");\r\n    }\r\n\r\n    node.exportKind = \"value\";\r\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\r\n  }\r\n\r\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\r\n    if (!importedIsString && isMaybeTypeOnly) {\r\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\r\n      return this.finishNode(specifier, \"ImportSpecifier\");\r\n    }\r\n\r\n    specifier.importKind = \"value\";\r\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly);\r\n  }\r\n\r\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\r\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\r\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\r\n    let leftOfAs = node[leftOfAsKey];\r\n    let rightOfAs;\r\n    let hasTypeSpecifier = false;\r\n    let canParseAsKeyword = true;\r\n    const pos = leftOfAs.start;\r\n\r\n    if (this.isContextual(87)) {\r\n      const firstAs = this.parseIdentifier();\r\n\r\n      if (this.isContextual(87)) {\r\n        const secondAs = this.parseIdentifier();\r\n\r\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\r\n          hasTypeSpecifier = true;\r\n          leftOfAs = firstAs;\r\n          rightOfAs = this.parseIdentifier();\r\n          canParseAsKeyword = false;\r\n        } else {\r\n          rightOfAs = secondAs;\r\n          canParseAsKeyword = false;\r\n        }\r\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\r\n        canParseAsKeyword = false;\r\n        rightOfAs = this.parseIdentifier();\r\n      } else {\r\n        hasTypeSpecifier = true;\r\n        leftOfAs = firstAs;\r\n      }\r\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\r\n      hasTypeSpecifier = true;\r\n      leftOfAs = this.parseIdentifier();\r\n    }\r\n\r\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\r\n      this.raise(pos, isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports);\r\n    }\r\n\r\n    node[leftOfAsKey] = leftOfAs;\r\n    node[rightOfAsKey] = rightOfAs;\r\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\r\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\r\n\r\n    if (canParseAsKeyword && this.eatContextual(87)) {\r\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\r\n    }\r\n\r\n    if (!node[rightOfAsKey]) {\r\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\r\n    }\r\n\r\n    if (isImport) {\r\n      this.checkLVal(node[rightOfAsKey], \"import specifier\", BIND_LEXICAL);\r\n    }\r\n  }\r\n\r\n});\r\n\r\nconst PlaceHolderErrors = makeErrorTemplates({\r\n  ClassNameIsRequired: \"A class name is required.\"\r\n}, ErrorCodes.SyntaxError);\r\nvar placeholders = (superClass => class extends superClass {\r\n  parsePlaceholder(expectedNode) {\r\n    if (this.match(134)) {\r\n      const node = this.startNode();\r\n      this.next();\r\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\r\n      node.name = super.parseIdentifier(true);\r\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\r\n      this.expect(134);\r\n      return this.finishPlaceholder(node, expectedNode);\r\n    }\r\n  }\r\n\r\n  finishPlaceholder(node, expectedNode) {\r\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\r\n    node.expectedNode = expectedNode;\r\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\r\n  }\r\n\r\n  getTokenFromCode(code) {\r\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\r\n      return this.finishOp(134, 2);\r\n    }\r\n\r\n    return super.getTokenFromCode(...arguments);\r\n  }\r\n\r\n  parseExprAtom() {\r\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\r\n  }\r\n\r\n  parseIdentifier() {\r\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\r\n  }\r\n\r\n  checkReservedWord(word) {\r\n    if (word !== undefined) super.checkReservedWord(...arguments);\r\n  }\r\n\r\n  parseBindingAtom() {\r\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\r\n  }\r\n\r\n  checkLVal(expr) {\r\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\r\n  }\r\n\r\n  toAssignable(node) {\r\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\r\n      node.expectedNode = \"Pattern\";\r\n      return node;\r\n    }\r\n\r\n    return super.toAssignable(...arguments);\r\n  }\r\n\r\n  isLet(context) {\r\n    if (super.isLet(context)) {\r\n      return true;\r\n    }\r\n\r\n    if (!this.isContextual(93)) {\r\n      return false;\r\n    }\r\n\r\n    if (context) return false;\r\n    const nextToken = this.lookahead();\r\n\r\n    if (nextToken.type === 134) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  verifyBreakContinue(node) {\r\n    if (node.label && node.label.type === \"Placeholder\") return;\r\n    super.verifyBreakContinue(...arguments);\r\n  }\r\n\r\n  parseExpressionStatement(node, expr) {\r\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\r\n      return super.parseExpressionStatement(...arguments);\r\n    }\r\n\r\n    if (this.match(14)) {\r\n      const stmt = node;\r\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\r\n      this.next();\r\n      stmt.body = this.parseStatement(\"label\");\r\n      return this.finishNode(stmt, \"LabeledStatement\");\r\n    }\r\n\r\n    this.semicolon();\r\n    node.name = expr.name;\r\n    return this.finishPlaceholder(node, \"Statement\");\r\n  }\r\n\r\n  parseBlock() {\r\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\r\n  }\r\n\r\n  parseFunctionId() {\r\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\r\n  }\r\n\r\n  parseClass(node, isStatement, optionalId) {\r\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\r\n    this.next();\r\n    this.takeDecorators(node);\r\n    const oldStrict = this.state.strict;\r\n    const placeholder = this.parsePlaceholder(\"Identifier\");\r\n\r\n    if (placeholder) {\r\n      if (this.match(75) || this.match(134) || this.match(5)) {\r\n        node.id = placeholder;\r\n      } else if (optionalId || !isStatement) {\r\n        node.id = null;\r\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\r\n        return this.finishNode(node, type);\r\n      } else {\r\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\r\n      }\r\n    } else {\r\n      this.parseClassId(node, isStatement, optionalId);\r\n    }\r\n\r\n    this.parseClassSuper(node);\r\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\r\n    return this.finishNode(node, type);\r\n  }\r\n\r\n  parseExport(node) {\r\n    const placeholder = this.parsePlaceholder(\"Identifier\");\r\n    if (!placeholder) return super.parseExport(...arguments);\r\n\r\n    if (!this.isContextual(91) && !this.match(12)) {\r\n      node.specifiers = [];\r\n      node.source = null;\r\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\r\n      return this.finishNode(node, \"ExportNamedDeclaration\");\r\n    }\r\n\r\n    this.expectPlugin(\"exportDefaultFrom\");\r\n    const specifier = this.startNode();\r\n    specifier.exported = placeholder;\r\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\r\n    return super.parseExport(node);\r\n  }\r\n\r\n  isExportDefaultSpecifier() {\r\n    if (this.match(59)) {\r\n      const next = this.nextTokenStart();\r\n\r\n      if (this.isUnparsedContextual(next, \"from\")) {\r\n        if (this.input.startsWith(tokenLabelName(134), this.nextTokenStartSince(next + 4))) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return super.isExportDefaultSpecifier();\r\n  }\r\n\r\n  maybeParseExportDefaultSpecifier(node) {\r\n    if (node.specifiers && node.specifiers.length > 0) {\r\n      return true;\r\n    }\r\n\r\n    return super.maybeParseExportDefaultSpecifier(...arguments);\r\n  }\r\n\r\n  checkExport(node) {\r\n    const {\r\n      specifiers\r\n    } = node;\r\n\r\n    if (specifiers != null && specifiers.length) {\r\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\r\n    }\r\n\r\n    super.checkExport(node);\r\n    node.specifiers = specifiers;\r\n  }\r\n\r\n  parseImport(node) {\r\n    const placeholder = this.parsePlaceholder(\"Identifier\");\r\n    if (!placeholder) return super.parseImport(...arguments);\r\n    node.specifiers = [];\r\n\r\n    if (!this.isContextual(91) && !this.match(12)) {\r\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\r\n      this.semicolon();\r\n      return this.finishNode(node, \"ImportDeclaration\");\r\n    }\r\n\r\n    const specifier = this.startNodeAtNode(placeholder);\r\n    specifier.local = placeholder;\r\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\r\n    node.specifiers.push(specifier);\r\n\r\n    if (this.eat(12)) {\r\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\r\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\r\n    }\r\n\r\n    this.expectContextual(91);\r\n    node.source = this.parseImportSource();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ImportDeclaration\");\r\n  }\r\n\r\n  parseImportSource() {\r\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\r\n  }\r\n\r\n});\r\n\r\nvar v8intrinsic = (superClass => class extends superClass {\r\n  parseV8Intrinsic() {\r\n    if (this.match(48)) {\r\n      const v8IntrinsicStart = this.state.start;\r\n      const node = this.startNode();\r\n      this.next();\r\n\r\n      if (tokenIsIdentifier(this.state.type)) {\r\n        const name = this.parseIdentifierName(this.state.start);\r\n        const identifier = this.createIdentifier(node, name);\r\n        identifier.type = \"V8IntrinsicIdentifier\";\r\n\r\n        if (this.match(10)) {\r\n          return identifier;\r\n        }\r\n      }\r\n\r\n      this.unexpected(v8IntrinsicStart);\r\n    }\r\n  }\r\n\r\n  parseExprAtom() {\r\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\r\n  }\r\n\r\n});\r\n\r\nfunction hasPlugin(plugins, name) {\r\n  return plugins.some(plugin => {\r\n    if (Array.isArray(plugin)) {\r\n      return plugin[0] === name;\r\n    } else {\r\n      return plugin === name;\r\n    }\r\n  });\r\n}\r\nfunction getPluginOption(plugins, name, option) {\r\n  const plugin = plugins.find(plugin => {\r\n    if (Array.isArray(plugin)) {\r\n      return plugin[0] === name;\r\n    } else {\r\n      return plugin === name;\r\n    }\r\n  });\r\n\r\n  if (plugin && Array.isArray(plugin)) {\r\n    return plugin[1][option];\r\n  }\r\n\r\n  return null;\r\n}\r\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\r\nconst TOPIC_TOKENS = [\"^\", \"%\", \"#\"];\r\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\r\nfunction validatePlugins(plugins) {\r\n  if (hasPlugin(plugins, \"decorators\")) {\r\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\r\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\r\n    }\r\n\r\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\r\n\r\n    if (decoratorsBeforeExport == null) {\r\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\r\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\r\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\r\n    }\r\n  }\r\n\r\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\r\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\r\n  }\r\n\r\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\r\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\r\n  }\r\n\r\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\r\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\r\n\r\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\r\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\r\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\r\n    }\r\n\r\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\r\n\r\n    if (proposal === \"hack\") {\r\n      if (hasPlugin(plugins, \"placeholders\")) {\r\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\r\n      }\r\n\r\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\r\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\r\n      }\r\n\r\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\r\n\r\n      if (!TOPIC_TOKENS.includes(topicToken)) {\r\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\r\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\r\n      }\r\n\r\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\r\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\r\n      }\r\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\r\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\r\n    }\r\n  }\r\n\r\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\r\n    {\r\n      if (hasPlugin(plugins, \"importAssertions\")) {\r\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\r\n      }\r\n\r\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\r\n\r\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\r\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\r\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\r\n  }\r\n\r\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\r\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\r\n    error.missingPlugins = \"doExpressions\";\r\n    throw error;\r\n  }\r\n}\r\nconst mixinPlugins = {\r\n  estree,\r\n  jsx,\r\n  flow,\r\n  typescript,\r\n  v8intrinsic,\r\n  placeholders\r\n};\r\nconst mixinPluginNames = Object.keys(mixinPlugins);\r\n\r\nconst defaultOptions = {\r\n  sourceType: \"script\",\r\n  sourceFilename: undefined,\r\n  startColumn: 0,\r\n  startLine: 1,\r\n  allowAwaitOutsideFunction: false,\r\n  allowReturnOutsideFunction: false,\r\n  allowImportExportEverywhere: false,\r\n  allowSuperOutsideMethod: false,\r\n  allowUndeclaredExports: false,\r\n  plugins: [],\r\n  strictMode: null,\r\n  ranges: false,\r\n  tokens: false,\r\n  createParenthesizedExpressions: false,\r\n  errorRecovery: false,\r\n  attachComment: true\r\n};\r\nfunction getOptions(opts) {\r\n  const options = {};\r\n\r\n  for (const key of Object.keys(defaultOptions)) {\r\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\r\n  }\r\n\r\n  return options;\r\n}\r\n\r\nconst unwrapParenthesizedExpression = node => {\r\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\r\n};\r\n\r\nclass LValParser extends NodeUtils {\r\n  toAssignable(node, isLHS = false) {\r\n    var _node$extra, _node$extra3;\r\n\r\n    let parenthesized = undefined;\r\n\r\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\r\n      parenthesized = unwrapParenthesizedExpression(node);\r\n\r\n      if (isLHS) {\r\n        if (parenthesized.type === \"Identifier\") {\r\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\r\n        } else if (parenthesized.type !== \"MemberExpression\") {\r\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\r\n        }\r\n      } else {\r\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\r\n      }\r\n    }\r\n\r\n    switch (node.type) {\r\n      case \"Identifier\":\r\n      case \"ObjectPattern\":\r\n      case \"ArrayPattern\":\r\n      case \"AssignmentPattern\":\r\n      case \"RestElement\":\r\n        break;\r\n\r\n      case \"ObjectExpression\":\r\n        node.type = \"ObjectPattern\";\r\n\r\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\r\n          var _node$extra2;\r\n\r\n          const prop = node.properties[i];\r\n          const isLast = i === last;\r\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\r\n\r\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\r\n            this.raiseRestNotLast(node.extra.trailingComma);\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case \"ObjectProperty\":\r\n        this.toAssignable(node.value, isLHS);\r\n        break;\r\n\r\n      case \"SpreadElement\":\r\n        {\r\n          this.checkToRestConversion(node);\r\n          node.type = \"RestElement\";\r\n          const arg = node.argument;\r\n          this.toAssignable(arg, isLHS);\r\n          break;\r\n        }\r\n\r\n      case \"ArrayExpression\":\r\n        node.type = \"ArrayPattern\";\r\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\r\n        break;\r\n\r\n      case \"AssignmentExpression\":\r\n        if (node.operator !== \"=\") {\r\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\r\n        }\r\n\r\n        node.type = \"AssignmentPattern\";\r\n        delete node.operator;\r\n        this.toAssignable(node.left, isLHS);\r\n        break;\r\n\r\n      case \"ParenthesizedExpression\":\r\n        this.toAssignable(parenthesized, isLHS);\r\n        break;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\r\n    if (prop.type === \"ObjectMethod\") {\r\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\r\n      this.raise(prop.key.start, error);\r\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\r\n      this.raiseRestNotLast(prop.start);\r\n    } else {\r\n      this.toAssignable(prop, isLHS);\r\n    }\r\n  }\r\n\r\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\r\n    let end = exprList.length;\r\n\r\n    if (end) {\r\n      const last = exprList[end - 1];\r\n\r\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\r\n        --end;\r\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\r\n        last.type = \"RestElement\";\r\n        let arg = last.argument;\r\n        this.toAssignable(arg, isLHS);\r\n        arg = unwrapParenthesizedExpression(arg);\r\n\r\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\r\n          this.unexpected(arg.start);\r\n        }\r\n\r\n        if (trailingCommaPos) {\r\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\r\n        }\r\n\r\n        --end;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < end; i++) {\r\n      const elt = exprList[i];\r\n\r\n      if (elt) {\r\n        this.toAssignable(elt, isLHS);\r\n\r\n        if (elt.type === \"RestElement\") {\r\n          this.raiseRestNotLast(elt.start);\r\n        }\r\n      }\r\n    }\r\n\r\n    return exprList;\r\n  }\r\n\r\n  isAssignable(node, isBinding) {\r\n    switch (node.type) {\r\n      case \"Identifier\":\r\n      case \"ObjectPattern\":\r\n      case \"ArrayPattern\":\r\n      case \"AssignmentPattern\":\r\n      case \"RestElement\":\r\n        return true;\r\n\r\n      case \"ObjectExpression\":\r\n        {\r\n          const last = node.properties.length - 1;\r\n          return node.properties.every((prop, i) => {\r\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\r\n          });\r\n        }\r\n\r\n      case \"ObjectProperty\":\r\n        return this.isAssignable(node.value);\r\n\r\n      case \"SpreadElement\":\r\n        return this.isAssignable(node.argument);\r\n\r\n      case \"ArrayExpression\":\r\n        return node.elements.every(element => element === null || this.isAssignable(element));\r\n\r\n      case \"AssignmentExpression\":\r\n        return node.operator === \"=\";\r\n\r\n      case \"ParenthesizedExpression\":\r\n        return this.isAssignable(node.expression);\r\n\r\n      case \"MemberExpression\":\r\n      case \"OptionalMemberExpression\":\r\n        return !isBinding;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  toReferencedList(exprList, isParenthesizedExpr) {\r\n    return exprList;\r\n  }\r\n\r\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\r\n    this.toReferencedList(exprList, isParenthesizedExpr);\r\n\r\n    for (const expr of exprList) {\r\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\r\n        this.toReferencedListDeep(expr.elements);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\r\n    const node = this.startNode();\r\n    this.next();\r\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\r\n    return this.finishNode(node, \"SpreadElement\");\r\n  }\r\n\r\n  parseRestBinding() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    node.argument = this.parseBindingAtom();\r\n    return this.finishNode(node, \"RestElement\");\r\n  }\r\n\r\n  parseBindingAtom() {\r\n    switch (this.state.type) {\r\n      case 0:\r\n        {\r\n          const node = this.startNode();\r\n          this.next();\r\n          node.elements = this.parseBindingList(3, 93, true);\r\n          return this.finishNode(node, \"ArrayPattern\");\r\n        }\r\n\r\n      case 5:\r\n        return this.parseObjectLike(8, true);\r\n    }\r\n\r\n    return this.parseIdentifier();\r\n  }\r\n\r\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\r\n    const elts = [];\r\n    let first = true;\r\n\r\n    while (!this.eat(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n      }\r\n\r\n      if (allowEmpty && this.match(12)) {\r\n        elts.push(null);\r\n      } else if (this.eat(close)) {\r\n        break;\r\n      } else if (this.match(21)) {\r\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\r\n        this.checkCommaAfterRest(closeCharCode);\r\n        this.expect(close);\r\n        break;\r\n      } else {\r\n        const decorators = [];\r\n\r\n        if (this.match(24) && this.hasPlugin(\"decorators\")) {\r\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\r\n        }\r\n\r\n        while (this.match(24)) {\r\n          decorators.push(this.parseDecorator());\r\n        }\r\n\r\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\r\n      }\r\n    }\r\n\r\n    return elts;\r\n  }\r\n\r\n  parseBindingRestProperty(prop) {\r\n    this.next();\r\n    prop.argument = this.parseIdentifier();\r\n    this.checkCommaAfterRest(125);\r\n    return this.finishNode(prop, \"RestElement\");\r\n  }\r\n\r\n  parseBindingProperty() {\r\n    const prop = this.startNode();\r\n    const {\r\n      type,\r\n      start: startPos,\r\n      startLoc\r\n    } = this.state;\r\n\r\n    if (type === 21) {\r\n      return this.parseBindingRestProperty(prop);\r\n    } else {\r\n      this.parsePropertyName(prop);\r\n    }\r\n\r\n    prop.method = false;\r\n    this.parseObjPropValue(prop, startPos, startLoc, false, false, true, false);\r\n    return prop;\r\n  }\r\n\r\n  parseAssignableListItem(allowModifiers, decorators) {\r\n    const left = this.parseMaybeDefault();\r\n    this.parseAssignableListItemTypes(left);\r\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\r\n\r\n    if (decorators.length) {\r\n      left.decorators = decorators;\r\n    }\r\n\r\n    return elt;\r\n  }\r\n\r\n  parseAssignableListItemTypes(param) {\r\n    return param;\r\n  }\r\n\r\n  parseMaybeDefault(startPos, startLoc, left) {\r\n    var _startLoc, _startPos, _left;\r\n\r\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\r\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\r\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\r\n    if (!this.eat(27)) return left;\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    node.left = left;\r\n    node.right = this.parseMaybeAssignAllowIn();\r\n    return this.finishNode(node, \"AssignmentPattern\");\r\n  }\r\n\r\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\r\n    switch (expr.type) {\r\n      case \"Identifier\":\r\n        {\r\n          const {\r\n            name\r\n          } = expr;\r\n\r\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\r\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\r\n          }\r\n\r\n          if (checkClashes) {\r\n            if (checkClashes.has(name)) {\r\n              this.raise(expr.start, ErrorMessages.ParamDupe);\r\n            } else {\r\n              checkClashes.add(name);\r\n            }\r\n          }\r\n\r\n          if (disallowLetBinding && name === \"let\") {\r\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\r\n          }\r\n\r\n          if (!(bindingType & BIND_NONE)) {\r\n            this.scope.declareName(name, bindingType, expr.start);\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n      case \"MemberExpression\":\r\n        if (bindingType !== BIND_NONE) {\r\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"ObjectPattern\":\r\n        for (let prop of expr.properties) {\r\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\r\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"ArrayPattern\":\r\n        for (const elem of expr.elements) {\r\n          if (elem) {\r\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case \"AssignmentPattern\":\r\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\r\n        break;\r\n\r\n      case \"RestElement\":\r\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\r\n        break;\r\n\r\n      case \"ParenthesizedExpression\":\r\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\r\n        break;\r\n\r\n      default:\r\n        {\r\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\r\n        }\r\n    }\r\n  }\r\n\r\n  checkToRestConversion(node) {\r\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\r\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\r\n    }\r\n  }\r\n\r\n  checkCommaAfterRest(close) {\r\n    if (this.match(12)) {\r\n      if (this.lookaheadCharCode() === close) {\r\n        this.raiseTrailingCommaAfterRest(this.state.start);\r\n      } else {\r\n        this.raiseRestNotLast(this.state.start);\r\n      }\r\n    }\r\n  }\r\n\r\n  raiseRestNotLast(pos) {\r\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\r\n  }\r\n\r\n  raiseTrailingCommaAfterRest(pos) {\r\n    this.raise(pos, ErrorMessages.RestTrailingComma);\r\n  }\r\n\r\n}\r\n\r\nconst invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\r\nclass ExpressionParser extends LValParser {\r\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\r\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\r\n      return;\r\n    }\r\n\r\n    const key = prop.key;\r\n    const name = key.type === \"Identifier\" ? key.name : key.value;\r\n\r\n    if (name === \"__proto__\") {\r\n      if (isRecord) {\r\n        this.raise(key.start, ErrorMessages.RecordNoProto);\r\n        return;\r\n      }\r\n\r\n      if (protoRef.used) {\r\n        if (refExpressionErrors) {\r\n          if (refExpressionErrors.doubleProto === -1) {\r\n            refExpressionErrors.doubleProto = key.start;\r\n          }\r\n        } else {\r\n          this.raise(key.start, ErrorMessages.DuplicateProto);\r\n        }\r\n      }\r\n\r\n      protoRef.used = true;\r\n    }\r\n  }\r\n\r\n  shouldExitDescending(expr, potentialArrowAt) {\r\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\r\n  }\r\n\r\n  getExpression() {\r\n    this.enterInitialScopes();\r\n    this.nextToken();\r\n    const expr = this.parseExpression();\r\n\r\n    if (!this.match(129)) {\r\n      this.unexpected();\r\n    }\r\n\r\n    this.finalizeRemainingComments();\r\n    expr.comments = this.state.comments;\r\n    expr.errors = this.state.errors;\r\n\r\n    if (this.options.tokens) {\r\n      expr.tokens = this.tokens;\r\n    }\r\n\r\n    return expr;\r\n  }\r\n\r\n  parseExpression(disallowIn, refExpressionErrors) {\r\n    if (disallowIn) {\r\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\r\n    }\r\n\r\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\r\n  }\r\n\r\n  parseExpressionBase(refExpressionErrors) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const expr = this.parseMaybeAssign(refExpressionErrors);\r\n\r\n    if (this.match(12)) {\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      node.expressions = [expr];\r\n\r\n      while (this.eat(12)) {\r\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\r\n      }\r\n\r\n      this.toReferencedList(node.expressions);\r\n      return this.finishNode(node, \"SequenceExpression\");\r\n    }\r\n\r\n    return expr;\r\n  }\r\n\r\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\r\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\r\n  }\r\n\r\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\r\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\r\n  }\r\n\r\n  setOptionalParametersError(refExpressionErrors, resultError) {\r\n    var _resultError$pos;\r\n\r\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\r\n  }\r\n\r\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n\r\n    if (this.isContextual(99)) {\r\n      if (this.prodParam.hasYield) {\r\n        let left = this.parseYield();\r\n\r\n        if (afterLeftParse) {\r\n          left = afterLeftParse.call(this, left, startPos, startLoc);\r\n        }\r\n\r\n        return left;\r\n      }\r\n    }\r\n\r\n    let ownExpressionErrors;\r\n\r\n    if (refExpressionErrors) {\r\n      ownExpressionErrors = false;\r\n    } else {\r\n      refExpressionErrors = new ExpressionErrors();\r\n      ownExpressionErrors = true;\r\n    }\r\n\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    if (type === 10 || tokenIsIdentifier(type)) {\r\n      this.state.potentialArrowAt = this.state.start;\r\n    }\r\n\r\n    let left = this.parseMaybeConditional(refExpressionErrors);\r\n\r\n    if (afterLeftParse) {\r\n      left = afterLeftParse.call(this, left, startPos, startLoc);\r\n    }\r\n\r\n    if (tokenIsAssignment(this.state.type)) {\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      const operator = this.state.value;\r\n      node.operator = operator;\r\n\r\n      if (this.match(27)) {\r\n        node.left = this.toAssignable(left, true);\r\n\r\n        if (refExpressionErrors.doubleProto >= startPos) {\r\n          refExpressionErrors.doubleProto = -1;\r\n        }\r\n\r\n        if (refExpressionErrors.shorthandAssign >= startPos) {\r\n          refExpressionErrors.shorthandAssign = -1;\r\n        }\r\n      } else {\r\n        node.left = left;\r\n      }\r\n\r\n      this.checkLVal(left, \"assignment expression\");\r\n      this.next();\r\n      node.right = this.parseMaybeAssign();\r\n      return this.finishNode(node, \"AssignmentExpression\");\r\n    } else if (ownExpressionErrors) {\r\n      this.checkExpressionErrors(refExpressionErrors, true);\r\n    }\r\n\r\n    return left;\r\n  }\r\n\r\n  parseMaybeConditional(refExpressionErrors) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const potentialArrowAt = this.state.potentialArrowAt;\r\n    const expr = this.parseExprOps(refExpressionErrors);\r\n\r\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\r\n      return expr;\r\n    }\r\n\r\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\r\n  }\r\n\r\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\r\n    if (this.eat(17)) {\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      node.test = expr;\r\n      node.consequent = this.parseMaybeAssignAllowIn();\r\n      this.expect(14);\r\n      node.alternate = this.parseMaybeAssign();\r\n      return this.finishNode(node, \"ConditionalExpression\");\r\n    }\r\n\r\n    return expr;\r\n  }\r\n\r\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\r\n    return this.match(128) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\r\n  }\r\n\r\n  parseExprOps(refExpressionErrors) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const potentialArrowAt = this.state.potentialArrowAt;\r\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\r\n\r\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\r\n      return expr;\r\n    }\r\n\r\n    return this.parseExprOp(expr, startPos, startLoc, -1);\r\n  }\r\n\r\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\r\n    if (this.isPrivateName(left)) {\r\n      const value = this.getPrivateNameSV(left);\r\n      const {\r\n        start\r\n      } = left;\r\n\r\n      if (minPrec >= tokenOperatorPrecedence(52) || !this.prodParam.hasIn || !this.match(52)) {\r\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\r\n      }\r\n\r\n      this.classScope.usePrivateName(value, start);\r\n    }\r\n\r\n    const op = this.state.type;\r\n\r\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(52))) {\r\n      let prec = tokenOperatorPrecedence(op);\r\n\r\n      if (prec > minPrec) {\r\n        if (op === 35) {\r\n          this.expectPlugin(\"pipelineOperator\");\r\n\r\n          if (this.state.inFSharpPipelineDirectBody) {\r\n            return left;\r\n          }\r\n\r\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\r\n        }\r\n\r\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\r\n        node.left = left;\r\n        node.operator = this.state.value;\r\n        const logical = op === 37 || op === 38;\r\n        const coalesce = op === 36;\r\n\r\n        if (coalesce) {\r\n          prec = tokenOperatorPrecedence(38);\r\n        }\r\n\r\n        this.next();\r\n\r\n        if (op === 35 && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\r\n          if (this.state.type === 90 && this.prodParam.hasAwait) {\r\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\r\n          }\r\n        }\r\n\r\n        node.right = this.parseExprOpRightExpr(op, prec);\r\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\r\n        const nextOp = this.state.type;\r\n\r\n        if (coalesce && (nextOp === 37 || nextOp === 38) || logical && nextOp === 36) {\r\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\r\n        }\r\n\r\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\r\n      }\r\n    }\r\n\r\n    return left;\r\n  }\r\n\r\n  parseExprOpRightExpr(op, prec) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n\r\n    switch (op) {\r\n      case 35:\r\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\r\n          case \"hack\":\r\n            return this.withTopicBindingContext(() => {\r\n              return this.parseHackPipeBody();\r\n            });\r\n\r\n          case \"smart\":\r\n            return this.withTopicBindingContext(() => {\r\n              if (this.prodParam.hasYield && this.isContextual(99)) {\r\n                throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\r\n              }\r\n\r\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\r\n            });\r\n\r\n          case \"fsharp\":\r\n            return this.withSoloAwaitPermittingContext(() => {\r\n              return this.parseFSharpPipelineBody(prec);\r\n            });\r\n        }\r\n\r\n      default:\r\n        return this.parseExprOpBaseRightExpr(op, prec);\r\n    }\r\n  }\r\n\r\n  parseExprOpBaseRightExpr(op, prec) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\r\n  }\r\n\r\n  parseHackPipeBody() {\r\n    var _body$extra;\r\n\r\n    const {\r\n      start\r\n    } = this.state;\r\n    const body = this.parseMaybeAssign();\r\n\r\n    if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\r\n      this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\r\n    }\r\n\r\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\r\n      this.raise(start, ErrorMessages.PipeTopicUnused);\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  checkExponentialAfterUnary(node) {\r\n    if (this.match(51)) {\r\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\r\n    }\r\n  }\r\n\r\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const isAwait = this.isContextual(90);\r\n\r\n    if (isAwait && this.isAwaitAllowed()) {\r\n      this.next();\r\n      const expr = this.parseAwait(startPos, startLoc);\r\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\r\n      return expr;\r\n    }\r\n\r\n    const update = this.match(32);\r\n    const node = this.startNode();\r\n\r\n    if (tokenIsPrefix(this.state.type)) {\r\n      node.operator = this.state.value;\r\n      node.prefix = true;\r\n\r\n      if (this.match(66)) {\r\n        this.expectPlugin(\"throwExpressions\");\r\n      }\r\n\r\n      const isDelete = this.match(83);\r\n      this.next();\r\n      node.argument = this.parseMaybeUnary(null, true);\r\n      this.checkExpressionErrors(refExpressionErrors, true);\r\n\r\n      if (this.state.strict && isDelete) {\r\n        const arg = node.argument;\r\n\r\n        if (arg.type === \"Identifier\") {\r\n          this.raise(node.start, ErrorMessages.StrictDelete);\r\n        } else if (this.hasPropertyAsPrivateName(arg)) {\r\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\r\n        }\r\n      }\r\n\r\n      if (!update) {\r\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\r\n        return this.finishNode(node, \"UnaryExpression\");\r\n      }\r\n    }\r\n\r\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\r\n\r\n    if (isAwait) {\r\n      const {\r\n        type\r\n      } = this.state;\r\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(48);\r\n\r\n      if (startsExpr && !this.isAmbiguousAwait()) {\r\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\r\n        return this.parseAwait(startPos, startLoc);\r\n      }\r\n    }\r\n\r\n    return expr;\r\n  }\r\n\r\n  parseUpdate(node, update, refExpressionErrors) {\r\n    if (update) {\r\n      this.checkLVal(node.argument, \"prefix operation\");\r\n      return this.finishNode(node, \"UpdateExpression\");\r\n    }\r\n\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    let expr = this.parseExprSubscripts(refExpressionErrors);\r\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\r\n\r\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\r\n      const node = this.startNodeAt(startPos, startLoc);\r\n      node.operator = this.state.value;\r\n      node.prefix = false;\r\n      node.argument = expr;\r\n      this.checkLVal(expr, \"postfix operation\");\r\n      this.next();\r\n      expr = this.finishNode(node, \"UpdateExpression\");\r\n    }\r\n\r\n    return expr;\r\n  }\r\n\r\n  parseExprSubscripts(refExpressionErrors) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    const potentialArrowAt = this.state.potentialArrowAt;\r\n    const expr = this.parseExprAtom(refExpressionErrors);\r\n\r\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\r\n      return expr;\r\n    }\r\n\r\n    return this.parseSubscripts(expr, startPos, startLoc);\r\n  }\r\n\r\n  parseSubscripts(base, startPos, startLoc, noCalls) {\r\n    const state = {\r\n      optionalChainMember: false,\r\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\r\n      stop: false\r\n    };\r\n\r\n    do {\r\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\r\n      state.maybeAsyncArrow = false;\r\n    } while (!state.stop);\r\n\r\n    return base;\r\n  }\r\n\r\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\r\n    if (!noCalls && this.eat(15)) {\r\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\r\n    } else if (this.match(22)) {\r\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\r\n    }\r\n\r\n    let optional = false;\r\n\r\n    if (this.match(18)) {\r\n      if (noCalls && this.lookaheadCharCode() === 40) {\r\n        state.stop = true;\r\n        return base;\r\n      }\r\n\r\n      state.optionalChainMember = optional = true;\r\n      this.next();\r\n    }\r\n\r\n    if (!noCalls && this.match(10)) {\r\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\r\n    } else {\r\n      const computed = this.eat(0);\r\n\r\n      if (computed || optional || this.eat(16)) {\r\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\r\n      } else {\r\n        state.stop = true;\r\n        return base;\r\n      }\r\n    }\r\n  }\r\n\r\n  parseMember(base, startPos, startLoc, state, computed, optional) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    node.object = base;\r\n    node.computed = computed;\r\n    const privateName = !computed && this.match(128) && this.state.value;\r\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\r\n\r\n    if (privateName !== false) {\r\n      if (node.object.type === \"Super\") {\r\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\r\n      }\r\n\r\n      this.classScope.usePrivateName(privateName, property.start);\r\n    }\r\n\r\n    node.property = property;\r\n\r\n    if (computed) {\r\n      this.expect(3);\r\n    }\r\n\r\n    if (state.optionalChainMember) {\r\n      node.optional = optional;\r\n      return this.finishNode(node, \"OptionalMemberExpression\");\r\n    } else {\r\n      return this.finishNode(node, \"MemberExpression\");\r\n    }\r\n  }\r\n\r\n  parseBind(base, startPos, startLoc, noCalls, state) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    node.object = base;\r\n    node.callee = this.parseNoCallExpr();\r\n    state.stop = true;\r\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\r\n  }\r\n\r\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    let refExpressionErrors = null;\r\n    this.state.maybeInArrowParameters = true;\r\n    this.next();\r\n    let node = this.startNodeAt(startPos, startLoc);\r\n    node.callee = base;\r\n\r\n    if (state.maybeAsyncArrow) {\r\n      this.expressionScope.enter(newAsyncArrowScope());\r\n      refExpressionErrors = new ExpressionErrors();\r\n    }\r\n\r\n    if (state.optionalChainMember) {\r\n      node.optional = optional;\r\n    }\r\n\r\n    if (optional) {\r\n      node.arguments = this.parseCallExpressionArguments(11);\r\n    } else {\r\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\r\n    }\r\n\r\n    this.finishCallExpression(node, state.optionalChainMember);\r\n\r\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\r\n      state.stop = true;\r\n      this.expressionScope.validateAsPattern();\r\n      this.expressionScope.exit();\r\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\r\n    } else {\r\n      if (state.maybeAsyncArrow) {\r\n        this.checkExpressionErrors(refExpressionErrors, true);\r\n        this.expressionScope.exit();\r\n      }\r\n\r\n      this.toReferencedArguments(node);\r\n    }\r\n\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    return node;\r\n  }\r\n\r\n  toReferencedArguments(node, isParenthesizedExpr) {\r\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\r\n  }\r\n\r\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    node.tag = base;\r\n    node.quasi = this.parseTemplate(true);\r\n\r\n    if (state.optionalChainMember) {\r\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\r\n    }\r\n\r\n    return this.finishNode(node, \"TaggedTemplateExpression\");\r\n  }\r\n\r\n  atPossibleAsyncArrow(base) {\r\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\r\n  }\r\n\r\n  finishCallExpression(node, optional) {\r\n    if (node.callee.type === \"Import\") {\r\n      if (node.arguments.length === 2) {\r\n        {\r\n          if (!this.hasPlugin(\"moduleAttributes\")) {\r\n            this.expectPlugin(\"importAssertions\");\r\n          }\r\n        }\r\n      }\r\n\r\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\r\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\r\n      } else {\r\n        for (const arg of node.arguments) {\r\n          if (arg.type === \"SpreadElement\") {\r\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\r\n  }\r\n\r\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\r\n    const elts = [];\r\n    let first = true;\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n\r\n    while (!this.eat(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n\r\n        if (this.match(close)) {\r\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\r\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\r\n          }\r\n\r\n          if (nodeForExtra) {\r\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\r\n          }\r\n\r\n          this.next();\r\n          break;\r\n        }\r\n      }\r\n\r\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\r\n    }\r\n\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    return elts;\r\n  }\r\n\r\n  shouldParseAsyncArrow() {\r\n    return this.match(19) && !this.canInsertSemicolon();\r\n  }\r\n\r\n  parseAsyncArrowFromCallExpression(node, call) {\r\n    var _call$extra;\r\n\r\n    this.resetPreviousNodeTrailingComments(call);\r\n    this.expect(19);\r\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\r\n\r\n    if (call.innerComments) {\r\n      setInnerComments(node, call.innerComments);\r\n    }\r\n\r\n    if (call.callee.trailingComments) {\r\n      setInnerComments(node, call.callee.trailingComments);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  parseNoCallExpr() {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\r\n  }\r\n\r\n  parseExprAtom(refExpressionErrors) {\r\n    let node;\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    switch (type) {\r\n      case 73:\r\n        return this.parseSuper();\r\n\r\n      case 77:\r\n        node = this.startNode();\r\n        this.next();\r\n\r\n        if (this.match(16)) {\r\n          return this.parseImportMetaProperty(node);\r\n        }\r\n\r\n        if (!this.match(10)) {\r\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\r\n        }\r\n\r\n        return this.finishNode(node, \"Import\");\r\n\r\n      case 72:\r\n        node = this.startNode();\r\n        this.next();\r\n        return this.finishNode(node, \"ThisExpression\");\r\n\r\n      case 84:\r\n        {\r\n          return this.parseDo(this.startNode(), false);\r\n        }\r\n\r\n      case 50:\r\n      case 29:\r\n        {\r\n          this.readRegexp();\r\n          return this.parseRegExpLiteral(this.state.value);\r\n        }\r\n\r\n      case 124:\r\n        return this.parseNumericLiteral(this.state.value);\r\n\r\n      case 125:\r\n        return this.parseBigIntLiteral(this.state.value);\r\n\r\n      case 126:\r\n        return this.parseDecimalLiteral(this.state.value);\r\n\r\n      case 123:\r\n        return this.parseStringLiteral(this.state.value);\r\n\r\n      case 78:\r\n        return this.parseNullLiteral();\r\n\r\n      case 79:\r\n        return this.parseBooleanLiteral(true);\r\n\r\n      case 80:\r\n        return this.parseBooleanLiteral(false);\r\n\r\n      case 10:\r\n        {\r\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\r\n          return this.parseParenAndDistinguishExpression(canBeArrow);\r\n        }\r\n\r\n      case 2:\r\n      case 1:\r\n        {\r\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\r\n        }\r\n\r\n      case 0:\r\n        {\r\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\r\n        }\r\n\r\n      case 6:\r\n      case 7:\r\n        {\r\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\r\n        }\r\n\r\n      case 5:\r\n        {\r\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\r\n        }\r\n\r\n      case 62:\r\n        return this.parseFunctionOrFunctionSent();\r\n\r\n      case 24:\r\n        this.parseDecorators();\r\n\r\n      case 74:\r\n        node = this.startNode();\r\n        this.takeDecorators(node);\r\n        return this.parseClass(node, false);\r\n\r\n      case 71:\r\n        return this.parseNewOrNewTarget();\r\n\r\n      case 22:\r\n        return this.parseTemplate(false);\r\n\r\n      case 15:\r\n        {\r\n          node = this.startNode();\r\n          this.next();\r\n          node.object = null;\r\n          const callee = node.callee = this.parseNoCallExpr();\r\n\r\n          if (callee.type === \"MemberExpression\") {\r\n            return this.finishNode(node, \"BindExpression\");\r\n          } else {\r\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\r\n          }\r\n        }\r\n\r\n      case 128:\r\n        {\r\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\r\n          return this.parsePrivateName();\r\n        }\r\n\r\n      case 31:\r\n        {\r\n          return this.parseTopicReferenceThenEqualsSign(48, \"%\");\r\n        }\r\n\r\n      case 30:\r\n        {\r\n          return this.parseTopicReferenceThenEqualsSign(40, \"^\");\r\n        }\r\n\r\n      case 40:\r\n      case 48:\r\n      case 25:\r\n        {\r\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\r\n\r\n          if (pipeProposal) {\r\n            return this.parseTopicReference(pipeProposal);\r\n          } else {\r\n            throw this.unexpected();\r\n          }\r\n        }\r\n\r\n      case 43:\r\n        {\r\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\r\n\r\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\r\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\r\n            break;\r\n          } else {\r\n            throw this.unexpected();\r\n          }\r\n        }\r\n\r\n      default:\r\n        if (tokenIsIdentifier(type)) {\r\n          if (this.isContextual(117) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\r\n            return this.parseModuleExpression();\r\n          }\r\n\r\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\r\n          const containsEsc = this.state.containsEsc;\r\n          const id = this.parseIdentifier();\r\n\r\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\r\n            const {\r\n              type\r\n            } = this.state;\r\n\r\n            if (type === 62) {\r\n              this.resetPreviousNodeTrailingComments(id);\r\n              this.next();\r\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\r\n            } else if (tokenIsIdentifier(type)) {\r\n              if (this.lookaheadCharCode() === 61) {\r\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\r\n              } else {\r\n                return id;\r\n              }\r\n            } else if (type === 84) {\r\n              this.resetPreviousNodeTrailingComments(id);\r\n              return this.parseDo(this.startNodeAtNode(id), true);\r\n            }\r\n          }\r\n\r\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\r\n            this.next();\r\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\r\n          }\r\n\r\n          return id;\r\n        } else {\r\n          throw this.unexpected();\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\r\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\r\n\r\n    if (pipeProposal) {\r\n      this.state.type = topicTokenType;\r\n      this.state.value = topicTokenValue;\r\n      this.state.pos--;\r\n      this.state.end--;\r\n      this.state.endLoc.column--;\r\n      return this.parseTopicReference(pipeProposal);\r\n    } else {\r\n      throw this.unexpected();\r\n    }\r\n  }\r\n\r\n  parseTopicReference(pipeProposal) {\r\n    const node = this.startNode();\r\n    const start = this.state.start;\r\n    const tokenType = this.state.type;\r\n    this.next();\r\n    return this.finishTopicReference(node, start, pipeProposal, tokenType);\r\n  }\r\n\r\n  finishTopicReference(node, start, pipeProposal, tokenType) {\r\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\r\n      let nodeType;\r\n\r\n      if (pipeProposal === \"smart\") {\r\n        nodeType = \"PipelinePrimaryTopicReference\";\r\n      } else {\r\n        nodeType = \"TopicReference\";\r\n      }\r\n\r\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\r\n        if (pipeProposal === \"smart\") {\r\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\r\n        } else {\r\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\r\n        }\r\n      }\r\n\r\n      this.registerTopicReference();\r\n      return this.finishNode(node, nodeType);\r\n    } else {\r\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenLabelName(tokenType));\r\n    }\r\n  }\r\n\r\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\r\n    switch (pipeProposal) {\r\n      case \"hack\":\r\n        {\r\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\r\n          return tokenLabelName(tokenType) === pluginTopicToken;\r\n        }\r\n\r\n      case \"smart\":\r\n        return tokenType === 25;\r\n\r\n      default:\r\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\r\n    }\r\n  }\r\n\r\n  parseAsyncArrowUnaryFunction(node) {\r\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\r\n    const params = [this.parseIdentifier()];\r\n    this.prodParam.exit();\r\n\r\n    if (this.hasPrecedingLineBreak()) {\r\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\r\n    }\r\n\r\n    this.expect(19);\r\n    this.parseArrowExpression(node, params, true);\r\n    return node;\r\n  }\r\n\r\n  parseDo(node, isAsync) {\r\n    this.expectPlugin(\"doExpressions\");\r\n\r\n    if (isAsync) {\r\n      this.expectPlugin(\"asyncDoExpressions\");\r\n    }\r\n\r\n    node.async = isAsync;\r\n    this.next();\r\n    const oldLabels = this.state.labels;\r\n    this.state.labels = [];\r\n\r\n    if (isAsync) {\r\n      this.prodParam.enter(PARAM_AWAIT);\r\n      node.body = this.parseBlock();\r\n      this.prodParam.exit();\r\n    } else {\r\n      node.body = this.parseBlock();\r\n    }\r\n\r\n    this.state.labels = oldLabels;\r\n    return this.finishNode(node, \"DoExpression\");\r\n  }\r\n\r\n  parseSuper() {\r\n    const node = this.startNode();\r\n    this.next();\r\n\r\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\r\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\r\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\r\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\r\n    }\r\n\r\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\r\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\r\n    }\r\n\r\n    return this.finishNode(node, \"Super\");\r\n  }\r\n\r\n  parsePrivateName() {\r\n    const node = this.startNode();\r\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\r\n    const name = this.state.value;\r\n    this.next();\r\n    node.id = this.createIdentifier(id, name);\r\n    return this.finishNode(node, \"PrivateName\");\r\n  }\r\n\r\n  parseFunctionOrFunctionSent() {\r\n    const node = this.startNode();\r\n    this.next();\r\n\r\n    if (this.prodParam.hasYield && this.match(16)) {\r\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\r\n      this.next();\r\n\r\n      if (this.match(96)) {\r\n        this.expectPlugin(\"functionSent\");\r\n      } else if (!this.hasPlugin(\"functionSent\")) {\r\n        this.unexpected();\r\n      }\r\n\r\n      return this.parseMetaProperty(node, meta, \"sent\");\r\n    }\r\n\r\n    return this.parseFunction(node);\r\n  }\r\n\r\n  parseMetaProperty(node, meta, propertyName) {\r\n    node.meta = meta;\r\n    const containsEsc = this.state.containsEsc;\r\n    node.property = this.parseIdentifier(true);\r\n\r\n    if (node.property.name !== propertyName || containsEsc) {\r\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\r\n    }\r\n\r\n    return this.finishNode(node, \"MetaProperty\");\r\n  }\r\n\r\n  parseImportMetaProperty(node) {\r\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\r\n    this.next();\r\n\r\n    if (this.isContextual(94)) {\r\n      if (!this.inModule) {\r\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\r\n      }\r\n\r\n      this.sawUnambiguousESM = true;\r\n    }\r\n\r\n    return this.parseMetaProperty(node, id, \"meta\");\r\n  }\r\n\r\n  parseLiteralAtNode(value, type, node) {\r\n    this.addExtra(node, \"rawValue\", value);\r\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\r\n    node.value = value;\r\n    this.next();\r\n    return this.finishNode(node, type);\r\n  }\r\n\r\n  parseLiteral(value, type) {\r\n    const node = this.startNode();\r\n    return this.parseLiteralAtNode(value, type, node);\r\n  }\r\n\r\n  parseStringLiteral(value) {\r\n    return this.parseLiteral(value, \"StringLiteral\");\r\n  }\r\n\r\n  parseNumericLiteral(value) {\r\n    return this.parseLiteral(value, \"NumericLiteral\");\r\n  }\r\n\r\n  parseBigIntLiteral(value) {\r\n    return this.parseLiteral(value, \"BigIntLiteral\");\r\n  }\r\n\r\n  parseDecimalLiteral(value) {\r\n    return this.parseLiteral(value, \"DecimalLiteral\");\r\n  }\r\n\r\n  parseRegExpLiteral(value) {\r\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\r\n    node.pattern = value.pattern;\r\n    node.flags = value.flags;\r\n    return node;\r\n  }\r\n\r\n  parseBooleanLiteral(value) {\r\n    const node = this.startNode();\r\n    node.value = value;\r\n    this.next();\r\n    return this.finishNode(node, \"BooleanLiteral\");\r\n  }\r\n\r\n  parseNullLiteral() {\r\n    const node = this.startNode();\r\n    this.next();\r\n    return this.finishNode(node, \"NullLiteral\");\r\n  }\r\n\r\n  parseParenAndDistinguishExpression(canBeArrow) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    let val;\r\n    this.next();\r\n    this.expressionScope.enter(newArrowHeadScope());\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.maybeInArrowParameters = true;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n    const innerStartPos = this.state.start;\r\n    const innerStartLoc = this.state.startLoc;\r\n    const exprList = [];\r\n    const refExpressionErrors = new ExpressionErrors();\r\n    let first = true;\r\n    let spreadStart;\r\n    let optionalCommaStart;\r\n\r\n    while (!this.match(11)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\r\n\r\n        if (this.match(11)) {\r\n          optionalCommaStart = this.state.start;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.match(21)) {\r\n        const spreadNodeStartPos = this.state.start;\r\n        const spreadNodeStartLoc = this.state.startLoc;\r\n        spreadStart = this.state.start;\r\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\r\n        this.checkCommaAfterRest(41);\r\n        break;\r\n      } else {\r\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\r\n      }\r\n    }\r\n\r\n    const innerEndPos = this.state.lastTokEnd;\r\n    const innerEndLoc = this.state.lastTokEndLoc;\r\n    this.expect(11);\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    let arrowNode = this.startNodeAt(startPos, startLoc);\r\n\r\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\r\n      this.expressionScope.validateAsPattern();\r\n      this.expressionScope.exit();\r\n      this.parseArrowExpression(arrowNode, exprList, false);\r\n      return arrowNode;\r\n    }\r\n\r\n    this.expressionScope.exit();\r\n\r\n    if (!exprList.length) {\r\n      this.unexpected(this.state.lastTokStart);\r\n    }\r\n\r\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\r\n    if (spreadStart) this.unexpected(spreadStart);\r\n    this.checkExpressionErrors(refExpressionErrors, true);\r\n    this.toReferencedListDeep(exprList, true);\r\n\r\n    if (exprList.length > 1) {\r\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\r\n      val.expressions = exprList;\r\n      this.finishNode(val, \"SequenceExpression\");\r\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\r\n    } else {\r\n      val = exprList[0];\r\n    }\r\n\r\n    if (!this.options.createParenthesizedExpressions) {\r\n      this.addExtra(val, \"parenthesized\", true);\r\n      this.addExtra(val, \"parenStart\", startPos);\r\n      this.takeSurroundingComments(val, startPos, this.state.lastTokEnd);\r\n      return val;\r\n    }\r\n\r\n    const parenExpression = this.startNodeAt(startPos, startLoc);\r\n    parenExpression.expression = val;\r\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\r\n    return parenExpression;\r\n  }\r\n\r\n  shouldParseArrow(params) {\r\n    return !this.canInsertSemicolon();\r\n  }\r\n\r\n  parseArrow(node) {\r\n    if (this.eat(19)) {\r\n      return node;\r\n    }\r\n  }\r\n\r\n  parseParenItem(node, startPos, startLoc) {\r\n    return node;\r\n  }\r\n\r\n  parseNewOrNewTarget() {\r\n    const node = this.startNode();\r\n    this.next();\r\n\r\n    if (this.match(16)) {\r\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\r\n      this.next();\r\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\r\n\r\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\r\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\r\n      }\r\n\r\n      return metaProp;\r\n    }\r\n\r\n    return this.parseNew(node);\r\n  }\r\n\r\n  parseNew(node) {\r\n    node.callee = this.parseNoCallExpr();\r\n\r\n    if (node.callee.type === \"Import\") {\r\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\r\n    } else if (this.isOptionalChain(node.callee)) {\r\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\r\n    } else if (this.eat(18)) {\r\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\r\n    }\r\n\r\n    this.parseNewArguments(node);\r\n    return this.finishNode(node, \"NewExpression\");\r\n  }\r\n\r\n  parseNewArguments(node) {\r\n    if (this.eat(10)) {\r\n      const args = this.parseExprList(11);\r\n      this.toReferencedList(args);\r\n      node.arguments = args;\r\n    } else {\r\n      node.arguments = [];\r\n    }\r\n  }\r\n\r\n  parseTemplateElement(isTagged) {\r\n    const elem = this.startNode();\r\n\r\n    if (this.state.value === null) {\r\n      if (!isTagged) {\r\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\r\n      }\r\n    }\r\n\r\n    elem.value = {\r\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\r\n      cooked: this.state.value\r\n    };\r\n    this.next();\r\n    elem.tail = this.match(22);\r\n    return this.finishNode(elem, \"TemplateElement\");\r\n  }\r\n\r\n  parseTemplate(isTagged) {\r\n    const node = this.startNode();\r\n    this.next();\r\n    node.expressions = [];\r\n    let curElt = this.parseTemplateElement(isTagged);\r\n    node.quasis = [curElt];\r\n\r\n    while (!curElt.tail) {\r\n      this.expect(23);\r\n      node.expressions.push(this.parseTemplateSubstitution());\r\n      this.expect(8);\r\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\r\n    }\r\n\r\n    this.next();\r\n    return this.finishNode(node, \"TemplateLiteral\");\r\n  }\r\n\r\n  parseTemplateSubstitution() {\r\n    return this.parseExpression();\r\n  }\r\n\r\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\r\n    if (isRecord) {\r\n      this.expectPlugin(\"recordAndTuple\");\r\n    }\r\n\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n    const propHash = Object.create(null);\r\n    let first = true;\r\n    const node = this.startNode();\r\n    node.properties = [];\r\n    this.next();\r\n\r\n    while (!this.match(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n\r\n        if (this.match(close)) {\r\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\r\n          break;\r\n        }\r\n      }\r\n\r\n      let prop;\r\n\r\n      if (isPattern) {\r\n        prop = this.parseBindingProperty();\r\n      } else {\r\n        prop = this.parsePropertyDefinition(refExpressionErrors);\r\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\r\n      }\r\n\r\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\r\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\r\n      }\r\n\r\n      if (prop.shorthand) {\r\n        this.addExtra(prop, \"shorthand\", true);\r\n      }\r\n\r\n      node.properties.push(prop);\r\n    }\r\n\r\n    this.next();\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    let type = \"ObjectExpression\";\r\n\r\n    if (isPattern) {\r\n      type = \"ObjectPattern\";\r\n    } else if (isRecord) {\r\n      type = \"RecordExpression\";\r\n    }\r\n\r\n    return this.finishNode(node, type);\r\n  }\r\n\r\n  maybeAsyncOrAccessorProp(prop) {\r\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(49));\r\n  }\r\n\r\n  parsePropertyDefinition(refExpressionErrors) {\r\n    let decorators = [];\r\n\r\n    if (this.match(24)) {\r\n      if (this.hasPlugin(\"decorators\")) {\r\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\r\n      }\r\n\r\n      while (this.match(24)) {\r\n        decorators.push(this.parseDecorator());\r\n      }\r\n    }\r\n\r\n    const prop = this.startNode();\r\n    let isAsync = false;\r\n    let isAccessor = false;\r\n    let startPos;\r\n    let startLoc;\r\n\r\n    if (this.match(21)) {\r\n      if (decorators.length) this.unexpected();\r\n      return this.parseSpread();\r\n    }\r\n\r\n    if (decorators.length) {\r\n      prop.decorators = decorators;\r\n      decorators = [];\r\n    }\r\n\r\n    prop.method = false;\r\n\r\n    if (refExpressionErrors) {\r\n      startPos = this.state.start;\r\n      startLoc = this.state.startLoc;\r\n    }\r\n\r\n    let isGenerator = this.eat(49);\r\n    this.parsePropertyNamePrefixOperator(prop);\r\n    const containsEsc = this.state.containsEsc;\r\n    const key = this.parsePropertyName(prop);\r\n\r\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\r\n      const keyName = key.name;\r\n\r\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\r\n        isAsync = true;\r\n        this.resetPreviousNodeTrailingComments(key);\r\n        isGenerator = this.eat(49);\r\n        this.parsePropertyName(prop);\r\n      }\r\n\r\n      if (keyName === \"get\" || keyName === \"set\") {\r\n        isAccessor = true;\r\n        this.resetPreviousNodeTrailingComments(key);\r\n        prop.kind = keyName;\r\n\r\n        if (this.match(49)) {\r\n          isGenerator = true;\r\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\r\n          this.next();\r\n        }\r\n\r\n        this.parsePropertyName(prop);\r\n      }\r\n    }\r\n\r\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\r\n    return prop;\r\n  }\r\n\r\n  getGetterSetterExpectedParamCount(method) {\r\n    return method.kind === \"get\" ? 0 : 1;\r\n  }\r\n\r\n  getObjectOrClassMethodParams(method) {\r\n    return method.params;\r\n  }\r\n\r\n  checkGetterSetterParams(method) {\r\n    var _params;\r\n\r\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\r\n    const params = this.getObjectOrClassMethodParams(method);\r\n    const start = method.start;\r\n\r\n    if (params.length !== paramCount) {\r\n      if (method.kind === \"get\") {\r\n        this.raise(start, ErrorMessages.BadGetterArity);\r\n      } else {\r\n        this.raise(start, ErrorMessages.BadSetterArity);\r\n      }\r\n    }\r\n\r\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\r\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\r\n    }\r\n  }\r\n\r\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\r\n    if (isAccessor) {\r\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\r\n      this.checkGetterSetterParams(prop);\r\n      return prop;\r\n    }\r\n\r\n    if (isAsync || isGenerator || this.match(10)) {\r\n      if (isPattern) this.unexpected();\r\n      prop.kind = \"method\";\r\n      prop.method = true;\r\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\r\n    }\r\n  }\r\n\r\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\r\n    prop.shorthand = false;\r\n\r\n    if (this.eat(14)) {\r\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\r\n      return this.finishNode(prop, \"ObjectProperty\");\r\n    }\r\n\r\n    if (!prop.computed && prop.key.type === \"Identifier\") {\r\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\r\n\r\n      if (isPattern) {\r\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\r\n      } else if (this.match(27) && refExpressionErrors) {\r\n        if (refExpressionErrors.shorthandAssign === -1) {\r\n          refExpressionErrors.shorthandAssign = this.state.start;\r\n        }\r\n\r\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\r\n      } else {\r\n        prop.value = cloneIdentifier(prop.key);\r\n      }\r\n\r\n      prop.shorthand = true;\r\n      return this.finishNode(prop, \"ObjectProperty\");\r\n    }\r\n  }\r\n\r\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\r\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\r\n    if (!node) this.unexpected();\r\n    return node;\r\n  }\r\n\r\n  parsePropertyName(prop) {\r\n    if (this.eat(0)) {\r\n      prop.computed = true;\r\n      prop.key = this.parseMaybeAssignAllowIn();\r\n      this.expect(3);\r\n    } else {\r\n      const {\r\n        type,\r\n        value\r\n      } = this.state;\r\n      let key;\r\n\r\n      if (tokenIsKeywordOrIdentifier(type)) {\r\n        key = this.parseIdentifier(true);\r\n      } else {\r\n        switch (type) {\r\n          case 124:\r\n            key = this.parseNumericLiteral(value);\r\n            break;\r\n\r\n          case 123:\r\n            key = this.parseStringLiteral(value);\r\n            break;\r\n\r\n          case 125:\r\n            key = this.parseBigIntLiteral(value);\r\n            break;\r\n\r\n          case 126:\r\n            key = this.parseDecimalLiteral(value);\r\n            break;\r\n\r\n          case 128:\r\n            {\r\n              const privateKeyPos = this.state.start + 1;\r\n              this.raise(privateKeyPos, ErrorMessages.UnexpectedPrivateField);\r\n              key = this.parsePrivateName();\r\n              break;\r\n            }\r\n\r\n          default:\r\n            throw this.unexpected();\r\n        }\r\n      }\r\n\r\n      prop.key = key;\r\n\r\n      if (type !== 128) {\r\n        prop.computed = false;\r\n      }\r\n    }\r\n\r\n    return prop.key;\r\n  }\r\n\r\n  initFunction(node, isAsync) {\r\n    node.id = null;\r\n    node.generator = false;\r\n    node.async = !!isAsync;\r\n  }\r\n\r\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\r\n    this.initFunction(node, isAsync);\r\n    node.generator = !!isGenerator;\r\n    const allowModifiers = isConstructor;\r\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\r\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\r\n    this.parseFunctionParams(node, allowModifiers);\r\n    this.parseFunctionBodyAndFinish(node, type, true);\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n    return node;\r\n  }\r\n\r\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\r\n    if (isTuple) {\r\n      this.expectPlugin(\"recordAndTuple\");\r\n    }\r\n\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = false;\r\n    const node = this.startNode();\r\n    this.next();\r\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\r\n  }\r\n\r\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\r\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\r\n    let flags = functionFlags(isAsync, false);\r\n\r\n    if (!this.match(0) && this.prodParam.hasIn) {\r\n      flags |= PARAM_IN;\r\n    }\r\n\r\n    this.prodParam.enter(flags);\r\n    this.initFunction(node, isAsync);\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n\r\n    if (params) {\r\n      this.state.maybeInArrowParameters = true;\r\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\r\n    }\r\n\r\n    this.state.maybeInArrowParameters = false;\r\n    this.parseFunctionBody(node, true);\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    return this.finishNode(node, \"ArrowFunctionExpression\");\r\n  }\r\n\r\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\r\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\r\n  }\r\n\r\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\r\n    this.parseFunctionBody(node, false, isMethod);\r\n    this.finishNode(node, type);\r\n  }\r\n\r\n  parseFunctionBody(node, allowExpression, isMethod = false) {\r\n    const isExpression = allowExpression && !this.match(5);\r\n    this.expressionScope.enter(newExpressionScope());\r\n\r\n    if (isExpression) {\r\n      node.body = this.parseMaybeAssign();\r\n      this.checkParams(node, false, allowExpression, false);\r\n    } else {\r\n      const oldStrict = this.state.strict;\r\n      const oldLabels = this.state.labels;\r\n      this.state.labels = [];\r\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\r\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\r\n        const nonSimple = !this.isSimpleParamList(node.params);\r\n\r\n        if (hasStrictModeDirective && nonSimple) {\r\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\r\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\r\n        }\r\n\r\n        const strictModeChanged = !oldStrict && this.state.strict;\r\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\r\n\r\n        if (this.state.strict && node.id) {\r\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\r\n        }\r\n      });\r\n      this.prodParam.exit();\r\n      this.state.labels = oldLabels;\r\n    }\r\n\r\n    this.expressionScope.exit();\r\n  }\r\n\r\n  isSimpleParamList(params) {\r\n    for (let i = 0, len = params.length; i < len; i++) {\r\n      if (params[i].type !== \"Identifier\") return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\r\n    const checkClashes = new Set();\r\n\r\n    for (const param of node.params) {\r\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\r\n    }\r\n  }\r\n\r\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\r\n    const elts = [];\r\n    let first = true;\r\n\r\n    while (!this.eat(close)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n\r\n        if (this.match(close)) {\r\n          if (nodeForExtra) {\r\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\r\n          }\r\n\r\n          this.next();\r\n          break;\r\n        }\r\n      }\r\n\r\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\r\n    }\r\n\r\n    return elts;\r\n  }\r\n\r\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\r\n    let elt;\r\n\r\n    if (this.match(12)) {\r\n      if (!allowEmpty) {\r\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\r\n      }\r\n\r\n      elt = null;\r\n    } else if (this.match(21)) {\r\n      const spreadNodeStartPos = this.state.start;\r\n      const spreadNodeStartLoc = this.state.startLoc;\r\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\r\n    } else if (this.match(17)) {\r\n      this.expectPlugin(\"partialApplication\");\r\n\r\n      if (!allowPlaceholder) {\r\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\r\n      }\r\n\r\n      const node = this.startNode();\r\n      this.next();\r\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\r\n    } else {\r\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\r\n    }\r\n\r\n    return elt;\r\n  }\r\n\r\n  parseIdentifier(liberal) {\r\n    const node = this.startNode();\r\n    const name = this.parseIdentifierName(node.start, liberal);\r\n    return this.createIdentifier(node, name);\r\n  }\r\n\r\n  createIdentifier(node, name) {\r\n    node.name = name;\r\n    node.loc.identifierName = name;\r\n    return this.finishNode(node, \"Identifier\");\r\n  }\r\n\r\n  parseIdentifierName(pos, liberal) {\r\n    let name;\r\n    const {\r\n      start,\r\n      type\r\n    } = this.state;\r\n\r\n    if (tokenIsKeywordOrIdentifier(type)) {\r\n      name = this.state.value;\r\n    } else {\r\n      throw this.unexpected();\r\n    }\r\n\r\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\r\n\r\n    if (liberal) {\r\n      if (tokenIsKeyword) {\r\n        this.replaceToken(122);\r\n      }\r\n    } else {\r\n      this.checkReservedWord(name, start, tokenIsKeyword, false);\r\n    }\r\n\r\n    this.next();\r\n    return name;\r\n  }\r\n\r\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\r\n    if (word.length > 10) {\r\n      return;\r\n    }\r\n\r\n    if (!canBeReservedWord(word)) {\r\n      return;\r\n    }\r\n\r\n    if (word === \"yield\") {\r\n      if (this.prodParam.hasYield) {\r\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\r\n        return;\r\n      }\r\n    } else if (word === \"await\") {\r\n      if (this.prodParam.hasAwait) {\r\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\r\n        return;\r\n      } else if (this.scope.inStaticBlock) {\r\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\r\n        return;\r\n      } else {\r\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\r\n      }\r\n    } else if (word === \"arguments\") {\r\n      if (this.scope.inClassAndNotInNonArrowFunction) {\r\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (checkKeywords && isKeyword(word)) {\r\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\r\n      return;\r\n    }\r\n\r\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\r\n\r\n    if (reservedTest(word, this.inModule)) {\r\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\r\n    }\r\n  }\r\n\r\n  isAwaitAllowed() {\r\n    if (this.prodParam.hasAwait) return true;\r\n\r\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  parseAwait(startPos, startLoc) {\r\n    const node = this.startNodeAt(startPos, startLoc);\r\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\r\n\r\n    if (this.eat(49)) {\r\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\r\n    }\r\n\r\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\r\n      if (this.isAmbiguousAwait()) {\r\n        this.ambiguousScriptDifferentAst = true;\r\n      } else {\r\n        this.sawUnambiguousESM = true;\r\n      }\r\n    }\r\n\r\n    if (!this.state.soloAwait) {\r\n      node.argument = this.parseMaybeUnary(null, true);\r\n    }\r\n\r\n    return this.finishNode(node, \"AwaitExpression\");\r\n  }\r\n\r\n  isAmbiguousAwait() {\r\n    return this.hasPrecedingLineBreak() || this.match(47) || this.match(10) || this.match(0) || this.match(22) || this.match(127) || this.match(50) || this.hasPlugin(\"v8intrinsic\") && this.match(48);\r\n  }\r\n\r\n  parseYield() {\r\n    const node = this.startNode();\r\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\r\n    this.next();\r\n    let delegating = false;\r\n    let argument = null;\r\n\r\n    if (!this.hasPrecedingLineBreak()) {\r\n      delegating = this.eat(49);\r\n\r\n      switch (this.state.type) {\r\n        case 13:\r\n        case 129:\r\n        case 8:\r\n        case 11:\r\n        case 3:\r\n        case 9:\r\n        case 14:\r\n        case 12:\r\n          if (!delegating) break;\r\n\r\n        default:\r\n          argument = this.parseMaybeAssign();\r\n      }\r\n    }\r\n\r\n    node.delegate = delegating;\r\n    node.argument = argument;\r\n    return this.finishNode(node, \"YieldExpression\");\r\n  }\r\n\r\n  checkPipelineAtInfixOperator(left, leftStartPos) {\r\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\r\n      if (left.type === \"SequenceExpression\") {\r\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkHackPipeBodyEarlyErrors(startPos) {\r\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\r\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\r\n    }\r\n  }\r\n\r\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\r\n    const bodyNode = this.startNodeAt(startPos, startLoc);\r\n\r\n    if (this.isSimpleReference(childExpr)) {\r\n      bodyNode.callee = childExpr;\r\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\r\n    } else {\r\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\r\n      bodyNode.expression = childExpr;\r\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\r\n    }\r\n  }\r\n\r\n  isSimpleReference(expression) {\r\n    switch (expression.type) {\r\n      case \"MemberExpression\":\r\n        return !expression.computed && this.isSimpleReference(expression.object);\r\n\r\n      case \"Identifier\":\r\n        return true;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\r\n    if (this.match(19)) {\r\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\r\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\r\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\r\n    }\r\n  }\r\n\r\n  withTopicBindingContext(callback) {\r\n    const outerContextTopicState = this.state.topicContext;\r\n    this.state.topicContext = {\r\n      maxNumOfResolvableTopics: 1,\r\n      maxTopicIndex: null\r\n    };\r\n\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.state.topicContext = outerContextTopicState;\r\n    }\r\n  }\r\n\r\n  withSmartMixTopicForbiddingContext(callback) {\r\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\r\n\r\n    if (proposal === \"smart\") {\r\n      const outerContextTopicState = this.state.topicContext;\r\n      this.state.topicContext = {\r\n        maxNumOfResolvableTopics: 0,\r\n        maxTopicIndex: null\r\n      };\r\n\r\n      try {\r\n        return callback();\r\n      } finally {\r\n        this.state.topicContext = outerContextTopicState;\r\n      }\r\n    } else {\r\n      return callback();\r\n    }\r\n  }\r\n\r\n  withSoloAwaitPermittingContext(callback) {\r\n    const outerContextSoloAwaitState = this.state.soloAwait;\r\n    this.state.soloAwait = true;\r\n\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.state.soloAwait = outerContextSoloAwaitState;\r\n    }\r\n  }\r\n\r\n  allowInAnd(callback) {\r\n    const flags = this.prodParam.currentFlags();\r\n    const prodParamToSet = PARAM_IN & ~flags;\r\n\r\n    if (prodParamToSet) {\r\n      this.prodParam.enter(flags | PARAM_IN);\r\n\r\n      try {\r\n        return callback();\r\n      } finally {\r\n        this.prodParam.exit();\r\n      }\r\n    }\r\n\r\n    return callback();\r\n  }\r\n\r\n  disallowInAnd(callback) {\r\n    const flags = this.prodParam.currentFlags();\r\n    const prodParamToClear = PARAM_IN & flags;\r\n\r\n    if (prodParamToClear) {\r\n      this.prodParam.enter(flags & ~PARAM_IN);\r\n\r\n      try {\r\n        return callback();\r\n      } finally {\r\n        this.prodParam.exit();\r\n      }\r\n    }\r\n\r\n    return callback();\r\n  }\r\n\r\n  registerTopicReference() {\r\n    this.state.topicContext.maxTopicIndex = 0;\r\n  }\r\n\r\n  topicReferenceIsAllowedInCurrentContext() {\r\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\r\n  }\r\n\r\n  topicReferenceWasUsedInCurrentContext() {\r\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\r\n  }\r\n\r\n  parseFSharpPipelineBody(prec) {\r\n    const startPos = this.state.start;\r\n    const startLoc = this.state.startLoc;\r\n    this.state.potentialArrowAt = this.state.start;\r\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\r\n    this.state.inFSharpPipelineDirectBody = true;\r\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\r\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\r\n    return ret;\r\n  }\r\n\r\n  parseModuleExpression() {\r\n    this.expectPlugin(\"moduleBlocks\");\r\n    const node = this.startNode();\r\n    this.next();\r\n    this.eat(5);\r\n    const revertScopes = this.initializeScopes(true);\r\n    this.enterInitialScopes();\r\n    const program = this.startNode();\r\n\r\n    try {\r\n      node.body = this.parseProgram(program, 8, \"module\");\r\n    } finally {\r\n      revertScopes();\r\n    }\r\n\r\n    this.eat(8);\r\n    return this.finishNode(node, \"ModuleExpression\");\r\n  }\r\n\r\n  parsePropertyNamePrefixOperator(prop) {}\r\n\r\n}\r\n\r\nconst loopLabel = {\r\n  kind: \"loop\"\r\n},\r\n      switchLabel = {\r\n  kind: \"switch\"\r\n};\r\nconst FUNC_NO_FLAGS = 0b000,\r\n      FUNC_STATEMENT = 0b001,\r\n      FUNC_HANGING_STATEMENT = 0b010,\r\n      FUNC_NULLABLE_ID = 0b100;\r\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\r\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\r\n\r\nfunction babel7CompatTokens(tokens) {\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    const token = tokens[i];\r\n    const {\r\n      type\r\n    } = token;\r\n\r\n    if (type === 128) {\r\n      {\r\n        const {\r\n          loc,\r\n          start,\r\n          value,\r\n          end\r\n        } = token;\r\n        const hashEndPos = start + 1;\r\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\r\n        tokens.splice(i, 1, new Token({\r\n          type: getExportedToken(25),\r\n          value: \"#\",\r\n          start: start,\r\n          end: hashEndPos,\r\n          startLoc: loc.start,\r\n          endLoc: hashEndLoc\r\n        }), new Token({\r\n          type: getExportedToken(122),\r\n          value: value,\r\n          start: hashEndPos,\r\n          end: end,\r\n          startLoc: hashEndLoc,\r\n          endLoc: loc.end\r\n        }));\r\n        i++;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (typeof type === \"number\") {\r\n      token.type = getExportedToken(type);\r\n    }\r\n  }\r\n\r\n  return tokens;\r\n}\r\n\r\nclass StatementParser extends ExpressionParser {\r\n  parseTopLevel(file, program) {\r\n    file.program = this.parseProgram(program);\r\n    file.comments = this.state.comments;\r\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\r\n    return this.finishNode(file, \"File\");\r\n  }\r\n\r\n  parseProgram(program, end = 129, sourceType = this.options.sourceType) {\r\n    program.sourceType = sourceType;\r\n    program.interpreter = this.parseInterpreterDirective();\r\n    this.parseBlockBody(program, true, true, end);\r\n\r\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\r\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\r\n        const pos = this.scope.undefinedExports.get(name);\r\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\r\n      }\r\n    }\r\n\r\n    return this.finishNode(program, \"Program\");\r\n  }\r\n\r\n  stmtToDirective(stmt) {\r\n    const directive = stmt;\r\n    directive.type = \"Directive\";\r\n    directive.value = directive.expression;\r\n    delete directive.expression;\r\n    const directiveLiteral = directive.value;\r\n    const expressionValue = directiveLiteral.value;\r\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\r\n    const val = directiveLiteral.value = raw.slice(1, -1);\r\n    this.addExtra(directiveLiteral, \"raw\", raw);\r\n    this.addExtra(directiveLiteral, \"rawValue\", val);\r\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\r\n    directiveLiteral.type = \"DirectiveLiteral\";\r\n    return directive;\r\n  }\r\n\r\n  parseInterpreterDirective() {\r\n    if (!this.match(26)) {\r\n      return null;\r\n    }\r\n\r\n    const node = this.startNode();\r\n    node.value = this.state.value;\r\n    this.next();\r\n    return this.finishNode(node, \"InterpreterDirective\");\r\n  }\r\n\r\n  isLet(context) {\r\n    if (!this.isContextual(93)) {\r\n      return false;\r\n    }\r\n\r\n    return this.isLetKeyword(context);\r\n  }\r\n\r\n  isLetKeyword(context) {\r\n    const next = this.nextTokenStart();\r\n    const nextCh = this.codePointAtPos(next);\r\n\r\n    if (nextCh === 92 || nextCh === 91) {\r\n      return true;\r\n    }\r\n\r\n    if (context) return false;\r\n    if (nextCh === 123) return true;\r\n\r\n    if (isIdentifierStart(nextCh)) {\r\n      keywordRelationalOperator.lastIndex = next;\r\n\r\n      if (keywordRelationalOperator.test(this.input)) {\r\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\r\n\r\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  parseStatement(context, topLevel) {\r\n    if (this.match(24)) {\r\n      this.parseDecorators(true);\r\n    }\r\n\r\n    return this.parseStatementContent(context, topLevel);\r\n  }\r\n\r\n  parseStatementContent(context, topLevel) {\r\n    let starttype = this.state.type;\r\n    const node = this.startNode();\r\n    let kind;\r\n\r\n    if (this.isLet(context)) {\r\n      starttype = 68;\r\n      kind = \"let\";\r\n    }\r\n\r\n    switch (starttype) {\r\n      case 54:\r\n        return this.parseBreakContinueStatement(node, true);\r\n\r\n      case 57:\r\n        return this.parseBreakContinueStatement(node, false);\r\n\r\n      case 58:\r\n        return this.parseDebuggerStatement(node);\r\n\r\n      case 84:\r\n        return this.parseDoStatement(node);\r\n\r\n      case 85:\r\n        return this.parseForStatement(node);\r\n\r\n      case 62:\r\n        if (this.lookaheadCharCode() === 46) break;\r\n\r\n        if (context) {\r\n          if (this.state.strict) {\r\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\r\n          } else if (context !== \"if\" && context !== \"label\") {\r\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\r\n          }\r\n        }\r\n\r\n        return this.parseFunctionStatement(node, false, !context);\r\n\r\n      case 74:\r\n        if (context) this.unexpected();\r\n        return this.parseClass(node, true);\r\n\r\n      case 63:\r\n        return this.parseIfStatement(node);\r\n\r\n      case 64:\r\n        return this.parseReturnStatement(node);\r\n\r\n      case 65:\r\n        return this.parseSwitchStatement(node);\r\n\r\n      case 66:\r\n        return this.parseThrowStatement(node);\r\n\r\n      case 67:\r\n        return this.parseTryStatement(node);\r\n\r\n      case 69:\r\n      case 68:\r\n        kind = kind || this.state.value;\r\n\r\n        if (context && kind !== \"var\") {\r\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\r\n        }\r\n\r\n        return this.parseVarStatement(node, kind);\r\n\r\n      case 86:\r\n        return this.parseWhileStatement(node);\r\n\r\n      case 70:\r\n        return this.parseWithStatement(node);\r\n\r\n      case 5:\r\n        return this.parseBlock();\r\n\r\n      case 13:\r\n        return this.parseEmptyStatement(node);\r\n\r\n      case 77:\r\n        {\r\n          const nextTokenCharCode = this.lookaheadCharCode();\r\n\r\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\r\n            break;\r\n          }\r\n        }\r\n\r\n      case 76:\r\n        {\r\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\r\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\r\n          }\r\n\r\n          this.next();\r\n          let result;\r\n\r\n          if (starttype === 77) {\r\n            result = this.parseImport(node);\r\n\r\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\r\n              this.sawUnambiguousESM = true;\r\n            }\r\n          } else {\r\n            result = this.parseExport(node);\r\n\r\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\r\n              this.sawUnambiguousESM = true;\r\n            }\r\n          }\r\n\r\n          this.assertModuleNodeAllowed(node);\r\n          return result;\r\n        }\r\n\r\n      default:\r\n        {\r\n          if (this.isAsyncFunction()) {\r\n            if (context) {\r\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\r\n            }\r\n\r\n            this.next();\r\n            return this.parseFunctionStatement(node, true, !context);\r\n          }\r\n        }\r\n    }\r\n\r\n    const maybeName = this.state.value;\r\n    const expr = this.parseExpression();\r\n\r\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\r\n      return this.parseLabeledStatement(node, maybeName, expr, context);\r\n    } else {\r\n      return this.parseExpressionStatement(node, expr);\r\n    }\r\n  }\r\n\r\n  assertModuleNodeAllowed(node) {\r\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\r\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\r\n    }\r\n  }\r\n\r\n  takeDecorators(node) {\r\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\r\n\r\n    if (decorators.length) {\r\n      node.decorators = decorators;\r\n      this.resetStartLocationFromNode(node, decorators[0]);\r\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\r\n    }\r\n  }\r\n\r\n  canHaveLeadingDecorator() {\r\n    return this.match(74);\r\n  }\r\n\r\n  parseDecorators(allowExport) {\r\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\r\n\r\n    while (this.match(24)) {\r\n      const decorator = this.parseDecorator();\r\n      currentContextDecorators.push(decorator);\r\n    }\r\n\r\n    if (this.match(76)) {\r\n      if (!allowExport) {\r\n        this.unexpected();\r\n      }\r\n\r\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\r\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\r\n      }\r\n    } else if (!this.canHaveLeadingDecorator()) {\r\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\r\n    }\r\n  }\r\n\r\n  parseDecorator() {\r\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\r\n    const node = this.startNode();\r\n    this.next();\r\n\r\n    if (this.hasPlugin(\"decorators\")) {\r\n      this.state.decoratorStack.push([]);\r\n      const startPos = this.state.start;\r\n      const startLoc = this.state.startLoc;\r\n      let expr;\r\n\r\n      if (this.eat(10)) {\r\n        expr = this.parseExpression();\r\n        this.expect(11);\r\n      } else {\r\n        expr = this.parseIdentifier(false);\r\n\r\n        while (this.eat(16)) {\r\n          const node = this.startNodeAt(startPos, startLoc);\r\n          node.object = expr;\r\n          node.property = this.parseIdentifier(true);\r\n          node.computed = false;\r\n          expr = this.finishNode(node, \"MemberExpression\");\r\n        }\r\n      }\r\n\r\n      node.expression = this.parseMaybeDecoratorArguments(expr);\r\n      this.state.decoratorStack.pop();\r\n    } else {\r\n      node.expression = this.parseExprSubscripts();\r\n    }\r\n\r\n    return this.finishNode(node, \"Decorator\");\r\n  }\r\n\r\n  parseMaybeDecoratorArguments(expr) {\r\n    if (this.eat(10)) {\r\n      const node = this.startNodeAtNode(expr);\r\n      node.callee = expr;\r\n      node.arguments = this.parseCallExpressionArguments(11, false);\r\n      this.toReferencedList(node.arguments);\r\n      return this.finishNode(node, \"CallExpression\");\r\n    }\r\n\r\n    return expr;\r\n  }\r\n\r\n  parseBreakContinueStatement(node, isBreak) {\r\n    this.next();\r\n\r\n    if (this.isLineTerminator()) {\r\n      node.label = null;\r\n    } else {\r\n      node.label = this.parseIdentifier();\r\n      this.semicolon();\r\n    }\r\n\r\n    this.verifyBreakContinue(node, isBreak);\r\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\r\n  }\r\n\r\n  verifyBreakContinue(node, isBreak) {\r\n    let i;\r\n\r\n    for (i = 0; i < this.state.labels.length; ++i) {\r\n      const lab = this.state.labels[i];\r\n\r\n      if (node.label == null || lab.name === node.label.name) {\r\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\r\n        if (node.label && isBreak) break;\r\n      }\r\n    }\r\n\r\n    if (i === this.state.labels.length) {\r\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, isBreak ? \"break\" : \"continue\");\r\n    }\r\n  }\r\n\r\n  parseDebuggerStatement(node) {\r\n    this.next();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"DebuggerStatement\");\r\n  }\r\n\r\n  parseHeaderExpression() {\r\n    this.expect(10);\r\n    const val = this.parseExpression();\r\n    this.expect(11);\r\n    return val;\r\n  }\r\n\r\n  parseDoStatement(node) {\r\n    this.next();\r\n    this.state.labels.push(loopLabel);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\r\n    this.state.labels.pop();\r\n    this.expect(86);\r\n    node.test = this.parseHeaderExpression();\r\n    this.eat(13);\r\n    return this.finishNode(node, \"DoWhileStatement\");\r\n  }\r\n\r\n  parseForStatement(node) {\r\n    this.next();\r\n    this.state.labels.push(loopLabel);\r\n    let awaitAt = -1;\r\n\r\n    if (this.isAwaitAllowed() && this.eatContextual(90)) {\r\n      awaitAt = this.state.lastTokStart;\r\n    }\r\n\r\n    this.scope.enter(SCOPE_OTHER);\r\n    this.expect(10);\r\n\r\n    if (this.match(13)) {\r\n      if (awaitAt > -1) {\r\n        this.unexpected(awaitAt);\r\n      }\r\n\r\n      return this.parseFor(node, null);\r\n    }\r\n\r\n    const startsWithLet = this.isContextual(93);\r\n    const isLet = startsWithLet && this.isLetKeyword();\r\n\r\n    if (this.match(68) || this.match(69) || isLet) {\r\n      const init = this.startNode();\r\n      const kind = isLet ? \"let\" : this.state.value;\r\n      this.next();\r\n      this.parseVar(init, true, kind);\r\n      this.finishNode(init, \"VariableDeclaration\");\r\n\r\n      if ((this.match(52) || this.isContextual(95)) && init.declarations.length === 1) {\r\n        return this.parseForIn(node, init, awaitAt);\r\n      }\r\n\r\n      if (awaitAt > -1) {\r\n        this.unexpected(awaitAt);\r\n      }\r\n\r\n      return this.parseFor(node, init);\r\n    }\r\n\r\n    const startsWithAsync = this.isContextual(89);\r\n    const refExpressionErrors = new ExpressionErrors();\r\n    const init = this.parseExpression(true, refExpressionErrors);\r\n    const isForOf = this.isContextual(95);\r\n\r\n    if (isForOf) {\r\n      if (startsWithLet) {\r\n        this.raise(init.start, ErrorMessages.ForOfLet);\r\n      } else if (awaitAt === -1 && startsWithAsync && init.type === \"Identifier\") {\r\n        this.raise(init.start, ErrorMessages.ForOfAsync);\r\n      }\r\n    }\r\n\r\n    if (isForOf || this.match(52)) {\r\n      this.toAssignable(init, true);\r\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\r\n      this.checkLVal(init, description);\r\n      return this.parseForIn(node, init, awaitAt);\r\n    } else {\r\n      this.checkExpressionErrors(refExpressionErrors, true);\r\n    }\r\n\r\n    if (awaitAt > -1) {\r\n      this.unexpected(awaitAt);\r\n    }\r\n\r\n    return this.parseFor(node, init);\r\n  }\r\n\r\n  parseFunctionStatement(node, isAsync, declarationPosition) {\r\n    this.next();\r\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\r\n  }\r\n\r\n  parseIfStatement(node) {\r\n    this.next();\r\n    node.test = this.parseHeaderExpression();\r\n    node.consequent = this.parseStatement(\"if\");\r\n    node.alternate = this.eat(60) ? this.parseStatement(\"if\") : null;\r\n    return this.finishNode(node, \"IfStatement\");\r\n  }\r\n\r\n  parseReturnStatement(node) {\r\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\r\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\r\n    }\r\n\r\n    this.next();\r\n\r\n    if (this.isLineTerminator()) {\r\n      node.argument = null;\r\n    } else {\r\n      node.argument = this.parseExpression();\r\n      this.semicolon();\r\n    }\r\n\r\n    return this.finishNode(node, \"ReturnStatement\");\r\n  }\r\n\r\n  parseSwitchStatement(node) {\r\n    this.next();\r\n    node.discriminant = this.parseHeaderExpression();\r\n    const cases = node.cases = [];\r\n    this.expect(5);\r\n    this.state.labels.push(switchLabel);\r\n    this.scope.enter(SCOPE_OTHER);\r\n    let cur;\r\n\r\n    for (let sawDefault; !this.match(8);) {\r\n      if (this.match(55) || this.match(59)) {\r\n        const isCase = this.match(55);\r\n        if (cur) this.finishNode(cur, \"SwitchCase\");\r\n        cases.push(cur = this.startNode());\r\n        cur.consequent = [];\r\n        this.next();\r\n\r\n        if (isCase) {\r\n          cur.test = this.parseExpression();\r\n        } else {\r\n          if (sawDefault) {\r\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\r\n          }\r\n\r\n          sawDefault = true;\r\n          cur.test = null;\r\n        }\r\n\r\n        this.expect(14);\r\n      } else {\r\n        if (cur) {\r\n          cur.consequent.push(this.parseStatement(null));\r\n        } else {\r\n          this.unexpected();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scope.exit();\r\n    if (cur) this.finishNode(cur, \"SwitchCase\");\r\n    this.next();\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, \"SwitchStatement\");\r\n  }\r\n\r\n  parseThrowStatement(node) {\r\n    this.next();\r\n\r\n    if (this.hasPrecedingLineBreak()) {\r\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\r\n    }\r\n\r\n    node.argument = this.parseExpression();\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ThrowStatement\");\r\n  }\r\n\r\n  parseCatchClauseParam() {\r\n    const param = this.parseBindingAtom();\r\n    const simple = param.type === \"Identifier\";\r\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\r\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\r\n    return param;\r\n  }\r\n\r\n  parseTryStatement(node) {\r\n    this.next();\r\n    node.block = this.parseBlock();\r\n    node.handler = null;\r\n\r\n    if (this.match(56)) {\r\n      const clause = this.startNode();\r\n      this.next();\r\n\r\n      if (this.match(10)) {\r\n        this.expect(10);\r\n        clause.param = this.parseCatchClauseParam();\r\n        this.expect(11);\r\n      } else {\r\n        clause.param = null;\r\n        this.scope.enter(SCOPE_OTHER);\r\n      }\r\n\r\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\r\n      this.scope.exit();\r\n      node.handler = this.finishNode(clause, \"CatchClause\");\r\n    }\r\n\r\n    node.finalizer = this.eat(61) ? this.parseBlock() : null;\r\n\r\n    if (!node.handler && !node.finalizer) {\r\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\r\n    }\r\n\r\n    return this.finishNode(node, \"TryStatement\");\r\n  }\r\n\r\n  parseVarStatement(node, kind) {\r\n    this.next();\r\n    this.parseVar(node, false, kind);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"VariableDeclaration\");\r\n  }\r\n\r\n  parseWhileStatement(node) {\r\n    this.next();\r\n    node.test = this.parseHeaderExpression();\r\n    this.state.labels.push(loopLabel);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, \"WhileStatement\");\r\n  }\r\n\r\n  parseWithStatement(node) {\r\n    if (this.state.strict) {\r\n      this.raise(this.state.start, ErrorMessages.StrictWith);\r\n    }\r\n\r\n    this.next();\r\n    node.object = this.parseHeaderExpression();\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\r\n    return this.finishNode(node, \"WithStatement\");\r\n  }\r\n\r\n  parseEmptyStatement(node) {\r\n    this.next();\r\n    return this.finishNode(node, \"EmptyStatement\");\r\n  }\r\n\r\n  parseLabeledStatement(node, maybeName, expr, context) {\r\n    for (const label of this.state.labels) {\r\n      if (label.name === maybeName) {\r\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\r\n      }\r\n    }\r\n\r\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(65) ? \"switch\" : null;\r\n\r\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\r\n      const label = this.state.labels[i];\r\n\r\n      if (label.statementStart === node.start) {\r\n        label.statementStart = this.state.start;\r\n        label.kind = kind;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.state.labels.push({\r\n      name: maybeName,\r\n      kind: kind,\r\n      statementStart: this.state.start\r\n    });\r\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\r\n    this.state.labels.pop();\r\n    node.label = expr;\r\n    return this.finishNode(node, \"LabeledStatement\");\r\n  }\r\n\r\n  parseExpressionStatement(node, expr) {\r\n    node.expression = expr;\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ExpressionStatement\");\r\n  }\r\n\r\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\r\n    const node = this.startNode();\r\n\r\n    if (allowDirectives) {\r\n      this.state.strictErrors.clear();\r\n    }\r\n\r\n    this.expect(5);\r\n\r\n    if (createNewLexicalScope) {\r\n      this.scope.enter(SCOPE_OTHER);\r\n    }\r\n\r\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\r\n\r\n    if (createNewLexicalScope) {\r\n      this.scope.exit();\r\n    }\r\n\r\n    return this.finishNode(node, \"BlockStatement\");\r\n  }\r\n\r\n  isValidDirective(stmt) {\r\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\r\n  }\r\n\r\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\r\n    const body = node.body = [];\r\n    const directives = node.directives = [];\r\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\r\n  }\r\n\r\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\r\n    const oldStrict = this.state.strict;\r\n    let hasStrictModeDirective = false;\r\n    let parsedNonDirective = false;\r\n\r\n    while (!this.match(end)) {\r\n      const stmt = this.parseStatement(null, topLevel);\r\n\r\n      if (directives && !parsedNonDirective) {\r\n        if (this.isValidDirective(stmt)) {\r\n          const directive = this.stmtToDirective(stmt);\r\n          directives.push(directive);\r\n\r\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\r\n            hasStrictModeDirective = true;\r\n            this.setStrict(true);\r\n          }\r\n\r\n          continue;\r\n        }\r\n\r\n        parsedNonDirective = true;\r\n        this.state.strictErrors.clear();\r\n      }\r\n\r\n      body.push(stmt);\r\n    }\r\n\r\n    if (afterBlockParse) {\r\n      afterBlockParse.call(this, hasStrictModeDirective);\r\n    }\r\n\r\n    if (!oldStrict) {\r\n      this.setStrict(false);\r\n    }\r\n\r\n    this.next();\r\n  }\r\n\r\n  parseFor(node, init) {\r\n    node.init = init;\r\n    this.semicolon(false);\r\n    node.test = this.match(13) ? null : this.parseExpression();\r\n    this.semicolon(false);\r\n    node.update = this.match(11) ? null : this.parseExpression();\r\n    this.expect(11);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\r\n    this.scope.exit();\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, \"ForStatement\");\r\n  }\r\n\r\n  parseForIn(node, init, awaitAt) {\r\n    const isForIn = this.match(52);\r\n    this.next();\r\n\r\n    if (isForIn) {\r\n      if (awaitAt > -1) this.unexpected(awaitAt);\r\n    } else {\r\n      node.await = awaitAt > -1;\r\n    }\r\n\r\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\r\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\r\n    } else if (init.type === \"AssignmentPattern\") {\r\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\r\n    }\r\n\r\n    node.left = init;\r\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\r\n    this.expect(11);\r\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\r\n    this.scope.exit();\r\n    this.state.labels.pop();\r\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\r\n  }\r\n\r\n  parseVar(node, isFor, kind) {\r\n    const declarations = node.declarations = [];\r\n    const isTypescript = this.hasPlugin(\"typescript\");\r\n    node.kind = kind;\r\n\r\n    for (;;) {\r\n      const decl = this.startNode();\r\n      this.parseVarId(decl, kind);\r\n\r\n      if (this.eat(27)) {\r\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\r\n      } else {\r\n        if (kind === \"const\" && !(this.match(52) || this.isContextual(95))) {\r\n          if (!isTypescript) {\r\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\r\n          }\r\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(52) || this.isContextual(95)))) {\r\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\r\n        }\r\n\r\n        decl.init = null;\r\n      }\r\n\r\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\r\n      if (!this.eat(12)) break;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  parseVarId(decl, kind) {\r\n    decl.id = this.parseBindingAtom();\r\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\r\n  }\r\n\r\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\r\n    const isStatement = statement & FUNC_STATEMENT;\r\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\r\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\r\n    this.initFunction(node, isAsync);\r\n\r\n    if (this.match(49) && isHangingStatement) {\r\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\r\n    }\r\n\r\n    node.generator = this.eat(49);\r\n\r\n    if (isStatement) {\r\n      node.id = this.parseFunctionId(requireId);\r\n    }\r\n\r\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\r\n    this.state.maybeInArrowParameters = false;\r\n    this.scope.enter(SCOPE_FUNCTION);\r\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\r\n\r\n    if (!isStatement) {\r\n      node.id = this.parseFunctionId();\r\n    }\r\n\r\n    this.parseFunctionParams(node, false);\r\n    this.withSmartMixTopicForbiddingContext(() => {\r\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\r\n    });\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n\r\n    if (isStatement && !isHangingStatement) {\r\n      this.registerFunctionStatementId(node);\r\n    }\r\n\r\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\r\n    return node;\r\n  }\r\n\r\n  parseFunctionId(requireId) {\r\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\r\n  }\r\n\r\n  parseFunctionParams(node, allowModifiers) {\r\n    this.expect(10);\r\n    this.expressionScope.enter(newParameterDeclarationScope());\r\n    node.params = this.parseBindingList(11, 41, false, allowModifiers);\r\n    this.expressionScope.exit();\r\n  }\r\n\r\n  registerFunctionStatementId(node) {\r\n    if (!node.id) return;\r\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\r\n  }\r\n\r\n  parseClass(node, isStatement, optionalId) {\r\n    this.next();\r\n    this.takeDecorators(node);\r\n    const oldStrict = this.state.strict;\r\n    this.state.strict = true;\r\n    this.parseClassId(node, isStatement, optionalId);\r\n    this.parseClassSuper(node);\r\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\r\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\r\n  }\r\n\r\n  isClassProperty() {\r\n    return this.match(27) || this.match(13) || this.match(8);\r\n  }\r\n\r\n  isClassMethod() {\r\n    return this.match(10);\r\n  }\r\n\r\n  isNonstaticConstructor(method) {\r\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\r\n  }\r\n\r\n  parseClassBody(hadSuperClass, oldStrict) {\r\n    this.classScope.enter();\r\n    const state = {\r\n      hadConstructor: false,\r\n      hadSuperClass\r\n    };\r\n    let decorators = [];\r\n    const classBody = this.startNode();\r\n    classBody.body = [];\r\n    this.expect(5);\r\n    this.withSmartMixTopicForbiddingContext(() => {\r\n      while (!this.match(8)) {\r\n        if (this.eat(13)) {\r\n          if (decorators.length > 0) {\r\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\r\n          }\r\n\r\n          continue;\r\n        }\r\n\r\n        if (this.match(24)) {\r\n          decorators.push(this.parseDecorator());\r\n          continue;\r\n        }\r\n\r\n        const member = this.startNode();\r\n\r\n        if (decorators.length) {\r\n          member.decorators = decorators;\r\n          this.resetStartLocationFromNode(member, decorators[0]);\r\n          decorators = [];\r\n        }\r\n\r\n        this.parseClassMember(classBody, member, state);\r\n\r\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\r\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\r\n        }\r\n      }\r\n    });\r\n    this.state.strict = oldStrict;\r\n    this.next();\r\n\r\n    if (decorators.length) {\r\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\r\n    }\r\n\r\n    this.classScope.exit();\r\n    return this.finishNode(classBody, \"ClassBody\");\r\n  }\r\n\r\n  parseClassMemberFromModifier(classBody, member) {\r\n    const key = this.parseIdentifier(true);\r\n\r\n    if (this.isClassMethod()) {\r\n      const method = member;\r\n      method.kind = \"method\";\r\n      method.computed = false;\r\n      method.key = key;\r\n      method.static = false;\r\n      this.pushClassMethod(classBody, method, false, false, false, false);\r\n      return true;\r\n    } else if (this.isClassProperty()) {\r\n      const prop = member;\r\n      prop.computed = false;\r\n      prop.key = key;\r\n      prop.static = false;\r\n      classBody.body.push(this.parseClassProperty(prop));\r\n      return true;\r\n    }\r\n\r\n    this.resetPreviousNodeTrailingComments(key);\r\n    return false;\r\n  }\r\n\r\n  parseClassMember(classBody, member, state) {\r\n    const isStatic = this.isContextual(98);\r\n\r\n    if (isStatic) {\r\n      if (this.parseClassMemberFromModifier(classBody, member)) {\r\n        return;\r\n      }\r\n\r\n      if (this.eat(5)) {\r\n        this.parseClassStaticBlock(classBody, member);\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\r\n  }\r\n\r\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\r\n    const publicMethod = member;\r\n    const privateMethod = member;\r\n    const publicProp = member;\r\n    const privateProp = member;\r\n    const method = publicMethod;\r\n    const publicMember = publicMethod;\r\n    member.static = isStatic;\r\n    this.parsePropertyNamePrefixOperator(member);\r\n\r\n    if (this.eat(49)) {\r\n      method.kind = \"method\";\r\n      const isPrivateName = this.match(128);\r\n      this.parseClassElementName(method);\r\n\r\n      if (isPrivateName) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\r\n        return;\r\n      }\r\n\r\n      if (this.isNonstaticConstructor(publicMethod)) {\r\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\r\n      }\r\n\r\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\r\n      return;\r\n    }\r\n\r\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\r\n    const isPrivate = this.match(128);\r\n    const key = this.parseClassElementName(member);\r\n    const maybeQuestionTokenStart = this.state.start;\r\n    this.parsePostMemberNameModifiers(publicMember);\r\n\r\n    if (this.isClassMethod()) {\r\n      method.kind = \"method\";\r\n\r\n      if (isPrivate) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\r\n        return;\r\n      }\r\n\r\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\r\n      let allowsDirectSuper = false;\r\n\r\n      if (isConstructor) {\r\n        publicMethod.kind = \"constructor\";\r\n\r\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\r\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\r\n        }\r\n\r\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\r\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\r\n        }\r\n\r\n        state.hadConstructor = true;\r\n        allowsDirectSuper = state.hadSuperClass;\r\n      }\r\n\r\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\r\n    } else if (this.isClassProperty()) {\r\n      if (isPrivate) {\r\n        this.pushClassPrivateProperty(classBody, privateProp);\r\n      } else {\r\n        this.pushClassProperty(classBody, publicProp);\r\n      }\r\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\r\n      this.resetPreviousNodeTrailingComments(key);\r\n      const isGenerator = this.eat(49);\r\n\r\n      if (publicMember.optional) {\r\n        this.unexpected(maybeQuestionTokenStart);\r\n      }\r\n\r\n      method.kind = \"method\";\r\n      const isPrivate = this.match(128);\r\n      this.parseClassElementName(method);\r\n      this.parsePostMemberNameModifiers(publicMember);\r\n\r\n      if (isPrivate) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\r\n      } else {\r\n        if (this.isNonstaticConstructor(publicMethod)) {\r\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\r\n        }\r\n\r\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\r\n      }\r\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(49) && this.isLineTerminator())) {\r\n      this.resetPreviousNodeTrailingComments(key);\r\n      method.kind = key.name;\r\n      const isPrivate = this.match(128);\r\n      this.parseClassElementName(publicMethod);\r\n\r\n      if (isPrivate) {\r\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\r\n      } else {\r\n        if (this.isNonstaticConstructor(publicMethod)) {\r\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\r\n        }\r\n\r\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\r\n      }\r\n\r\n      this.checkGetterSetterParams(publicMethod);\r\n    } else if (this.isLineTerminator()) {\r\n      if (isPrivate) {\r\n        this.pushClassPrivateProperty(classBody, privateProp);\r\n      } else {\r\n        this.pushClassProperty(classBody, publicProp);\r\n      }\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n  }\r\n\r\n  parseClassElementName(member) {\r\n    const {\r\n      type,\r\n      value,\r\n      start\r\n    } = this.state;\r\n\r\n    if ((type === 122 || type === 123) && member.static && value === \"prototype\") {\r\n      this.raise(start, ErrorMessages.StaticPrototype);\r\n    }\r\n\r\n    if (type === 128) {\r\n      if (value === \"constructor\") {\r\n        this.raise(start, ErrorMessages.ConstructorClassPrivateField);\r\n      }\r\n\r\n      const key = this.parsePrivateName();\r\n      member.key = key;\r\n      return key;\r\n    }\r\n\r\n    return this.parsePropertyName(member);\r\n  }\r\n\r\n  parseClassStaticBlock(classBody, member) {\r\n    var _member$decorators;\r\n\r\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\r\n    const oldLabels = this.state.labels;\r\n    this.state.labels = [];\r\n    this.prodParam.enter(PARAM);\r\n    const body = member.body = [];\r\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n    this.state.labels = oldLabels;\r\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\r\n\r\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\r\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\r\n    }\r\n  }\r\n\r\n  pushClassProperty(classBody, prop) {\r\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\r\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\r\n    }\r\n\r\n    classBody.body.push(this.parseClassProperty(prop));\r\n  }\r\n\r\n  pushClassPrivateProperty(classBody, prop) {\r\n    const node = this.parseClassPrivateProperty(prop);\r\n    classBody.body.push(node);\r\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\r\n  }\r\n\r\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\r\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\r\n  }\r\n\r\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\r\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\r\n    classBody.body.push(node);\r\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\r\n    this.declareClassPrivateMethodInScope(node, kind);\r\n  }\r\n\r\n  declareClassPrivateMethodInScope(node, kind) {\r\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\r\n  }\r\n\r\n  parsePostMemberNameModifiers(methodOrProp) {}\r\n\r\n  parseClassPrivateProperty(node) {\r\n    this.parseInitializer(node);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ClassPrivateProperty\");\r\n  }\r\n\r\n  parseClassProperty(node) {\r\n    this.parseInitializer(node);\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ClassProperty\");\r\n  }\r\n\r\n  parseInitializer(node) {\r\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\r\n    this.expressionScope.enter(newExpressionScope());\r\n    this.prodParam.enter(PARAM);\r\n    node.value = this.eat(27) ? this.parseMaybeAssignAllowIn() : null;\r\n    this.expressionScope.exit();\r\n    this.prodParam.exit();\r\n    this.scope.exit();\r\n  }\r\n\r\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\r\n    if (tokenIsIdentifier(this.state.type)) {\r\n      node.id = this.parseIdentifier();\r\n\r\n      if (isStatement) {\r\n        this.checkLVal(node.id, \"class name\", bindingType);\r\n      }\r\n    } else {\r\n      if (optionalId || !isStatement) {\r\n        node.id = null;\r\n      } else {\r\n        this.unexpected(null, ErrorMessages.MissingClassName);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseClassSuper(node) {\r\n    node.superClass = this.eat(75) ? this.parseExprSubscripts() : null;\r\n  }\r\n\r\n  parseExport(node) {\r\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\r\n    const parseAfterDefault = !hasDefault || this.eat(12);\r\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\r\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\r\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\r\n    const isFromRequired = hasDefault || hasStar;\r\n\r\n    if (hasStar && !hasNamespace) {\r\n      if (hasDefault) this.unexpected();\r\n      this.parseExportFrom(node, true);\r\n      return this.finishNode(node, \"ExportAllDeclaration\");\r\n    }\r\n\r\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\r\n\r\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\r\n      throw this.unexpected(null, 5);\r\n    }\r\n\r\n    let hasDeclaration;\r\n\r\n    if (isFromRequired || hasSpecifiers) {\r\n      hasDeclaration = false;\r\n      this.parseExportFrom(node, isFromRequired);\r\n    } else {\r\n      hasDeclaration = this.maybeParseExportDeclaration(node);\r\n    }\r\n\r\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\r\n      this.checkExport(node, true, false, !!node.source);\r\n      return this.finishNode(node, \"ExportNamedDeclaration\");\r\n    }\r\n\r\n    if (this.eat(59)) {\r\n      node.declaration = this.parseExportDefaultExpression();\r\n      this.checkExport(node, true, true);\r\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\r\n    }\r\n\r\n    throw this.unexpected(null, 5);\r\n  }\r\n\r\n  eatExportStar(node) {\r\n    return this.eat(49);\r\n  }\r\n\r\n  maybeParseExportDefaultSpecifier(node) {\r\n    if (this.isExportDefaultSpecifier()) {\r\n      this.expectPlugin(\"exportDefaultFrom\");\r\n      const specifier = this.startNode();\r\n      specifier.exported = this.parseIdentifier(true);\r\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  maybeParseExportNamespaceSpecifier(node) {\r\n    if (this.isContextual(87)) {\r\n      if (!node.specifiers) node.specifiers = [];\r\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\r\n      this.next();\r\n      specifier.exported = this.parseModuleExportName();\r\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  maybeParseExportNamedSpecifiers(node) {\r\n    if (this.match(5)) {\r\n      if (!node.specifiers) node.specifiers = [];\r\n      const isTypeExport = node.exportKind === \"type\";\r\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\r\n      node.source = null;\r\n      node.declaration = null;\r\n\r\n      if (this.hasPlugin(\"importAssertions\")) {\r\n        node.assertions = [];\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  maybeParseExportDeclaration(node) {\r\n    if (this.shouldParseExportDeclaration()) {\r\n      node.specifiers = [];\r\n      node.source = null;\r\n\r\n      if (this.hasPlugin(\"importAssertions\")) {\r\n        node.assertions = [];\r\n      }\r\n\r\n      node.declaration = this.parseExportDeclaration(node);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isAsyncFunction() {\r\n    if (!this.isContextual(89)) return false;\r\n    const next = this.nextTokenStart();\r\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\r\n  }\r\n\r\n  parseExportDefaultExpression() {\r\n    const expr = this.startNode();\r\n    const isAsync = this.isAsyncFunction();\r\n\r\n    if (this.match(62) || isAsync) {\r\n      this.next();\r\n\r\n      if (isAsync) {\r\n        this.next();\r\n      }\r\n\r\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\r\n    } else if (this.match(74)) {\r\n      return this.parseClass(expr, true, true);\r\n    } else if (this.match(24)) {\r\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\r\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\r\n      }\r\n\r\n      this.parseDecorators(false);\r\n      return this.parseClass(expr, true, true);\r\n    } else if (this.match(69) || this.match(68) || this.isLet()) {\r\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\r\n    } else {\r\n      const res = this.parseMaybeAssignAllowIn();\r\n      this.semicolon();\r\n      return res;\r\n    }\r\n  }\r\n\r\n  parseExportDeclaration(node) {\r\n    return this.parseStatement(null);\r\n  }\r\n\r\n  isExportDefaultSpecifier() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    if (tokenIsIdentifier(type)) {\r\n      if (type === 89 && !this.state.containsEsc || type === 93) {\r\n        return false;\r\n      }\r\n\r\n      if ((type === 120 || type === 119) && !this.state.containsEsc) {\r\n        const {\r\n          type: nextType\r\n        } = this.lookahead();\r\n\r\n        if (tokenIsIdentifier(nextType) && nextType !== 91 || nextType === 5) {\r\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\r\n          return false;\r\n        }\r\n      }\r\n    } else if (!this.match(59)) {\r\n      return false;\r\n    }\r\n\r\n    const next = this.nextTokenStart();\r\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\r\n\r\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\r\n      return true;\r\n    }\r\n\r\n    if (this.match(59) && hasFrom) {\r\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\r\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  parseExportFrom(node, expect) {\r\n    if (this.eatContextual(91)) {\r\n      node.source = this.parseImportSource();\r\n      this.checkExport(node);\r\n      const assertions = this.maybeParseImportAssertions();\r\n\r\n      if (assertions) {\r\n        node.assertions = assertions;\r\n      }\r\n    } else if (expect) {\r\n      this.unexpected();\r\n    }\r\n\r\n    this.semicolon();\r\n  }\r\n\r\n  shouldParseExportDeclaration() {\r\n    const {\r\n      type\r\n    } = this.state;\r\n\r\n    if (type === 24) {\r\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\r\n\r\n      if (this.hasPlugin(\"decorators\")) {\r\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\r\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return type === 68 || type === 69 || type === 62 || type === 74 || this.isLet() || this.isAsyncFunction();\r\n  }\r\n\r\n  checkExport(node, checkNames, isDefault, isFrom) {\r\n    if (checkNames) {\r\n      if (isDefault) {\r\n        this.checkDuplicateExports(node, \"default\");\r\n\r\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\r\n          var _declaration$extra;\r\n\r\n          const declaration = node.declaration;\r\n\r\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\r\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\r\n          }\r\n        }\r\n      } else if (node.specifiers && node.specifiers.length) {\r\n        for (const specifier of node.specifiers) {\r\n          const {\r\n            exported\r\n          } = specifier;\r\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\r\n          this.checkDuplicateExports(specifier, exportedName);\r\n\r\n          if (!isFrom && specifier.local) {\r\n            const {\r\n              local\r\n            } = specifier;\r\n\r\n            if (local.type !== \"Identifier\") {\r\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\r\n            } else {\r\n              this.checkReservedWord(local.name, local.start, true, false);\r\n              this.scope.checkLocalExport(local);\r\n            }\r\n          }\r\n        }\r\n      } else if (node.declaration) {\r\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\r\n          const id = node.declaration.id;\r\n          if (!id) throw new Error(\"Assertion failure\");\r\n          this.checkDuplicateExports(node, id.name);\r\n        } else if (node.declaration.type === \"VariableDeclaration\") {\r\n          for (const declaration of node.declaration.declarations) {\r\n            this.checkDeclaration(declaration.id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\r\n\r\n    if (currentContextDecorators.length) {\r\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\r\n    }\r\n  }\r\n\r\n  checkDeclaration(node) {\r\n    if (node.type === \"Identifier\") {\r\n      this.checkDuplicateExports(node, node.name);\r\n    } else if (node.type === \"ObjectPattern\") {\r\n      for (const prop of node.properties) {\r\n        this.checkDeclaration(prop);\r\n      }\r\n    } else if (node.type === \"ArrayPattern\") {\r\n      for (const elem of node.elements) {\r\n        if (elem) {\r\n          this.checkDeclaration(elem);\r\n        }\r\n      }\r\n    } else if (node.type === \"ObjectProperty\") {\r\n      this.checkDeclaration(node.value);\r\n    } else if (node.type === \"RestElement\") {\r\n      this.checkDeclaration(node.argument);\r\n    } else if (node.type === \"AssignmentPattern\") {\r\n      this.checkDeclaration(node.left);\r\n    }\r\n  }\r\n\r\n  checkDuplicateExports(node, name) {\r\n    if (this.exportedIdentifiers.has(name)) {\r\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\r\n    }\r\n\r\n    this.exportedIdentifiers.add(name);\r\n  }\r\n\r\n  parseExportSpecifiers(isInTypeExport) {\r\n    const nodes = [];\r\n    let first = true;\r\n    this.expect(5);\r\n\r\n    while (!this.eat(8)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        this.expect(12);\r\n        if (this.eat(8)) break;\r\n      }\r\n\r\n      const isMaybeTypeOnly = this.isContextual(120);\r\n      const isString = this.match(123);\r\n      const node = this.startNode();\r\n      node.local = this.parseModuleExportName();\r\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\r\n    }\r\n\r\n    return nodes;\r\n  }\r\n\r\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\r\n    if (this.eatContextual(87)) {\r\n      node.exported = this.parseModuleExportName();\r\n    } else if (isString) {\r\n      node.exported = cloneStringLiteral(node.local);\r\n    } else if (!node.exported) {\r\n      node.exported = cloneIdentifier(node.local);\r\n    }\r\n\r\n    return this.finishNode(node, \"ExportSpecifier\");\r\n  }\r\n\r\n  parseModuleExportName() {\r\n    if (this.match(123)) {\r\n      const result = this.parseStringLiteral(this.state.value);\r\n      const surrogate = result.value.match(loneSurrogate);\r\n\r\n      if (surrogate) {\r\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    return this.parseIdentifier(true);\r\n  }\r\n\r\n  parseImport(node) {\r\n    node.specifiers = [];\r\n\r\n    if (!this.match(123)) {\r\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\r\n      const parseNext = !hasDefault || this.eat(12);\r\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\r\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\r\n      this.expectContextual(91);\r\n    }\r\n\r\n    node.source = this.parseImportSource();\r\n    const assertions = this.maybeParseImportAssertions();\r\n\r\n    if (assertions) {\r\n      node.assertions = assertions;\r\n    } else {\r\n      const attributes = this.maybeParseModuleAttributes();\r\n\r\n      if (attributes) {\r\n        node.attributes = attributes;\r\n      }\r\n    }\r\n\r\n    this.semicolon();\r\n    return this.finishNode(node, \"ImportDeclaration\");\r\n  }\r\n\r\n  parseImportSource() {\r\n    if (!this.match(123)) this.unexpected();\r\n    return this.parseExprAtom();\r\n  }\r\n\r\n  shouldParseDefaultImport(node) {\r\n    return tokenIsIdentifier(this.state.type);\r\n  }\r\n\r\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\r\n    specifier.local = this.parseIdentifier();\r\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\r\n    node.specifiers.push(this.finishNode(specifier, type));\r\n  }\r\n\r\n  parseAssertEntries() {\r\n    const attrs = [];\r\n    const attrNames = new Set();\r\n\r\n    do {\r\n      if (this.match(8)) {\r\n        break;\r\n      }\r\n\r\n      const node = this.startNode();\r\n      const keyName = this.state.value;\r\n\r\n      if (attrNames.has(keyName)) {\r\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\r\n      }\r\n\r\n      attrNames.add(keyName);\r\n\r\n      if (this.match(123)) {\r\n        node.key = this.parseStringLiteral(keyName);\r\n      } else {\r\n        node.key = this.parseIdentifier(true);\r\n      }\r\n\r\n      this.expect(14);\r\n\r\n      if (!this.match(123)) {\r\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\r\n      }\r\n\r\n      node.value = this.parseStringLiteral(this.state.value);\r\n      this.finishNode(node, \"ImportAttribute\");\r\n      attrs.push(node);\r\n    } while (this.eat(12));\r\n\r\n    return attrs;\r\n  }\r\n\r\n  maybeParseModuleAttributes() {\r\n    if (this.match(70) && !this.hasPrecedingLineBreak()) {\r\n      this.expectPlugin(\"moduleAttributes\");\r\n      this.next();\r\n    } else {\r\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\r\n      return null;\r\n    }\r\n\r\n    const attrs = [];\r\n    const attributes = new Set();\r\n\r\n    do {\r\n      const node = this.startNode();\r\n      node.key = this.parseIdentifier(true);\r\n\r\n      if (node.key.name !== \"type\") {\r\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\r\n      }\r\n\r\n      if (attributes.has(node.key.name)) {\r\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\r\n      }\r\n\r\n      attributes.add(node.key.name);\r\n      this.expect(14);\r\n\r\n      if (!this.match(123)) {\r\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\r\n      }\r\n\r\n      node.value = this.parseStringLiteral(this.state.value);\r\n      this.finishNode(node, \"ImportAttribute\");\r\n      attrs.push(node);\r\n    } while (this.eat(12));\r\n\r\n    return attrs;\r\n  }\r\n\r\n  maybeParseImportAssertions() {\r\n    if (this.isContextual(88) && !this.hasPrecedingLineBreak()) {\r\n      this.expectPlugin(\"importAssertions\");\r\n      this.next();\r\n    } else {\r\n      if (this.hasPlugin(\"importAssertions\")) return [];\r\n      return null;\r\n    }\r\n\r\n    this.eat(5);\r\n    const attrs = this.parseAssertEntries();\r\n    this.eat(8);\r\n    return attrs;\r\n  }\r\n\r\n  maybeParseDefaultImportSpecifier(node) {\r\n    if (this.shouldParseDefaultImport(node)) {\r\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  maybeParseStarImportSpecifier(node) {\r\n    if (this.match(49)) {\r\n      const specifier = this.startNode();\r\n      this.next();\r\n      this.expectContextual(87);\r\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  parseNamedImportSpecifiers(node) {\r\n    let first = true;\r\n    this.expect(5);\r\n\r\n    while (!this.eat(8)) {\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        if (this.eat(14)) {\r\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\r\n        }\r\n\r\n        this.expect(12);\r\n        if (this.eat(8)) break;\r\n      }\r\n\r\n      const specifier = this.startNode();\r\n      const importedIsString = this.match(123);\r\n      const isMaybeTypeOnly = this.isContextual(120);\r\n      specifier.imported = this.parseModuleExportName();\r\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly);\r\n      node.specifiers.push(importSpecifier);\r\n    }\r\n  }\r\n\r\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\r\n    if (this.eatContextual(87)) {\r\n      specifier.local = this.parseIdentifier();\r\n    } else {\r\n      const {\r\n        imported\r\n      } = specifier;\r\n\r\n      if (importedIsString) {\r\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\r\n      }\r\n\r\n      this.checkReservedWord(imported.name, specifier.start, true, true);\r\n\r\n      if (!specifier.local) {\r\n        specifier.local = cloneIdentifier(imported);\r\n      }\r\n    }\r\n\r\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\r\n    return this.finishNode(specifier, \"ImportSpecifier\");\r\n  }\r\n\r\n  isThisParam(param) {\r\n    return param.type === \"Identifier\" && param.name === \"this\";\r\n  }\r\n\r\n}\r\n\r\nclass Parser extends StatementParser {\r\n  constructor(options, input) {\r\n    options = getOptions(options);\r\n    super(options, input);\r\n    this.options = options;\r\n    this.initializeScopes();\r\n    this.plugins = pluginsMap(this.options.plugins);\r\n    this.filename = options.sourceFilename;\r\n  }\r\n\r\n  getScopeHandler() {\r\n    return ScopeHandler;\r\n  }\r\n\r\n  parse() {\r\n    this.enterInitialScopes();\r\n    const file = this.startNode();\r\n    const program = this.startNode();\r\n    this.nextToken();\r\n    file.errors = null;\r\n    this.parseTopLevel(file, program);\r\n    file.errors = this.state.errors;\r\n    return file;\r\n  }\r\n\r\n}\r\n\r\nfunction pluginsMap(plugins) {\r\n  const pluginMap = new Map();\r\n\r\n  for (const plugin of plugins) {\r\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\r\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\r\n  }\r\n\r\n  return pluginMap;\r\n}\r\n\r\nfunction parse(input, options) {\r\n  var _options;\r\n\r\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\r\n    options = Object.assign({}, options);\r\n\r\n    try {\r\n      options.sourceType = \"module\";\r\n      const parser = getParser(options, input);\r\n      const ast = parser.parse();\r\n\r\n      if (parser.sawUnambiguousESM) {\r\n        return ast;\r\n      }\r\n\r\n      if (parser.ambiguousScriptDifferentAst) {\r\n        try {\r\n          options.sourceType = \"script\";\r\n          return getParser(options, input).parse();\r\n        } catch (_unused) {}\r\n      } else {\r\n        ast.program.sourceType = \"script\";\r\n      }\r\n\r\n      return ast;\r\n    } catch (moduleError) {\r\n      try {\r\n        options.sourceType = \"script\";\r\n        return getParser(options, input).parse();\r\n      } catch (_unused2) {}\r\n\r\n      throw moduleError;\r\n    }\r\n  } else {\r\n    return getParser(options, input).parse();\r\n  }\r\n}\r\nfunction parseExpression(input, options) {\r\n  const parser = getParser(options, input);\r\n\r\n  if (parser.options.strictMode) {\r\n    parser.state.strict = true;\r\n  }\r\n\r\n  return parser.getExpression();\r\n}\r\n\r\nfunction generateExportedTokenTypes(internalTokenTypes) {\r\n  const tokenTypes = {};\r\n\r\n  for (const typeName of Object.keys(internalTokenTypes)) {\r\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\r\n  }\r\n\r\n  return tokenTypes;\r\n}\r\n\r\nconst tokTypes = generateExportedTokenTypes(tt);\r\n\r\nfunction getParser(options, input) {\r\n  let cls = Parser;\r\n\r\n  if (options != null && options.plugins) {\r\n    validatePlugins(options.plugins);\r\n    cls = getParserClass(options.plugins);\r\n  }\r\n\r\n  return new cls(options, input);\r\n}\r\n\r\nconst parserClassCache = {};\r\n\r\nfunction getParserClass(pluginsFromOptions) {\r\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\r\n  const key = pluginList.join(\"/\");\r\n  let cls = parserClassCache[key];\r\n\r\n  if (!cls) {\r\n    cls = Parser;\r\n\r\n    for (const plugin of pluginList) {\r\n      cls = mixinPlugins[plugin](cls);\r\n    }\r\n\r\n    parserClassCache[key] = cls;\r\n  }\r\n\r\n  return cls;\r\n}\r\n\r\nvar parse_1 = parse;\r\nvar parseExpression_1 = parseExpression;\r\nvar tokTypes_1 = tokTypes;\r\n//# sourceMappingURL=index.js.map\r\n\r\n/*#__PURE__*/Object.defineProperty({\r\n\tparse: parse_1,\r\n\tparseExpression: parseExpression_1,\r\n\ttokTypes: tokTypes_1\r\n}, '__esModule', {value: true});\r\n\r\nconst isStaticExp = (p) => p.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* MemberExpLexState.inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* MemberExpLexState.inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* MemberExpLexState.inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* MemberExpLexState.inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* MemberExpLexState.inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* MemberExpLexState.inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* MemberExpLexState.inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* MemberExpLexState.inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* MemberExpLexState.inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = (path, context) => {\r\n        try {\r\n            let ret = parseExpression_1(path, {\r\n                plugins: context.expressionPlugins\r\n            });\r\n            if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n                ret = ret.expression;\r\n            }\r\n            return (ret.type === 'MemberExpression' ||\r\n                ret.type === 'OptionalMemberExpression' ||\r\n                ret.type === 'Identifier');\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\nconst isMemberExpression = isMemberExpressionNode;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert$1(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* NodeTypes.INTERPOLATION */ || node.type === 2 /* NodeTypes.TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 3 /* ElementTypes.TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 2 /* ElementTypes.SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* NodeTypes.VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n            // #6631\r\n            if (!hasProp(prop, first)) {\r\n                first.properties.unshift(prop);\r\n            }\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n        if (!hasProp(prop, props)) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\n// check existing key to avoid overriding user provided keys\r\nfunction hasProp(prop, props) {\r\n    let result = false;\r\n    if (prop.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        const propKeyName = prop.key.content;\r\n        result = props.properties.some(p => p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n            p.key.content === propKeyName);\r\n    }\r\n    return result;\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* NodeTypes.FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* NodeTypes.IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* NodeTypes.TEXT */:\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\r\n\r\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if (enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\r\n\r\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* Namespaces.HTML */,\r\n    getTextMode: () => 0 /* TextModes.DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: true\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* TextModes.DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* Namespaces.HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* TextModes.DATA */ || mode === 1 /* TextModes.RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* TextModes.DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* Namespaces.HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* ErrorCodes.X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* TagType.End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* TextModes.RAWTEXT */ && mode !== 1 /* TextModes.RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (node.type === 2 /* NodeTypes.TEXT */) {\r\n                if (!context.inPre) {\r\n                    if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                        const prev = nodes[i - 1];\r\n                        const next = nodes[i + 1];\r\n                        // Remove if:\r\n                        // - the whitespace is the first or last node, or:\r\n                        // - (condense mode) the whitespace is between twos comments, or:\r\n                        // - (condense mode) the whitespace is between comment and element, or:\r\n                        // - (condense mode) the whitespace is between two elements AND contains newline\r\n                        if (!prev ||\r\n                            !next ||\r\n                            (shouldCondense &&\r\n                                ((prev.type === 3 /* NodeTypes.COMMENT */ &&\r\n                                    next.type === 3 /* NodeTypes.COMMENT */) ||\r\n                                    (prev.type === 3 /* NodeTypes.COMMENT */ &&\r\n                                        next.type === 1 /* NodeTypes.ELEMENT */) ||\r\n                                    (prev.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                                        next.type === 3 /* NodeTypes.COMMENT */) ||\r\n                                    (prev.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                                        next.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                                        /[\\r\\n]/.test(node.content))))) {\r\n                            removedWhitespace = true;\r\n                            nodes[i] = null;\r\n                        }\r\n                        else {\r\n                            // Otherwise, the whitespace is condensed into a single space\r\n                            node.content = ' ';\r\n                        }\r\n                    }\r\n                    else if (shouldCondense) {\r\n                        // in condense mode, consecutive whitespaces in text are condensed\r\n                        // down to a single space.\r\n                        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                    }\r\n                }\r\n                else {\r\n                    // #6410 normalize windows newlines in <pre>:\r\n                    // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\r\n                    // in the DOM\r\n                    node.content = node.content.replace(/\\r\\n/g, '\\n');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* NodeTypes.COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* NodeTypes.TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* NodeTypes.TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* NodeTypes.TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* TextModes.CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* ErrorCodes.EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* ErrorCodes.EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* ErrorCodes.NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* NodeTypes.COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* NodeTypes.COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* TagType.Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* TagType.End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* ErrorCodes.X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* TagType.Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* ErrorCodes.EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* TagType.End */ && isSelfClosing) {\r\n            emitError(context, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* TagType.End */) {\r\n        return;\r\n    }\r\n    let tagType = 0 /* ElementTypes.ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* ElementTypes.SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* ElementTypes.TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* ElementTypes.COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* NodeTypes.ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                false &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* TagType.End */) {\r\n            emitError(context, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* TagType.Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* ConstantTypes.CAN_STRINGIFY */\r\n                    : 0 /* ConstantTypes.NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        return {\r\n            type: 7 /* NodeTypes.DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* ConstantTypes.NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* NodeTypes.ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* NodeTypes.TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* NodeTypes.INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* ConstantTypes.NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* TextModes.CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* NodeTypes.TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* TextModes.RAWTEXT */ ||\r\n        mode === 3 /* TextModes.CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* TextModes.DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* TextModes.RCDATA */:\r\n        case 2 /* TextModes.RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* TextModes.CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\r\n\r\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* NodeTypes.ELEMENT */ &&\r\n            child.tagType === 0 /* ElementTypes.ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* ConstantTypes.NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* ConstantTypes.CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* PatchFlags.HOISTED */ + (` /* HOISTED */` );\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* PatchFlags.NEED_PATCH */ ||\r\n                        flag === 1 /* PatchFlags.TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* ConstantTypes.CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* ElementTypes.COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* NodeTypes.FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* NodeTypes.IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* NodeTypes.VNODE_CALL */ &&\r\n        isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            if (node.tagType !== 0 /* ElementTypes.ELEMENT */) {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* NodeTypes.VNODE_CALL */) {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                        return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* ConstantTypes.CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    // except set custom directives.\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                            constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                        }\r\n                    }\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n        case 2 /* NodeTypes.TEXT */:\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n        case 9 /* NodeTypes.IF */:\r\n        case 11 /* NodeTypes.FOR */:\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ &&\r\n        !isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\r\n\r\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if (!context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if (removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n            // identifier tracking only happens in non-browser builds.\r\n            {\r\n                if (isString(exp)) {\r\n                    addId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(addId);\r\n                }\r\n                else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    addId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        removeIdentifiers(exp) {\r\n            {\r\n                if (isString(exp)) {\r\n                    removeId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(removeId);\r\n                }\r\n                else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    removeId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        hoist(exp) {\r\n            if (isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* ConstantTypes.CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    function addId(id) {\r\n        const { identifiers } = context;\r\n        if (identifiers[id] === undefined) {\r\n            identifiers[id] = 0;\r\n        }\r\n        identifiers[id]++;\r\n    }\r\n    function removeId(id) {\r\n        context.identifiers[id]--;\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if (children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + (` /* ${patchFlagText} */` ), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* NodeTypes.IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n        case 11 /* NodeTypes.FOR */:\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n        case 0 /* NodeTypes.ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* ElementTypes.TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\r\n\r\n/**\r\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\r\n */\r\nvar encode = function (number) {\r\n  if (0 <= number && number < intToCharMap.length) {\r\n    return intToCharMap[number];\r\n  }\r\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\r\n};\r\n\r\n/**\r\n * Decode a single base 64 character code digit to an integer. Returns -1 on\r\n * failure.\r\n */\r\nvar decode = function (charCode) {\r\n  var bigA = 65;     // 'A'\r\n  var bigZ = 90;     // 'Z'\r\n\r\n  var littleA = 97;  // 'a'\r\n  var littleZ = 122; // 'z'\r\n\r\n  var zero = 48;     // '0'\r\n  var nine = 57;     // '9'\r\n\r\n  var plus = 43;     // '+'\r\n  var slash = 47;    // '/'\r\n\r\n  var littleOffset = 26;\r\n  var numberOffset = 52;\r\n\r\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n  if (bigA <= charCode && charCode <= bigZ) {\r\n    return (charCode - bigA);\r\n  }\r\n\r\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\r\n  if (littleA <= charCode && charCode <= littleZ) {\r\n    return (charCode - littleA + littleOffset);\r\n  }\r\n\r\n  // 52 - 61: 0123456789\r\n  if (zero <= charCode && charCode <= nine) {\r\n    return (charCode - zero + numberOffset);\r\n  }\r\n\r\n  // 62: +\r\n  if (charCode == plus) {\r\n    return 62;\r\n  }\r\n\r\n  // 63: /\r\n  if (charCode == slash) {\r\n    return 63;\r\n  }\r\n\r\n  // Invalid base64 digit.\r\n  return -1;\r\n};\r\n\r\nvar base64 = {\r\n\tencode: encode,\r\n\tdecode: decode\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n * Based on the Base 64 VLQ implementation in Closure Compiler:\r\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\r\n *\r\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *  * Neither the name of Google Inc. nor the names of its\r\n *    contributors may be used to endorse or promote products derived\r\n *    from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\n\r\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\r\n// length quantities we use in the source map spec, the first bit is the sign,\r\n// the next four bits are the actual value, and the 6th bit is the\r\n// continuation bit. The continuation bit tells us whether there are more\r\n// digits in this value following this digit.\r\n//\r\n//   Continuation\r\n//   |    Sign\r\n//   |    |\r\n//   V    V\r\n//   101011\r\n\r\nvar VLQ_BASE_SHIFT = 5;\r\n\r\n// binary: 100000\r\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\r\n\r\n// binary: 011111\r\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\r\n\r\n// binary: 100000\r\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\r\n\r\n/**\r\n * Converts from a two-complement value to a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\r\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\r\n */\r\nfunction toVLQSigned(aValue) {\r\n  return aValue < 0\r\n    ? ((-aValue) << 1) + 1\r\n    : (aValue << 1) + 0;\r\n}\r\n\r\n/**\r\n * Converts to a two-complement value from a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\r\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\r\n */\r\nfunction fromVLQSigned(aValue) {\r\n  var isNegative = (aValue & 1) === 1;\r\n  var shifted = aValue >> 1;\r\n  return isNegative\r\n    ? -shifted\r\n    : shifted;\r\n}\r\n\r\n/**\r\n * Returns the base 64 VLQ encoded value.\r\n */\r\nvar encode$1 = function base64VLQ_encode(aValue) {\r\n  var encoded = \"\";\r\n  var digit;\r\n\r\n  var vlq = toVLQSigned(aValue);\r\n\r\n  do {\r\n    digit = vlq & VLQ_BASE_MASK;\r\n    vlq >>>= VLQ_BASE_SHIFT;\r\n    if (vlq > 0) {\r\n      // There are still more digits in this value, so we must make sure the\r\n      // continuation bit is marked.\r\n      digit |= VLQ_CONTINUATION_BIT;\r\n    }\r\n    encoded += base64.encode(digit);\r\n  } while (vlq > 0);\r\n\r\n  return encoded;\r\n};\r\n\r\n/**\r\n * Decodes the next base 64 VLQ value from the given string and returns the\r\n * value and the rest of the string via the out parameter.\r\n */\r\nvar decode$1 = function base64VLQ_decode(aStr, aIndex, aOutParam) {\r\n  var strLen = aStr.length;\r\n  var result = 0;\r\n  var shift = 0;\r\n  var continuation, digit;\r\n\r\n  do {\r\n    if (aIndex >= strLen) {\r\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\r\n    }\r\n\r\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\r\n    if (digit === -1) {\r\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\r\n    }\r\n\r\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\r\n    digit &= VLQ_BASE_MASK;\r\n    result = result + (digit << shift);\r\n    shift += VLQ_BASE_SHIFT;\r\n  } while (continuation);\r\n\r\n  aOutParam.value = fromVLQSigned(result);\r\n  aOutParam.rest = aIndex;\r\n};\r\n\r\nvar base64Vlq = {\r\n\tencode: encode$1,\r\n\tdecode: decode$1\r\n};\r\n\r\nfunction getDefaultExportFromCjs (x) {\r\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\r\n}\r\n\r\nfunction getAugmentedNamespace(n) {\r\n\tif (n.__esModule) return n;\r\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\r\n\tObject.keys(n).forEach(function (k) {\r\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\r\n\t\tObject.defineProperty(a, k, d.get ? d : {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\treturn n[k];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn a;\r\n}\r\n\r\nfunction createCommonjsModule(fn) {\r\n  var module = { exports: {} };\r\n\treturn fn(module, module.exports), module.exports;\r\n}\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\nvar util = createCommonjsModule(function (module, exports) {\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n/**\r\n * This is a helper function for getting values from parameter/options\r\n * objects.\r\n *\r\n * @param args The object we are extracting values from\r\n * @param name The name of the property we are getting.\r\n * @param defaultValue An optional value to return if the property is missing\r\n * from the object. If this is not specified and the property is missing, an\r\n * error will be thrown.\r\n */\r\nfunction getArg(aArgs, aName, aDefaultValue) {\r\n  if (aName in aArgs) {\r\n    return aArgs[aName];\r\n  } else if (arguments.length === 3) {\r\n    return aDefaultValue;\r\n  } else {\r\n    throw new Error('\"' + aName + '\" is a required argument.');\r\n  }\r\n}\r\nexports.getArg = getArg;\r\n\r\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\r\nvar dataUrlRegexp = /^data:.+\\,.+$/;\r\n\r\nfunction urlParse(aUrl) {\r\n  var match = aUrl.match(urlRegexp);\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  return {\r\n    scheme: match[1],\r\n    auth: match[2],\r\n    host: match[3],\r\n    port: match[4],\r\n    path: match[5]\r\n  };\r\n}\r\nexports.urlParse = urlParse;\r\n\r\nfunction urlGenerate(aParsedUrl) {\r\n  var url = '';\r\n  if (aParsedUrl.scheme) {\r\n    url += aParsedUrl.scheme + ':';\r\n  }\r\n  url += '//';\r\n  if (aParsedUrl.auth) {\r\n    url += aParsedUrl.auth + '@';\r\n  }\r\n  if (aParsedUrl.host) {\r\n    url += aParsedUrl.host;\r\n  }\r\n  if (aParsedUrl.port) {\r\n    url += \":\" + aParsedUrl.port;\r\n  }\r\n  if (aParsedUrl.path) {\r\n    url += aParsedUrl.path;\r\n  }\r\n  return url;\r\n}\r\nexports.urlGenerate = urlGenerate;\r\n\r\n/**\r\n * Normalizes a path, or the path portion of a URL:\r\n *\r\n * - Replaces consecutive slashes with one slash.\r\n * - Removes unnecessary '.' parts.\r\n * - Removes unnecessary '<dir>/..' parts.\r\n *\r\n * Based on code in the Node.js 'path' core module.\r\n *\r\n * @param aPath The path or url to normalize.\r\n */\r\nfunction normalize(aPath) {\r\n  var path = aPath;\r\n  var url = urlParse(aPath);\r\n  if (url) {\r\n    if (!url.path) {\r\n      return aPath;\r\n    }\r\n    path = url.path;\r\n  }\r\n  var isAbsolute = exports.isAbsolute(path);\r\n\r\n  var parts = path.split(/\\/+/);\r\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\r\n    part = parts[i];\r\n    if (part === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (part === '..') {\r\n      up++;\r\n    } else if (up > 0) {\r\n      if (part === '') {\r\n        // The first part is blank if the path is absolute. Trying to go\r\n        // above the root is a no-op. Therefore we can remove all '..' parts\r\n        // directly after the root.\r\n        parts.splice(i + 1, up);\r\n        up = 0;\r\n      } else {\r\n        parts.splice(i, 2);\r\n        up--;\r\n      }\r\n    }\r\n  }\r\n  path = parts.join('/');\r\n\r\n  if (path === '') {\r\n    path = isAbsolute ? '/' : '.';\r\n  }\r\n\r\n  if (url) {\r\n    url.path = path;\r\n    return urlGenerate(url);\r\n  }\r\n  return path;\r\n}\r\nexports.normalize = normalize;\r\n\r\n/**\r\n * Joins two paths/URLs.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be joined with the root.\r\n *\r\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\r\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\r\n *   first.\r\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\r\n *   is updated with the result and aRoot is returned. Otherwise the result\r\n *   is returned.\r\n *   - If aPath is absolute, the result is aPath.\r\n *   - Otherwise the two paths are joined with a slash.\r\n * - Joining for example 'http://' and 'www.example.com' is also supported.\r\n */\r\nfunction join(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n  if (aPath === \"\") {\r\n    aPath = \".\";\r\n  }\r\n  var aPathUrl = urlParse(aPath);\r\n  var aRootUrl = urlParse(aRoot);\r\n  if (aRootUrl) {\r\n    aRoot = aRootUrl.path || '/';\r\n  }\r\n\r\n  // `join(foo, '//www.example.org')`\r\n  if (aPathUrl && !aPathUrl.scheme) {\r\n    if (aRootUrl) {\r\n      aPathUrl.scheme = aRootUrl.scheme;\r\n    }\r\n    return urlGenerate(aPathUrl);\r\n  }\r\n\r\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\r\n    return aPath;\r\n  }\r\n\r\n  // `join('http://', 'www.example.com')`\r\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\r\n    aRootUrl.host = aPath;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n\r\n  var joined = aPath.charAt(0) === '/'\r\n    ? aPath\r\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\r\n\r\n  if (aRootUrl) {\r\n    aRootUrl.path = joined;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n  return joined;\r\n}\r\nexports.join = join;\r\n\r\nexports.isAbsolute = function (aPath) {\r\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\r\n};\r\n\r\n/**\r\n * Make a path relative to a URL or another path.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be made relative to aRoot.\r\n */\r\nfunction relative(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n\r\n  aRoot = aRoot.replace(/\\/$/, '');\r\n\r\n  // It is possible for the path to be above the root. In this case, simply\r\n  // checking whether the root is a prefix of the path won't work. Instead, we\r\n  // need to remove components from the root one by one, until either we find\r\n  // a prefix that fits, or we run out of components to remove.\r\n  var level = 0;\r\n  while (aPath.indexOf(aRoot + '/') !== 0) {\r\n    var index = aRoot.lastIndexOf(\"/\");\r\n    if (index < 0) {\r\n      return aPath;\r\n    }\r\n\r\n    // If the only part of the root that is left is the scheme (i.e. http://,\r\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\r\n    // have exhausted all components, so the path is not relative to the root.\r\n    aRoot = aRoot.slice(0, index);\r\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\r\n      return aPath;\r\n    }\r\n\r\n    ++level;\r\n  }\r\n\r\n  // Make sure we add a \"../\" for each component we removed from the root.\r\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\r\n}\r\nexports.relative = relative;\r\n\r\nvar supportsNullProto = (function () {\r\n  var obj = Object.create(null);\r\n  return !('__proto__' in obj);\r\n}());\r\n\r\nfunction identity (s) {\r\n  return s;\r\n}\r\n\r\n/**\r\n * Because behavior goes wacky when you set `__proto__` on objects, we\r\n * have to prefix all the strings in our set with an arbitrary character.\r\n *\r\n * See https://github.com/mozilla/source-map/pull/31 and\r\n * https://github.com/mozilla/source-map/issues/30\r\n *\r\n * @param String aStr\r\n */\r\nfunction toSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return '$' + aStr;\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.toSetString = supportsNullProto ? identity : toSetString;\r\n\r\nfunction fromSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return aStr.slice(1);\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\r\n\r\nfunction isProtoString(s) {\r\n  if (!s) {\r\n    return false;\r\n  }\r\n\r\n  var length = s.length;\r\n\r\n  if (length < 9 /* \"__proto__\".length */) {\r\n    return false;\r\n  }\r\n\r\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\r\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\r\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\r\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = length - 10; i >= 0; i--) {\r\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings where the original positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same original source/line/column, but different generated\r\n * line and column the same. Useful when searching for a mapping with a\r\n * stubbed out mapping.\r\n */\r\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\r\n  var cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0 || onlyCompareOriginal) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByOriginalPositions = compareByOriginalPositions;\r\n\r\n/**\r\n * Comparator between two mappings with deflated source and name indices where\r\n * the generated positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same generated line and column, but different\r\n * source/name/original line and column the same. Useful when searching for a\r\n * mapping with a stubbed out mapping.\r\n */\r\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0 || onlyCompareGenerated) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\r\n\r\nfunction strcmp(aStr1, aStr2) {\r\n  if (aStr1 === aStr2) {\r\n    return 0;\r\n  }\r\n\r\n  if (aStr1 === null) {\r\n    return 1; // aStr2 !== null\r\n  }\r\n\r\n  if (aStr2 === null) {\r\n    return -1; // aStr1 !== null\r\n  }\r\n\r\n  if (aStr1 > aStr2) {\r\n    return 1;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings with inflated source and name strings where\r\n * the generated positions are compared.\r\n */\r\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\r\n\r\n/**\r\n * Strip any JSON XSSI avoidance prefix from the string (as documented\r\n * in the source maps specification), and then parse the string as\r\n * JSON.\r\n */\r\nfunction parseSourceMapInput(str) {\r\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\r\n}\r\nexports.parseSourceMapInput = parseSourceMapInput;\r\n\r\n/**\r\n * Compute the URL of a source given the the source root, the source's\r\n * URL, and the source map's URL.\r\n */\r\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\r\n  sourceURL = sourceURL || '';\r\n\r\n  if (sourceRoot) {\r\n    // This follows what Chrome does.\r\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\r\n      sourceRoot += '/';\r\n    }\r\n    // The spec says:\r\n    //   Line 4: An optional source root, useful for relocating source\r\n    //   files on a server or removing repeated values in the\r\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\r\n    //   entries in the \u201Csource\u201D field.\r\n    sourceURL = sourceRoot + sourceURL;\r\n  }\r\n\r\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\r\n  // a parameter.  This mode is still somewhat supported, which is why\r\n  // this code block is conditional.  However, it's preferable to pass\r\n  // the source map URL to SourceMapConsumer, so that this function\r\n  // can implement the source URL resolution algorithm as outlined in\r\n  // the spec.  This block is basically the equivalent of:\r\n  //    new URL(sourceURL, sourceMapURL).toString()\r\n  // ... except it avoids using URL, which wasn't available in the\r\n  // older releases of node still supported by this library.\r\n  //\r\n  // The spec says:\r\n  //   If the sources are not absolute URLs after prepending of the\r\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\r\n  //   SourceMap (like resolving script src in a html document).\r\n  if (sourceMapURL) {\r\n    var parsed = urlParse(sourceMapURL);\r\n    if (!parsed) {\r\n      throw new Error(\"sourceMapURL could not be parsed\");\r\n    }\r\n    if (parsed.path) {\r\n      // Strip the last path component, but keep the \"/\".\r\n      var index = parsed.path.lastIndexOf('/');\r\n      if (index >= 0) {\r\n        parsed.path = parsed.path.substring(0, index + 1);\r\n      }\r\n    }\r\n    sourceURL = join(urlGenerate(parsed), sourceURL);\r\n  }\r\n\r\n  return normalize(sourceURL);\r\n}\r\nexports.computeSourceURL = computeSourceURL;\r\n});\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar hasNativeMap = typeof Map !== \"undefined\";\r\n\r\n/**\r\n * A data structure which is a combination of an array and a set. Adding a new\r\n * member is O(1), testing for membership is O(1), and finding the index of an\r\n * element is O(1). Removing elements from the set is not supported. Only\r\n * strings are supported for membership.\r\n */\r\nfunction ArraySet() {\r\n  this._array = [];\r\n  this._set = hasNativeMap ? new Map() : Object.create(null);\r\n}\r\n\r\n/**\r\n * Static method for creating ArraySet instances from an existing array.\r\n */\r\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\r\n  var set = new ArraySet();\r\n  for (var i = 0, len = aArray.length; i < len; i++) {\r\n    set.add(aArray[i], aAllowDuplicates);\r\n  }\r\n  return set;\r\n};\r\n\r\n/**\r\n * Return how many unique items are in this ArraySet. If duplicates have been\r\n * added, than those do not count towards the size.\r\n *\r\n * @returns Number\r\n */\r\nArraySet.prototype.size = function ArraySet_size() {\r\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\r\n};\r\n\r\n/**\r\n * Add the given string to this set.\r\n *\r\n * @param String aStr\r\n */\r\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\r\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\r\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\r\n  var idx = this._array.length;\r\n  if (!isDuplicate || aAllowDuplicates) {\r\n    this._array.push(aStr);\r\n  }\r\n  if (!isDuplicate) {\r\n    if (hasNativeMap) {\r\n      this._set.set(aStr, idx);\r\n    } else {\r\n      this._set[sStr] = idx;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Is the given string a member of this set?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet.prototype.has = function ArraySet_has(aStr) {\r\n  if (hasNativeMap) {\r\n    return this._set.has(aStr);\r\n  } else {\r\n    var sStr = util.toSetString(aStr);\r\n    return has.call(this._set, sStr);\r\n  }\r\n};\r\n\r\n/**\r\n * What is the index of the given string in the array?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\r\n  if (hasNativeMap) {\r\n    var idx = this._set.get(aStr);\r\n    if (idx >= 0) {\r\n        return idx;\r\n    }\r\n  } else {\r\n    var sStr = util.toSetString(aStr);\r\n    if (has.call(this._set, sStr)) {\r\n      return this._set[sStr];\r\n    }\r\n  }\r\n\r\n  throw new Error('\"' + aStr + '\" is not in the set.');\r\n};\r\n\r\n/**\r\n * What is the element at the given index?\r\n *\r\n * @param Number aIdx\r\n */\r\nArraySet.prototype.at = function ArraySet_at(aIdx) {\r\n  if (aIdx >= 0 && aIdx < this._array.length) {\r\n    return this._array[aIdx];\r\n  }\r\n  throw new Error('No element indexed by ' + aIdx);\r\n};\r\n\r\n/**\r\n * Returns the array representation of this set (which has the proper indices\r\n * indicated by indexOf). Note that this is a copy of the internal array used\r\n * for storing the members so that no one can mess with internal state.\r\n */\r\nArraySet.prototype.toArray = function ArraySet_toArray() {\r\n  return this._array.slice();\r\n};\r\n\r\nvar ArraySet_1 = ArraySet;\r\n\r\nvar arraySet = {\r\n\tArraySet: ArraySet_1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\n\r\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\r\nfunction generatedPositionAfter(mappingA, mappingB) {\r\n  // Optimized for most common case\r\n  var lineA = mappingA.generatedLine;\r\n  var lineB = mappingB.generatedLine;\r\n  var columnA = mappingA.generatedColumn;\r\n  var columnB = mappingB.generatedColumn;\r\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\r\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\r\n}\r\n\r\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\r\nfunction MappingList() {\r\n  this._array = [];\r\n  this._sorted = true;\r\n  // Serves as infimum\r\n  this._last = {generatedLine: -1, generatedColumn: 0};\r\n}\r\n\r\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\r\nMappingList.prototype.unsortedForEach =\r\n  function MappingList_forEach(aCallback, aThisArg) {\r\n    this._array.forEach(aCallback, aThisArg);\r\n  };\r\n\r\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\r\nMappingList.prototype.add = function MappingList_add(aMapping) {\r\n  if (generatedPositionAfter(this._last, aMapping)) {\r\n    this._last = aMapping;\r\n    this._array.push(aMapping);\r\n  } else {\r\n    this._sorted = false;\r\n    this._array.push(aMapping);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\r\nMappingList.prototype.toArray = function MappingList_toArray() {\r\n  if (!this._sorted) {\r\n    this._array.sort(util.compareByGeneratedPositionsInflated);\r\n    this._sorted = true;\r\n  }\r\n  return this._array;\r\n};\r\n\r\nvar MappingList_1 = MappingList;\r\n\r\nvar mappingList = {\r\n\tMappingList: MappingList_1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\n\r\nvar ArraySet$1 = arraySet.ArraySet;\r\nvar MappingList$1 = mappingList.MappingList;\r\n\r\n/**\r\n * An instance of the SourceMapGenerator represents a source map which is\r\n * being built incrementally. You may pass an object with the following\r\n * properties:\r\n *\r\n *   - file: The filename of the generated source.\r\n *   - sourceRoot: A root for all relative URLs in this source map.\r\n */\r\nfunction SourceMapGenerator(aArgs) {\r\n  if (!aArgs) {\r\n    aArgs = {};\r\n  }\r\n  this._file = util.getArg(aArgs, 'file', null);\r\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\r\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\r\n  this._sources = new ArraySet$1();\r\n  this._names = new ArraySet$1();\r\n  this._mappings = new MappingList$1();\r\n  this._sourcesContents = null;\r\n}\r\n\r\nSourceMapGenerator.prototype._version = 3;\r\n\r\n/**\r\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\r\n *\r\n * @param aSourceMapConsumer The SourceMap.\r\n */\r\nSourceMapGenerator.fromSourceMap =\r\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\r\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\r\n    var generator = new SourceMapGenerator({\r\n      file: aSourceMapConsumer.file,\r\n      sourceRoot: sourceRoot\r\n    });\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      var newMapping = {\r\n        generated: {\r\n          line: mapping.generatedLine,\r\n          column: mapping.generatedColumn\r\n        }\r\n      };\r\n\r\n      if (mapping.source != null) {\r\n        newMapping.source = mapping.source;\r\n        if (sourceRoot != null) {\r\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\r\n        }\r\n\r\n        newMapping.original = {\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        };\r\n\r\n        if (mapping.name != null) {\r\n          newMapping.name = mapping.name;\r\n        }\r\n      }\r\n\r\n      generator.addMapping(newMapping);\r\n    });\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var sourceRelative = sourceFile;\r\n      if (sourceRoot !== null) {\r\n        sourceRelative = util.relative(sourceRoot, sourceFile);\r\n      }\r\n\r\n      if (!generator._sources.has(sourceRelative)) {\r\n        generator._sources.add(sourceRelative);\r\n      }\r\n\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        generator.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n    return generator;\r\n  };\r\n\r\n/**\r\n * Add a single mapping from original source line and column to the generated\r\n * source's line and column for this source map being created. The mapping\r\n * object should have the following properties:\r\n *\r\n *   - generated: An object with the generated line and column positions.\r\n *   - original: An object with the original line and column positions.\r\n *   - source: The original source file (relative to the sourceRoot).\r\n *   - name: An optional original token name for this mapping.\r\n */\r\nSourceMapGenerator.prototype.addMapping =\r\n  function SourceMapGenerator_addMapping(aArgs) {\r\n    var generated = util.getArg(aArgs, 'generated');\r\n    var original = util.getArg(aArgs, 'original', null);\r\n    var source = util.getArg(aArgs, 'source', null);\r\n    var name = util.getArg(aArgs, 'name', null);\r\n\r\n    if (!this._skipValidation) {\r\n      this._validateMapping(generated, original, source, name);\r\n    }\r\n\r\n    if (source != null) {\r\n      source = String(source);\r\n      if (!this._sources.has(source)) {\r\n        this._sources.add(source);\r\n      }\r\n    }\r\n\r\n    if (name != null) {\r\n      name = String(name);\r\n      if (!this._names.has(name)) {\r\n        this._names.add(name);\r\n      }\r\n    }\r\n\r\n    this._mappings.add({\r\n      generatedLine: generated.line,\r\n      generatedColumn: generated.column,\r\n      originalLine: original != null && original.line,\r\n      originalColumn: original != null && original.column,\r\n      source: source,\r\n      name: name\r\n    });\r\n  };\r\n\r\n/**\r\n * Set the source content for a source file.\r\n */\r\nSourceMapGenerator.prototype.setSourceContent =\r\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\r\n    var source = aSourceFile;\r\n    if (this._sourceRoot != null) {\r\n      source = util.relative(this._sourceRoot, source);\r\n    }\r\n\r\n    if (aSourceContent != null) {\r\n      // Add the source content to the _sourcesContents map.\r\n      // Create a new _sourcesContents map if the property is null.\r\n      if (!this._sourcesContents) {\r\n        this._sourcesContents = Object.create(null);\r\n      }\r\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\r\n    } else if (this._sourcesContents) {\r\n      // Remove the source file from the _sourcesContents map.\r\n      // If the _sourcesContents map is empty, set the property to null.\r\n      delete this._sourcesContents[util.toSetString(source)];\r\n      if (Object.keys(this._sourcesContents).length === 0) {\r\n        this._sourcesContents = null;\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Applies the mappings of a sub-source-map for a specific source file to the\r\n * source map being generated. Each mapping to the supplied source file is\r\n * rewritten using the supplied source map. Note: The resolution for the\r\n * resulting mappings is the minimium of this map and the supplied map.\r\n *\r\n * @param aSourceMapConsumer The source map to be applied.\r\n * @param aSourceFile Optional. The filename of the source file.\r\n *        If omitted, SourceMapConsumer's file property will be used.\r\n * @param aSourceMapPath Optional. The dirname of the path to the source map\r\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\r\n *        This parameter is needed when the two source maps aren't in the same\r\n *        directory, and the source map to be applied contains relative source\r\n *        paths. If so, those relative source paths need to be rewritten\r\n *        relative to the SourceMapGenerator.\r\n */\r\nSourceMapGenerator.prototype.applySourceMap =\r\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\r\n    var sourceFile = aSourceFile;\r\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\r\n    if (aSourceFile == null) {\r\n      if (aSourceMapConsumer.file == null) {\r\n        throw new Error(\r\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\r\n          'or the source map\\'s \"file\" property. Both were omitted.'\r\n        );\r\n      }\r\n      sourceFile = aSourceMapConsumer.file;\r\n    }\r\n    var sourceRoot = this._sourceRoot;\r\n    // Make \"sourceFile\" relative if an absolute Url is passed.\r\n    if (sourceRoot != null) {\r\n      sourceFile = util.relative(sourceRoot, sourceFile);\r\n    }\r\n    // Applying the SourceMap can add and remove items from the sources and\r\n    // the names array.\r\n    var newSources = new ArraySet$1();\r\n    var newNames = new ArraySet$1();\r\n\r\n    // Find mappings for the \"sourceFile\"\r\n    this._mappings.unsortedForEach(function (mapping) {\r\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\r\n        // Check if it can be mapped by the source map, then update the mapping.\r\n        var original = aSourceMapConsumer.originalPositionFor({\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        });\r\n        if (original.source != null) {\r\n          // Copy mapping\r\n          mapping.source = original.source;\r\n          if (aSourceMapPath != null) {\r\n            mapping.source = util.join(aSourceMapPath, mapping.source);\r\n          }\r\n          if (sourceRoot != null) {\r\n            mapping.source = util.relative(sourceRoot, mapping.source);\r\n          }\r\n          mapping.originalLine = original.line;\r\n          mapping.originalColumn = original.column;\r\n          if (original.name != null) {\r\n            mapping.name = original.name;\r\n          }\r\n        }\r\n      }\r\n\r\n      var source = mapping.source;\r\n      if (source != null && !newSources.has(source)) {\r\n        newSources.add(source);\r\n      }\r\n\r\n      var name = mapping.name;\r\n      if (name != null && !newNames.has(name)) {\r\n        newNames.add(name);\r\n      }\r\n\r\n    }, this);\r\n    this._sources = newSources;\r\n    this._names = newNames;\r\n\r\n    // Copy sourcesContents of applied map.\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aSourceMapPath != null) {\r\n          sourceFile = util.join(aSourceMapPath, sourceFile);\r\n        }\r\n        if (sourceRoot != null) {\r\n          sourceFile = util.relative(sourceRoot, sourceFile);\r\n        }\r\n        this.setSourceContent(sourceFile, content);\r\n      }\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * A mapping can have one of the three levels of data:\r\n *\r\n *   1. Just the generated position.\r\n *   2. The Generated position, original position, and original source.\r\n *   3. Generated and original position, original source, as well as a name\r\n *      token.\r\n *\r\n * To maintain consistency, we validate that any new mapping being added falls\r\n * in to one of these categories.\r\n */\r\nSourceMapGenerator.prototype._validateMapping =\r\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\r\n                                              aName) {\r\n    // When aOriginal is truthy but has empty values for .line and .column,\r\n    // it is most likely a programmer error. In this case we throw a very\r\n    // specific error message to try to guide them the right way.\r\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\r\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\r\n        throw new Error(\r\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\r\n            'the original mapping entirely and only map the generated position. If so, pass ' +\r\n            'null for the original mapping instead of an object with empty or null values.'\r\n        );\r\n    }\r\n\r\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n        && aGenerated.line > 0 && aGenerated.column >= 0\r\n        && !aOriginal && !aSource && !aName) {\r\n      // Case 1.\r\n      return;\r\n    }\r\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\r\n             && aGenerated.line > 0 && aGenerated.column >= 0\r\n             && aOriginal.line > 0 && aOriginal.column >= 0\r\n             && aSource) {\r\n      // Cases 2 and 3.\r\n      return;\r\n    }\r\n    else {\r\n      throw new Error('Invalid mapping: ' + JSON.stringify({\r\n        generated: aGenerated,\r\n        source: aSource,\r\n        original: aOriginal,\r\n        name: aName\r\n      }));\r\n    }\r\n  };\r\n\r\n/**\r\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\r\n * specified by the source map format.\r\n */\r\nSourceMapGenerator.prototype._serializeMappings =\r\n  function SourceMapGenerator_serializeMappings() {\r\n    var previousGeneratedColumn = 0;\r\n    var previousGeneratedLine = 1;\r\n    var previousOriginalColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousName = 0;\r\n    var previousSource = 0;\r\n    var result = '';\r\n    var next;\r\n    var mapping;\r\n    var nameIdx;\r\n    var sourceIdx;\r\n\r\n    var mappings = this._mappings.toArray();\r\n    for (var i = 0, len = mappings.length; i < len; i++) {\r\n      mapping = mappings[i];\r\n      next = '';\r\n\r\n      if (mapping.generatedLine !== previousGeneratedLine) {\r\n        previousGeneratedColumn = 0;\r\n        while (mapping.generatedLine !== previousGeneratedLine) {\r\n          next += ';';\r\n          previousGeneratedLine++;\r\n        }\r\n      }\r\n      else {\r\n        if (i > 0) {\r\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\r\n            continue;\r\n          }\r\n          next += ',';\r\n        }\r\n      }\r\n\r\n      next += base64Vlq.encode(mapping.generatedColumn\r\n                                 - previousGeneratedColumn);\r\n      previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n      if (mapping.source != null) {\r\n        sourceIdx = this._sources.indexOf(mapping.source);\r\n        next += base64Vlq.encode(sourceIdx - previousSource);\r\n        previousSource = sourceIdx;\r\n\r\n        // lines are stored 0-based in SourceMap spec version 3\r\n        next += base64Vlq.encode(mapping.originalLine - 1\r\n                                   - previousOriginalLine);\r\n        previousOriginalLine = mapping.originalLine - 1;\r\n\r\n        next += base64Vlq.encode(mapping.originalColumn\r\n                                   - previousOriginalColumn);\r\n        previousOriginalColumn = mapping.originalColumn;\r\n\r\n        if (mapping.name != null) {\r\n          nameIdx = this._names.indexOf(mapping.name);\r\n          next += base64Vlq.encode(nameIdx - previousName);\r\n          previousName = nameIdx;\r\n        }\r\n      }\r\n\r\n      result += next;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\nSourceMapGenerator.prototype._generateSourcesContent =\r\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\r\n    return aSources.map(function (source) {\r\n      if (!this._sourcesContents) {\r\n        return null;\r\n      }\r\n      if (aSourceRoot != null) {\r\n        source = util.relative(aSourceRoot, source);\r\n      }\r\n      var key = util.toSetString(source);\r\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\r\n        ? this._sourcesContents[key]\r\n        : null;\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * Externalize the source map.\r\n */\r\nSourceMapGenerator.prototype.toJSON =\r\n  function SourceMapGenerator_toJSON() {\r\n    var map = {\r\n      version: this._version,\r\n      sources: this._sources.toArray(),\r\n      names: this._names.toArray(),\r\n      mappings: this._serializeMappings()\r\n    };\r\n    if (this._file != null) {\r\n      map.file = this._file;\r\n    }\r\n    if (this._sourceRoot != null) {\r\n      map.sourceRoot = this._sourceRoot;\r\n    }\r\n    if (this._sourcesContents) {\r\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\r\n    }\r\n\r\n    return map;\r\n  };\r\n\r\n/**\r\n * Render the source map being generated to a string.\r\n */\r\nSourceMapGenerator.prototype.toString =\r\n  function SourceMapGenerator_toString() {\r\n    return JSON.stringify(this.toJSON());\r\n  };\r\n\r\nvar SourceMapGenerator_1 = SourceMapGenerator;\r\n\r\nvar sourceMapGenerator = {\r\n\tSourceMapGenerator: SourceMapGenerator_1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\nvar binarySearch = createCommonjsModule(function (module, exports) {\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nexports.GREATEST_LOWER_BOUND = 1;\r\nexports.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Recursive implementation of binary search.\r\n *\r\n * @param aLow Indices here and lower do not contain the needle.\r\n * @param aHigh Indices here and higher do not contain the needle.\r\n * @param aNeedle The element being searched for.\r\n * @param aHaystack The non-empty array being searched.\r\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\r\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n */\r\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\r\n  // This function terminates when one of the following is true:\r\n  //\r\n  //   1. We find the exact element we are looking for.\r\n  //\r\n  //   2. We did not find the exact element, but we can return the index of\r\n  //      the next-closest element.\r\n  //\r\n  //   3. We did not find the exact element, and there is no next-closest\r\n  //      element than the one we are searching for, so we return -1.\r\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\r\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\r\n  if (cmp === 0) {\r\n    // Found the element we are looking for.\r\n    return mid;\r\n  }\r\n  else if (cmp > 0) {\r\n    // Our needle is greater than aHaystack[mid].\r\n    if (aHigh - mid > 1) {\r\n      // The element is in the upper half.\r\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\r\n    }\r\n\r\n    // The exact needle element was not found in this haystack. Determine if\r\n    // we are in termination case (3) or (2) and return the appropriate thing.\r\n    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n      return aHigh < aHaystack.length ? aHigh : -1;\r\n    } else {\r\n      return mid;\r\n    }\r\n  }\r\n  else {\r\n    // Our needle is less than aHaystack[mid].\r\n    if (mid - aLow > 1) {\r\n      // The element is in the lower half.\r\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\r\n    }\r\n\r\n    // we are in termination case (3) or (2) and return the appropriate thing.\r\n    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n      return mid;\r\n    } else {\r\n      return aLow < 0 ? -1 : aLow;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This is an implementation of binary search which will always try and return\r\n * the index of the closest element if there is no exact hit. This is because\r\n * mappings between original and generated line/col pairs are single points,\r\n * and there is an implicit region between each of them, so a miss just means\r\n * that you aren't on the very start of a region.\r\n *\r\n * @param aNeedle The element you are looking for.\r\n * @param aHaystack The array that is being searched.\r\n * @param aCompare A function which takes the needle and an element in the\r\n *     array and returns -1, 0, or 1 depending on whether the needle is less\r\n *     than, equal to, or greater than the element, respectively.\r\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\r\n */\r\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\r\n  if (aHaystack.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\r\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\r\n  if (index < 0) {\r\n    return -1;\r\n  }\r\n\r\n  // We have found either the exact element, or the next-closest element than\r\n  // the one we are searching for. However, there may be more than one such\r\n  // element. Make sure we always return the smallest of these.\r\n  while (index - 1 >= 0) {\r\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\r\n      break;\r\n    }\r\n    --index;\r\n  }\r\n\r\n  return index;\r\n};\r\n});\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n// It turns out that some (most?) JavaScript engines don't self-host\r\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\r\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\r\n// custom comparator function, calling back and forth between the VM's C++ and\r\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\r\n// worse generated code for the comparator function than would be optimal. In\r\n// fact, when sorting with a comparator, these costs outweigh the benefits of\r\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\r\n// a ~3500ms mean speed-up in `bench/bench.html`.\r\n\r\n/**\r\n * Swap the elements indexed by `x` and `y` in the array `ary`.\r\n *\r\n * @param {Array} ary\r\n *        The array.\r\n * @param {Number} x\r\n *        The index of the first item.\r\n * @param {Number} y\r\n *        The index of the second item.\r\n */\r\nfunction swap(ary, x, y) {\r\n  var temp = ary[x];\r\n  ary[x] = ary[y];\r\n  ary[y] = temp;\r\n}\r\n\r\n/**\r\n * Returns a random integer within the range `low .. high` inclusive.\r\n *\r\n * @param {Number} low\r\n *        The lower bound on the range.\r\n * @param {Number} high\r\n *        The upper bound on the range.\r\n */\r\nfunction randomIntInRange(low, high) {\r\n  return Math.round(low + (Math.random() * (high - low)));\r\n}\r\n\r\n/**\r\n * The Quick Sort algorithm.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n * @param {Number} p\r\n *        Start index of the array\r\n * @param {Number} r\r\n *        End index of the array\r\n */\r\nfunction doQuickSort(ary, comparator, p, r) {\r\n  // If our lower bound is less than our upper bound, we (1) partition the\r\n  // array into two pieces and (2) recurse on each half. If it is not, this is\r\n  // the empty array and our base case.\r\n\r\n  if (p < r) {\r\n    // (1) Partitioning.\r\n    //\r\n    // The partitioning chooses a pivot between `p` and `r` and moves all\r\n    // elements that are less than or equal to the pivot to the before it, and\r\n    // all the elements that are greater than it after it. The effect is that\r\n    // once partition is done, the pivot is in the exact place it will be when\r\n    // the array is put in sorted order, and it will not need to be moved\r\n    // again. This runs in O(n) time.\r\n\r\n    // Always choose a random pivot so that an input array which is reverse\r\n    // sorted does not cause O(n^2) running time.\r\n    var pivotIndex = randomIntInRange(p, r);\r\n    var i = p - 1;\r\n\r\n    swap(ary, pivotIndex, r);\r\n    var pivot = ary[r];\r\n\r\n    // Immediately after `j` is incremented in this loop, the following hold\r\n    // true:\r\n    //\r\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\r\n    //\r\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\r\n    for (var j = p; j < r; j++) {\r\n      if (comparator(ary[j], pivot) <= 0) {\r\n        i += 1;\r\n        swap(ary, i, j);\r\n      }\r\n    }\r\n\r\n    swap(ary, i + 1, j);\r\n    var q = i + 1;\r\n\r\n    // (2) Recurse on each half.\r\n\r\n    doQuickSort(ary, comparator, p, q - 1);\r\n    doQuickSort(ary, comparator, q + 1, r);\r\n  }\r\n}\r\n\r\n/**\r\n * Sort the given array in-place with the given comparator function.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n */\r\nvar quickSort_1 = function (ary, comparator) {\r\n  doQuickSort(ary, comparator, 0, ary.length - 1);\r\n};\r\n\r\nvar quickSort = {\r\n\tquickSort: quickSort_1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\n\r\nvar ArraySet$2 = arraySet.ArraySet;\r\n\r\nvar quickSort$1 = quickSort.quickSort;\r\n\r\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  return sourceMap.sections != null\r\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\r\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\r\n}\r\n\r\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\r\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\r\n};\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nSourceMapConsumer.prototype._version = 3;\r\n\r\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\r\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\r\n// are lazily instantiated, accessed via the `_generatedMappings` and\r\n// `_originalMappings` getters respectively, and we only parse the mappings\r\n// and create these arrays once queried for a source location. We jump through\r\n// these hoops because there can be many thousands of mappings, and parsing\r\n// them is expensive, so we only want to do it if we must.\r\n//\r\n// Each object in the arrays is of the form:\r\n//\r\n//     {\r\n//       generatedLine: The line number in the generated code,\r\n//       generatedColumn: The column number in the generated code,\r\n//       source: The path to the original source file that generated this\r\n//               chunk of code,\r\n//       originalLine: The line number in the original source that\r\n//                     corresponds to this chunk of generated code,\r\n//       originalColumn: The column number in the original source that\r\n//                       corresponds to this chunk of generated code,\r\n//       name: The name of the original symbol which generated this chunk of\r\n//             code.\r\n//     }\r\n//\r\n// All properties except for `generatedLine` and `generatedColumn` can be\r\n// `null`.\r\n//\r\n// `_generatedMappings` is ordered by the generated positions.\r\n//\r\n// `_originalMappings` is ordered by the original positions.\r\n\r\nSourceMapConsumer.prototype.__generatedMappings = null;\r\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__generatedMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__generatedMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer.prototype.__originalMappings = null;\r\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__originalMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__originalMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer.prototype._charIsMappingSeparator =\r\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\r\n    var c = aStr.charAt(index);\r\n    return c === \";\" || c === \",\";\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nSourceMapConsumer.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    throw new Error(\"Subclasses must implement _parseMappings\");\r\n  };\r\n\r\nSourceMapConsumer.GENERATED_ORDER = 1;\r\nSourceMapConsumer.ORIGINAL_ORDER = 2;\r\n\r\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\r\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Iterate over each mapping between an original source/line/column and a\r\n * generated line/column in this source map.\r\n *\r\n * @param Function aCallback\r\n *        The function that is called with each mapping.\r\n * @param Object aContext\r\n *        Optional. If specified, this object will be the value of `this` every\r\n *        time that `aCallback` is called.\r\n * @param aOrder\r\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\r\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\r\n *        iterate over the mappings sorted by the generated file's line/column\r\n *        order or the original's source/line/column order, respectively. Defaults to\r\n *        `SourceMapConsumer.GENERATED_ORDER`.\r\n */\r\nSourceMapConsumer.prototype.eachMapping =\r\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\r\n    var context = aContext || null;\r\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\r\n\r\n    var mappings;\r\n    switch (order) {\r\n    case SourceMapConsumer.GENERATED_ORDER:\r\n      mappings = this._generatedMappings;\r\n      break;\r\n    case SourceMapConsumer.ORIGINAL_ORDER:\r\n      mappings = this._originalMappings;\r\n      break;\r\n    default:\r\n      throw new Error(\"Unknown order of iteration.\");\r\n    }\r\n\r\n    var sourceRoot = this.sourceRoot;\r\n    mappings.map(function (mapping) {\r\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\r\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\r\n      return {\r\n        source: source,\r\n        generatedLine: mapping.generatedLine,\r\n        generatedColumn: mapping.generatedColumn,\r\n        originalLine: mapping.originalLine,\r\n        originalColumn: mapping.originalColumn,\r\n        name: mapping.name === null ? null : this._names.at(mapping.name)\r\n      };\r\n    }, this).forEach(aCallback, context);\r\n  };\r\n\r\n/**\r\n * Returns all generated line and column information for the original source,\r\n * line, and column provided. If no column is provided, returns all mappings\r\n * corresponding to a either the line we are searching for or the next\r\n * closest line that has any mappings. Otherwise, returns all mappings\r\n * corresponding to the given line and either the column we are searching for\r\n * or the next closest column that has any offsets.\r\n *\r\n * The only argument is an object with the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number is 1-based.\r\n *   - column: Optional. the column number in the original source.\r\n *    The column number is 0-based.\r\n *\r\n * and an array of objects is returned, each with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *    line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *    The column number is 0-based.\r\n */\r\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\r\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\r\n    var line = util.getArg(aArgs, 'line');\r\n\r\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\r\n    // returns the index of the closest mapping less than the needle. By\r\n    // setting needle.originalColumn to 0, we thus find the last mapping for\r\n    // the given line, provided such a mapping exists.\r\n    var needle = {\r\n      source: util.getArg(aArgs, 'source'),\r\n      originalLine: line,\r\n      originalColumn: util.getArg(aArgs, 'column', 0)\r\n    };\r\n\r\n    needle.source = this._findSourceIndex(needle.source);\r\n    if (needle.source < 0) {\r\n      return [];\r\n    }\r\n\r\n    var mappings = [];\r\n\r\n    var index = this._findMapping(needle,\r\n                                  this._originalMappings,\r\n                                  \"originalLine\",\r\n                                  \"originalColumn\",\r\n                                  util.compareByOriginalPositions,\r\n                                  binarySearch.LEAST_UPPER_BOUND);\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (aArgs.column === undefined) {\r\n        var originalLine = mapping.originalLine;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we found. Since\r\n        // mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we found.\r\n        while (mapping && mapping.originalLine === originalLine) {\r\n          mappings.push({\r\n            line: util.getArg(mapping, 'generatedLine', null),\r\n            column: util.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      } else {\r\n        var originalColumn = mapping.originalColumn;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we were searching for.\r\n        // Since mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we are searching for.\r\n        while (mapping &&\r\n               mapping.originalLine === line &&\r\n               mapping.originalColumn == originalColumn) {\r\n          mappings.push({\r\n            line: util.getArg(mapping, 'generatedLine', null),\r\n            column: util.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      }\r\n    }\r\n\r\n    return mappings;\r\n  };\r\n\r\nvar SourceMapConsumer_1 = SourceMapConsumer;\r\n\r\n/**\r\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\r\n * query for information about the original file positions by giving it a file\r\n * position in the generated source.\r\n *\r\n * The first parameter is the raw source map (either as a JSON string, or\r\n * already parsed to an object). According to the spec, source maps have the\r\n * following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - sources: An array of URLs to the original source files.\r\n *   - names: An array of identifiers which can be referrenced by individual mappings.\r\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\r\n *   - sourcesContent: Optional. An array of contents of the original source files.\r\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *\r\n * Here is an example source map, taken from the source map spec[0]:\r\n *\r\n *     {\r\n *       version : 3,\r\n *       file: \"out.js\",\r\n *       sourceRoot : \"\",\r\n *       sources: [\"foo.js\", \"bar.js\"],\r\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *       mappings: \"AA,AB;;ABCDE;\"\r\n *     }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\r\n */\r\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util.getArg(sourceMap, 'version');\r\n  var sources = util.getArg(sourceMap, 'sources');\r\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\r\n  // requires the array) to play nice here.\r\n  var names = util.getArg(sourceMap, 'names', []);\r\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\r\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\r\n  var mappings = util.getArg(sourceMap, 'mappings');\r\n  var file = util.getArg(sourceMap, 'file', null);\r\n\r\n  // Once again, Sass deviates from the spec and supplies the version as a\r\n  // string rather than a number, so we use loose equality checking here.\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  if (sourceRoot) {\r\n    sourceRoot = util.normalize(sourceRoot);\r\n  }\r\n\r\n  sources = sources\r\n    .map(String)\r\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\r\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\r\n    // See bugzil.la/1090768.\r\n    .map(util.normalize)\r\n    // Always ensure that absolute sources are internally stored relative to\r\n    // the source root, if the source root is absolute. Not doing this would\r\n    // be particularly problematic when the source root is a prefix of the\r\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\r\n    .map(function (source) {\r\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\r\n        ? util.relative(sourceRoot, source)\r\n        : source;\r\n    });\r\n\r\n  // Pass `true` below to allow duplicate names and sources. While source maps\r\n  // are intended to be compressed and deduplicated, the TypeScript compiler\r\n  // sometimes generates source maps with duplicates in them. See Github issue\r\n  // #72 and bugzil.la/889492.\r\n  this._names = ArraySet$2.fromArray(names.map(String), true);\r\n  this._sources = ArraySet$2.fromArray(sources, true);\r\n\r\n  this._absoluteSources = this._sources.toArray().map(function (s) {\r\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\r\n  });\r\n\r\n  this.sourceRoot = sourceRoot;\r\n  this.sourcesContent = sourcesContent;\r\n  this._mappings = mappings;\r\n  this._sourceMapURL = aSourceMapURL;\r\n  this.file = file;\r\n}\r\n\r\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\r\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\r\n\r\n/**\r\n * Utility function to find the index of a source.  Returns -1 if not\r\n * found.\r\n */\r\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\r\n  var relativeSource = aSource;\r\n  if (this.sourceRoot != null) {\r\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\r\n  }\r\n\r\n  if (this._sources.has(relativeSource)) {\r\n    return this._sources.indexOf(relativeSource);\r\n  }\r\n\r\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\r\n  // this case we can't simply undo the transform.\r\n  var i;\r\n  for (i = 0; i < this._absoluteSources.length; ++i) {\r\n    if (this._absoluteSources[i] == aSource) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\r\n *\r\n * @param SourceMapGenerator aSourceMap\r\n *        The source map that will be consumed.\r\n * @param String aSourceMapURL\r\n *        The URL at which the source map can be found (optional)\r\n * @returns BasicSourceMapConsumer\r\n */\r\nBasicSourceMapConsumer.fromSourceMap =\r\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\r\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\r\n\r\n    var names = smc._names = ArraySet$2.fromArray(aSourceMap._names.toArray(), true);\r\n    var sources = smc._sources = ArraySet$2.fromArray(aSourceMap._sources.toArray(), true);\r\n    smc.sourceRoot = aSourceMap._sourceRoot;\r\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\r\n                                                            smc.sourceRoot);\r\n    smc.file = aSourceMap._file;\r\n    smc._sourceMapURL = aSourceMapURL;\r\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\r\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\r\n    });\r\n\r\n    // Because we are modifying the entries (by converting string sources and\r\n    // names to indices into the sources and names ArraySets), we have to make\r\n    // a copy of the entry or else bad things happen. Shared mutable state\r\n    // strikes again! See github issue #191.\r\n\r\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\r\n    var destGeneratedMappings = smc.__generatedMappings = [];\r\n    var destOriginalMappings = smc.__originalMappings = [];\r\n\r\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\r\n      var srcMapping = generatedMappings[i];\r\n      var destMapping = new Mapping;\r\n      destMapping.generatedLine = srcMapping.generatedLine;\r\n      destMapping.generatedColumn = srcMapping.generatedColumn;\r\n\r\n      if (srcMapping.source) {\r\n        destMapping.source = sources.indexOf(srcMapping.source);\r\n        destMapping.originalLine = srcMapping.originalLine;\r\n        destMapping.originalColumn = srcMapping.originalColumn;\r\n\r\n        if (srcMapping.name) {\r\n          destMapping.name = names.indexOf(srcMapping.name);\r\n        }\r\n\r\n        destOriginalMappings.push(destMapping);\r\n      }\r\n\r\n      destGeneratedMappings.push(destMapping);\r\n    }\r\n\r\n    quickSort$1(smc.__originalMappings, util.compareByOriginalPositions);\r\n\r\n    return smc;\r\n  };\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nBasicSourceMapConsumer.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\r\n  get: function () {\r\n    return this._absoluteSources.slice();\r\n  }\r\n});\r\n\r\n/**\r\n * Provide the JIT with a nice shape / hidden class.\r\n */\r\nfunction Mapping() {\r\n  this.generatedLine = 0;\r\n  this.generatedColumn = 0;\r\n  this.source = null;\r\n  this.originalLine = null;\r\n  this.originalColumn = null;\r\n  this.name = null;\r\n}\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nBasicSourceMapConsumer.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    var generatedLine = 1;\r\n    var previousGeneratedColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousOriginalColumn = 0;\r\n    var previousSource = 0;\r\n    var previousName = 0;\r\n    var length = aStr.length;\r\n    var index = 0;\r\n    var cachedSegments = {};\r\n    var temp = {};\r\n    var originalMappings = [];\r\n    var generatedMappings = [];\r\n    var mapping, str, segment, end, value;\r\n\r\n    while (index < length) {\r\n      if (aStr.charAt(index) === ';') {\r\n        generatedLine++;\r\n        index++;\r\n        previousGeneratedColumn = 0;\r\n      }\r\n      else if (aStr.charAt(index) === ',') {\r\n        index++;\r\n      }\r\n      else {\r\n        mapping = new Mapping();\r\n        mapping.generatedLine = generatedLine;\r\n\r\n        // Because each offset is encoded relative to the previous one,\r\n        // many segments often have the same encoding. We can exploit this\r\n        // fact by caching the parsed variable length fields of each segment,\r\n        // allowing us to avoid a second parse if we encounter the same\r\n        // segment again.\r\n        for (end = index; end < length; end++) {\r\n          if (this._charIsMappingSeparator(aStr, end)) {\r\n            break;\r\n          }\r\n        }\r\n        str = aStr.slice(index, end);\r\n\r\n        segment = cachedSegments[str];\r\n        if (segment) {\r\n          index += str.length;\r\n        } else {\r\n          segment = [];\r\n          while (index < end) {\r\n            base64Vlq.decode(aStr, index, temp);\r\n            value = temp.value;\r\n            index = temp.rest;\r\n            segment.push(value);\r\n          }\r\n\r\n          if (segment.length === 2) {\r\n            throw new Error('Found a source, but no line and column');\r\n          }\r\n\r\n          if (segment.length === 3) {\r\n            throw new Error('Found a source and line, but no column');\r\n          }\r\n\r\n          cachedSegments[str] = segment;\r\n        }\r\n\r\n        // Generated column.\r\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\r\n        previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n        if (segment.length > 1) {\r\n          // Original source.\r\n          mapping.source = previousSource + segment[1];\r\n          previousSource += segment[1];\r\n\r\n          // Original line.\r\n          mapping.originalLine = previousOriginalLine + segment[2];\r\n          previousOriginalLine = mapping.originalLine;\r\n          // Lines are stored 0-based\r\n          mapping.originalLine += 1;\r\n\r\n          // Original column.\r\n          mapping.originalColumn = previousOriginalColumn + segment[3];\r\n          previousOriginalColumn = mapping.originalColumn;\r\n\r\n          if (segment.length > 4) {\r\n            // Original name.\r\n            mapping.name = previousName + segment[4];\r\n            previousName += segment[4];\r\n          }\r\n        }\r\n\r\n        generatedMappings.push(mapping);\r\n        if (typeof mapping.originalLine === 'number') {\r\n          originalMappings.push(mapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort$1(generatedMappings, util.compareByGeneratedPositionsDeflated);\r\n    this.__generatedMappings = generatedMappings;\r\n\r\n    quickSort$1(originalMappings, util.compareByOriginalPositions);\r\n    this.__originalMappings = originalMappings;\r\n  };\r\n\r\n/**\r\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\r\n * we are searching for in the given \"haystack\" of mappings.\r\n */\r\nBasicSourceMapConsumer.prototype._findMapping =\r\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\r\n                                         aColumnName, aComparator, aBias) {\r\n    // To return the position we are searching for, we must first find the\r\n    // mapping for the given position and then return the opposite position it\r\n    // points to. Because the mappings are sorted, we can use binary search to\r\n    // find the best mapping.\r\n\r\n    if (aNeedle[aLineName] <= 0) {\r\n      throw new TypeError('Line must be greater than or equal to 1, got '\r\n                          + aNeedle[aLineName]);\r\n    }\r\n    if (aNeedle[aColumnName] < 0) {\r\n      throw new TypeError('Column must be greater than or equal to 0, got '\r\n                          + aNeedle[aColumnName]);\r\n    }\r\n\r\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\r\n  };\r\n\r\n/**\r\n * Compute the last column for each generated mapping. The last column is\r\n * inclusive.\r\n */\r\nBasicSourceMapConsumer.prototype.computeColumnSpans =\r\n  function SourceMapConsumer_computeColumnSpans() {\r\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      // Mappings do not contain a field for the last generated columnt. We\r\n      // can come up with an optimistic estimate, however, by assuming that\r\n      // mappings are contiguous (i.e. given two consecutive mappings, the\r\n      // first mapping ends where the second one starts).\r\n      if (index + 1 < this._generatedMappings.length) {\r\n        var nextMapping = this._generatedMappings[index + 1];\r\n\r\n        if (mapping.generatedLine === nextMapping.generatedLine) {\r\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // The last mapping for each line spans the entire line.\r\n      mapping.lastGeneratedColumn = Infinity;\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nBasicSourceMapConsumer.prototype.originalPositionFor =\r\n  function SourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util.getArg(aArgs, 'line'),\r\n      generatedColumn: util.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._generatedMappings,\r\n      \"generatedLine\",\r\n      \"generatedColumn\",\r\n      util.compareByGeneratedPositionsDeflated,\r\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      if (mapping.generatedLine === needle.generatedLine) {\r\n        var source = util.getArg(mapping, 'source', null);\r\n        if (source !== null) {\r\n          source = this._sources.at(source);\r\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\r\n        }\r\n        var name = util.getArg(mapping, 'name', null);\r\n        if (name !== null) {\r\n          name = this._names.at(name);\r\n        }\r\n        return {\r\n          source: source,\r\n          line: util.getArg(mapping, 'originalLine', null),\r\n          column: util.getArg(mapping, 'originalColumn', null),\r\n          name: name\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      source: null,\r\n      line: null,\r\n      column: null,\r\n      name: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\r\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\r\n    if (!this.sourcesContent) {\r\n      return false;\r\n    }\r\n    return this.sourcesContent.length >= this._sources.size() &&\r\n      !this.sourcesContent.some(function (sc) { return sc == null; });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nBasicSourceMapConsumer.prototype.sourceContentFor =\r\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    if (!this.sourcesContent) {\r\n      return null;\r\n    }\r\n\r\n    var index = this._findSourceIndex(aSource);\r\n    if (index >= 0) {\r\n      return this.sourcesContent[index];\r\n    }\r\n\r\n    var relativeSource = aSource;\r\n    if (this.sourceRoot != null) {\r\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\r\n    }\r\n\r\n    var url;\r\n    if (this.sourceRoot != null\r\n        && (url = util.urlParse(this.sourceRoot))) {\r\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\r\n      // many users. We can help them out when they expect file:// URIs to\r\n      // behave like it would if they were running a local HTTP server. See\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\r\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\r\n      if (url.scheme == \"file\"\r\n          && this._sources.has(fileUriAbsPath)) {\r\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\r\n      }\r\n\r\n      if ((!url.path || url.path == \"/\")\r\n          && this._sources.has(\"/\" + relativeSource)) {\r\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\r\n      }\r\n    }\r\n\r\n    // This function is used recursively from\r\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\r\n    // don't want to throw if we can't find the source - we just want to\r\n    // return null, so we provide a flag to exit gracefully.\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nBasicSourceMapConsumer.prototype.generatedPositionFor =\r\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\r\n    var source = util.getArg(aArgs, 'source');\r\n    source = this._findSourceIndex(source);\r\n    if (source < 0) {\r\n      return {\r\n        line: null,\r\n        column: null,\r\n        lastColumn: null\r\n      };\r\n    }\r\n\r\n    var needle = {\r\n      source: source,\r\n      originalLine: util.getArg(aArgs, 'line'),\r\n      originalColumn: util.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._originalMappings,\r\n      \"originalLine\",\r\n      \"originalColumn\",\r\n      util.compareByOriginalPositions,\r\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (mapping.source === needle.source) {\r\n        return {\r\n          line: util.getArg(mapping, 'generatedLine', null),\r\n          column: util.getArg(mapping, 'generatedColumn', null),\r\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null,\r\n      lastColumn: null\r\n    };\r\n  };\r\n\r\nvar BasicSourceMapConsumer_1 = BasicSourceMapConsumer;\r\n\r\n/**\r\n * An IndexedSourceMapConsumer instance represents a parsed source map which\r\n * we can query for information. It differs from BasicSourceMapConsumer in\r\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\r\n * input.\r\n *\r\n * The first parameter is a raw source map (either as a JSON string, or already\r\n * parsed to an object). According to the spec for indexed source maps, they\r\n * have the following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *   - sections: A list of section definitions.\r\n *\r\n * Each value under the \"sections\" field has two fields:\r\n *   - offset: The offset into the original specified at which this section\r\n *       begins to apply, defined as an object with a \"line\" and \"column\"\r\n *       field.\r\n *   - map: A source map definition. This source map could also be indexed,\r\n *       but doesn't have to be.\r\n *\r\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\r\n * specifying a URL to retrieve a source map from, but that's currently\r\n * unsupported.\r\n *\r\n * Here's an example source map, taken from the source map spec[0], but\r\n * modified to omit a section which uses the \"url\" field.\r\n *\r\n *  {\r\n *    version : 3,\r\n *    file: \"app.js\",\r\n *    sections: [{\r\n *      offset: {line:100, column:10},\r\n *      map: {\r\n *        version : 3,\r\n *        file: \"section.js\",\r\n *        sources: [\"foo.js\", \"bar.js\"],\r\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *        mappings: \"AAAA,E;;ABCDE;\"\r\n *      }\r\n *    }],\r\n *  }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\r\n */\r\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util.getArg(sourceMap, 'version');\r\n  var sections = util.getArg(sourceMap, 'sections');\r\n\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  this._sources = new ArraySet$2();\r\n  this._names = new ArraySet$2();\r\n\r\n  var lastOffset = {\r\n    line: -1,\r\n    column: 0\r\n  };\r\n  this._sections = sections.map(function (s) {\r\n    if (s.url) {\r\n      // The url field will require support for asynchronicity.\r\n      // See https://github.com/mozilla/source-map/issues/16\r\n      throw new Error('Support for url field in sections not implemented.');\r\n    }\r\n    var offset = util.getArg(s, 'offset');\r\n    var offsetLine = util.getArg(offset, 'line');\r\n    var offsetColumn = util.getArg(offset, 'column');\r\n\r\n    if (offsetLine < lastOffset.line ||\r\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\r\n      throw new Error('Section offsets must be ordered and non-overlapping.');\r\n    }\r\n    lastOffset = offset;\r\n\r\n    return {\r\n      generatedOffset: {\r\n        // The offset fields are 0-based, but we use 1-based indices when\r\n        // encoding/decoding from VLQ.\r\n        generatedLine: offsetLine + 1,\r\n        generatedColumn: offsetColumn + 1\r\n      },\r\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\r\n    }\r\n  });\r\n}\r\n\r\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\r\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nIndexedSourceMapConsumer.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\r\n  get: function () {\r\n    var sources = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\r\n        sources.push(this._sections[i].consumer.sources[j]);\r\n      }\r\n    }\r\n    return sources;\r\n  }\r\n});\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nIndexedSourceMapConsumer.prototype.originalPositionFor =\r\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util.getArg(aArgs, 'line'),\r\n      generatedColumn: util.getArg(aArgs, 'column')\r\n    };\r\n\r\n    // Find the section containing the generated position we're trying to map\r\n    // to an original position.\r\n    var sectionIndex = binarySearch.search(needle, this._sections,\r\n      function(needle, section) {\r\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\r\n        if (cmp) {\r\n          return cmp;\r\n        }\r\n\r\n        return (needle.generatedColumn -\r\n                section.generatedOffset.generatedColumn);\r\n      });\r\n    var section = this._sections[sectionIndex];\r\n\r\n    if (!section) {\r\n      return {\r\n        source: null,\r\n        line: null,\r\n        column: null,\r\n        name: null\r\n      };\r\n    }\r\n\r\n    return section.consumer.originalPositionFor({\r\n      line: needle.generatedLine -\r\n        (section.generatedOffset.generatedLine - 1),\r\n      column: needle.generatedColumn -\r\n        (section.generatedOffset.generatedLine === needle.generatedLine\r\n         ? section.generatedOffset.generatedColumn - 1\r\n         : 0),\r\n      bias: aArgs.bias\r\n    });\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\r\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\r\n    return this._sections.every(function (s) {\r\n      return s.consumer.hasContentsOfAllSources();\r\n    });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nIndexedSourceMapConsumer.prototype.sourceContentFor =\r\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      var content = section.consumer.sourceContentFor(aSource, true);\r\n      if (content) {\r\n        return content;\r\n      }\r\n    }\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based. \r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\r\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      // Only consider this section if the requested source is in the list of\r\n      // sources of the consumer.\r\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\r\n        continue;\r\n      }\r\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\r\n      if (generatedPosition) {\r\n        var ret = {\r\n          line: generatedPosition.line +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          column: generatedPosition.column +\r\n            (section.generatedOffset.generatedLine === generatedPosition.line\r\n             ? section.generatedOffset.generatedColumn - 1\r\n             : 0)\r\n        };\r\n        return ret;\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nIndexedSourceMapConsumer.prototype._parseMappings =\r\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    this.__generatedMappings = [];\r\n    this.__originalMappings = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n      var sectionMappings = section.consumer._generatedMappings;\r\n      for (var j = 0; j < sectionMappings.length; j++) {\r\n        var mapping = sectionMappings[j];\r\n\r\n        var source = section.consumer._sources.at(mapping.source);\r\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\r\n        this._sources.add(source);\r\n        source = this._sources.indexOf(source);\r\n\r\n        var name = null;\r\n        if (mapping.name) {\r\n          name = section.consumer._names.at(mapping.name);\r\n          this._names.add(name);\r\n          name = this._names.indexOf(name);\r\n        }\r\n\r\n        // The mappings coming from the consumer for the section have\r\n        // generated positions relative to the start of the section, so we\r\n        // need to offset them to be relative to the start of the concatenated\r\n        // generated file.\r\n        var adjustedMapping = {\r\n          source: source,\r\n          generatedLine: mapping.generatedLine +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          generatedColumn: mapping.generatedColumn +\r\n            (section.generatedOffset.generatedLine === mapping.generatedLine\r\n            ? section.generatedOffset.generatedColumn - 1\r\n            : 0),\r\n          originalLine: mapping.originalLine,\r\n          originalColumn: mapping.originalColumn,\r\n          name: name\r\n        };\r\n\r\n        this.__generatedMappings.push(adjustedMapping);\r\n        if (typeof adjustedMapping.originalLine === 'number') {\r\n          this.__originalMappings.push(adjustedMapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort$1(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\r\n    quickSort$1(this.__originalMappings, util.compareByOriginalPositions);\r\n  };\r\n\r\nvar IndexedSourceMapConsumer_1 = IndexedSourceMapConsumer;\r\n\r\nvar sourceMapConsumer = {\r\n\tSourceMapConsumer: SourceMapConsumer_1,\r\n\tBasicSourceMapConsumer: BasicSourceMapConsumer_1,\r\n\tIndexedSourceMapConsumer: IndexedSourceMapConsumer_1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar SourceMapGenerator$1 = sourceMapGenerator.SourceMapGenerator;\r\n\r\n\r\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\r\n// operating systems these days (capturing the result).\r\nvar REGEX_NEWLINE = /(\\r?\\n)/;\r\n\r\n// Newline character code for charCodeAt() comparisons\r\nvar NEWLINE_CODE = 10;\r\n\r\n// Private symbol for identifying `SourceNode`s when multiple versions of\r\n// the source-map library are loaded. This MUST NOT CHANGE across\r\n// versions!\r\nvar isSourceNode = \"$$$isSourceNode$$$\";\r\n\r\n/**\r\n * SourceNodes provide a way to abstract over interpolating/concatenating\r\n * snippets of generated JavaScript source code while maintaining the line and\r\n * column information associated with the original source code.\r\n *\r\n * @param aLine The original line number.\r\n * @param aColumn The original column number.\r\n * @param aSource The original source's filename.\r\n * @param aChunks Optional. An array of strings which are snippets of\r\n *        generated JS, or other SourceNodes.\r\n * @param aName The original identifier.\r\n */\r\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\r\n  this.children = [];\r\n  this.sourceContents = {};\r\n  this.line = aLine == null ? null : aLine;\r\n  this.column = aColumn == null ? null : aColumn;\r\n  this.source = aSource == null ? null : aSource;\r\n  this.name = aName == null ? null : aName;\r\n  this[isSourceNode] = true;\r\n  if (aChunks != null) this.add(aChunks);\r\n}\r\n\r\n/**\r\n * Creates a SourceNode from generated code and a SourceMapConsumer.\r\n *\r\n * @param aGeneratedCode The generated code\r\n * @param aSourceMapConsumer The SourceMap for the generated code\r\n * @param aRelativePath Optional. The path that relative sources in the\r\n *        SourceMapConsumer should be relative to.\r\n */\r\nSourceNode.fromStringWithSourceMap =\r\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\r\n    // The SourceNode we want to fill with the generated code\r\n    // and the SourceMap\r\n    var node = new SourceNode();\r\n\r\n    // All even indices of this array are one line of the generated code,\r\n    // while all odd indices are the newlines between two adjacent lines\r\n    // (since `REGEX_NEWLINE` captures its match).\r\n    // Processed fragments are accessed by calling `shiftNextLine`.\r\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\r\n    var remainingLinesIndex = 0;\r\n    var shiftNextLine = function() {\r\n      var lineContents = getNextLine();\r\n      // The last line of a file might not have a newline.\r\n      var newLine = getNextLine() || \"\";\r\n      return lineContents + newLine;\r\n\r\n      function getNextLine() {\r\n        return remainingLinesIndex < remainingLines.length ?\r\n            remainingLines[remainingLinesIndex++] : undefined;\r\n      }\r\n    };\r\n\r\n    // We need to remember the position of \"remainingLines\"\r\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\r\n\r\n    // The generate SourceNodes we need a code range.\r\n    // To extract it current and last mapping is used.\r\n    // Here we store the last mapping.\r\n    var lastMapping = null;\r\n\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      if (lastMapping !== null) {\r\n        // We add the code from \"lastMapping\" to \"mapping\":\r\n        // First check if there is a new line in between.\r\n        if (lastGeneratedLine < mapping.generatedLine) {\r\n          // Associate first line with \"lastMapping\"\r\n          addMappingWithCode(lastMapping, shiftNextLine());\r\n          lastGeneratedLine++;\r\n          lastGeneratedColumn = 0;\r\n          // The remaining code is added without mapping\r\n        } else {\r\n          // There is no new line in between.\r\n          // Associate the code between \"lastGeneratedColumn\" and\r\n          // \"mapping.generatedColumn\" with \"lastMapping\"\r\n          var nextLine = remainingLines[remainingLinesIndex] || '';\r\n          var code = nextLine.substr(0, mapping.generatedColumn -\r\n                                        lastGeneratedColumn);\r\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\r\n                                              lastGeneratedColumn);\r\n          lastGeneratedColumn = mapping.generatedColumn;\r\n          addMappingWithCode(lastMapping, code);\r\n          // No more remaining code, continue\r\n          lastMapping = mapping;\r\n          return;\r\n        }\r\n      }\r\n      // We add the generated code until the first mapping\r\n      // to the SourceNode without any mapping.\r\n      // Each line is added as separate string.\r\n      while (lastGeneratedLine < mapping.generatedLine) {\r\n        node.add(shiftNextLine());\r\n        lastGeneratedLine++;\r\n      }\r\n      if (lastGeneratedColumn < mapping.generatedColumn) {\r\n        var nextLine = remainingLines[remainingLinesIndex] || '';\r\n        node.add(nextLine.substr(0, mapping.generatedColumn));\r\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\r\n        lastGeneratedColumn = mapping.generatedColumn;\r\n      }\r\n      lastMapping = mapping;\r\n    }, this);\r\n    // We have processed all mappings.\r\n    if (remainingLinesIndex < remainingLines.length) {\r\n      if (lastMapping) {\r\n        // Associate the remaining code in the current line with \"lastMapping\"\r\n        addMappingWithCode(lastMapping, shiftNextLine());\r\n      }\r\n      // and add the remaining lines without any mapping\r\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\r\n    }\r\n\r\n    // Copy sourcesContent into SourceNode\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aRelativePath != null) {\r\n          sourceFile = util.join(aRelativePath, sourceFile);\r\n        }\r\n        node.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n\r\n    return node;\r\n\r\n    function addMappingWithCode(mapping, code) {\r\n      if (mapping === null || mapping.source === undefined) {\r\n        node.add(code);\r\n      } else {\r\n        var source = aRelativePath\r\n          ? util.join(aRelativePath, mapping.source)\r\n          : mapping.source;\r\n        node.add(new SourceNode(mapping.originalLine,\r\n                                mapping.originalColumn,\r\n                                source,\r\n                                code,\r\n                                mapping.name));\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Add a chunk of generated JS to this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    aChunk.forEach(function (chunk) {\r\n      this.add(chunk);\r\n    }, this);\r\n  }\r\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\r\n    if (aChunk) {\r\n      this.children.push(aChunk);\r\n    }\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Add a chunk of generated JS to the beginning of this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    for (var i = aChunk.length-1; i >= 0; i--) {\r\n      this.prepend(aChunk[i]);\r\n    }\r\n  }\r\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\r\n    this.children.unshift(aChunk);\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Walk over the tree of JS snippets in this node and its children. The\r\n * walking function is called once for each snippet of JS and is passed that\r\n * snippet and the its original associated source's line/column location.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\r\n  var chunk;\r\n  for (var i = 0, len = this.children.length; i < len; i++) {\r\n    chunk = this.children[i];\r\n    if (chunk[isSourceNode]) {\r\n      chunk.walk(aFn);\r\n    }\r\n    else {\r\n      if (chunk !== '') {\r\n        aFn(chunk, { source: this.source,\r\n                     line: this.line,\r\n                     column: this.column,\r\n                     name: this.name });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\r\n * each of `this.children`.\r\n *\r\n * @param aSep The separator.\r\n */\r\nSourceNode.prototype.join = function SourceNode_join(aSep) {\r\n  var newChildren;\r\n  var i;\r\n  var len = this.children.length;\r\n  if (len > 0) {\r\n    newChildren = [];\r\n    for (i = 0; i < len-1; i++) {\r\n      newChildren.push(this.children[i]);\r\n      newChildren.push(aSep);\r\n    }\r\n    newChildren.push(this.children[i]);\r\n    this.children = newChildren;\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Call String.prototype.replace on the very right-most source snippet. Useful\r\n * for trimming whitespace from the end of a source node, etc.\r\n *\r\n * @param aPattern The pattern to replace.\r\n * @param aReplacement The thing to replace the pattern with.\r\n */\r\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\r\n  var lastChild = this.children[this.children.length - 1];\r\n  if (lastChild[isSourceNode]) {\r\n    lastChild.replaceRight(aPattern, aReplacement);\r\n  }\r\n  else if (typeof lastChild === 'string') {\r\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\r\n  }\r\n  else {\r\n    this.children.push(''.replace(aPattern, aReplacement));\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the source content for a source file. This will be added to the SourceMapGenerator\r\n * in the sourcesContent field.\r\n *\r\n * @param aSourceFile The filename of the source file\r\n * @param aSourceContent The content of the source file\r\n */\r\nSourceNode.prototype.setSourceContent =\r\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\r\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\r\n  };\r\n\r\n/**\r\n * Walk over the tree of SourceNodes. The walking function is called for each\r\n * source file content and is passed the filename and source content.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode.prototype.walkSourceContents =\r\n  function SourceNode_walkSourceContents(aFn) {\r\n    for (var i = 0, len = this.children.length; i < len; i++) {\r\n      if (this.children[i][isSourceNode]) {\r\n        this.children[i].walkSourceContents(aFn);\r\n      }\r\n    }\r\n\r\n    var sources = Object.keys(this.sourceContents);\r\n    for (var i = 0, len = sources.length; i < len; i++) {\r\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\r\n    }\r\n  };\r\n\r\n/**\r\n * Return the string representation of this source node. Walks over the tree\r\n * and concatenates all the various snippets together to one string.\r\n */\r\nSourceNode.prototype.toString = function SourceNode_toString() {\r\n  var str = \"\";\r\n  this.walk(function (chunk) {\r\n    str += chunk;\r\n  });\r\n  return str;\r\n};\r\n\r\n/**\r\n * Returns the string representation of this source node along with a source\r\n * map.\r\n */\r\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\r\n  var generated = {\r\n    code: \"\",\r\n    line: 1,\r\n    column: 0\r\n  };\r\n  var map = new SourceMapGenerator$1(aArgs);\r\n  var sourceMappingActive = false;\r\n  var lastOriginalSource = null;\r\n  var lastOriginalLine = null;\r\n  var lastOriginalColumn = null;\r\n  var lastOriginalName = null;\r\n  this.walk(function (chunk, original) {\r\n    generated.code += chunk;\r\n    if (original.source !== null\r\n        && original.line !== null\r\n        && original.column !== null) {\r\n      if(lastOriginalSource !== original.source\r\n         || lastOriginalLine !== original.line\r\n         || lastOriginalColumn !== original.column\r\n         || lastOriginalName !== original.name) {\r\n        map.addMapping({\r\n          source: original.source,\r\n          original: {\r\n            line: original.line,\r\n            column: original.column\r\n          },\r\n          generated: {\r\n            line: generated.line,\r\n            column: generated.column\r\n          },\r\n          name: original.name\r\n        });\r\n      }\r\n      lastOriginalSource = original.source;\r\n      lastOriginalLine = original.line;\r\n      lastOriginalColumn = original.column;\r\n      lastOriginalName = original.name;\r\n      sourceMappingActive = true;\r\n    } else if (sourceMappingActive) {\r\n      map.addMapping({\r\n        generated: {\r\n          line: generated.line,\r\n          column: generated.column\r\n        }\r\n      });\r\n      lastOriginalSource = null;\r\n      sourceMappingActive = false;\r\n    }\r\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\r\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\r\n        generated.line++;\r\n        generated.column = 0;\r\n        // Mappings end at eol\r\n        if (idx + 1 === length) {\r\n          lastOriginalSource = null;\r\n          sourceMappingActive = false;\r\n        } else if (sourceMappingActive) {\r\n          map.addMapping({\r\n            source: original.source,\r\n            original: {\r\n              line: original.line,\r\n              column: original.column\r\n            },\r\n            generated: {\r\n              line: generated.line,\r\n              column: generated.column\r\n            },\r\n            name: original.name\r\n          });\r\n        }\r\n      } else {\r\n        generated.column++;\r\n      }\r\n    }\r\n  });\r\n  this.walkSourceContents(function (sourceFile, sourceContent) {\r\n    map.setSourceContent(sourceFile, sourceContent);\r\n  });\r\n\r\n  return { code: generated.code, map: map };\r\n};\r\n\r\nvar SourceNode_1 = SourceNode;\r\n\r\nvar sourceNode = {\r\n\tSourceNode: SourceNode_1\r\n};\r\n\r\n/*\r\n * Copyright 2009-2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE.txt or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar SourceMapGenerator$2 = sourceMapGenerator.SourceMapGenerator;\r\nvar SourceMapConsumer$1 = sourceMapConsumer.SourceMapConsumer;\r\nvar SourceNode$1 = sourceNode.SourceNode;\r\n\r\nvar sourceMap = {\r\n\tSourceMapGenerator: SourceMapGenerator$2,\r\n\tSourceMapConsumer: SourceMapConsumer$1,\r\n\tSourceNode: SourceNode$1\r\n};\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n            if (context.map) {\r\n                if (node) {\r\n                    let name;\r\n                    if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !node.isStatic) {\r\n                        const content = node.content.replace(/^_ctx\\./, '');\r\n                        if (content !== node.content && isSimpleIdentifier(content)) {\r\n                            name = content;\r\n                        }\r\n                    }\r\n                    addMapping(node.loc.start, name);\r\n                }\r\n                advancePositionWithMutation(context, code);\r\n                if (node && node.loc !== locStub) {\r\n                    addMapping(node.loc.end);\r\n                }\r\n            }\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    function addMapping(loc, name) {\r\n        context.map.addMapping({\r\n            name,\r\n            source: context.filename,\r\n            original: {\r\n                line: loc.line,\r\n                column: loc.column - 1 // source-map column is 0 based\r\n            },\r\n            generated: {\r\n                line: context.line,\r\n                column: context.column - 1\r\n            }\r\n        });\r\n    }\r\n    if (sourceMap) {\r\n        // lazy require source-map implementation, only in non-browser builds\r\n        context.map = new SourceMapGenerator$2();\r\n        context.map.setSourceContent(filename, context.source);\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    const genScopeId = scopeId != null && mode === 'module';\r\n    const isSetupInlined = !!options.inline;\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = isSetupInlined\r\n        ? createCodegenContext(ast, options)\r\n        : context;\r\n    if (mode === 'module') {\r\n        genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\r\n    }\r\n    else {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    if (options.bindingMetadata && !options.inline) {\r\n        // binding optimization args\r\n        args.push('$props', '$setup', '$data', '$options');\r\n    }\r\n    const signature = options.isTS\r\n        ? args.map(arg => `${arg}: any`).join(',')\r\n        : args.join(', ');\r\n    if (isSetupInlined) {\r\n        push(`(${signature}) => {`);\r\n    }\r\n    else {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: isSetupInlined ? preambleContext.code : ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = ssr\r\n        ? `require(${JSON.stringify(runtimeModuleName)})`\r\n        : runtimeGlobalName;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        if (prefixIdentifiers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`);\r\n        }\r\n        else {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    // generate variables for ssr helpers\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        // ssr guarantees prefixIdentifier: true\r\n        push(`const { ${ast.ssrHelpers\r\n            .map(aliasHelper)\r\n            .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`);\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genModulePreamble(ast, context, genScopeId, inline) {\r\n    const { push, newline, optimizeImports, runtimeModuleName, ssrRuntimeModuleName } = context;\r\n    if (genScopeId && ast.hoists.length) {\r\n        ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID);\r\n    }\r\n    // generate import statements for helpers\r\n    if (ast.helpers.length) {\r\n        if (optimizeImports) {\r\n            // when bundled with webpack with code-split, calling an import binding\r\n            // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n            // incurring both payload size increase and potential perf overhead.\r\n            // therefore we assign the imports to variables (which is a constant ~50b\r\n            // cost per-component instead of scaling with template size)\r\n            push(`import { ${ast.helpers\r\n                .map(s => helperNameMap[s])\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n            push(`\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n                .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n                .join(', ')}\\n`);\r\n        }\r\n        else {\r\n            push(`import { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n        }\r\n    }\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        push(`import { ${ast.ssrHelpers\r\n            .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n            .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`);\r\n    }\r\n    if (ast.imports.length) {\r\n        genImports(ast.imports, context);\r\n        newline();\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    if (!inline) {\r\n        push(`export `);\r\n    }\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    const genScopeId = scopeId != null && mode !== 'function';\r\n    newline();\r\n    // generate inlined withScopeId helper\r\n    if (genScopeId) {\r\n        push(`const _withScopeId = n => (${helper(PUSH_SCOPE_ID)}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`);\r\n        newline();\r\n    }\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            const needScopeIdWrapper = genScopeId && exp.type === 13 /* NodeTypes.VNODE_CALL */;\r\n            push(`const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`);\r\n            genNode(exp, context);\r\n            if (needScopeIdWrapper) {\r\n                push(`)`);\r\n            }\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction genImports(importsOptions, context) {\r\n    if (!importsOptions.length) {\r\n        return;\r\n    }\r\n    importsOptions.forEach(imports => {\r\n        context.push(`import `);\r\n        genNode(imports.exp, context);\r\n        context.push(` from '${imports.path}'`);\r\n        context.newline();\r\n    });\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* NodeTypes.TEXT */ ||\r\n        n.type === 5 /* NodeTypes.INTERPOLATION */ ||\r\n        n.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n        case 9 /* NodeTypes.IF */:\r\n        case 11 /* NodeTypes.FOR */:\r\n            assert$1(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* NodeTypes.TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* NodeTypes.VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* NodeTypes.JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* NodeTypes.JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* NodeTypes.JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* NodeTypes.JS_TEMPLATE_LITERAL */:\r\n            genTemplateLiteral(node, context);\r\n            break;\r\n        case 23 /* NodeTypes.JS_IF_STATEMENT */:\r\n            genIfStatement(node, context);\r\n            break;\r\n        case 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */:\r\n            genAssignmentExpression(node, context);\r\n            break;\r\n        case 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */:\r\n            genSequenceExpression(node, context);\r\n            break;\r\n        case 26 /* NodeTypes.JS_RETURN_STATEMENT */:\r\n            genReturnStatement(node, context);\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            {\r\n                assert$1(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (properties.some(p => p.value.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\r\nfunction genTemplateLiteral(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    push('`');\r\n    const l = node.elements.length;\r\n    const multilines = l > 3;\r\n    for (let i = 0; i < l; i++) {\r\n        const e = node.elements[i];\r\n        if (isString(e)) {\r\n            push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'));\r\n        }\r\n        else {\r\n            push('${');\r\n            if (multilines)\r\n                indent();\r\n            genNode(e, context);\r\n            if (multilines)\r\n                deindent();\r\n            push('}');\r\n        }\r\n    }\r\n    push('`');\r\n}\r\nfunction genIfStatement(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { test, consequent, alternate } = node;\r\n    push(`if (`);\r\n    genNode(test, context);\r\n    push(`) {`);\r\n    indent();\r\n    genNode(consequent, context);\r\n    deindent();\r\n    push(`}`);\r\n    if (alternate) {\r\n        push(` else `);\r\n        if (alternate.type === 23 /* NodeTypes.JS_IF_STATEMENT */) {\r\n            genIfStatement(alternate, context);\r\n        }\r\n        else {\r\n            push(`{`);\r\n            indent();\r\n            genNode(alternate, context);\r\n            deindent();\r\n            push(`}`);\r\n        }\r\n    }\r\n}\r\nfunction genAssignmentExpression(node, context) {\r\n    genNode(node.left, context);\r\n    context.push(` = `);\r\n    genNode(node.right, context);\r\n}\r\nfunction genSequenceExpression(node, context) {\r\n    context.push(`(`);\r\n    genNodeList(node.expressions, context);\r\n    context.push(`)`);\r\n}\r\nfunction genReturnStatement({ returns }, context) {\r\n    context.push(`return `);\r\n    if (isArray(returns)) {\r\n        genNodeListAsArray(returns, context);\r\n    }\r\n    else {\r\n        genNode(returns, context);\r\n    }\r\n}\r\n\r\n// @ts-check\r\n/** @typedef { import('estree').BaseNode} BaseNode */\r\n\r\n/** @typedef {{\r\n\tskip: () => void;\r\n\tremove: () => void;\r\n\treplace: (node: BaseNode) => void;\r\n}} WalkerContext */\r\n\r\nclass WalkerBase {\r\n\tconstructor() {\r\n\t\t/** @type {boolean} */\r\n\t\tthis.should_skip = false;\r\n\r\n\t\t/** @type {boolean} */\r\n\t\tthis.should_remove = false;\r\n\r\n\t\t/** @type {BaseNode | null} */\r\n\t\tthis.replacement = null;\r\n\r\n\t\t/** @type {WalkerContext} */\r\n\t\tthis.context = {\r\n\t\t\tskip: () => (this.should_skip = true),\r\n\t\t\tremove: () => (this.should_remove = true),\r\n\t\t\treplace: (node) => (this.replacement = node)\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {any} parent\r\n\t * @param {string} prop\r\n\t * @param {number} index\r\n\t * @param {BaseNode} node\r\n\t */\r\n\treplace(parent, prop, index, node) {\r\n\t\tif (parent) {\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tparent[prop][index] = node;\r\n\t\t\t} else {\r\n\t\t\t\tparent[prop] = node;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {any} parent\r\n\t * @param {string} prop\r\n\t * @param {number} index\r\n\t */\r\n\tremove(parent, prop, index) {\r\n\t\tif (parent) {\r\n\t\t\tif (index !== null) {\r\n\t\t\t\tparent[prop].splice(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tdelete parent[prop];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// @ts-check\r\n\r\n/** @typedef { import('estree').BaseNode} BaseNode */\r\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\r\n\r\n/** @typedef {(\r\n *    this: WalkerContext,\r\n *    node: BaseNode,\r\n *    parent: BaseNode,\r\n *    key: string,\r\n *    index: number\r\n * ) => void} SyncHandler */\r\n\r\nclass SyncWalker extends WalkerBase {\r\n\t/**\r\n\t *\r\n\t * @param {SyncHandler} enter\r\n\t * @param {SyncHandler} leave\r\n\t */\r\n\tconstructor(enter, leave) {\r\n\t\tsuper();\r\n\r\n\t\t/** @type {SyncHandler} */\r\n\t\tthis.enter = enter;\r\n\r\n\t\t/** @type {SyncHandler} */\r\n\t\tthis.leave = leave;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {BaseNode} node\r\n\t * @param {BaseNode} parent\r\n\t * @param {string} [prop]\r\n\t * @param {number} [index]\r\n\t * @returns {BaseNode}\r\n\t */\r\n\tvisit(node, parent, prop, index) {\r\n\t\tif (node) {\r\n\t\t\tif (this.enter) {\r\n\t\t\t\tconst _should_skip = this.should_skip;\r\n\t\t\t\tconst _should_remove = this.should_remove;\r\n\t\t\t\tconst _replacement = this.replacement;\r\n\t\t\t\tthis.should_skip = false;\r\n\t\t\t\tthis.should_remove = false;\r\n\t\t\t\tthis.replacement = null;\r\n\r\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\r\n\r\n\t\t\t\tif (this.replacement) {\r\n\t\t\t\t\tnode = this.replacement;\r\n\t\t\t\t\tthis.replace(parent, prop, index, node);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.should_remove) {\r\n\t\t\t\t\tthis.remove(parent, prop, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst skipped = this.should_skip;\r\n\t\t\t\tconst removed = this.should_remove;\r\n\r\n\t\t\t\tthis.should_skip = _should_skip;\r\n\t\t\t\tthis.should_remove = _should_remove;\r\n\t\t\t\tthis.replacement = _replacement;\r\n\r\n\t\t\t\tif (skipped) return node;\r\n\t\t\t\tif (removed) return null;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const key in node) {\r\n\t\t\t\tconst value = node[key];\r\n\r\n\t\t\t\tif (typeof value !== \"object\") {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (Array.isArray(value)) {\r\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\r\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\r\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\r\n\t\t\t\t\t\t\t\t// removed\r\n\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\r\n\t\t\t\t\tthis.visit(value, node, key, null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.leave) {\r\n\t\t\t\tconst _replacement = this.replacement;\r\n\t\t\t\tconst _should_remove = this.should_remove;\r\n\t\t\t\tthis.replacement = null;\r\n\t\t\t\tthis.should_remove = false;\r\n\r\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\r\n\r\n\t\t\t\tif (this.replacement) {\r\n\t\t\t\t\tnode = this.replacement;\r\n\t\t\t\t\tthis.replace(parent, prop, index, node);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.should_remove) {\r\n\t\t\t\t\tthis.remove(parent, prop, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst removed = this.should_remove;\r\n\r\n\t\t\t\tthis.replacement = _replacement;\r\n\t\t\t\tthis.should_remove = _should_remove;\r\n\r\n\t\t\t\tif (removed) return null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\t}\r\n}\r\n\r\n// @ts-check\r\n\r\n/** @typedef { import('estree').BaseNode} BaseNode */\r\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\r\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\r\n\r\n/**\r\n *\r\n * @param {BaseNode} ast\r\n * @param {{\r\n *   enter?: SyncHandler\r\n *   leave?: SyncHandler\r\n * }} walker\r\n * @returns {BaseNode}\r\n */\r\nfunction walk$1(ast, { enter, leave }) {\r\n\tconst instance = new SyncWalker(enter, leave);\r\n\treturn instance.visit(ast, null);\r\n}\r\n\r\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    const rootExp = root.type === 'Program' &&\r\n        root.body[0].type === 'ExpressionStatement' &&\r\n        root.body[0].expression;\r\n    walk$1(root, {\r\n        enter(node, parent) {\r\n            parent && parentStack.push(parent);\r\n            if (parent &&\r\n                parent.type.startsWith('TS') &&\r\n                parent.type !== 'TSAsExpression' &&\r\n                parent.type !== 'TSNonNullExpression' &&\r\n                parent.type !== 'TSTypeAssertion') {\r\n                return this.skip();\r\n            }\r\n            if (node.type === 'Identifier') {\r\n                const isLocal = !!knownIds[node.name];\r\n                const isRefed = isReferencedIdentifier(node, parent, parentStack);\r\n                if (includeAll || (isRefed && !isLocal)) {\r\n                    onIdentifier(node, parent, parentStack, isRefed, isLocal);\r\n                }\r\n            }\r\n            else if (node.type === 'ObjectProperty' &&\r\n                parent.type === 'ObjectPattern') {\r\n                node.inPattern = true;\r\n            }\r\n            else if (isFunctionType(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                walkFunctionParams(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n            else if (node.type === 'BlockStatement') {\r\n                // #3445 record block-level local variables\r\n                walkBlockDeclarations(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n        },\r\n        leave(node, parent) {\r\n            parent && parentStack.pop();\r\n            if (node !== rootExp && node.scopeIds) {\r\n                for (const id of node.scopeIds) {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    if (!parent) {\r\n        return true;\r\n    }\r\n    // is a special keyword but parsed as identifier\r\n    if (id.name === 'arguments') {\r\n        return false;\r\n    }\r\n    if (isReferenced(id, parent)) {\r\n        return true;\r\n    }\r\n    // babel's isReferenced check returns false for ids being assigned to, so we\r\n    // need to cover those cases here\r\n    switch (parent.type) {\r\n        case 'AssignmentExpression':\r\n        case 'AssignmentPattern':\r\n            return true;\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return isInDestructureAssignment(parent, parentStack);\r\n    }\r\n    return false;\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nfunction markScopeIdentifier(node, child, knownIds) {\r\n    const { name } = child;\r\n    if (node.scopeIds && node.scopeIds.has(name)) {\r\n        return;\r\n    }\r\n    if (name in knownIds) {\r\n        knownIds[name]++;\r\n    }\r\n    else {\r\n        knownIds[name] = 1;\r\n    }\r\n    (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\n/**\r\n * Copied from https://github.com/babel/babel/blob/main/packages/babel-types/src/validators/isReferenced.ts\r\n * To avoid runtime dependency on @babel/types (which includes process references)\r\n * This file should not change very often in babel but we may need to keep it\r\n * up-to-date from time to time.\r\n *\r\n * https://github.com/babel/babel/blob/main/LICENSE\r\n *\r\n */\r\nfunction isReferenced(node, parent, grandparent) {\r\n    switch (parent.type) {\r\n        // yes: PARENT[NODE]\r\n        // yes: NODE.child\r\n        // no: parent.NODE\r\n        case 'MemberExpression':\r\n        case 'OptionalMemberExpression':\r\n            if (parent.property === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return parent.object === node;\r\n        case 'JSXMemberExpression':\r\n            return parent.object === node;\r\n        // no: let NODE = init;\r\n        // yes: let id = NODE;\r\n        case 'VariableDeclarator':\r\n            return parent.init === node;\r\n        // yes: () => NODE\r\n        // no: (NODE) => {}\r\n        case 'ArrowFunctionExpression':\r\n            return parent.body === node;\r\n        // no: class { #NODE; }\r\n        // no: class { get #NODE() {} }\r\n        // no: class { #NODE() {} }\r\n        // no: class { fn() { return this.#NODE; } }\r\n        case 'PrivateName':\r\n            return false;\r\n        // no: class { NODE() {} }\r\n        // yes: class { [NODE]() {} }\r\n        // no: class { foo(NODE) {} }\r\n        case 'ClassMethod':\r\n        case 'ClassPrivateMethod':\r\n        case 'ObjectMethod':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return false;\r\n        // yes: { [NODE]: \"\" }\r\n        // no: { NODE: \"\" }\r\n        // depends: { NODE }\r\n        // depends: { key: NODE }\r\n        case 'ObjectProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            // parent.value === node\r\n            return !grandparent || grandparent.type !== 'ObjectPattern';\r\n        // no: class { NODE = value; }\r\n        // yes: class { [NODE] = value; }\r\n        // yes: class { key = NODE; }\r\n        case 'ClassProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n        case 'ClassPrivateProperty':\r\n            return parent.key !== node;\r\n        // no: class NODE {}\r\n        // yes: class Foo extends NODE {}\r\n        case 'ClassDeclaration':\r\n        case 'ClassExpression':\r\n            return parent.superClass === node;\r\n        // yes: left = NODE;\r\n        // no: NODE = right;\r\n        case 'AssignmentExpression':\r\n            return parent.right === node;\r\n        // no: [NODE = foo] = [];\r\n        // yes: [foo = NODE] = [];\r\n        case 'AssignmentPattern':\r\n            return parent.right === node;\r\n        // no: NODE: for (;;) {}\r\n        case 'LabeledStatement':\r\n            return false;\r\n        // no: try {} catch (NODE) {}\r\n        case 'CatchClause':\r\n            return false;\r\n        // no: function foo(...NODE) {}\r\n        case 'RestElement':\r\n            return false;\r\n        case 'BreakStatement':\r\n        case 'ContinueStatement':\r\n            return false;\r\n        // no: function NODE() {}\r\n        // no: function foo(NODE) {}\r\n        case 'FunctionDeclaration':\r\n        case 'FunctionExpression':\r\n            return false;\r\n        // no: export NODE from \"foo\";\r\n        // no: export * as NODE from \"foo\";\r\n        case 'ExportNamespaceSpecifier':\r\n        case 'ExportDefaultSpecifier':\r\n            return false;\r\n        // no: export { foo as NODE };\r\n        // yes: export { NODE as foo };\r\n        // no: export { NODE as foo } from \"foo\";\r\n        case 'ExportSpecifier':\r\n            // @ts-expect-error\r\n            if (grandparent === null || grandparent === void 0 ? void 0 : grandparent.source) {\r\n                return false;\r\n            }\r\n            return parent.local === node;\r\n        // no: import NODE from \"foo\";\r\n        // no: import * as NODE from \"foo\";\r\n        // no: import { NODE as foo } from \"foo\";\r\n        // no: import { foo as NODE } from \"foo\";\r\n        // no: import NODE from \"bar\";\r\n        case 'ImportDefaultSpecifier':\r\n        case 'ImportNamespaceSpecifier':\r\n        case 'ImportSpecifier':\r\n            return false;\r\n        // no: import \"foo\" assert { NODE: \"json\" }\r\n        case 'ImportAttribute':\r\n            return false;\r\n        // no: <div NODE=\"foo\" />\r\n        case 'JSXAttribute':\r\n            return false;\r\n        // no: [NODE] = [];\r\n        // no: ({ NODE }) = [];\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return false;\r\n        // no: new.NODE\r\n        // no: NODE.target\r\n        case 'MetaProperty':\r\n            return false;\r\n        // yes: type X = { someProperty: NODE }\r\n        // no: type X = { NODE: OtherType }\r\n        case 'ObjectTypeProperty':\r\n            return parent.key !== node;\r\n        // yes: enum X { Foo = NODE }\r\n        // no: enum X { NODE }\r\n        case 'TSEnumMember':\r\n            return parent.id !== node;\r\n        // yes: { [NODE]: value }\r\n        // no: { NODE: value }\r\n        case 'TSPropertySignature':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* NodeTypes.DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !false check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    const { inline, bindingMetadata } = context;\r\n    const rewriteIdentifier = (raw, parent, id) => {\r\n        const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\r\n        if (inline) {\r\n            // x = y\r\n            const isAssignmentLVal = parent && parent.type === 'AssignmentExpression' && parent.left === id;\r\n            // x++\r\n            const isUpdateArg = parent && parent.type === 'UpdateExpression' && parent.argument === id;\r\n            // ({ x } = y)\r\n            const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\r\n            if (type === \"setup-const\" /* BindingTypes.SETUP_CONST */ ||\r\n                type === \"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */ ||\r\n                localVars[raw]) {\r\n                return raw;\r\n            }\r\n            else if (type === \"setup-ref\" /* BindingTypes.SETUP_REF */) {\r\n                return `${raw}.value`;\r\n            }\r\n            else if (type === \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */) {\r\n                // const binding that may or may not be ref\r\n                // if it's not a ref, then assignments don't make sense -\r\n                // so we ignore the non-ref assignment case and generate code\r\n                // that assumes the value to be a ref for more efficiency\r\n                return isAssignmentLVal || isUpdateArg || isDestructureAssignment\r\n                    ? `${raw}.value`\r\n                    : `${context.helperString(UNREF)}(${raw})`;\r\n            }\r\n            else if (type === \"setup-let\" /* BindingTypes.SETUP_LET */) {\r\n                if (isAssignmentLVal) {\r\n                    // let binding.\r\n                    // this is a bit more tricky as we need to cover the case where\r\n                    // let is a local non-ref value, and we need to replicate the\r\n                    // right hand side value.\r\n                    // x = y --> isRef(x) ? x.value = y : x = y\r\n                    const { right: rVal, operator } = parent;\r\n                    const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\r\n                    const rExpString = stringifyExpression(processExpression(createSimpleExpression(rExp, false), context, false, false, knownIds));\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\r\n                }\r\n                else if (isUpdateArg) {\r\n                    // make id replace parent in the code range so the raw update operator\r\n                    // is removed\r\n                    id.start = parent.start;\r\n                    id.end = parent.end;\r\n                    const { prefix: isPrefix, operator } = parent;\r\n                    const prefix = isPrefix ? operator : ``;\r\n                    const postfix = isPrefix ? `` : operator;\r\n                    // let binding.\r\n                    // x++ --> isRef(a) ? a.value++ : a++\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\r\n                }\r\n                else if (isDestructureAssignment) {\r\n                    // TODO\r\n                    // let binding in a destructure assignment - it's very tricky to\r\n                    // handle both possible cases here without altering the original\r\n                    // structure of the code, so we just assume it's not a ref here\r\n                    // for now\r\n                    return raw;\r\n                }\r\n                else {\r\n                    return `${context.helperString(UNREF)}(${raw})`;\r\n                }\r\n            }\r\n            else if (type === \"props\" /* BindingTypes.PROPS */) {\r\n                // use __props which is generated by compileScript so in ts mode\r\n                // it gets correct type\r\n                return genPropsAccessExp(raw);\r\n            }\r\n            else if (type === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\r\n                // prop with a different local alias (from defineProps() destructure)\r\n                return genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\r\n            }\r\n        }\r\n        else {\r\n            if (type && type.startsWith('setup')) {\r\n                // setup bindings in non-inline mode\r\n                return `$setup.${raw}`;\r\n            }\r\n            else if (type === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\r\n                return `$props['${bindingMetadata.__propsAliases[raw]}']`;\r\n            }\r\n            else if (type) {\r\n                return `$${type}.${raw}`;\r\n            }\r\n        }\r\n        // fallback to ctx\r\n        return `_ctx.${raw}`;\r\n    };\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail constant on parens (function invocation) and dot (member access)\r\n    const bailConstant = rawExp.indexOf(`(`) > -1 || rawExp.indexOf('.') > 0;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        const isScopeVarReference = context.identifiers[rawExp];\r\n        const isAllowedGlobal = isGloballyWhitelisted(rawExp);\r\n        const isLiteral = isLiteralWhitelisted(rawExp);\r\n        if (!asParams && !isScopeVarReference && !isAllowedGlobal && !isLiteral) {\r\n            // const bindings exposed from setup can be skipped for patching but\r\n            // cannot be hoisted to module scope\r\n            if (bindingMetadata[node.content] === \"setup-const\" /* BindingTypes.SETUP_CONST */) {\r\n                node.constType = 1 /* ConstantTypes.CAN_SKIP_PATCH */;\r\n            }\r\n            node.content = rewriteIdentifier(rawExp);\r\n        }\r\n        else if (!isScopeVarReference) {\r\n            if (isLiteral) {\r\n                node.constType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n            }\r\n            else {\r\n                node.constType = 2 /* ConstantTypes.CAN_HOIST */;\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parse_1(source, {\r\n            plugins: context.expressionPlugins\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(45 /* ErrorCodes.X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const parentStack = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    walkIdentifiers(ast, (node, parent, _, isReferenced, isLocal) => {\r\n        if (isStaticPropertyKey(node, parent)) {\r\n            return;\r\n        }\r\n        const needPrefix = isReferenced && canPrefix(node);\r\n        if (needPrefix && !isLocal) {\r\n            if (isStaticProperty(parent) && parent.shorthand) {\r\n                node.prefix = `${node.name}: `;\r\n            }\r\n            node.name = rewriteIdentifier(node.name, parent, node);\r\n            ids.push(node);\r\n        }\r\n        else {\r\n            // The identifier is considered constant unless it's pointing to a\r\n            // local scope variable (a v-for alias, or a v-slot prop)\r\n            if (!(needPrefix && isLocal) && !bailConstant) {\r\n                node.isConstant = true;\r\n            }\r\n            // also generate sub-expressions for other identifiers for better\r\n            // source map support. (except for property keys which are static)\r\n            ids.push(node);\r\n        }\r\n    }, true, // invoke on ALL identifiers\r\n    parentStack, knownIds);\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant ? 3 /* ConstantTypes.CAN_STRINGIFY */ : 0 /* ConstantTypes.NOT_CONSTANT */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.constType = bailConstant\r\n            ? 0 /* ConstantTypes.NOT_CONSTANT */\r\n            : 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nfunction canPrefix(id) {\r\n    // skip whitelisted globals\r\n    if (isGloballyWhitelisted(id.name)) {\r\n        return false;\r\n    }\r\n    // special case for webpack compilation\r\n    if (id.name === 'require') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction stringifyExpression(exp) {\r\n    if (isString(exp)) {\r\n        return exp;\r\n    }\r\n    else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        return exp.content;\r\n    }\r\n    else {\r\n        return exp.children\r\n            .map(stringifyExpression)\r\n            .join('');\r\n    }\r\n}\r\n\r\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if (context.prefixIdentifiers && dir.exp) {\r\n        // dir.exp can only be simple expression because vIf transform is applied\r\n        // before expression transform.\r\n        dir.exp = processExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* NodeTypes.IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 3 /* NodeTypes.COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* NodeTypes.TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if (comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* ErrorCodes.X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    const isTemplateIf = node.tagType === 3 /* ElementTypes.TEMPLATE */;\r\n    return {\r\n        type: 10 /* NodeTypes.IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n        userKey: findProp(node, `key`),\r\n        isTemplateIf\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            '\"v-if\"' ,\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* ConstantTypes.CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* NodeTypes.ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* NodeTypes.FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if (!branch.isTemplateIf &&\r\n                children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (` /* ${patchFlagText} */` ), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\r\n\r\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* NodeTypes.ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        if (isTemplate) {\r\n            // #2085 / #5288 process :key and v-memo expressions need to be\r\n            // processed on `<template v-for>`. In this case the node is discarded\r\n            // and never traversed so its binding expressions won't be processed\r\n            // by the normal transforms.\r\n            if (memo) {\r\n                memo.exp = processExpression(memo.exp, context);\r\n            }\r\n            if (keyProperty && keyProp.type !== 6 /* NodeTypes.ATTRIBUTE */) {\r\n                keyProperty.value = processExpression(keyProperty.value, context);\r\n            }\r\n        }\r\n        const isStableFragment = forNode.source.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* ConstantTypes.NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* PatchFlags.STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* PatchFlags.KEYED_FRAGMENT */\r\n                : 256 /* PatchFlags.UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            (` /* ${PatchFlagNames[fragmentFlag]} */` ), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* NodeTypes.ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* PatchFlags.STABLE_FRAGMENT */ +\r\n                    (` /* ${PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */]} */`\r\n                        ), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* NodeTypes.FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    if (context.prefixIdentifiers) {\r\n        // scope management\r\n        // inject identifiers to context\r\n        value && addIdentifiers(value);\r\n        key && addIdentifiers(key);\r\n        index && addIdentifiers(index);\r\n    }\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (context.prefixIdentifiers) {\r\n            value && removeIdentifiers(value);\r\n            key && removeIdentifiers(key);\r\n            index && removeIdentifiers(index);\r\n        }\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if (context.prefixIdentifiers) {\r\n        result.source = processExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if (context.prefixIdentifiers) {\r\n                result.key = processExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if (context.prefixIdentifiers) {\r\n                    result.index = processExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if (context.prefixIdentifiers) {\r\n            result.value = processExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        (node.tagType === 1 /* ElementTypes.COMPONENT */ ||\r\n            node.tagType === 3 /* ElementTypes.TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            if (context.prefixIdentifiers) {\r\n                slotProps && context.addIdentifiers(slotProps);\r\n            }\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                if (context.prefixIdentifiers) {\r\n                    slotProps && context.removeIdentifiers(slotProps);\r\n                }\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // with `prefixIdentifiers: true`, this can be further optimized to make\r\n    // it dynamic only when the slot actually uses the scope variables.\r\n    if (!context.ssr && context.prefixIdentifiers) {\r\n        hasDynamicSlots = hasScopeRef(node, context.identifiers);\r\n    }\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    let conditionalBranchIndex = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* NodeTypes.COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* NodeTypes.COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* SlotFlags.DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* SlotFlags.FORWARDED */\r\n            : 1 /* SlotFlags.STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + (` /* ${slotFlagsText[slotFlag]} */` ), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn, index) {\r\n    const props = [\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ];\r\n    if (index != null) {\r\n        props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));\r\n    }\r\n    return createObjectExpression(props);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* NodeTypes.ELEMENT */:\r\n                if (child.tagType === 2 /* ElementTypes.SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* NodeTypes.IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* NodeTypes.IF_BRANCH */:\r\n            case 11 /* NodeTypes.FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* NodeTypes.TEXT */ && node.type !== 12 /* NodeTypes.TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* NodeTypes.TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\r\n\r\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n            (node.tagType === 0 /* ElementTypes.ELEMENT */ ||\r\n                node.tagType === 1 /* ElementTypes.COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* ElementTypes.COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n                if (node.children.length > 1) {\r\n                    context.onError(createCompilerError(46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* NodeTypes.INTERPOLATION */ ||\r\n                    type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* PatchFlags.TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* NodeTypes.TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (false )) {\r\n            const exp = isProp.type === 6 /* NodeTypes.ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (from setup bindings)\r\n    // this is skipped in browser build since browser builds do not perform\r\n    // binding analysis.\r\n    {\r\n        const fromSetup = resolveSetupReference(tag, context);\r\n        if (fromSetup) {\r\n            return fromSetup;\r\n        }\r\n        const dotIndex = tag.indexOf('.');\r\n        if (dotIndex > 0) {\r\n            const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\r\n            if (ns) {\r\n                return ns + tag.slice(dotIndex);\r\n            }\r\n        }\r\n    }\r\n    // 4. Self referencing component (inferred from filename)\r\n    if (context.selfName &&\r\n        capitalize(camelize(tag)) === context.selfName) {\r\n        context.helper(RESOLVE_COMPONENT);\r\n        // codegen.ts has special check for __self postfix when generating\r\n        // component imports, which will pass additional `maybeSelfReference` flag\r\n        // to `resolveComponent`.\r\n        context.components.add(tag + `__self`);\r\n        return toValidAssetId(tag, `component`);\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction resolveSetupReference(name, context) {\r\n    const bindings = context.bindingMetadata;\r\n    if (!bindings || bindings.__isScriptSetup === false) {\r\n        return;\r\n    }\r\n    const camelName = camelize(name);\r\n    const PascalName = capitalize(camelName);\r\n    const checkType = (type) => {\r\n        if (bindings[name] === type) {\r\n            return name;\r\n        }\r\n        if (bindings[camelName] === type) {\r\n            return camelName;\r\n        }\r\n        if (bindings[PascalName] === type) {\r\n            return PascalName;\r\n        }\r\n    };\r\n    const fromConst = checkType(\"setup-const\" /* BindingTypes.SETUP_CONST */) ||\r\n        checkType(\"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */);\r\n    if (fromConst) {\r\n        return context.inline\r\n            ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n                fromConst\r\n            : `$setup[${JSON.stringify(fromConst)}]`;\r\n    }\r\n    const fromMaybeRef = checkType(\"setup-let\" /* BindingTypes.SETUP_LET */) ||\r\n        checkType(\"setup-ref\" /* BindingTypes.SETUP_REF */) ||\r\n        checkType(\"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */);\r\n    if (fromMaybeRef) {\r\n        return context.inline\r\n            ? // setup scope bindings that may be refs need to be unrefed\r\n                `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n            : `$setup[${JSON.stringify(fromMaybeRef)}]`;\r\n    }\r\n}\r\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const pushMergeArg = (arg) => {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n            properties = [];\r\n        }\r\n        if (arg)\r\n            mergeArgs.push(arg);\r\n    };\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (isEventHandler &&\r\n                (!isComponent || isDynamicComponent) &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n                // in inline mode there is no setupState object, so we can't use string\r\n                // keys to set the ref. Instead, we need to transform it to pass the\r\n                // actual ref instead.\r\n                if (value && context.inline) {\r\n                    const binding = context.bindingMetadata[value.content];\r\n                    if (binding === \"setup-let\" /* BindingTypes.SETUP_LET */ ||\r\n                        binding === \"setup-ref\" /* BindingTypes.SETUP_REF */ ||\r\n                        binding === \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */) {\r\n                        isStatic = false;\r\n                        properties.push(createObjectProperty(createSimpleExpression('ref_key', true), createSimpleExpression(value.content, true, value.loc)));\r\n                    }\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (false ))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (false )))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (isVBind) {\r\n                        // have to merge early for compat build check\r\n                        pushMergeArg();\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        pushMergeArg({\r\n                            type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: isComponent ? [exp] : [exp, `true`]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                if (isVOn && arg && !isStaticExp(arg)) {\r\n                    pushMergeArg(createObjectExpression(props, elementLoc));\r\n                }\r\n                else {\r\n                    properties.push(...props);\r\n                }\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        // close up any not-yet-merged props\r\n        pushMergeArg();\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* PatchFlags.FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* PatchFlags.CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* PatchFlags.STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PatchFlags.PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* PatchFlags.HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* PatchFlags.NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            (styleProp.value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                                styleProp.value.content.trim()[0] === `[`) ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // user directive.\r\n        // see if we have directives exposed via <script setup>\r\n        const fromSetup = resolveSetupReference('v-' + dir.name, context);\r\n        if (fromSetup) {\r\n            dirArgs.push(fromSetup);\r\n        }\r\n        else {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\r\n\r\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps, false, false);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\r\n\r\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            const eventString = node.tagType !== 0 /* ElementTypes.ELEMENT */ ||\r\n                rawName.startsWith('vnode') ||\r\n                !/[A-Z]/.test(rawName)\r\n                ? // for non-element and vnode lifecycle event listeners, auto convert\r\n                    // it to camelCase. See issue #2249\r\n                    toHandlerKey(camelize(rawName))\r\n                : // preserve case for plain element listeners that have uppercase\r\n                    // letters, as these may be custom elements' custom events\r\n                    `on:${rawName}`;\r\n            eventName = createSimpleExpression(eventString, true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content, context);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        // process the expression since it's been skipped\r\n        if (context.prefixIdentifiers) {\r\n            isInlineStatement && context.addIdentifiers(`$event`);\r\n            exp = dir.exp = processExpression(exp, context, false, hasMultipleStatements);\r\n            isInlineStatement && context.removeIdentifiers(`$event`);\r\n            // with scope analysis, the function is hoistable if it has no reference\r\n            // to scope variables.\r\n            shouldCache =\r\n                context.cacheHandlers &&\r\n                    // unnecessary to cache inside v-once\r\n                    !context.inVOnce &&\r\n                    // runtime constants don't need to be cached\r\n                    // (this is analyzed by compileScript in SFC <script setup>)\r\n                    !(exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && exp.constType > 0) &&\r\n                    // #1541 bail if this is a member exp handler passed to a component -\r\n                    // we need to use the original function to preserve arity,\r\n                    // e.g. <transition> relies on checking cb.length to determine\r\n                    // transition end handling. Inline function is ok since its arity\r\n                    // is preserved even when cached.\r\n                    !(isMemberExp && node.tagType === 1 /* ElementTypes.COMPONENT */) &&\r\n                    // bail if the function references closure variables (v-for, v-slot)\r\n                    // it must be passed fresh to avoid stale values.\r\n                    !hasScopeRef(exp, context.identifiers);\r\n            // If the expression is optimizable and is a member expression pointing\r\n            // to a function, turn it into invocation (and wrap in an arrow function\r\n            // below) so that it always accesses the latest value when called - thus\r\n            // avoiding the need to be patched.\r\n            if (shouldCache && isMemberExp) {\r\n                if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    exp.content = `${exp.content} && ${exp.content}(...args)`;\r\n                }\r\n                else {\r\n                    exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\r\n                }\r\n            }\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? context.isTS\r\n                        ? `($event: any)`\r\n                        : `$event`\r\n                    : `${context.isTS ? `\\n//@ts-ignore\\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\r\n\r\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\r\n\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* NodeTypes.ROOT */ ||\r\n        node.type === 1 /* NodeTypes.ELEMENT */ ||\r\n        node.type === 11 /* NodeTypes.FOR */ ||\r\n        node.type === 10 /* NodeTypes.IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = createCompoundExpression([child], child.loc);\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* NodeTypes.ROOT */ ||\r\n                        (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                            node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(false ))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* NodeTypes.TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* PatchFlags.TEXT */ +\r\n                            (` /* ${PatchFlagNames[1 /* PatchFlags.TEXT */]} */` ));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* NodeTypes.TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    const bindingType = context.bindingMetadata[rawExp];\r\n    // check props\r\n    if (bindingType === \"props\" /* BindingTypes.PROPS */ ||\r\n        bindingType === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\r\n        context.onError(createCompilerError(44 /* ErrorCodes.X_V_MODEL_ON_PROPS */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const maybeRef = context.inline &&\r\n        (bindingType === \"setup-let\" /* BindingTypes.SETUP_LET */ ||\r\n            bindingType === \"setup-ref\" /* BindingTypes.SETUP_REF */ ||\r\n            bindingType === \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */);\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString, context) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    if (context.prefixIdentifiers &&\r\n        isSimpleIdentifier(expString) &&\r\n        context.identifiers[expString]) {\r\n        context.onError(createCompilerError(43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    if (maybeRef) {\r\n        if (bindingType === \"setup-ref\" /* BindingTypes.SETUP_REF */) {\r\n            // v-model used on known ref.\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => ((`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event)`\r\n            ]);\r\n        }\r\n        else {\r\n            // v-model used on a potentially ref binding in <script setup> inline mode.\r\n            // the assignment needs to check whether the binding is actually a ref.\r\n            const altAssignment = bindingType === \"setup-let\" /* BindingTypes.SETUP_LET */ ? `${rawExp} = $event` : `null`;\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event : ${altAssignment})`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n    if (context.prefixIdentifiers &&\r\n        !context.inVOnce &&\r\n        context.cacheHandlers &&\r\n        !hasScopeRef(exp, context.identifiers)) {\r\n        props[1].value = context.cache(props[1].value);\r\n    }\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* ConstantTypes.CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\r\n\r\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* ElementTypes.COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([]),\r\n            ...(prefixIdentifiers\r\n                ? [\r\n                    // order is important\r\n                    trackVForSlotScopes,\r\n                    transformExpression\r\n                ]\r\n                : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    const prefixIdentifiers = (options.prefixIdentifiers === true || isModuleMode);\r\n    if (!prefixIdentifiers && options.cacheHandlers) {\r\n        onError(createCompilerError(49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\r\n    if (options.isTS) {\r\n        const { expressionPlugins } = options;\r\n        if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n            options.expressionPlugins = [...(expressionPlugins || []), 'typescript'];\r\n        }\r\n    }\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\r\n\r\nconst noopDirectiveTransform = () => ({ props: [] });\r\n\r\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\r\nconst V_MODEL_CHECKBOX = Symbol(`vModelCheckbox` );\r\nconst V_MODEL_TEXT = Symbol(`vModelText` );\r\nconst V_MODEL_SELECT = Symbol(`vModelSelect` );\r\nconst V_MODEL_DYNAMIC = Symbol(`vModelDynamic` );\r\nconst V_ON_WITH_MODIFIERS = Symbol(`vOnModifiersGuard` );\r\nconst V_ON_WITH_KEYS = Symbol(`vOnKeysGuard` );\r\nconst V_SHOW = Symbol(`vShow` );\r\nconst TRANSITION = Symbol(`Transition` );\r\nconst TRANSITION_GROUP = Symbol(`TransitionGroup` );\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\r\n\r\nvar namedCharacterReferences = {\r\n\tGT: \">\",\r\n\tgt: \">\",\r\n\tLT: \"<\",\r\n\tlt: \"<\",\r\n\t\"ac;\": \"\u223E\",\r\n\t\"af;\": \"\u2061\",\r\n\tAMP: \"&\",\r\n\tamp: \"&\",\r\n\t\"ap;\": \"\u2248\",\r\n\t\"DD;\": \"\u2145\",\r\n\t\"dd;\": \"\u2146\",\r\n\tdeg: \"\u00B0\",\r\n\t\"ee;\": \"\u2147\",\r\n\t\"eg;\": \"\u2A9A\",\r\n\t\"el;\": \"\u2A99\",\r\n\tETH: \"\u00D0\",\r\n\teth: \"\u00F0\",\r\n\t\"gE;\": \"\u2267\",\r\n\t\"ge;\": \"\u2265\",\r\n\t\"Gg;\": \"\u22D9\",\r\n\t\"gg;\": \"\u226B\",\r\n\t\"gl;\": \"\u2277\",\r\n\t\"GT;\": \">\",\r\n\t\"Gt;\": \"\u226B\",\r\n\t\"gt;\": \">\",\r\n\t\"ic;\": \"\u2063\",\r\n\t\"ii;\": \"\u2148\",\r\n\t\"Im;\": \"\u2111\",\r\n\t\"in;\": \"\u2208\",\r\n\t\"it;\": \"\u2062\",\r\n\t\"lE;\": \"\u2266\",\r\n\t\"le;\": \"\u2264\",\r\n\t\"lg;\": \"\u2276\",\r\n\t\"Ll;\": \"\u22D8\",\r\n\t\"ll;\": \"\u226A\",\r\n\t\"LT;\": \"<\",\r\n\t\"Lt;\": \"\u226A\",\r\n\t\"lt;\": \"<\",\r\n\t\"mp;\": \"\u2213\",\r\n\t\"Mu;\": \"\u039C\",\r\n\t\"mu;\": \"\u03BC\",\r\n\t\"ne;\": \"\u2260\",\r\n\t\"ni;\": \"\u220B\",\r\n\tnot: \"\u00AC\",\r\n\t\"Nu;\": \"\u039D\",\r\n\t\"nu;\": \"\u03BD\",\r\n\t\"Or;\": \"\u2A54\",\r\n\t\"or;\": \"\u2228\",\r\n\t\"oS;\": \"\u24C8\",\r\n\t\"Pi;\": \"\u03A0\",\r\n\t\"pi;\": \"\u03C0\",\r\n\t\"pm;\": \"\u00B1\",\r\n\t\"Pr;\": \"\u2ABB\",\r\n\t\"pr;\": \"\u227A\",\r\n\t\"Re;\": \"\u211C\",\r\n\tREG: \"\u00AE\",\r\n\treg: \"\u00AE\",\r\n\t\"rx;\": \"\u211E\",\r\n\t\"Sc;\": \"\u2ABC\",\r\n\t\"sc;\": \"\u227B\",\r\n\tshy: \"\u00AD\",\r\n\tuml: \"\u00A8\",\r\n\t\"wp;\": \"\u2118\",\r\n\t\"wr;\": \"\u2240\",\r\n\t\"Xi;\": \"\u039E\",\r\n\t\"xi;\": \"\u03BE\",\r\n\tyen: \"\u00A5\",\r\n\t\"acd;\": \"\u223F\",\r\n\t\"acE;\": \"\u223E\u0333\",\r\n\t\"Acy;\": \"\u0410\",\r\n\t\"acy;\": \"\u0430\",\r\n\t\"Afr;\": \"\uD835\uDD04\",\r\n\t\"afr;\": \"\uD835\uDD1E\",\r\n\t\"AMP;\": \"&\",\r\n\t\"amp;\": \"&\",\r\n\t\"And;\": \"\u2A53\",\r\n\t\"and;\": \"\u2227\",\r\n\t\"ang;\": \"\u2220\",\r\n\t\"apE;\": \"\u2A70\",\r\n\t\"ape;\": \"\u224A\",\r\n\t\"ast;\": \"*\",\r\n\tAuml: \"\u00C4\",\r\n\tauml: \"\u00E4\",\r\n\t\"Bcy;\": \"\u0411\",\r\n\t\"bcy;\": \"\u0431\",\r\n\t\"Bfr;\": \"\uD835\uDD05\",\r\n\t\"bfr;\": \"\uD835\uDD1F\",\r\n\t\"bne;\": \"=\u20E5\",\r\n\t\"bot;\": \"\u22A5\",\r\n\t\"Cap;\": \"\u22D2\",\r\n\t\"cap;\": \"\u2229\",\r\n\tcent: \"\u00A2\",\r\n\t\"Cfr;\": \"\u212D\",\r\n\t\"cfr;\": \"\uD835\uDD20\",\r\n\t\"Chi;\": \"\u03A7\",\r\n\t\"chi;\": \"\u03C7\",\r\n\t\"cir;\": \"\u25CB\",\r\n\tCOPY: \"\u00A9\",\r\n\tcopy: \"\u00A9\",\r\n\t\"Cup;\": \"\u22D3\",\r\n\t\"cup;\": \"\u222A\",\r\n\t\"Dcy;\": \"\u0414\",\r\n\t\"dcy;\": \"\u0434\",\r\n\t\"deg;\": \"\u00B0\",\r\n\t\"Del;\": \"\u2207\",\r\n\t\"Dfr;\": \"\uD835\uDD07\",\r\n\t\"dfr;\": \"\uD835\uDD21\",\r\n\t\"die;\": \"\u00A8\",\r\n\t\"div;\": \"\u00F7\",\r\n\t\"Dot;\": \"\u00A8\",\r\n\t\"dot;\": \"\u02D9\",\r\n\t\"Ecy;\": \"\u042D\",\r\n\t\"ecy;\": \"\u044D\",\r\n\t\"Efr;\": \"\uD835\uDD08\",\r\n\t\"efr;\": \"\uD835\uDD22\",\r\n\t\"egs;\": \"\u2A96\",\r\n\t\"ell;\": \"\u2113\",\r\n\t\"els;\": \"\u2A95\",\r\n\t\"ENG;\": \"\u014A\",\r\n\t\"eng;\": \"\u014B\",\r\n\t\"Eta;\": \"\u0397\",\r\n\t\"eta;\": \"\u03B7\",\r\n\t\"ETH;\": \"\u00D0\",\r\n\t\"eth;\": \"\u00F0\",\r\n\tEuml: \"\u00CB\",\r\n\teuml: \"\u00EB\",\r\n\t\"Fcy;\": \"\u0424\",\r\n\t\"fcy;\": \"\u0444\",\r\n\t\"Ffr;\": \"\uD835\uDD09\",\r\n\t\"ffr;\": \"\uD835\uDD23\",\r\n\t\"gap;\": \"\u2A86\",\r\n\t\"Gcy;\": \"\u0413\",\r\n\t\"gcy;\": \"\u0433\",\r\n\t\"gEl;\": \"\u2A8C\",\r\n\t\"gel;\": \"\u22DB\",\r\n\t\"geq;\": \"\u2265\",\r\n\t\"ges;\": \"\u2A7E\",\r\n\t\"Gfr;\": \"\uD835\uDD0A\",\r\n\t\"gfr;\": \"\uD835\uDD24\",\r\n\t\"ggg;\": \"\u22D9\",\r\n\t\"gla;\": \"\u2AA5\",\r\n\t\"glE;\": \"\u2A92\",\r\n\t\"glj;\": \"\u2AA4\",\r\n\t\"gnE;\": \"\u2269\",\r\n\t\"gne;\": \"\u2A88\",\r\n\t\"Hat;\": \"^\",\r\n\t\"Hfr;\": \"\u210C\",\r\n\t\"hfr;\": \"\uD835\uDD25\",\r\n\t\"Icy;\": \"\u0418\",\r\n\t\"icy;\": \"\u0438\",\r\n\t\"iff;\": \"\u21D4\",\r\n\t\"Ifr;\": \"\u2111\",\r\n\t\"ifr;\": \"\uD835\uDD26\",\r\n\t\"Int;\": \"\u222C\",\r\n\t\"int;\": \"\u222B\",\r\n\tIuml: \"\u00CF\",\r\n\tiuml: \"\u00EF\",\r\n\t\"Jcy;\": \"\u0419\",\r\n\t\"jcy;\": \"\u0439\",\r\n\t\"Jfr;\": \"\uD835\uDD0D\",\r\n\t\"jfr;\": \"\uD835\uDD27\",\r\n\t\"Kcy;\": \"\u041A\",\r\n\t\"kcy;\": \"\u043A\",\r\n\t\"Kfr;\": \"\uD835\uDD0E\",\r\n\t\"kfr;\": \"\uD835\uDD28\",\r\n\t\"lap;\": \"\u2A85\",\r\n\t\"lat;\": \"\u2AAB\",\r\n\t\"Lcy;\": \"\u041B\",\r\n\t\"lcy;\": \"\u043B\",\r\n\t\"lEg;\": \"\u2A8B\",\r\n\t\"leg;\": \"\u22DA\",\r\n\t\"leq;\": \"\u2264\",\r\n\t\"les;\": \"\u2A7D\",\r\n\t\"Lfr;\": \"\uD835\uDD0F\",\r\n\t\"lfr;\": \"\uD835\uDD29\",\r\n\t\"lgE;\": \"\u2A91\",\r\n\t\"lnE;\": \"\u2268\",\r\n\t\"lne;\": \"\u2A87\",\r\n\t\"loz;\": \"\u25CA\",\r\n\t\"lrm;\": \"\u200E\",\r\n\t\"Lsh;\": \"\u21B0\",\r\n\t\"lsh;\": \"\u21B0\",\r\n\tmacr: \"\u00AF\",\r\n\t\"Map;\": \"\u2905\",\r\n\t\"map;\": \"\u21A6\",\r\n\t\"Mcy;\": \"\u041C\",\r\n\t\"mcy;\": \"\u043C\",\r\n\t\"Mfr;\": \"\uD835\uDD10\",\r\n\t\"mfr;\": \"\uD835\uDD2A\",\r\n\t\"mho;\": \"\u2127\",\r\n\t\"mid;\": \"\u2223\",\r\n\t\"nap;\": \"\u2249\",\r\n\tnbsp: \"\u00A0\",\r\n\t\"Ncy;\": \"\u041D\",\r\n\t\"ncy;\": \"\u043D\",\r\n\t\"Nfr;\": \"\uD835\uDD11\",\r\n\t\"nfr;\": \"\uD835\uDD2B\",\r\n\t\"ngE;\": \"\u2267\u0338\",\r\n\t\"nge;\": \"\u2271\",\r\n\t\"nGg;\": \"\u22D9\u0338\",\r\n\t\"nGt;\": \"\u226B\u20D2\",\r\n\t\"ngt;\": \"\u226F\",\r\n\t\"nis;\": \"\u22FC\",\r\n\t\"niv;\": \"\u220B\",\r\n\t\"nlE;\": \"\u2266\u0338\",\r\n\t\"nle;\": \"\u2270\",\r\n\t\"nLl;\": \"\u22D8\u0338\",\r\n\t\"nLt;\": \"\u226A\u20D2\",\r\n\t\"nlt;\": \"\u226E\",\r\n\t\"Not;\": \"\u2AEC\",\r\n\t\"not;\": \"\u00AC\",\r\n\t\"npr;\": \"\u2280\",\r\n\t\"nsc;\": \"\u2281\",\r\n\t\"num;\": \"#\",\r\n\t\"Ocy;\": \"\u041E\",\r\n\t\"ocy;\": \"\u043E\",\r\n\t\"Ofr;\": \"\uD835\uDD12\",\r\n\t\"ofr;\": \"\uD835\uDD2C\",\r\n\t\"ogt;\": \"\u29C1\",\r\n\t\"ohm;\": \"\u03A9\",\r\n\t\"olt;\": \"\u29C0\",\r\n\t\"ord;\": \"\u2A5D\",\r\n\tordf: \"\u00AA\",\r\n\tordm: \"\u00BA\",\r\n\t\"orv;\": \"\u2A5B\",\r\n\tOuml: \"\u00D6\",\r\n\touml: \"\u00F6\",\r\n\t\"par;\": \"\u2225\",\r\n\tpara: \"\u00B6\",\r\n\t\"Pcy;\": \"\u041F\",\r\n\t\"pcy;\": \"\u043F\",\r\n\t\"Pfr;\": \"\uD835\uDD13\",\r\n\t\"pfr;\": \"\uD835\uDD2D\",\r\n\t\"Phi;\": \"\u03A6\",\r\n\t\"phi;\": \"\u03C6\",\r\n\t\"piv;\": \"\u03D6\",\r\n\t\"prE;\": \"\u2AB3\",\r\n\t\"pre;\": \"\u2AAF\",\r\n\t\"Psi;\": \"\u03A8\",\r\n\t\"psi;\": \"\u03C8\",\r\n\t\"Qfr;\": \"\uD835\uDD14\",\r\n\t\"qfr;\": \"\uD835\uDD2E\",\r\n\tQUOT: \"\\\"\",\r\n\tquot: \"\\\"\",\r\n\t\"Rcy;\": \"\u0420\",\r\n\t\"rcy;\": \"\u0440\",\r\n\t\"REG;\": \"\u00AE\",\r\n\t\"reg;\": \"\u00AE\",\r\n\t\"Rfr;\": \"\u211C\",\r\n\t\"rfr;\": \"\uD835\uDD2F\",\r\n\t\"Rho;\": \"\u03A1\",\r\n\t\"rho;\": \"\u03C1\",\r\n\t\"rlm;\": \"\u200F\",\r\n\t\"Rsh;\": \"\u21B1\",\r\n\t\"rsh;\": \"\u21B1\",\r\n\t\"scE;\": \"\u2AB4\",\r\n\t\"sce;\": \"\u2AB0\",\r\n\t\"Scy;\": \"\u0421\",\r\n\t\"scy;\": \"\u0441\",\r\n\tsect: \"\u00A7\",\r\n\t\"Sfr;\": \"\uD835\uDD16\",\r\n\t\"sfr;\": \"\uD835\uDD30\",\r\n\t\"shy;\": \"\u00AD\",\r\n\t\"sim;\": \"\u223C\",\r\n\t\"smt;\": \"\u2AAA\",\r\n\t\"sol;\": \"/\",\r\n\t\"squ;\": \"\u25A1\",\r\n\t\"Sub;\": \"\u22D0\",\r\n\t\"sub;\": \"\u2282\",\r\n\t\"Sum;\": \"\u2211\",\r\n\t\"sum;\": \"\u2211\",\r\n\t\"Sup;\": \"\u22D1\",\r\n\t\"sup;\": \"\u2283\",\r\n\tsup1: \"\u00B9\",\r\n\tsup2: \"\u00B2\",\r\n\tsup3: \"\u00B3\",\r\n\t\"Tab;\": \"\\t\",\r\n\t\"Tau;\": \"\u03A4\",\r\n\t\"tau;\": \"\u03C4\",\r\n\t\"Tcy;\": \"\u0422\",\r\n\t\"tcy;\": \"\u0442\",\r\n\t\"Tfr;\": \"\uD835\uDD17\",\r\n\t\"tfr;\": \"\uD835\uDD31\",\r\n\t\"top;\": \"\u22A4\",\r\n\t\"Ucy;\": \"\u0423\",\r\n\t\"ucy;\": \"\u0443\",\r\n\t\"Ufr;\": \"\uD835\uDD18\",\r\n\t\"ufr;\": \"\uD835\uDD32\",\r\n\t\"uml;\": \"\u00A8\",\r\n\tUuml: \"\u00DC\",\r\n\tuuml: \"\u00FC\",\r\n\t\"Vcy;\": \"\u0412\",\r\n\t\"vcy;\": \"\u0432\",\r\n\t\"Vee;\": \"\u22C1\",\r\n\t\"vee;\": \"\u2228\",\r\n\t\"Vfr;\": \"\uD835\uDD19\",\r\n\t\"vfr;\": \"\uD835\uDD33\",\r\n\t\"Wfr;\": \"\uD835\uDD1A\",\r\n\t\"wfr;\": \"\uD835\uDD34\",\r\n\t\"Xfr;\": \"\uD835\uDD1B\",\r\n\t\"xfr;\": \"\uD835\uDD35\",\r\n\t\"Ycy;\": \"\u042B\",\r\n\t\"ycy;\": \"\u044B\",\r\n\t\"yen;\": \"\u00A5\",\r\n\t\"Yfr;\": \"\uD835\uDD1C\",\r\n\t\"yfr;\": \"\uD835\uDD36\",\r\n\tyuml: \"\u00FF\",\r\n\t\"Zcy;\": \"\u0417\",\r\n\t\"zcy;\": \"\u0437\",\r\n\t\"Zfr;\": \"\u2128\",\r\n\t\"zfr;\": \"\uD835\uDD37\",\r\n\t\"zwj;\": \"\u200D\",\r\n\tAcirc: \"\u00C2\",\r\n\tacirc: \"\u00E2\",\r\n\tacute: \"\u00B4\",\r\n\tAElig: \"\u00C6\",\r\n\taelig: \"\u00E6\",\r\n\t\"andd;\": \"\u2A5C\",\r\n\t\"andv;\": \"\u2A5A\",\r\n\t\"ange;\": \"\u29A4\",\r\n\t\"Aopf;\": \"\uD835\uDD38\",\r\n\t\"aopf;\": \"\uD835\uDD52\",\r\n\t\"apid;\": \"\u224B\",\r\n\t\"apos;\": \"'\",\r\n\tAring: \"\u00C5\",\r\n\taring: \"\u00E5\",\r\n\t\"Ascr;\": \"\uD835\uDC9C\",\r\n\t\"ascr;\": \"\uD835\uDCB6\",\r\n\t\"Auml;\": \"\u00C4\",\r\n\t\"auml;\": \"\u00E4\",\r\n\t\"Barv;\": \"\u2AE7\",\r\n\t\"bbrk;\": \"\u23B5\",\r\n\t\"Beta;\": \"\u0392\",\r\n\t\"beta;\": \"\u03B2\",\r\n\t\"beth;\": \"\u2136\",\r\n\t\"bNot;\": \"\u2AED\",\r\n\t\"bnot;\": \"\u2310\",\r\n\t\"Bopf;\": \"\uD835\uDD39\",\r\n\t\"bopf;\": \"\uD835\uDD53\",\r\n\t\"boxH;\": \"\u2550\",\r\n\t\"boxh;\": \"\u2500\",\r\n\t\"boxV;\": \"\u2551\",\r\n\t\"boxv;\": \"\u2502\",\r\n\t\"Bscr;\": \"\u212C\",\r\n\t\"bscr;\": \"\uD835\uDCB7\",\r\n\t\"bsim;\": \"\u223D\",\r\n\t\"bsol;\": \"\\\\\",\r\n\t\"bull;\": \"\u2022\",\r\n\t\"bump;\": \"\u224E\",\r\n\t\"caps;\": \"\u2229\uFE00\",\r\n\t\"Cdot;\": \"\u010A\",\r\n\t\"cdot;\": \"\u010B\",\r\n\tcedil: \"\u00B8\",\r\n\t\"cent;\": \"\u00A2\",\r\n\t\"CHcy;\": \"\u0427\",\r\n\t\"chcy;\": \"\u0447\",\r\n\t\"circ;\": \"\u02C6\",\r\n\t\"cirE;\": \"\u29C3\",\r\n\t\"cire;\": \"\u2257\",\r\n\t\"comp;\": \"\u2201\",\r\n\t\"cong;\": \"\u2245\",\r\n\t\"Copf;\": \"\u2102\",\r\n\t\"copf;\": \"\uD835\uDD54\",\r\n\t\"COPY;\": \"\u00A9\",\r\n\t\"copy;\": \"\u00A9\",\r\n\t\"Cscr;\": \"\uD835\uDC9E\",\r\n\t\"cscr;\": \"\uD835\uDCB8\",\r\n\t\"csub;\": \"\u2ACF\",\r\n\t\"csup;\": \"\u2AD0\",\r\n\t\"cups;\": \"\u222A\uFE00\",\r\n\t\"Darr;\": \"\u21A1\",\r\n\t\"dArr;\": \"\u21D3\",\r\n\t\"darr;\": \"\u2193\",\r\n\t\"dash;\": \"\u2010\",\r\n\t\"dHar;\": \"\u2965\",\r\n\t\"diam;\": \"\u22C4\",\r\n\t\"DJcy;\": \"\u0402\",\r\n\t\"djcy;\": \"\u0452\",\r\n\t\"Dopf;\": \"\uD835\uDD3B\",\r\n\t\"dopf;\": \"\uD835\uDD55\",\r\n\t\"Dscr;\": \"\uD835\uDC9F\",\r\n\t\"dscr;\": \"\uD835\uDCB9\",\r\n\t\"DScy;\": \"\u0405\",\r\n\t\"dscy;\": \"\u0455\",\r\n\t\"dsol;\": \"\u29F6\",\r\n\t\"dtri;\": \"\u25BF\",\r\n\t\"DZcy;\": \"\u040F\",\r\n\t\"dzcy;\": \"\u045F\",\r\n\t\"ecir;\": \"\u2256\",\r\n\tEcirc: \"\u00CA\",\r\n\tecirc: \"\u00EA\",\r\n\t\"Edot;\": \"\u0116\",\r\n\t\"eDot;\": \"\u2251\",\r\n\t\"edot;\": \"\u0117\",\r\n\t\"emsp;\": \"\u2003\",\r\n\t\"ensp;\": \"\u2002\",\r\n\t\"Eopf;\": \"\uD835\uDD3C\",\r\n\t\"eopf;\": \"\uD835\uDD56\",\r\n\t\"epar;\": \"\u22D5\",\r\n\t\"epsi;\": \"\u03B5\",\r\n\t\"Escr;\": \"\u2130\",\r\n\t\"escr;\": \"\u212F\",\r\n\t\"Esim;\": \"\u2A73\",\r\n\t\"esim;\": \"\u2242\",\r\n\t\"Euml;\": \"\u00CB\",\r\n\t\"euml;\": \"\u00EB\",\r\n\t\"euro;\": \"\u20AC\",\r\n\t\"excl;\": \"!\",\r\n\t\"flat;\": \"\u266D\",\r\n\t\"fnof;\": \"\u0192\",\r\n\t\"Fopf;\": \"\uD835\uDD3D\",\r\n\t\"fopf;\": \"\uD835\uDD57\",\r\n\t\"fork;\": \"\u22D4\",\r\n\t\"Fscr;\": \"\u2131\",\r\n\t\"fscr;\": \"\uD835\uDCBB\",\r\n\t\"Gdot;\": \"\u0120\",\r\n\t\"gdot;\": \"\u0121\",\r\n\t\"geqq;\": \"\u2267\",\r\n\t\"gesl;\": \"\u22DB\uFE00\",\r\n\t\"GJcy;\": \"\u0403\",\r\n\t\"gjcy;\": \"\u0453\",\r\n\t\"gnap;\": \"\u2A8A\",\r\n\t\"gneq;\": \"\u2A88\",\r\n\t\"Gopf;\": \"\uD835\uDD3E\",\r\n\t\"gopf;\": \"\uD835\uDD58\",\r\n\t\"Gscr;\": \"\uD835\uDCA2\",\r\n\t\"gscr;\": \"\u210A\",\r\n\t\"gsim;\": \"\u2273\",\r\n\t\"gtcc;\": \"\u2AA7\",\r\n\t\"gvnE;\": \"\u2269\uFE00\",\r\n\t\"half;\": \"\u00BD\",\r\n\t\"hArr;\": \"\u21D4\",\r\n\t\"harr;\": \"\u2194\",\r\n\t\"hbar;\": \"\u210F\",\r\n\t\"Hopf;\": \"\u210D\",\r\n\t\"hopf;\": \"\uD835\uDD59\",\r\n\t\"Hscr;\": \"\u210B\",\r\n\t\"hscr;\": \"\uD835\uDCBD\",\r\n\tIcirc: \"\u00CE\",\r\n\ticirc: \"\u00EE\",\r\n\t\"Idot;\": \"\u0130\",\r\n\t\"IEcy;\": \"\u0415\",\r\n\t\"iecy;\": \"\u0435\",\r\n\tiexcl: \"\u00A1\",\r\n\t\"imof;\": \"\u22B7\",\r\n\t\"IOcy;\": \"\u0401\",\r\n\t\"iocy;\": \"\u0451\",\r\n\t\"Iopf;\": \"\uD835\uDD40\",\r\n\t\"iopf;\": \"\uD835\uDD5A\",\r\n\t\"Iota;\": \"\u0399\",\r\n\t\"iota;\": \"\u03B9\",\r\n\t\"Iscr;\": \"\u2110\",\r\n\t\"iscr;\": \"\uD835\uDCBE\",\r\n\t\"isin;\": \"\u2208\",\r\n\t\"Iuml;\": \"\u00CF\",\r\n\t\"iuml;\": \"\u00EF\",\r\n\t\"Jopf;\": \"\uD835\uDD41\",\r\n\t\"jopf;\": \"\uD835\uDD5B\",\r\n\t\"Jscr;\": \"\uD835\uDCA5\",\r\n\t\"jscr;\": \"\uD835\uDCBF\",\r\n\t\"KHcy;\": \"\u0425\",\r\n\t\"khcy;\": \"\u0445\",\r\n\t\"KJcy;\": \"\u040C\",\r\n\t\"kjcy;\": \"\u045C\",\r\n\t\"Kopf;\": \"\uD835\uDD42\",\r\n\t\"kopf;\": \"\uD835\uDD5C\",\r\n\t\"Kscr;\": \"\uD835\uDCA6\",\r\n\t\"kscr;\": \"\uD835\uDCC0\",\r\n\t\"Lang;\": \"\u27EA\",\r\n\t\"lang;\": \"\u27E8\",\r\n\tlaquo: \"\u00AB\",\r\n\t\"Larr;\": \"\u219E\",\r\n\t\"lArr;\": \"\u21D0\",\r\n\t\"larr;\": \"\u2190\",\r\n\t\"late;\": \"\u2AAD\",\r\n\t\"lcub;\": \"{\",\r\n\t\"ldca;\": \"\u2936\",\r\n\t\"ldsh;\": \"\u21B2\",\r\n\t\"leqq;\": \"\u2266\",\r\n\t\"lesg;\": \"\u22DA\uFE00\",\r\n\t\"lHar;\": \"\u2962\",\r\n\t\"LJcy;\": \"\u0409\",\r\n\t\"ljcy;\": \"\u0459\",\r\n\t\"lnap;\": \"\u2A89\",\r\n\t\"lneq;\": \"\u2A87\",\r\n\t\"Lopf;\": \"\uD835\uDD43\",\r\n\t\"lopf;\": \"\uD835\uDD5D\",\r\n\t\"lozf;\": \"\u29EB\",\r\n\t\"lpar;\": \"(\",\r\n\t\"Lscr;\": \"\u2112\",\r\n\t\"lscr;\": \"\uD835\uDCC1\",\r\n\t\"lsim;\": \"\u2272\",\r\n\t\"lsqb;\": \"[\",\r\n\t\"ltcc;\": \"\u2AA6\",\r\n\t\"ltri;\": \"\u25C3\",\r\n\t\"lvnE;\": \"\u2268\uFE00\",\r\n\t\"macr;\": \"\u00AF\",\r\n\t\"male;\": \"\u2642\",\r\n\t\"malt;\": \"\u2720\",\r\n\tmicro: \"\u00B5\",\r\n\t\"mlcp;\": \"\u2ADB\",\r\n\t\"mldr;\": \"\u2026\",\r\n\t\"Mopf;\": \"\uD835\uDD44\",\r\n\t\"mopf;\": \"\uD835\uDD5E\",\r\n\t\"Mscr;\": \"\u2133\",\r\n\t\"mscr;\": \"\uD835\uDCC2\",\r\n\t\"nang;\": \"\u2220\u20D2\",\r\n\t\"napE;\": \"\u2A70\u0338\",\r\n\t\"nbsp;\": \"\u00A0\",\r\n\t\"ncap;\": \"\u2A43\",\r\n\t\"ncup;\": \"\u2A42\",\r\n\t\"ngeq;\": \"\u2271\",\r\n\t\"nges;\": \"\u2A7E\u0338\",\r\n\t\"ngtr;\": \"\u226F\",\r\n\t\"nGtv;\": \"\u226B\u0338\",\r\n\t\"nisd;\": \"\u22FA\",\r\n\t\"NJcy;\": \"\u040A\",\r\n\t\"njcy;\": \"\u045A\",\r\n\t\"nldr;\": \"\u2025\",\r\n\t\"nleq;\": \"\u2270\",\r\n\t\"nles;\": \"\u2A7D\u0338\",\r\n\t\"nLtv;\": \"\u226A\u0338\",\r\n\t\"nmid;\": \"\u2224\",\r\n\t\"Nopf;\": \"\u2115\",\r\n\t\"nopf;\": \"\uD835\uDD5F\",\r\n\t\"npar;\": \"\u2226\",\r\n\t\"npre;\": \"\u2AAF\u0338\",\r\n\t\"nsce;\": \"\u2AB0\u0338\",\r\n\t\"Nscr;\": \"\uD835\uDCA9\",\r\n\t\"nscr;\": \"\uD835\uDCC3\",\r\n\t\"nsim;\": \"\u2241\",\r\n\t\"nsub;\": \"\u2284\",\r\n\t\"nsup;\": \"\u2285\",\r\n\t\"ntgl;\": \"\u2279\",\r\n\t\"ntlg;\": \"\u2278\",\r\n\t\"nvap;\": \"\u224D\u20D2\",\r\n\t\"nvge;\": \"\u2265\u20D2\",\r\n\t\"nvgt;\": \">\u20D2\",\r\n\t\"nvle;\": \"\u2264\u20D2\",\r\n\t\"nvlt;\": \"<\u20D2\",\r\n\t\"oast;\": \"\u229B\",\r\n\t\"ocir;\": \"\u229A\",\r\n\tOcirc: \"\u00D4\",\r\n\tocirc: \"\u00F4\",\r\n\t\"odiv;\": \"\u2A38\",\r\n\t\"odot;\": \"\u2299\",\r\n\t\"ogon;\": \"\u02DB\",\r\n\t\"oint;\": \"\u222E\",\r\n\t\"omid;\": \"\u29B6\",\r\n\t\"Oopf;\": \"\uD835\uDD46\",\r\n\t\"oopf;\": \"\uD835\uDD60\",\r\n\t\"opar;\": \"\u29B7\",\r\n\t\"ordf;\": \"\u00AA\",\r\n\t\"ordm;\": \"\u00BA\",\r\n\t\"oror;\": \"\u2A56\",\r\n\t\"Oscr;\": \"\uD835\uDCAA\",\r\n\t\"oscr;\": \"\u2134\",\r\n\t\"osol;\": \"\u2298\",\r\n\t\"Ouml;\": \"\u00D6\",\r\n\t\"ouml;\": \"\u00F6\",\r\n\t\"para;\": \"\u00B6\",\r\n\t\"part;\": \"\u2202\",\r\n\t\"perp;\": \"\u22A5\",\r\n\t\"phiv;\": \"\u03D5\",\r\n\t\"plus;\": \"+\",\r\n\t\"Popf;\": \"\u2119\",\r\n\t\"popf;\": \"\uD835\uDD61\",\r\n\tpound: \"\u00A3\",\r\n\t\"prap;\": \"\u2AB7\",\r\n\t\"prec;\": \"\u227A\",\r\n\t\"prnE;\": \"\u2AB5\",\r\n\t\"prod;\": \"\u220F\",\r\n\t\"prop;\": \"\u221D\",\r\n\t\"Pscr;\": \"\uD835\uDCAB\",\r\n\t\"pscr;\": \"\uD835\uDCC5\",\r\n\t\"qint;\": \"\u2A0C\",\r\n\t\"Qopf;\": \"\u211A\",\r\n\t\"qopf;\": \"\uD835\uDD62\",\r\n\t\"Qscr;\": \"\uD835\uDCAC\",\r\n\t\"qscr;\": \"\uD835\uDCC6\",\r\n\t\"QUOT;\": \"\\\"\",\r\n\t\"quot;\": \"\\\"\",\r\n\t\"race;\": \"\u223D\u0331\",\r\n\t\"Rang;\": \"\u27EB\",\r\n\t\"rang;\": \"\u27E9\",\r\n\traquo: \"\u00BB\",\r\n\t\"Rarr;\": \"\u21A0\",\r\n\t\"rArr;\": \"\u21D2\",\r\n\t\"rarr;\": \"\u2192\",\r\n\t\"rcub;\": \"}\",\r\n\t\"rdca;\": \"\u2937\",\r\n\t\"rdsh;\": \"\u21B3\",\r\n\t\"real;\": \"\u211C\",\r\n\t\"rect;\": \"\u25AD\",\r\n\t\"rHar;\": \"\u2964\",\r\n\t\"rhov;\": \"\u03F1\",\r\n\t\"ring;\": \"\u02DA\",\r\n\t\"Ropf;\": \"\u211D\",\r\n\t\"ropf;\": \"\uD835\uDD63\",\r\n\t\"rpar;\": \")\",\r\n\t\"Rscr;\": \"\u211B\",\r\n\t\"rscr;\": \"\uD835\uDCC7\",\r\n\t\"rsqb;\": \"]\",\r\n\t\"rtri;\": \"\u25B9\",\r\n\t\"scap;\": \"\u2AB8\",\r\n\t\"scnE;\": \"\u2AB6\",\r\n\t\"sdot;\": \"\u22C5\",\r\n\t\"sect;\": \"\u00A7\",\r\n\t\"semi;\": \";\",\r\n\t\"sext;\": \"\u2736\",\r\n\t\"SHcy;\": \"\u0428\",\r\n\t\"shcy;\": \"\u0448\",\r\n\t\"sime;\": \"\u2243\",\r\n\t\"simg;\": \"\u2A9E\",\r\n\t\"siml;\": \"\u2A9D\",\r\n\t\"smid;\": \"\u2223\",\r\n\t\"smte;\": \"\u2AAC\",\r\n\t\"solb;\": \"\u29C4\",\r\n\t\"Sopf;\": \"\uD835\uDD4A\",\r\n\t\"sopf;\": \"\uD835\uDD64\",\r\n\t\"spar;\": \"\u2225\",\r\n\t\"Sqrt;\": \"\u221A\",\r\n\t\"squf;\": \"\u25AA\",\r\n\t\"Sscr;\": \"\uD835\uDCAE\",\r\n\t\"sscr;\": \"\uD835\uDCC8\",\r\n\t\"Star;\": \"\u22C6\",\r\n\t\"star;\": \"\u2606\",\r\n\t\"subE;\": \"\u2AC5\",\r\n\t\"sube;\": \"\u2286\",\r\n\t\"succ;\": \"\u227B\",\r\n\t\"sung;\": \"\u266A\",\r\n\t\"sup1;\": \"\u00B9\",\r\n\t\"sup2;\": \"\u00B2\",\r\n\t\"sup3;\": \"\u00B3\",\r\n\t\"supE;\": \"\u2AC6\",\r\n\t\"supe;\": \"\u2287\",\r\n\tszlig: \"\u00DF\",\r\n\t\"tbrk;\": \"\u23B4\",\r\n\t\"tdot;\": \"\u20DB\",\r\n\tTHORN: \"\u00DE\",\r\n\tthorn: \"\u00FE\",\r\n\ttimes: \"\u00D7\",\r\n\t\"tint;\": \"\u222D\",\r\n\t\"toea;\": \"\u2928\",\r\n\t\"Topf;\": \"\uD835\uDD4B\",\r\n\t\"topf;\": \"\uD835\uDD65\",\r\n\t\"tosa;\": \"\u2929\",\r\n\t\"trie;\": \"\u225C\",\r\n\t\"Tscr;\": \"\uD835\uDCAF\",\r\n\t\"tscr;\": \"\uD835\uDCC9\",\r\n\t\"TScy;\": \"\u0426\",\r\n\t\"tscy;\": \"\u0446\",\r\n\t\"Uarr;\": \"\u219F\",\r\n\t\"uArr;\": \"\u21D1\",\r\n\t\"uarr;\": \"\u2191\",\r\n\tUcirc: \"\u00DB\",\r\n\tucirc: \"\u00FB\",\r\n\t\"uHar;\": \"\u2963\",\r\n\t\"Uopf;\": \"\uD835\uDD4C\",\r\n\t\"uopf;\": \"\uD835\uDD66\",\r\n\t\"Upsi;\": \"\u03D2\",\r\n\t\"upsi;\": \"\u03C5\",\r\n\t\"Uscr;\": \"\uD835\uDCB0\",\r\n\t\"uscr;\": \"\uD835\uDCCA\",\r\n\t\"utri;\": \"\u25B5\",\r\n\t\"Uuml;\": \"\u00DC\",\r\n\t\"uuml;\": \"\u00FC\",\r\n\t\"vArr;\": \"\u21D5\",\r\n\t\"varr;\": \"\u2195\",\r\n\t\"Vbar;\": \"\u2AEB\",\r\n\t\"vBar;\": \"\u2AE8\",\r\n\t\"Vert;\": \"\u2016\",\r\n\t\"vert;\": \"|\",\r\n\t\"Vopf;\": \"\uD835\uDD4D\",\r\n\t\"vopf;\": \"\uD835\uDD67\",\r\n\t\"Vscr;\": \"\uD835\uDCB1\",\r\n\t\"vscr;\": \"\uD835\uDCCB\",\r\n\t\"Wopf;\": \"\uD835\uDD4E\",\r\n\t\"wopf;\": \"\uD835\uDD68\",\r\n\t\"Wscr;\": \"\uD835\uDCB2\",\r\n\t\"wscr;\": \"\uD835\uDCCC\",\r\n\t\"xcap;\": \"\u22C2\",\r\n\t\"xcup;\": \"\u22C3\",\r\n\t\"xmap;\": \"\u27FC\",\r\n\t\"xnis;\": \"\u22FB\",\r\n\t\"Xopf;\": \"\uD835\uDD4F\",\r\n\t\"xopf;\": \"\uD835\uDD69\",\r\n\t\"Xscr;\": \"\uD835\uDCB3\",\r\n\t\"xscr;\": \"\uD835\uDCCD\",\r\n\t\"xvee;\": \"\u22C1\",\r\n\t\"YAcy;\": \"\u042F\",\r\n\t\"yacy;\": \"\u044F\",\r\n\t\"YIcy;\": \"\u0407\",\r\n\t\"yicy;\": \"\u0457\",\r\n\t\"Yopf;\": \"\uD835\uDD50\",\r\n\t\"yopf;\": \"\uD835\uDD6A\",\r\n\t\"Yscr;\": \"\uD835\uDCB4\",\r\n\t\"yscr;\": \"\uD835\uDCCE\",\r\n\t\"YUcy;\": \"\u042E\",\r\n\t\"yucy;\": \"\u044E\",\r\n\t\"Yuml;\": \"\u0178\",\r\n\t\"yuml;\": \"\u00FF\",\r\n\t\"Zdot;\": \"\u017B\",\r\n\t\"zdot;\": \"\u017C\",\r\n\t\"Zeta;\": \"\u0396\",\r\n\t\"zeta;\": \"\u03B6\",\r\n\t\"ZHcy;\": \"\u0416\",\r\n\t\"zhcy;\": \"\u0436\",\r\n\t\"Zopf;\": \"\u2124\",\r\n\t\"zopf;\": \"\uD835\uDD6B\",\r\n\t\"Zscr;\": \"\uD835\uDCB5\",\r\n\t\"zscr;\": \"\uD835\uDCCF\",\r\n\t\"zwnj;\": \"\u200C\",\r\n\tAacute: \"\u00C1\",\r\n\taacute: \"\u00E1\",\r\n\t\"Acirc;\": \"\u00C2\",\r\n\t\"acirc;\": \"\u00E2\",\r\n\t\"acute;\": \"\u00B4\",\r\n\t\"AElig;\": \"\u00C6\",\r\n\t\"aelig;\": \"\u00E6\",\r\n\tAgrave: \"\u00C0\",\r\n\tagrave: \"\u00E0\",\r\n\t\"aleph;\": \"\u2135\",\r\n\t\"Alpha;\": \"\u0391\",\r\n\t\"alpha;\": \"\u03B1\",\r\n\t\"Amacr;\": \"\u0100\",\r\n\t\"amacr;\": \"\u0101\",\r\n\t\"amalg;\": \"\u2A3F\",\r\n\t\"angle;\": \"\u2220\",\r\n\t\"angrt;\": \"\u221F\",\r\n\t\"angst;\": \"\u00C5\",\r\n\t\"Aogon;\": \"\u0104\",\r\n\t\"aogon;\": \"\u0105\",\r\n\t\"Aring;\": \"\u00C5\",\r\n\t\"aring;\": \"\u00E5\",\r\n\t\"asymp;\": \"\u2248\",\r\n\tAtilde: \"\u00C3\",\r\n\tatilde: \"\u00E3\",\r\n\t\"awint;\": \"\u2A11\",\r\n\t\"bcong;\": \"\u224C\",\r\n\t\"bdquo;\": \"\u201E\",\r\n\t\"bepsi;\": \"\u03F6\",\r\n\t\"blank;\": \"\u2423\",\r\n\t\"blk12;\": \"\u2592\",\r\n\t\"blk14;\": \"\u2591\",\r\n\t\"blk34;\": \"\u2593\",\r\n\t\"block;\": \"\u2588\",\r\n\t\"boxDL;\": \"\u2557\",\r\n\t\"boxDl;\": \"\u2556\",\r\n\t\"boxdL;\": \"\u2555\",\r\n\t\"boxdl;\": \"\u2510\",\r\n\t\"boxDR;\": \"\u2554\",\r\n\t\"boxDr;\": \"\u2553\",\r\n\t\"boxdR;\": \"\u2552\",\r\n\t\"boxdr;\": \"\u250C\",\r\n\t\"boxHD;\": \"\u2566\",\r\n\t\"boxHd;\": \"\u2564\",\r\n\t\"boxhD;\": \"\u2565\",\r\n\t\"boxhd;\": \"\u252C\",\r\n\t\"boxHU;\": \"\u2569\",\r\n\t\"boxHu;\": \"\u2567\",\r\n\t\"boxhU;\": \"\u2568\",\r\n\t\"boxhu;\": \"\u2534\",\r\n\t\"boxUL;\": \"\u255D\",\r\n\t\"boxUl;\": \"\u255C\",\r\n\t\"boxuL;\": \"\u255B\",\r\n\t\"boxul;\": \"\u2518\",\r\n\t\"boxUR;\": \"\u255A\",\r\n\t\"boxUr;\": \"\u2559\",\r\n\t\"boxuR;\": \"\u2558\",\r\n\t\"boxur;\": \"\u2514\",\r\n\t\"boxVH;\": \"\u256C\",\r\n\t\"boxVh;\": \"\u256B\",\r\n\t\"boxvH;\": \"\u256A\",\r\n\t\"boxvh;\": \"\u253C\",\r\n\t\"boxVL;\": \"\u2563\",\r\n\t\"boxVl;\": \"\u2562\",\r\n\t\"boxvL;\": \"\u2561\",\r\n\t\"boxvl;\": \"\u2524\",\r\n\t\"boxVR;\": \"\u2560\",\r\n\t\"boxVr;\": \"\u255F\",\r\n\t\"boxvR;\": \"\u255E\",\r\n\t\"boxvr;\": \"\u251C\",\r\n\t\"Breve;\": \"\u02D8\",\r\n\t\"breve;\": \"\u02D8\",\r\n\tbrvbar: \"\u00A6\",\r\n\t\"bsemi;\": \"\u204F\",\r\n\t\"bsime;\": \"\u22CD\",\r\n\t\"bsolb;\": \"\u29C5\",\r\n\t\"bumpE;\": \"\u2AAE\",\r\n\t\"bumpe;\": \"\u224F\",\r\n\t\"caret;\": \"\u2041\",\r\n\t\"caron;\": \"\u02C7\",\r\n\t\"ccaps;\": \"\u2A4D\",\r\n\tCcedil: \"\u00C7\",\r\n\tccedil: \"\u00E7\",\r\n\t\"Ccirc;\": \"\u0108\",\r\n\t\"ccirc;\": \"\u0109\",\r\n\t\"ccups;\": \"\u2A4C\",\r\n\t\"cedil;\": \"\u00B8\",\r\n\t\"check;\": \"\u2713\",\r\n\t\"clubs;\": \"\u2663\",\r\n\t\"Colon;\": \"\u2237\",\r\n\t\"colon;\": \":\",\r\n\t\"comma;\": \",\",\r\n\t\"crarr;\": \"\u21B5\",\r\n\t\"Cross;\": \"\u2A2F\",\r\n\t\"cross;\": \"\u2717\",\r\n\t\"csube;\": \"\u2AD1\",\r\n\t\"csupe;\": \"\u2AD2\",\r\n\t\"ctdot;\": \"\u22EF\",\r\n\t\"cuepr;\": \"\u22DE\",\r\n\t\"cuesc;\": \"\u22DF\",\r\n\t\"cupor;\": \"\u2A45\",\r\n\tcurren: \"\u00A4\",\r\n\t\"cuvee;\": \"\u22CE\",\r\n\t\"cuwed;\": \"\u22CF\",\r\n\t\"cwint;\": \"\u2231\",\r\n\t\"Dashv;\": \"\u2AE4\",\r\n\t\"dashv;\": \"\u22A3\",\r\n\t\"dblac;\": \"\u02DD\",\r\n\t\"ddarr;\": \"\u21CA\",\r\n\t\"Delta;\": \"\u0394\",\r\n\t\"delta;\": \"\u03B4\",\r\n\t\"dharl;\": \"\u21C3\",\r\n\t\"dharr;\": \"\u21C2\",\r\n\t\"diams;\": \"\u2666\",\r\n\t\"disin;\": \"\u22F2\",\r\n\tdivide: \"\u00F7\",\r\n\t\"doteq;\": \"\u2250\",\r\n\t\"dtdot;\": \"\u22F1\",\r\n\t\"dtrif;\": \"\u25BE\",\r\n\t\"duarr;\": \"\u21F5\",\r\n\t\"duhar;\": \"\u296F\",\r\n\tEacute: \"\u00C9\",\r\n\teacute: \"\u00E9\",\r\n\t\"Ecirc;\": \"\u00CA\",\r\n\t\"ecirc;\": \"\u00EA\",\r\n\t\"eDDot;\": \"\u2A77\",\r\n\t\"efDot;\": \"\u2252\",\r\n\tEgrave: \"\u00C8\",\r\n\tegrave: \"\u00E8\",\r\n\t\"Emacr;\": \"\u0112\",\r\n\t\"emacr;\": \"\u0113\",\r\n\t\"empty;\": \"\u2205\",\r\n\t\"Eogon;\": \"\u0118\",\r\n\t\"eogon;\": \"\u0119\",\r\n\t\"eplus;\": \"\u2A71\",\r\n\t\"epsiv;\": \"\u03F5\",\r\n\t\"eqsim;\": \"\u2242\",\r\n\t\"Equal;\": \"\u2A75\",\r\n\t\"equiv;\": \"\u2261\",\r\n\t\"erarr;\": \"\u2971\",\r\n\t\"erDot;\": \"\u2253\",\r\n\t\"esdot;\": \"\u2250\",\r\n\t\"exist;\": \"\u2203\",\r\n\t\"fflig;\": \"\uFB00\",\r\n\t\"filig;\": \"\uFB01\",\r\n\t\"fjlig;\": \"fj\",\r\n\t\"fllig;\": \"\uFB02\",\r\n\t\"fltns;\": \"\u25B1\",\r\n\t\"forkv;\": \"\u2AD9\",\r\n\tfrac12: \"\u00BD\",\r\n\tfrac14: \"\u00BC\",\r\n\tfrac34: \"\u00BE\",\r\n\t\"frasl;\": \"\u2044\",\r\n\t\"frown;\": \"\u2322\",\r\n\t\"Gamma;\": \"\u0393\",\r\n\t\"gamma;\": \"\u03B3\",\r\n\t\"Gcirc;\": \"\u011C\",\r\n\t\"gcirc;\": \"\u011D\",\r\n\t\"gescc;\": \"\u2AA9\",\r\n\t\"gimel;\": \"\u2137\",\r\n\t\"gneqq;\": \"\u2269\",\r\n\t\"gnsim;\": \"\u22E7\",\r\n\t\"grave;\": \"`\",\r\n\t\"gsime;\": \"\u2A8E\",\r\n\t\"gsiml;\": \"\u2A90\",\r\n\t\"gtcir;\": \"\u2A7A\",\r\n\t\"gtdot;\": \"\u22D7\",\r\n\t\"Hacek;\": \"\u02C7\",\r\n\t\"harrw;\": \"\u21AD\",\r\n\t\"Hcirc;\": \"\u0124\",\r\n\t\"hcirc;\": \"\u0125\",\r\n\t\"hoarr;\": \"\u21FF\",\r\n\tIacute: \"\u00CD\",\r\n\tiacute: \"\u00ED\",\r\n\t\"Icirc;\": \"\u00CE\",\r\n\t\"icirc;\": \"\u00EE\",\r\n\t\"iexcl;\": \"\u00A1\",\r\n\tIgrave: \"\u00CC\",\r\n\tigrave: \"\u00EC\",\r\n\t\"iiint;\": \"\u222D\",\r\n\t\"iiota;\": \"\u2129\",\r\n\t\"IJlig;\": \"\u0132\",\r\n\t\"ijlig;\": \"\u0133\",\r\n\t\"Imacr;\": \"\u012A\",\r\n\t\"imacr;\": \"\u012B\",\r\n\t\"image;\": \"\u2111\",\r\n\t\"imath;\": \"\u0131\",\r\n\t\"imped;\": \"\u01B5\",\r\n\t\"infin;\": \"\u221E\",\r\n\t\"Iogon;\": \"\u012E\",\r\n\t\"iogon;\": \"\u012F\",\r\n\t\"iprod;\": \"\u2A3C\",\r\n\tiquest: \"\u00BF\",\r\n\t\"isinE;\": \"\u22F9\",\r\n\t\"isins;\": \"\u22F4\",\r\n\t\"isinv;\": \"\u2208\",\r\n\t\"Iukcy;\": \"\u0406\",\r\n\t\"iukcy;\": \"\u0456\",\r\n\t\"Jcirc;\": \"\u0134\",\r\n\t\"jcirc;\": \"\u0135\",\r\n\t\"jmath;\": \"\u0237\",\r\n\t\"Jukcy;\": \"\u0404\",\r\n\t\"jukcy;\": \"\u0454\",\r\n\t\"Kappa;\": \"\u039A\",\r\n\t\"kappa;\": \"\u03BA\",\r\n\t\"lAarr;\": \"\u21DA\",\r\n\t\"langd;\": \"\u2991\",\r\n\t\"laquo;\": \"\u00AB\",\r\n\t\"larrb;\": \"\u21E4\",\r\n\t\"lates;\": \"\u2AAD\uFE00\",\r\n\t\"lBarr;\": \"\u290E\",\r\n\t\"lbarr;\": \"\u290C\",\r\n\t\"lbbrk;\": \"\u2772\",\r\n\t\"lbrke;\": \"\u298B\",\r\n\t\"lceil;\": \"\u2308\",\r\n\t\"ldquo;\": \"\u201C\",\r\n\t\"lescc;\": \"\u2AA8\",\r\n\t\"lhard;\": \"\u21BD\",\r\n\t\"lharu;\": \"\u21BC\",\r\n\t\"lhblk;\": \"\u2584\",\r\n\t\"llarr;\": \"\u21C7\",\r\n\t\"lltri;\": \"\u25FA\",\r\n\t\"lneqq;\": \"\u2268\",\r\n\t\"lnsim;\": \"\u22E6\",\r\n\t\"loang;\": \"\u27EC\",\r\n\t\"loarr;\": \"\u21FD\",\r\n\t\"lobrk;\": \"\u27E6\",\r\n\t\"lopar;\": \"\u2985\",\r\n\t\"lrarr;\": \"\u21C6\",\r\n\t\"lrhar;\": \"\u21CB\",\r\n\t\"lrtri;\": \"\u22BF\",\r\n\t\"lsime;\": \"\u2A8D\",\r\n\t\"lsimg;\": \"\u2A8F\",\r\n\t\"lsquo;\": \"\u2018\",\r\n\t\"ltcir;\": \"\u2A79\",\r\n\t\"ltdot;\": \"\u22D6\",\r\n\t\"ltrie;\": \"\u22B4\",\r\n\t\"ltrif;\": \"\u25C2\",\r\n\t\"mdash;\": \"\u2014\",\r\n\t\"mDDot;\": \"\u223A\",\r\n\t\"micro;\": \"\u00B5\",\r\n\tmiddot: \"\u00B7\",\r\n\t\"minus;\": \"\u2212\",\r\n\t\"mumap;\": \"\u22B8\",\r\n\t\"nabla;\": \"\u2207\",\r\n\t\"napid;\": \"\u224B\u0338\",\r\n\t\"napos;\": \"\u0149\",\r\n\t\"natur;\": \"\u266E\",\r\n\t\"nbump;\": \"\u224E\u0338\",\r\n\t\"ncong;\": \"\u2247\",\r\n\t\"ndash;\": \"\u2013\",\r\n\t\"neArr;\": \"\u21D7\",\r\n\t\"nearr;\": \"\u2197\",\r\n\t\"nedot;\": \"\u2250\u0338\",\r\n\t\"nesim;\": \"\u2242\u0338\",\r\n\t\"ngeqq;\": \"\u2267\u0338\",\r\n\t\"ngsim;\": \"\u2275\",\r\n\t\"nhArr;\": \"\u21CE\",\r\n\t\"nharr;\": \"\u21AE\",\r\n\t\"nhpar;\": \"\u2AF2\",\r\n\t\"nlArr;\": \"\u21CD\",\r\n\t\"nlarr;\": \"\u219A\",\r\n\t\"nleqq;\": \"\u2266\u0338\",\r\n\t\"nless;\": \"\u226E\",\r\n\t\"nlsim;\": \"\u2274\",\r\n\t\"nltri;\": \"\u22EA\",\r\n\t\"notin;\": \"\u2209\",\r\n\t\"notni;\": \"\u220C\",\r\n\t\"npart;\": \"\u2202\u0338\",\r\n\t\"nprec;\": \"\u2280\",\r\n\t\"nrArr;\": \"\u21CF\",\r\n\t\"nrarr;\": \"\u219B\",\r\n\t\"nrtri;\": \"\u22EB\",\r\n\t\"nsime;\": \"\u2244\",\r\n\t\"nsmid;\": \"\u2224\",\r\n\t\"nspar;\": \"\u2226\",\r\n\t\"nsubE;\": \"\u2AC5\u0338\",\r\n\t\"nsube;\": \"\u2288\",\r\n\t\"nsucc;\": \"\u2281\",\r\n\t\"nsupE;\": \"\u2AC6\u0338\",\r\n\t\"nsupe;\": \"\u2289\",\r\n\tNtilde: \"\u00D1\",\r\n\tntilde: \"\u00F1\",\r\n\t\"numsp;\": \"\u2007\",\r\n\t\"nvsim;\": \"\u223C\u20D2\",\r\n\t\"nwArr;\": \"\u21D6\",\r\n\t\"nwarr;\": \"\u2196\",\r\n\tOacute: \"\u00D3\",\r\n\toacute: \"\u00F3\",\r\n\t\"Ocirc;\": \"\u00D4\",\r\n\t\"ocirc;\": \"\u00F4\",\r\n\t\"odash;\": \"\u229D\",\r\n\t\"OElig;\": \"\u0152\",\r\n\t\"oelig;\": \"\u0153\",\r\n\t\"ofcir;\": \"\u29BF\",\r\n\tOgrave: \"\u00D2\",\r\n\tograve: \"\u00F2\",\r\n\t\"ohbar;\": \"\u29B5\",\r\n\t\"olarr;\": \"\u21BA\",\r\n\t\"olcir;\": \"\u29BE\",\r\n\t\"oline;\": \"\u203E\",\r\n\t\"Omacr;\": \"\u014C\",\r\n\t\"omacr;\": \"\u014D\",\r\n\t\"Omega;\": \"\u03A9\",\r\n\t\"omega;\": \"\u03C9\",\r\n\t\"operp;\": \"\u29B9\",\r\n\t\"oplus;\": \"\u2295\",\r\n\t\"orarr;\": \"\u21BB\",\r\n\t\"order;\": \"\u2134\",\r\n\tOslash: \"\u00D8\",\r\n\toslash: \"\u00F8\",\r\n\tOtilde: \"\u00D5\",\r\n\totilde: \"\u00F5\",\r\n\t\"ovbar;\": \"\u233D\",\r\n\t\"parsl;\": \"\u2AFD\",\r\n\t\"phone;\": \"\u260E\",\r\n\t\"plusb;\": \"\u229E\",\r\n\t\"pluse;\": \"\u2A72\",\r\n\tplusmn: \"\u00B1\",\r\n\t\"pound;\": \"\u00A3\",\r\n\t\"prcue;\": \"\u227C\",\r\n\t\"Prime;\": \"\u2033\",\r\n\t\"prime;\": \"\u2032\",\r\n\t\"prnap;\": \"\u2AB9\",\r\n\t\"prsim;\": \"\u227E\",\r\n\t\"quest;\": \"?\",\r\n\t\"rAarr;\": \"\u21DB\",\r\n\t\"radic;\": \"\u221A\",\r\n\t\"rangd;\": \"\u2992\",\r\n\t\"range;\": \"\u29A5\",\r\n\t\"raquo;\": \"\u00BB\",\r\n\t\"rarrb;\": \"\u21E5\",\r\n\t\"rarrc;\": \"\u2933\",\r\n\t\"rarrw;\": \"\u219D\",\r\n\t\"ratio;\": \"\u2236\",\r\n\t\"RBarr;\": \"\u2910\",\r\n\t\"rBarr;\": \"\u290F\",\r\n\t\"rbarr;\": \"\u290D\",\r\n\t\"rbbrk;\": \"\u2773\",\r\n\t\"rbrke;\": \"\u298C\",\r\n\t\"rceil;\": \"\u2309\",\r\n\t\"rdquo;\": \"\u201D\",\r\n\t\"reals;\": \"\u211D\",\r\n\t\"rhard;\": \"\u21C1\",\r\n\t\"rharu;\": \"\u21C0\",\r\n\t\"rlarr;\": \"\u21C4\",\r\n\t\"rlhar;\": \"\u21CC\",\r\n\t\"rnmid;\": \"\u2AEE\",\r\n\t\"roang;\": \"\u27ED\",\r\n\t\"roarr;\": \"\u21FE\",\r\n\t\"robrk;\": \"\u27E7\",\r\n\t\"ropar;\": \"\u2986\",\r\n\t\"rrarr;\": \"\u21C9\",\r\n\t\"rsquo;\": \"\u2019\",\r\n\t\"rtrie;\": \"\u22B5\",\r\n\t\"rtrif;\": \"\u25B8\",\r\n\t\"sbquo;\": \"\u201A\",\r\n\t\"sccue;\": \"\u227D\",\r\n\t\"Scirc;\": \"\u015C\",\r\n\t\"scirc;\": \"\u015D\",\r\n\t\"scnap;\": \"\u2ABA\",\r\n\t\"scsim;\": \"\u227F\",\r\n\t\"sdotb;\": \"\u22A1\",\r\n\t\"sdote;\": \"\u2A66\",\r\n\t\"seArr;\": \"\u21D8\",\r\n\t\"searr;\": \"\u2198\",\r\n\t\"setmn;\": \"\u2216\",\r\n\t\"sharp;\": \"\u266F\",\r\n\t\"Sigma;\": \"\u03A3\",\r\n\t\"sigma;\": \"\u03C3\",\r\n\t\"simeq;\": \"\u2243\",\r\n\t\"simgE;\": \"\u2AA0\",\r\n\t\"simlE;\": \"\u2A9F\",\r\n\t\"simne;\": \"\u2246\",\r\n\t\"slarr;\": \"\u2190\",\r\n\t\"smile;\": \"\u2323\",\r\n\t\"smtes;\": \"\u2AAC\uFE00\",\r\n\t\"sqcap;\": \"\u2293\",\r\n\t\"sqcup;\": \"\u2294\",\r\n\t\"sqsub;\": \"\u228F\",\r\n\t\"sqsup;\": \"\u2290\",\r\n\t\"srarr;\": \"\u2192\",\r\n\t\"starf;\": \"\u2605\",\r\n\t\"strns;\": \"\u00AF\",\r\n\t\"subnE;\": \"\u2ACB\",\r\n\t\"subne;\": \"\u228A\",\r\n\t\"supnE;\": \"\u2ACC\",\r\n\t\"supne;\": \"\u228B\",\r\n\t\"swArr;\": \"\u21D9\",\r\n\t\"swarr;\": \"\u2199\",\r\n\t\"szlig;\": \"\u00DF\",\r\n\t\"Theta;\": \"\u0398\",\r\n\t\"theta;\": \"\u03B8\",\r\n\t\"thkap;\": \"\u2248\",\r\n\t\"THORN;\": \"\u00DE\",\r\n\t\"thorn;\": \"\u00FE\",\r\n\t\"Tilde;\": \"\u223C\",\r\n\t\"tilde;\": \"\u02DC\",\r\n\t\"times;\": \"\u00D7\",\r\n\t\"TRADE;\": \"\u2122\",\r\n\t\"trade;\": \"\u2122\",\r\n\t\"trisb;\": \"\u29CD\",\r\n\t\"TSHcy;\": \"\u040B\",\r\n\t\"tshcy;\": \"\u045B\",\r\n\t\"twixt;\": \"\u226C\",\r\n\tUacute: \"\u00DA\",\r\n\tuacute: \"\u00FA\",\r\n\t\"Ubrcy;\": \"\u040E\",\r\n\t\"ubrcy;\": \"\u045E\",\r\n\t\"Ucirc;\": \"\u00DB\",\r\n\t\"ucirc;\": \"\u00FB\",\r\n\t\"udarr;\": \"\u21C5\",\r\n\t\"udhar;\": \"\u296E\",\r\n\tUgrave: \"\u00D9\",\r\n\tugrave: \"\u00F9\",\r\n\t\"uharl;\": \"\u21BF\",\r\n\t\"uharr;\": \"\u21BE\",\r\n\t\"uhblk;\": \"\u2580\",\r\n\t\"ultri;\": \"\u25F8\",\r\n\t\"Umacr;\": \"\u016A\",\r\n\t\"umacr;\": \"\u016B\",\r\n\t\"Union;\": \"\u22C3\",\r\n\t\"Uogon;\": \"\u0172\",\r\n\t\"uogon;\": \"\u0173\",\r\n\t\"uplus;\": \"\u228E\",\r\n\t\"upsih;\": \"\u03D2\",\r\n\t\"UpTee;\": \"\u22A5\",\r\n\t\"Uring;\": \"\u016E\",\r\n\t\"uring;\": \"\u016F\",\r\n\t\"urtri;\": \"\u25F9\",\r\n\t\"utdot;\": \"\u22F0\",\r\n\t\"utrif;\": \"\u25B4\",\r\n\t\"uuarr;\": \"\u21C8\",\r\n\t\"varpi;\": \"\u03D6\",\r\n\t\"vBarv;\": \"\u2AE9\",\r\n\t\"VDash;\": \"\u22AB\",\r\n\t\"Vdash;\": \"\u22A9\",\r\n\t\"vDash;\": \"\u22A8\",\r\n\t\"vdash;\": \"\u22A2\",\r\n\t\"veeeq;\": \"\u225A\",\r\n\t\"vltri;\": \"\u22B2\",\r\n\t\"vnsub;\": \"\u2282\u20D2\",\r\n\t\"vnsup;\": \"\u2283\u20D2\",\r\n\t\"vprop;\": \"\u221D\",\r\n\t\"vrtri;\": \"\u22B3\",\r\n\t\"Wcirc;\": \"\u0174\",\r\n\t\"wcirc;\": \"\u0175\",\r\n\t\"Wedge;\": \"\u22C0\",\r\n\t\"wedge;\": \"\u2227\",\r\n\t\"xcirc;\": \"\u25EF\",\r\n\t\"xdtri;\": \"\u25BD\",\r\n\t\"xhArr;\": \"\u27FA\",\r\n\t\"xharr;\": \"\u27F7\",\r\n\t\"xlArr;\": \"\u27F8\",\r\n\t\"xlarr;\": \"\u27F5\",\r\n\t\"xodot;\": \"\u2A00\",\r\n\t\"xrArr;\": \"\u27F9\",\r\n\t\"xrarr;\": \"\u27F6\",\r\n\t\"xutri;\": \"\u25B3\",\r\n\tYacute: \"\u00DD\",\r\n\tyacute: \"\u00FD\",\r\n\t\"Ycirc;\": \"\u0176\",\r\n\t\"ycirc;\": \"\u0177\",\r\n\t\"Aacute;\": \"\u00C1\",\r\n\t\"aacute;\": \"\u00E1\",\r\n\t\"Abreve;\": \"\u0102\",\r\n\t\"abreve;\": \"\u0103\",\r\n\t\"Agrave;\": \"\u00C0\",\r\n\t\"agrave;\": \"\u00E0\",\r\n\t\"andand;\": \"\u2A55\",\r\n\t\"angmsd;\": \"\u2221\",\r\n\t\"angsph;\": \"\u2222\",\r\n\t\"apacir;\": \"\u2A6F\",\r\n\t\"approx;\": \"\u2248\",\r\n\t\"Assign;\": \"\u2254\",\r\n\t\"Atilde;\": \"\u00C3\",\r\n\t\"atilde;\": \"\u00E3\",\r\n\t\"barvee;\": \"\u22BD\",\r\n\t\"Barwed;\": \"\u2306\",\r\n\t\"barwed;\": \"\u2305\",\r\n\t\"becaus;\": \"\u2235\",\r\n\t\"bernou;\": \"\u212C\",\r\n\t\"bigcap;\": \"\u22C2\",\r\n\t\"bigcup;\": \"\u22C3\",\r\n\t\"bigvee;\": \"\u22C1\",\r\n\t\"bkarow;\": \"\u290D\",\r\n\t\"bottom;\": \"\u22A5\",\r\n\t\"bowtie;\": \"\u22C8\",\r\n\t\"boxbox;\": \"\u29C9\",\r\n\t\"bprime;\": \"\u2035\",\r\n\t\"brvbar;\": \"\u00A6\",\r\n\t\"bullet;\": \"\u2022\",\r\n\t\"Bumpeq;\": \"\u224E\",\r\n\t\"bumpeq;\": \"\u224F\",\r\n\t\"Cacute;\": \"\u0106\",\r\n\t\"cacute;\": \"\u0107\",\r\n\t\"capand;\": \"\u2A44\",\r\n\t\"capcap;\": \"\u2A4B\",\r\n\t\"capcup;\": \"\u2A47\",\r\n\t\"capdot;\": \"\u2A40\",\r\n\t\"Ccaron;\": \"\u010C\",\r\n\t\"ccaron;\": \"\u010D\",\r\n\t\"Ccedil;\": \"\u00C7\",\r\n\t\"ccedil;\": \"\u00E7\",\r\n\t\"circeq;\": \"\u2257\",\r\n\t\"cirmid;\": \"\u2AEF\",\r\n\t\"Colone;\": \"\u2A74\",\r\n\t\"colone;\": \"\u2254\",\r\n\t\"commat;\": \"@\",\r\n\t\"compfn;\": \"\u2218\",\r\n\t\"Conint;\": \"\u222F\",\r\n\t\"conint;\": \"\u222E\",\r\n\t\"coprod;\": \"\u2210\",\r\n\t\"copysr;\": \"\u2117\",\r\n\t\"cularr;\": \"\u21B6\",\r\n\t\"CupCap;\": \"\u224D\",\r\n\t\"cupcap;\": \"\u2A46\",\r\n\t\"cupcup;\": \"\u2A4A\",\r\n\t\"cupdot;\": \"\u228D\",\r\n\t\"curarr;\": \"\u21B7\",\r\n\t\"curren;\": \"\u00A4\",\r\n\t\"cylcty;\": \"\u232D\",\r\n\t\"Dagger;\": \"\u2021\",\r\n\t\"dagger;\": \"\u2020\",\r\n\t\"daleth;\": \"\u2138\",\r\n\t\"Dcaron;\": \"\u010E\",\r\n\t\"dcaron;\": \"\u010F\",\r\n\t\"dfisht;\": \"\u297F\",\r\n\t\"divide;\": \"\u00F7\",\r\n\t\"divonx;\": \"\u22C7\",\r\n\t\"dlcorn;\": \"\u231E\",\r\n\t\"dlcrop;\": \"\u230D\",\r\n\t\"dollar;\": \"$\",\r\n\t\"DotDot;\": \"\u20DC\",\r\n\t\"drcorn;\": \"\u231F\",\r\n\t\"drcrop;\": \"\u230C\",\r\n\t\"Dstrok;\": \"\u0110\",\r\n\t\"dstrok;\": \"\u0111\",\r\n\t\"Eacute;\": \"\u00C9\",\r\n\t\"eacute;\": \"\u00E9\",\r\n\t\"easter;\": \"\u2A6E\",\r\n\t\"Ecaron;\": \"\u011A\",\r\n\t\"ecaron;\": \"\u011B\",\r\n\t\"ecolon;\": \"\u2255\",\r\n\t\"Egrave;\": \"\u00C8\",\r\n\t\"egrave;\": \"\u00E8\",\r\n\t\"egsdot;\": \"\u2A98\",\r\n\t\"elsdot;\": \"\u2A97\",\r\n\t\"emptyv;\": \"\u2205\",\r\n\t\"emsp13;\": \"\u2004\",\r\n\t\"emsp14;\": \"\u2005\",\r\n\t\"eparsl;\": \"\u29E3\",\r\n\t\"eqcirc;\": \"\u2256\",\r\n\t\"equals;\": \"=\",\r\n\t\"equest;\": \"\u225F\",\r\n\t\"Exists;\": \"\u2203\",\r\n\t\"female;\": \"\u2640\",\r\n\t\"ffilig;\": \"\uFB03\",\r\n\t\"ffllig;\": \"\uFB04\",\r\n\t\"ForAll;\": \"\u2200\",\r\n\t\"forall;\": \"\u2200\",\r\n\t\"frac12;\": \"\u00BD\",\r\n\t\"frac13;\": \"\u2153\",\r\n\t\"frac14;\": \"\u00BC\",\r\n\t\"frac15;\": \"\u2155\",\r\n\t\"frac16;\": \"\u2159\",\r\n\t\"frac18;\": \"\u215B\",\r\n\t\"frac23;\": \"\u2154\",\r\n\t\"frac25;\": \"\u2156\",\r\n\t\"frac34;\": \"\u00BE\",\r\n\t\"frac35;\": \"\u2157\",\r\n\t\"frac38;\": \"\u215C\",\r\n\t\"frac45;\": \"\u2158\",\r\n\t\"frac56;\": \"\u215A\",\r\n\t\"frac58;\": \"\u215D\",\r\n\t\"frac78;\": \"\u215E\",\r\n\t\"gacute;\": \"\u01F5\",\r\n\t\"Gammad;\": \"\u03DC\",\r\n\t\"gammad;\": \"\u03DD\",\r\n\t\"Gbreve;\": \"\u011E\",\r\n\t\"gbreve;\": \"\u011F\",\r\n\t\"Gcedil;\": \"\u0122\",\r\n\t\"gesdot;\": \"\u2A80\",\r\n\t\"gesles;\": \"\u2A94\",\r\n\t\"gtlPar;\": \"\u2995\",\r\n\t\"gtrarr;\": \"\u2978\",\r\n\t\"gtrdot;\": \"\u22D7\",\r\n\t\"gtrsim;\": \"\u2273\",\r\n\t\"hairsp;\": \"\u200A\",\r\n\t\"hamilt;\": \"\u210B\",\r\n\t\"HARDcy;\": \"\u042A\",\r\n\t\"hardcy;\": \"\u044A\",\r\n\t\"hearts;\": \"\u2665\",\r\n\t\"hellip;\": \"\u2026\",\r\n\t\"hercon;\": \"\u22B9\",\r\n\t\"homtht;\": \"\u223B\",\r\n\t\"horbar;\": \"\u2015\",\r\n\t\"hslash;\": \"\u210F\",\r\n\t\"Hstrok;\": \"\u0126\",\r\n\t\"hstrok;\": \"\u0127\",\r\n\t\"hybull;\": \"\u2043\",\r\n\t\"hyphen;\": \"\u2010\",\r\n\t\"Iacute;\": \"\u00CD\",\r\n\t\"iacute;\": \"\u00ED\",\r\n\t\"Igrave;\": \"\u00CC\",\r\n\t\"igrave;\": \"\u00EC\",\r\n\t\"iiiint;\": \"\u2A0C\",\r\n\t\"iinfin;\": \"\u29DC\",\r\n\t\"incare;\": \"\u2105\",\r\n\t\"inodot;\": \"\u0131\",\r\n\t\"intcal;\": \"\u22BA\",\r\n\t\"iquest;\": \"\u00BF\",\r\n\t\"isinsv;\": \"\u22F3\",\r\n\t\"Itilde;\": \"\u0128\",\r\n\t\"itilde;\": \"\u0129\",\r\n\t\"Jsercy;\": \"\u0408\",\r\n\t\"jsercy;\": \"\u0458\",\r\n\t\"kappav;\": \"\u03F0\",\r\n\t\"Kcedil;\": \"\u0136\",\r\n\t\"kcedil;\": \"\u0137\",\r\n\t\"kgreen;\": \"\u0138\",\r\n\t\"Lacute;\": \"\u0139\",\r\n\t\"lacute;\": \"\u013A\",\r\n\t\"lagran;\": \"\u2112\",\r\n\t\"Lambda;\": \"\u039B\",\r\n\t\"lambda;\": \"\u03BB\",\r\n\t\"langle;\": \"\u27E8\",\r\n\t\"larrfs;\": \"\u291D\",\r\n\t\"larrhk;\": \"\u21A9\",\r\n\t\"larrlp;\": \"\u21AB\",\r\n\t\"larrpl;\": \"\u2939\",\r\n\t\"larrtl;\": \"\u21A2\",\r\n\t\"lAtail;\": \"\u291B\",\r\n\t\"latail;\": \"\u2919\",\r\n\t\"lbrace;\": \"{\",\r\n\t\"lbrack;\": \"[\",\r\n\t\"Lcaron;\": \"\u013D\",\r\n\t\"lcaron;\": \"\u013E\",\r\n\t\"Lcedil;\": \"\u013B\",\r\n\t\"lcedil;\": \"\u013C\",\r\n\t\"ldquor;\": \"\u201E\",\r\n\t\"lesdot;\": \"\u2A7F\",\r\n\t\"lesges;\": \"\u2A93\",\r\n\t\"lfisht;\": \"\u297C\",\r\n\t\"lfloor;\": \"\u230A\",\r\n\t\"lharul;\": \"\u296A\",\r\n\t\"llhard;\": \"\u296B\",\r\n\t\"Lmidot;\": \"\u013F\",\r\n\t\"lmidot;\": \"\u0140\",\r\n\t\"lmoust;\": \"\u23B0\",\r\n\t\"loplus;\": \"\u2A2D\",\r\n\t\"lowast;\": \"\u2217\",\r\n\t\"lowbar;\": \"_\",\r\n\t\"lparlt;\": \"\u2993\",\r\n\t\"lrhard;\": \"\u296D\",\r\n\t\"lsaquo;\": \"\u2039\",\r\n\t\"lsquor;\": \"\u201A\",\r\n\t\"Lstrok;\": \"\u0141\",\r\n\t\"lstrok;\": \"\u0142\",\r\n\t\"lthree;\": \"\u22CB\",\r\n\t\"ltimes;\": \"\u22C9\",\r\n\t\"ltlarr;\": \"\u2976\",\r\n\t\"ltrPar;\": \"\u2996\",\r\n\t\"mapsto;\": \"\u21A6\",\r\n\t\"marker;\": \"\u25AE\",\r\n\t\"mcomma;\": \"\u2A29\",\r\n\t\"midast;\": \"*\",\r\n\t\"midcir;\": \"\u2AF0\",\r\n\t\"middot;\": \"\u00B7\",\r\n\t\"minusb;\": \"\u229F\",\r\n\t\"minusd;\": \"\u2238\",\r\n\t\"mnplus;\": \"\u2213\",\r\n\t\"models;\": \"\u22A7\",\r\n\t\"mstpos;\": \"\u223E\",\r\n\t\"Nacute;\": \"\u0143\",\r\n\t\"nacute;\": \"\u0144\",\r\n\t\"nbumpe;\": \"\u224F\u0338\",\r\n\t\"Ncaron;\": \"\u0147\",\r\n\t\"ncaron;\": \"\u0148\",\r\n\t\"Ncedil;\": \"\u0145\",\r\n\t\"ncedil;\": \"\u0146\",\r\n\t\"nearhk;\": \"\u2924\",\r\n\t\"nequiv;\": \"\u2262\",\r\n\t\"nesear;\": \"\u2928\",\r\n\t\"nexist;\": \"\u2204\",\r\n\t\"nltrie;\": \"\u22EC\",\r\n\t\"notinE;\": \"\u22F9\u0338\",\r\n\t\"nparsl;\": \"\u2AFD\u20E5\",\r\n\t\"nprcue;\": \"\u22E0\",\r\n\t\"nrarrc;\": \"\u2933\u0338\",\r\n\t\"nrarrw;\": \"\u219D\u0338\",\r\n\t\"nrtrie;\": \"\u22ED\",\r\n\t\"nsccue;\": \"\u22E1\",\r\n\t\"nsimeq;\": \"\u2244\",\r\n\t\"Ntilde;\": \"\u00D1\",\r\n\t\"ntilde;\": \"\u00F1\",\r\n\t\"numero;\": \"\u2116\",\r\n\t\"nVDash;\": \"\u22AF\",\r\n\t\"nVdash;\": \"\u22AE\",\r\n\t\"nvDash;\": \"\u22AD\",\r\n\t\"nvdash;\": \"\u22AC\",\r\n\t\"nvHarr;\": \"\u2904\",\r\n\t\"nvlArr;\": \"\u2902\",\r\n\t\"nvrArr;\": \"\u2903\",\r\n\t\"nwarhk;\": \"\u2923\",\r\n\t\"nwnear;\": \"\u2927\",\r\n\t\"Oacute;\": \"\u00D3\",\r\n\t\"oacute;\": \"\u00F3\",\r\n\t\"Odblac;\": \"\u0150\",\r\n\t\"odblac;\": \"\u0151\",\r\n\t\"odsold;\": \"\u29BC\",\r\n\t\"Ograve;\": \"\u00D2\",\r\n\t\"ograve;\": \"\u00F2\",\r\n\t\"ominus;\": \"\u2296\",\r\n\t\"origof;\": \"\u22B6\",\r\n\t\"Oslash;\": \"\u00D8\",\r\n\t\"oslash;\": \"\u00F8\",\r\n\t\"Otilde;\": \"\u00D5\",\r\n\t\"otilde;\": \"\u00F5\",\r\n\t\"Otimes;\": \"\u2A37\",\r\n\t\"otimes;\": \"\u2297\",\r\n\t\"parsim;\": \"\u2AF3\",\r\n\t\"percnt;\": \"%\",\r\n\t\"period;\": \".\",\r\n\t\"permil;\": \"\u2030\",\r\n\t\"phmmat;\": \"\u2133\",\r\n\t\"planck;\": \"\u210F\",\r\n\t\"plankv;\": \"\u210F\",\r\n\t\"plusdo;\": \"\u2214\",\r\n\t\"plusdu;\": \"\u2A25\",\r\n\t\"plusmn;\": \"\u00B1\",\r\n\t\"preceq;\": \"\u2AAF\",\r\n\t\"primes;\": \"\u2119\",\r\n\t\"prnsim;\": \"\u22E8\",\r\n\t\"propto;\": \"\u221D\",\r\n\t\"prurel;\": \"\u22B0\",\r\n\t\"puncsp;\": \"\u2008\",\r\n\t\"qprime;\": \"\u2057\",\r\n\t\"Racute;\": \"\u0154\",\r\n\t\"racute;\": \"\u0155\",\r\n\t\"rangle;\": \"\u27E9\",\r\n\t\"rarrap;\": \"\u2975\",\r\n\t\"rarrfs;\": \"\u291E\",\r\n\t\"rarrhk;\": \"\u21AA\",\r\n\t\"rarrlp;\": \"\u21AC\",\r\n\t\"rarrpl;\": \"\u2945\",\r\n\t\"Rarrtl;\": \"\u2916\",\r\n\t\"rarrtl;\": \"\u21A3\",\r\n\t\"rAtail;\": \"\u291C\",\r\n\t\"ratail;\": \"\u291A\",\r\n\t\"rbrace;\": \"}\",\r\n\t\"rbrack;\": \"]\",\r\n\t\"Rcaron;\": \"\u0158\",\r\n\t\"rcaron;\": \"\u0159\",\r\n\t\"Rcedil;\": \"\u0156\",\r\n\t\"rcedil;\": \"\u0157\",\r\n\t\"rdquor;\": \"\u201D\",\r\n\t\"rfisht;\": \"\u297D\",\r\n\t\"rfloor;\": \"\u230B\",\r\n\t\"rharul;\": \"\u296C\",\r\n\t\"rmoust;\": \"\u23B1\",\r\n\t\"roplus;\": \"\u2A2E\",\r\n\t\"rpargt;\": \"\u2994\",\r\n\t\"rsaquo;\": \"\u203A\",\r\n\t\"rsquor;\": \"\u2019\",\r\n\t\"rthree;\": \"\u22CC\",\r\n\t\"rtimes;\": \"\u22CA\",\r\n\t\"Sacute;\": \"\u015A\",\r\n\t\"sacute;\": \"\u015B\",\r\n\t\"Scaron;\": \"\u0160\",\r\n\t\"scaron;\": \"\u0161\",\r\n\t\"Scedil;\": \"\u015E\",\r\n\t\"scedil;\": \"\u015F\",\r\n\t\"scnsim;\": \"\u22E9\",\r\n\t\"searhk;\": \"\u2925\",\r\n\t\"seswar;\": \"\u2929\",\r\n\t\"sfrown;\": \"\u2322\",\r\n\t\"SHCHcy;\": \"\u0429\",\r\n\t\"shchcy;\": \"\u0449\",\r\n\t\"sigmaf;\": \"\u03C2\",\r\n\t\"sigmav;\": \"\u03C2\",\r\n\t\"simdot;\": \"\u2A6A\",\r\n\t\"smashp;\": \"\u2A33\",\r\n\t\"SOFTcy;\": \"\u042C\",\r\n\t\"softcy;\": \"\u044C\",\r\n\t\"solbar;\": \"\u233F\",\r\n\t\"spades;\": \"\u2660\",\r\n\t\"sqcaps;\": \"\u2293\uFE00\",\r\n\t\"sqcups;\": \"\u2294\uFE00\",\r\n\t\"sqsube;\": \"\u2291\",\r\n\t\"sqsupe;\": \"\u2292\",\r\n\t\"Square;\": \"\u25A1\",\r\n\t\"square;\": \"\u25A1\",\r\n\t\"squarf;\": \"\u25AA\",\r\n\t\"ssetmn;\": \"\u2216\",\r\n\t\"ssmile;\": \"\u2323\",\r\n\t\"sstarf;\": \"\u22C6\",\r\n\t\"subdot;\": \"\u2ABD\",\r\n\t\"Subset;\": \"\u22D0\",\r\n\t\"subset;\": \"\u2282\",\r\n\t\"subsim;\": \"\u2AC7\",\r\n\t\"subsub;\": \"\u2AD5\",\r\n\t\"subsup;\": \"\u2AD3\",\r\n\t\"succeq;\": \"\u2AB0\",\r\n\t\"supdot;\": \"\u2ABE\",\r\n\t\"Supset;\": \"\u22D1\",\r\n\t\"supset;\": \"\u2283\",\r\n\t\"supsim;\": \"\u2AC8\",\r\n\t\"supsub;\": \"\u2AD4\",\r\n\t\"supsup;\": \"\u2AD6\",\r\n\t\"swarhk;\": \"\u2926\",\r\n\t\"swnwar;\": \"\u292A\",\r\n\t\"target;\": \"\u2316\",\r\n\t\"Tcaron;\": \"\u0164\",\r\n\t\"tcaron;\": \"\u0165\",\r\n\t\"Tcedil;\": \"\u0162\",\r\n\t\"tcedil;\": \"\u0163\",\r\n\t\"telrec;\": \"\u2315\",\r\n\t\"there4;\": \"\u2234\",\r\n\t\"thetav;\": \"\u03D1\",\r\n\t\"thinsp;\": \"\u2009\",\r\n\t\"thksim;\": \"\u223C\",\r\n\t\"timesb;\": \"\u22A0\",\r\n\t\"timesd;\": \"\u2A30\",\r\n\t\"topbot;\": \"\u2336\",\r\n\t\"topcir;\": \"\u2AF1\",\r\n\t\"tprime;\": \"\u2034\",\r\n\t\"tridot;\": \"\u25EC\",\r\n\t\"Tstrok;\": \"\u0166\",\r\n\t\"tstrok;\": \"\u0167\",\r\n\t\"Uacute;\": \"\u00DA\",\r\n\t\"uacute;\": \"\u00FA\",\r\n\t\"Ubreve;\": \"\u016C\",\r\n\t\"ubreve;\": \"\u016D\",\r\n\t\"Udblac;\": \"\u0170\",\r\n\t\"udblac;\": \"\u0171\",\r\n\t\"ufisht;\": \"\u297E\",\r\n\t\"Ugrave;\": \"\u00D9\",\r\n\t\"ugrave;\": \"\u00F9\",\r\n\t\"ulcorn;\": \"\u231C\",\r\n\t\"ulcrop;\": \"\u230F\",\r\n\t\"urcorn;\": \"\u231D\",\r\n\t\"urcrop;\": \"\u230E\",\r\n\t\"Utilde;\": \"\u0168\",\r\n\t\"utilde;\": \"\u0169\",\r\n\t\"vangrt;\": \"\u299C\",\r\n\t\"varphi;\": \"\u03D5\",\r\n\t\"varrho;\": \"\u03F1\",\r\n\t\"Vdashl;\": \"\u2AE6\",\r\n\t\"veebar;\": \"\u22BB\",\r\n\t\"vellip;\": \"\u22EE\",\r\n\t\"Verbar;\": \"\u2016\",\r\n\t\"verbar;\": \"|\",\r\n\t\"vsubnE;\": \"\u2ACB\uFE00\",\r\n\t\"vsubne;\": \"\u228A\uFE00\",\r\n\t\"vsupnE;\": \"\u2ACC\uFE00\",\r\n\t\"vsupne;\": \"\u228B\uFE00\",\r\n\t\"Vvdash;\": \"\u22AA\",\r\n\t\"wedbar;\": \"\u2A5F\",\r\n\t\"wedgeq;\": \"\u2259\",\r\n\t\"weierp;\": \"\u2118\",\r\n\t\"wreath;\": \"\u2240\",\r\n\t\"xoplus;\": \"\u2A01\",\r\n\t\"xotime;\": \"\u2A02\",\r\n\t\"xsqcup;\": \"\u2A06\",\r\n\t\"xuplus;\": \"\u2A04\",\r\n\t\"xwedge;\": \"\u22C0\",\r\n\t\"Yacute;\": \"\u00DD\",\r\n\t\"yacute;\": \"\u00FD\",\r\n\t\"Zacute;\": \"\u0179\",\r\n\t\"zacute;\": \"\u017A\",\r\n\t\"Zcaron;\": \"\u017D\",\r\n\t\"zcaron;\": \"\u017E\",\r\n\t\"zeetrf;\": \"\u2128\",\r\n\t\"alefsym;\": \"\u2135\",\r\n\t\"angrtvb;\": \"\u22BE\",\r\n\t\"angzarr;\": \"\u237C\",\r\n\t\"asympeq;\": \"\u224D\",\r\n\t\"backsim;\": \"\u223D\",\r\n\t\"Because;\": \"\u2235\",\r\n\t\"because;\": \"\u2235\",\r\n\t\"bemptyv;\": \"\u29B0\",\r\n\t\"between;\": \"\u226C\",\r\n\t\"bigcirc;\": \"\u25EF\",\r\n\t\"bigodot;\": \"\u2A00\",\r\n\t\"bigstar;\": \"\u2605\",\r\n\t\"bnequiv;\": \"\u2261\u20E5\",\r\n\t\"boxplus;\": \"\u229E\",\r\n\t\"Cayleys;\": \"\u212D\",\r\n\t\"Cconint;\": \"\u2230\",\r\n\t\"ccupssm;\": \"\u2A50\",\r\n\t\"Cedilla;\": \"\u00B8\",\r\n\t\"cemptyv;\": \"\u29B2\",\r\n\t\"cirscir;\": \"\u29C2\",\r\n\t\"coloneq;\": \"\u2254\",\r\n\t\"congdot;\": \"\u2A6D\",\r\n\t\"cudarrl;\": \"\u2938\",\r\n\t\"cudarrr;\": \"\u2935\",\r\n\t\"cularrp;\": \"\u293D\",\r\n\t\"curarrm;\": \"\u293C\",\r\n\t\"dbkarow;\": \"\u290F\",\r\n\t\"ddagger;\": \"\u2021\",\r\n\t\"ddotseq;\": \"\u2A77\",\r\n\t\"demptyv;\": \"\u29B1\",\r\n\t\"Diamond;\": \"\u22C4\",\r\n\t\"diamond;\": \"\u22C4\",\r\n\t\"digamma;\": \"\u03DD\",\r\n\t\"dotplus;\": \"\u2214\",\r\n\t\"DownTee;\": \"\u22A4\",\r\n\t\"dwangle;\": \"\u29A6\",\r\n\t\"Element;\": \"\u2208\",\r\n\t\"Epsilon;\": \"\u0395\",\r\n\t\"epsilon;\": \"\u03B5\",\r\n\t\"eqcolon;\": \"\u2255\",\r\n\t\"equivDD;\": \"\u2A78\",\r\n\t\"gesdoto;\": \"\u2A82\",\r\n\t\"gtquest;\": \"\u2A7C\",\r\n\t\"gtrless;\": \"\u2277\",\r\n\t\"harrcir;\": \"\u2948\",\r\n\t\"Implies;\": \"\u21D2\",\r\n\t\"intprod;\": \"\u2A3C\",\r\n\t\"isindot;\": \"\u22F5\",\r\n\t\"larrbfs;\": \"\u291F\",\r\n\t\"larrsim;\": \"\u2973\",\r\n\t\"lbrksld;\": \"\u298F\",\r\n\t\"lbrkslu;\": \"\u298D\",\r\n\t\"ldrdhar;\": \"\u2967\",\r\n\t\"LeftTee;\": \"\u22A3\",\r\n\t\"lesdoto;\": \"\u2A81\",\r\n\t\"lessdot;\": \"\u22D6\",\r\n\t\"lessgtr;\": \"\u2276\",\r\n\t\"lesssim;\": \"\u2272\",\r\n\t\"lotimes;\": \"\u2A34\",\r\n\t\"lozenge;\": \"\u25CA\",\r\n\t\"ltquest;\": \"\u2A7B\",\r\n\t\"luruhar;\": \"\u2966\",\r\n\t\"maltese;\": \"\u2720\",\r\n\t\"minusdu;\": \"\u2A2A\",\r\n\t\"napprox;\": \"\u2249\",\r\n\t\"natural;\": \"\u266E\",\r\n\t\"nearrow;\": \"\u2197\",\r\n\t\"NewLine;\": \"\\n\",\r\n\t\"nexists;\": \"\u2204\",\r\n\t\"NoBreak;\": \"\u2060\",\r\n\t\"notinva;\": \"\u2209\",\r\n\t\"notinvb;\": \"\u22F7\",\r\n\t\"notinvc;\": \"\u22F6\",\r\n\t\"NotLess;\": \"\u226E\",\r\n\t\"notniva;\": \"\u220C\",\r\n\t\"notnivb;\": \"\u22FE\",\r\n\t\"notnivc;\": \"\u22FD\",\r\n\t\"npolint;\": \"\u2A14\",\r\n\t\"npreceq;\": \"\u2AAF\u0338\",\r\n\t\"nsqsube;\": \"\u22E2\",\r\n\t\"nsqsupe;\": \"\u22E3\",\r\n\t\"nsubset;\": \"\u2282\u20D2\",\r\n\t\"nsucceq;\": \"\u2AB0\u0338\",\r\n\t\"nsupset;\": \"\u2283\u20D2\",\r\n\t\"nvinfin;\": \"\u29DE\",\r\n\t\"nvltrie;\": \"\u22B4\u20D2\",\r\n\t\"nvrtrie;\": \"\u22B5\u20D2\",\r\n\t\"nwarrow;\": \"\u2196\",\r\n\t\"olcross;\": \"\u29BB\",\r\n\t\"Omicron;\": \"\u039F\",\r\n\t\"omicron;\": \"\u03BF\",\r\n\t\"orderof;\": \"\u2134\",\r\n\t\"orslope;\": \"\u2A57\",\r\n\t\"OverBar;\": \"\u203E\",\r\n\t\"pertenk;\": \"\u2031\",\r\n\t\"planckh;\": \"\u210E\",\r\n\t\"pluscir;\": \"\u2A22\",\r\n\t\"plussim;\": \"\u2A26\",\r\n\t\"plustwo;\": \"\u2A27\",\r\n\t\"precsim;\": \"\u227E\",\r\n\t\"Product;\": \"\u220F\",\r\n\t\"quatint;\": \"\u2A16\",\r\n\t\"questeq;\": \"\u225F\",\r\n\t\"rarrbfs;\": \"\u2920\",\r\n\t\"rarrsim;\": \"\u2974\",\r\n\t\"rbrksld;\": \"\u298E\",\r\n\t\"rbrkslu;\": \"\u2990\",\r\n\t\"rdldhar;\": \"\u2969\",\r\n\t\"realine;\": \"\u211B\",\r\n\t\"rotimes;\": \"\u2A35\",\r\n\t\"ruluhar;\": \"\u2968\",\r\n\t\"searrow;\": \"\u2198\",\r\n\t\"simplus;\": \"\u2A24\",\r\n\t\"simrarr;\": \"\u2972\",\r\n\t\"subedot;\": \"\u2AC3\",\r\n\t\"submult;\": \"\u2AC1\",\r\n\t\"subplus;\": \"\u2ABF\",\r\n\t\"subrarr;\": \"\u2979\",\r\n\t\"succsim;\": \"\u227F\",\r\n\t\"supdsub;\": \"\u2AD8\",\r\n\t\"supedot;\": \"\u2AC4\",\r\n\t\"suphsol;\": \"\u27C9\",\r\n\t\"suphsub;\": \"\u2AD7\",\r\n\t\"suplarr;\": \"\u297B\",\r\n\t\"supmult;\": \"\u2AC2\",\r\n\t\"supplus;\": \"\u2AC0\",\r\n\t\"swarrow;\": \"\u2199\",\r\n\t\"topfork;\": \"\u2ADA\",\r\n\t\"triplus;\": \"\u2A39\",\r\n\t\"tritime;\": \"\u2A3B\",\r\n\t\"UpArrow;\": \"\u2191\",\r\n\t\"Uparrow;\": \"\u21D1\",\r\n\t\"uparrow;\": \"\u2191\",\r\n\t\"Upsilon;\": \"\u03A5\",\r\n\t\"upsilon;\": \"\u03C5\",\r\n\t\"uwangle;\": \"\u29A7\",\r\n\t\"vzigzag;\": \"\u299A\",\r\n\t\"zigrarr;\": \"\u21DD\",\r\n\t\"andslope;\": \"\u2A58\",\r\n\t\"angmsdaa;\": \"\u29A8\",\r\n\t\"angmsdab;\": \"\u29A9\",\r\n\t\"angmsdac;\": \"\u29AA\",\r\n\t\"angmsdad;\": \"\u29AB\",\r\n\t\"angmsdae;\": \"\u29AC\",\r\n\t\"angmsdaf;\": \"\u29AD\",\r\n\t\"angmsdag;\": \"\u29AE\",\r\n\t\"angmsdah;\": \"\u29AF\",\r\n\t\"angrtvbd;\": \"\u299D\",\r\n\t\"approxeq;\": \"\u224A\",\r\n\t\"awconint;\": \"\u2233\",\r\n\t\"backcong;\": \"\u224C\",\r\n\t\"barwedge;\": \"\u2305\",\r\n\t\"bbrktbrk;\": \"\u23B6\",\r\n\t\"bigoplus;\": \"\u2A01\",\r\n\t\"bigsqcup;\": \"\u2A06\",\r\n\t\"biguplus;\": \"\u2A04\",\r\n\t\"bigwedge;\": \"\u22C0\",\r\n\t\"boxminus;\": \"\u229F\",\r\n\t\"boxtimes;\": \"\u22A0\",\r\n\t\"bsolhsub;\": \"\u27C8\",\r\n\t\"capbrcup;\": \"\u2A49\",\r\n\t\"circledR;\": \"\u00AE\",\r\n\t\"circledS;\": \"\u24C8\",\r\n\t\"cirfnint;\": \"\u2A10\",\r\n\t\"clubsuit;\": \"\u2663\",\r\n\t\"cupbrcap;\": \"\u2A48\",\r\n\t\"curlyvee;\": \"\u22CE\",\r\n\t\"cwconint;\": \"\u2232\",\r\n\t\"DDotrahd;\": \"\u2911\",\r\n\t\"doteqdot;\": \"\u2251\",\r\n\t\"DotEqual;\": \"\u2250\",\r\n\t\"dotminus;\": \"\u2238\",\r\n\t\"drbkarow;\": \"\u2910\",\r\n\t\"dzigrarr;\": \"\u27FF\",\r\n\t\"elinters;\": \"\u23E7\",\r\n\t\"emptyset;\": \"\u2205\",\r\n\t\"eqvparsl;\": \"\u29E5\",\r\n\t\"fpartint;\": \"\u2A0D\",\r\n\t\"geqslant;\": \"\u2A7E\",\r\n\t\"gesdotol;\": \"\u2A84\",\r\n\t\"gnapprox;\": \"\u2A8A\",\r\n\t\"hksearow;\": \"\u2925\",\r\n\t\"hkswarow;\": \"\u2926\",\r\n\t\"imagline;\": \"\u2110\",\r\n\t\"imagpart;\": \"\u2111\",\r\n\t\"infintie;\": \"\u29DD\",\r\n\t\"integers;\": \"\u2124\",\r\n\t\"Integral;\": \"\u222B\",\r\n\t\"intercal;\": \"\u22BA\",\r\n\t\"intlarhk;\": \"\u2A17\",\r\n\t\"laemptyv;\": \"\u29B4\",\r\n\t\"ldrushar;\": \"\u294B\",\r\n\t\"leqslant;\": \"\u2A7D\",\r\n\t\"lesdotor;\": \"\u2A83\",\r\n\t\"LessLess;\": \"\u2AA1\",\r\n\t\"llcorner;\": \"\u231E\",\r\n\t\"lnapprox;\": \"\u2A89\",\r\n\t\"lrcorner;\": \"\u231F\",\r\n\t\"lurdshar;\": \"\u294A\",\r\n\t\"mapstoup;\": \"\u21A5\",\r\n\t\"multimap;\": \"\u22B8\",\r\n\t\"naturals;\": \"\u2115\",\r\n\t\"ncongdot;\": \"\u2A6D\u0338\",\r\n\t\"NotEqual;\": \"\u2260\",\r\n\t\"notindot;\": \"\u22F5\u0338\",\r\n\t\"NotTilde;\": \"\u2241\",\r\n\t\"otimesas;\": \"\u2A36\",\r\n\t\"parallel;\": \"\u2225\",\r\n\t\"PartialD;\": \"\u2202\",\r\n\t\"plusacir;\": \"\u2A23\",\r\n\t\"pointint;\": \"\u2A15\",\r\n\t\"Precedes;\": \"\u227A\",\r\n\t\"precneqq;\": \"\u2AB5\",\r\n\t\"precnsim;\": \"\u22E8\",\r\n\t\"profalar;\": \"\u232E\",\r\n\t\"profline;\": \"\u2312\",\r\n\t\"profsurf;\": \"\u2313\",\r\n\t\"raemptyv;\": \"\u29B3\",\r\n\t\"realpart;\": \"\u211C\",\r\n\t\"RightTee;\": \"\u22A2\",\r\n\t\"rppolint;\": \"\u2A12\",\r\n\t\"rtriltri;\": \"\u29CE\",\r\n\t\"scpolint;\": \"\u2A13\",\r\n\t\"setminus;\": \"\u2216\",\r\n\t\"shortmid;\": \"\u2223\",\r\n\t\"smeparsl;\": \"\u29E4\",\r\n\t\"sqsubset;\": \"\u228F\",\r\n\t\"sqsupset;\": \"\u2290\",\r\n\t\"subseteq;\": \"\u2286\",\r\n\t\"Succeeds;\": \"\u227B\",\r\n\t\"succneqq;\": \"\u2AB6\",\r\n\t\"succnsim;\": \"\u22E9\",\r\n\t\"SuchThat;\": \"\u220B\",\r\n\t\"Superset;\": \"\u2283\",\r\n\t\"supseteq;\": \"\u2287\",\r\n\t\"thetasym;\": \"\u03D1\",\r\n\t\"thicksim;\": \"\u223C\",\r\n\t\"timesbar;\": \"\u2A31\",\r\n\t\"triangle;\": \"\u25B5\",\r\n\t\"triminus;\": \"\u2A3A\",\r\n\t\"trpezium;\": \"\u23E2\",\r\n\t\"Uarrocir;\": \"\u2949\",\r\n\t\"ulcorner;\": \"\u231C\",\r\n\t\"UnderBar;\": \"_\",\r\n\t\"urcorner;\": \"\u231D\",\r\n\t\"varkappa;\": \"\u03F0\",\r\n\t\"varsigma;\": \"\u03C2\",\r\n\t\"vartheta;\": \"\u03D1\",\r\n\t\"backprime;\": \"\u2035\",\r\n\t\"backsimeq;\": \"\u22CD\",\r\n\t\"Backslash;\": \"\u2216\",\r\n\t\"bigotimes;\": \"\u2A02\",\r\n\t\"CenterDot;\": \"\u00B7\",\r\n\t\"centerdot;\": \"\u00B7\",\r\n\t\"checkmark;\": \"\u2713\",\r\n\t\"CircleDot;\": \"\u2299\",\r\n\t\"complexes;\": \"\u2102\",\r\n\t\"Congruent;\": \"\u2261\",\r\n\t\"Coproduct;\": \"\u2210\",\r\n\t\"dotsquare;\": \"\u22A1\",\r\n\t\"DoubleDot;\": \"\u00A8\",\r\n\t\"DownArrow;\": \"\u2193\",\r\n\t\"Downarrow;\": \"\u21D3\",\r\n\t\"downarrow;\": \"\u2193\",\r\n\t\"DownBreve;\": \"\u0311\",\r\n\t\"gtrapprox;\": \"\u2A86\",\r\n\t\"gtreqless;\": \"\u22DB\",\r\n\t\"gvertneqq;\": \"\u2269\uFE00\",\r\n\t\"heartsuit;\": \"\u2665\",\r\n\t\"HumpEqual;\": \"\u224F\",\r\n\t\"LeftArrow;\": \"\u2190\",\r\n\t\"Leftarrow;\": \"\u21D0\",\r\n\t\"leftarrow;\": \"\u2190\",\r\n\t\"LeftFloor;\": \"\u230A\",\r\n\t\"lesseqgtr;\": \"\u22DA\",\r\n\t\"LessTilde;\": \"\u2272\",\r\n\t\"lvertneqq;\": \"\u2268\uFE00\",\r\n\t\"Mellintrf;\": \"\u2133\",\r\n\t\"MinusPlus;\": \"\u2213\",\r\n\t\"ngeqslant;\": \"\u2A7E\u0338\",\r\n\t\"nleqslant;\": \"\u2A7D\u0338\",\r\n\t\"NotCupCap;\": \"\u226D\",\r\n\t\"NotExists;\": \"\u2204\",\r\n\t\"NotSubset;\": \"\u2282\u20D2\",\r\n\t\"nparallel;\": \"\u2226\",\r\n\t\"nshortmid;\": \"\u2224\",\r\n\t\"nsubseteq;\": \"\u2288\",\r\n\t\"nsupseteq;\": \"\u2289\",\r\n\t\"OverBrace;\": \"\u23DE\",\r\n\t\"pitchfork;\": \"\u22D4\",\r\n\t\"PlusMinus;\": \"\u00B1\",\r\n\t\"rationals;\": \"\u211A\",\r\n\t\"spadesuit;\": \"\u2660\",\r\n\t\"subseteqq;\": \"\u2AC5\",\r\n\t\"subsetneq;\": \"\u228A\",\r\n\t\"supseteqq;\": \"\u2AC6\",\r\n\t\"supsetneq;\": \"\u228B\",\r\n\t\"Therefore;\": \"\u2234\",\r\n\t\"therefore;\": \"\u2234\",\r\n\t\"ThinSpace;\": \"\u2009\",\r\n\t\"triangleq;\": \"\u225C\",\r\n\t\"TripleDot;\": \"\u20DB\",\r\n\t\"UnionPlus;\": \"\u228E\",\r\n\t\"varpropto;\": \"\u221D\",\r\n\t\"Bernoullis;\": \"\u212C\",\r\n\t\"circledast;\": \"\u229B\",\r\n\t\"CirclePlus;\": \"\u2295\",\r\n\t\"complement;\": \"\u2201\",\r\n\t\"curlywedge;\": \"\u22CF\",\r\n\t\"eqslantgtr;\": \"\u2A96\",\r\n\t\"EqualTilde;\": \"\u2242\",\r\n\t\"Fouriertrf;\": \"\u2131\",\r\n\t\"gtreqqless;\": \"\u2A8C\",\r\n\t\"ImaginaryI;\": \"\u2148\",\r\n\t\"Laplacetrf;\": \"\u2112\",\r\n\t\"LeftVector;\": \"\u21BC\",\r\n\t\"lessapprox;\": \"\u2A85\",\r\n\t\"lesseqqgtr;\": \"\u2A8B\",\r\n\t\"Lleftarrow;\": \"\u21DA\",\r\n\t\"lmoustache;\": \"\u23B0\",\r\n\t\"longmapsto;\": \"\u27FC\",\r\n\t\"mapstodown;\": \"\u21A7\",\r\n\t\"mapstoleft;\": \"\u21A4\",\r\n\t\"nLeftarrow;\": \"\u21CD\",\r\n\t\"nleftarrow;\": \"\u219A\",\r\n\t\"NotElement;\": \"\u2209\",\r\n\t\"NotGreater;\": \"\u226F\",\r\n\t\"nsubseteqq;\": \"\u2AC5\u0338\",\r\n\t\"nsupseteqq;\": \"\u2AC6\u0338\",\r\n\t\"precapprox;\": \"\u2AB7\",\r\n\t\"Proportion;\": \"\u2237\",\r\n\t\"RightArrow;\": \"\u2192\",\r\n\t\"Rightarrow;\": \"\u21D2\",\r\n\t\"rightarrow;\": \"\u2192\",\r\n\t\"RightFloor;\": \"\u230B\",\r\n\t\"rmoustache;\": \"\u23B1\",\r\n\t\"sqsubseteq;\": \"\u2291\",\r\n\t\"sqsupseteq;\": \"\u2292\",\r\n\t\"subsetneqq;\": \"\u2ACB\",\r\n\t\"succapprox;\": \"\u2AB8\",\r\n\t\"supsetneqq;\": \"\u2ACC\",\r\n\t\"ThickSpace;\": \"\u205F\u200A\",\r\n\t\"TildeEqual;\": \"\u2243\",\r\n\t\"TildeTilde;\": \"\u2248\",\r\n\t\"UnderBrace;\": \"\u23DF\",\r\n\t\"UpArrowBar;\": \"\u2912\",\r\n\t\"UpTeeArrow;\": \"\u21A5\",\r\n\t\"upuparrows;\": \"\u21C8\",\r\n\t\"varepsilon;\": \"\u03F5\",\r\n\t\"varnothing;\": \"\u2205\",\r\n\t\"backepsilon;\": \"\u03F6\",\r\n\t\"blacksquare;\": \"\u25AA\",\r\n\t\"circledcirc;\": \"\u229A\",\r\n\t\"circleddash;\": \"\u229D\",\r\n\t\"CircleMinus;\": \"\u2296\",\r\n\t\"CircleTimes;\": \"\u2297\",\r\n\t\"curlyeqprec;\": \"\u22DE\",\r\n\t\"curlyeqsucc;\": \"\u22DF\",\r\n\t\"diamondsuit;\": \"\u2666\",\r\n\t\"eqslantless;\": \"\u2A95\",\r\n\t\"Equilibrium;\": \"\u21CC\",\r\n\t\"expectation;\": \"\u2130\",\r\n\t\"GreaterLess;\": \"\u2277\",\r\n\t\"LeftCeiling;\": \"\u2308\",\r\n\t\"LessGreater;\": \"\u2276\",\r\n\t\"MediumSpace;\": \"\u205F\",\r\n\t\"NotLessLess;\": \"\u226A\u0338\",\r\n\t\"NotPrecedes;\": \"\u2280\",\r\n\t\"NotSucceeds;\": \"\u2281\",\r\n\t\"NotSuperset;\": \"\u2283\u20D2\",\r\n\t\"nRightarrow;\": \"\u21CF\",\r\n\t\"nrightarrow;\": \"\u219B\",\r\n\t\"OverBracket;\": \"\u23B4\",\r\n\t\"preccurlyeq;\": \"\u227C\",\r\n\t\"precnapprox;\": \"\u2AB9\",\r\n\t\"quaternions;\": \"\u210D\",\r\n\t\"RightVector;\": \"\u21C0\",\r\n\t\"Rrightarrow;\": \"\u21DB\",\r\n\t\"RuleDelayed;\": \"\u29F4\",\r\n\t\"SmallCircle;\": \"\u2218\",\r\n\t\"SquareUnion;\": \"\u2294\",\r\n\t\"straightphi;\": \"\u03D5\",\r\n\t\"SubsetEqual;\": \"\u2286\",\r\n\t\"succcurlyeq;\": \"\u227D\",\r\n\t\"succnapprox;\": \"\u2ABA\",\r\n\t\"thickapprox;\": \"\u2248\",\r\n\t\"UpDownArrow;\": \"\u2195\",\r\n\t\"Updownarrow;\": \"\u21D5\",\r\n\t\"updownarrow;\": \"\u2195\",\r\n\t\"VerticalBar;\": \"\u2223\",\r\n\t\"blacklozenge;\": \"\u29EB\",\r\n\t\"DownArrowBar;\": \"\u2913\",\r\n\t\"DownTeeArrow;\": \"\u21A7\",\r\n\t\"ExponentialE;\": \"\u2147\",\r\n\t\"exponentiale;\": \"\u2147\",\r\n\t\"GreaterEqual;\": \"\u2265\",\r\n\t\"GreaterTilde;\": \"\u2273\",\r\n\t\"HilbertSpace;\": \"\u210B\",\r\n\t\"HumpDownHump;\": \"\u224E\",\r\n\t\"Intersection;\": \"\u22C2\",\r\n\t\"LeftArrowBar;\": \"\u21E4\",\r\n\t\"LeftTeeArrow;\": \"\u21A4\",\r\n\t\"LeftTriangle;\": \"\u22B2\",\r\n\t\"LeftUpVector;\": \"\u21BF\",\r\n\t\"NotCongruent;\": \"\u2262\",\r\n\t\"NotHumpEqual;\": \"\u224F\u0338\",\r\n\t\"NotLessEqual;\": \"\u2270\",\r\n\t\"NotLessTilde;\": \"\u2274\",\r\n\t\"Proportional;\": \"\u221D\",\r\n\t\"RightCeiling;\": \"\u2309\",\r\n\t\"risingdotseq;\": \"\u2253\",\r\n\t\"RoundImplies;\": \"\u2970\",\r\n\t\"ShortUpArrow;\": \"\u2191\",\r\n\t\"SquareSubset;\": \"\u228F\",\r\n\t\"triangledown;\": \"\u25BF\",\r\n\t\"triangleleft;\": \"\u25C3\",\r\n\t\"UnderBracket;\": \"\u23B5\",\r\n\t\"varsubsetneq;\": \"\u228A\uFE00\",\r\n\t\"varsupsetneq;\": \"\u228B\uFE00\",\r\n\t\"VerticalLine;\": \"|\",\r\n\t\"ApplyFunction;\": \"\u2061\",\r\n\t\"bigtriangleup;\": \"\u25B3\",\r\n\t\"blacktriangle;\": \"\u25B4\",\r\n\t\"DifferentialD;\": \"\u2146\",\r\n\t\"divideontimes;\": \"\u22C7\",\r\n\t\"DoubleLeftTee;\": \"\u2AE4\",\r\n\t\"DoubleUpArrow;\": \"\u21D1\",\r\n\t\"fallingdotseq;\": \"\u2252\",\r\n\t\"hookleftarrow;\": \"\u21A9\",\r\n\t\"leftarrowtail;\": \"\u21A2\",\r\n\t\"leftharpoonup;\": \"\u21BC\",\r\n\t\"LeftTeeVector;\": \"\u295A\",\r\n\t\"LeftVectorBar;\": \"\u2952\",\r\n\t\"LessFullEqual;\": \"\u2266\",\r\n\t\"LongLeftArrow;\": \"\u27F5\",\r\n\t\"Longleftarrow;\": \"\u27F8\",\r\n\t\"longleftarrow;\": \"\u27F5\",\r\n\t\"looparrowleft;\": \"\u21AB\",\r\n\t\"measuredangle;\": \"\u2221\",\r\n\t\"NotEqualTilde;\": \"\u2242\u0338\",\r\n\t\"NotTildeEqual;\": \"\u2244\",\r\n\t\"NotTildeTilde;\": \"\u2249\",\r\n\t\"ntriangleleft;\": \"\u22EA\",\r\n\t\"Poincareplane;\": \"\u210C\",\r\n\t\"PrecedesEqual;\": \"\u2AAF\",\r\n\t\"PrecedesTilde;\": \"\u227E\",\r\n\t\"RightArrowBar;\": \"\u21E5\",\r\n\t\"RightTeeArrow;\": \"\u21A6\",\r\n\t\"RightTriangle;\": \"\u22B3\",\r\n\t\"RightUpVector;\": \"\u21BE\",\r\n\t\"shortparallel;\": \"\u2225\",\r\n\t\"smallsetminus;\": \"\u2216\",\r\n\t\"SucceedsEqual;\": \"\u2AB0\",\r\n\t\"SucceedsTilde;\": \"\u227F\",\r\n\t\"SupersetEqual;\": \"\u2287\",\r\n\t\"triangleright;\": \"\u25B9\",\r\n\t\"UpEquilibrium;\": \"\u296E\",\r\n\t\"upharpoonleft;\": \"\u21BF\",\r\n\t\"varsubsetneqq;\": \"\u2ACB\uFE00\",\r\n\t\"varsupsetneqq;\": \"\u2ACC\uFE00\",\r\n\t\"VerticalTilde;\": \"\u2240\",\r\n\t\"VeryThinSpace;\": \"\u200A\",\r\n\t\"curvearrowleft;\": \"\u21B6\",\r\n\t\"DiacriticalDot;\": \"\u02D9\",\r\n\t\"doublebarwedge;\": \"\u2306\",\r\n\t\"DoubleRightTee;\": \"\u22A8\",\r\n\t\"downdownarrows;\": \"\u21CA\",\r\n\t\"DownLeftVector;\": \"\u21BD\",\r\n\t\"GreaterGreater;\": \"\u2AA2\",\r\n\t\"hookrightarrow;\": \"\u21AA\",\r\n\t\"HorizontalLine;\": \"\u2500\",\r\n\t\"InvisibleComma;\": \"\u2063\",\r\n\t\"InvisibleTimes;\": \"\u2062\",\r\n\t\"LeftDownVector;\": \"\u21C3\",\r\n\t\"leftleftarrows;\": \"\u21C7\",\r\n\t\"LeftRightArrow;\": \"\u2194\",\r\n\t\"Leftrightarrow;\": \"\u21D4\",\r\n\t\"leftrightarrow;\": \"\u2194\",\r\n\t\"leftthreetimes;\": \"\u22CB\",\r\n\t\"LessSlantEqual;\": \"\u2A7D\",\r\n\t\"LongRightArrow;\": \"\u27F6\",\r\n\t\"Longrightarrow;\": \"\u27F9\",\r\n\t\"longrightarrow;\": \"\u27F6\",\r\n\t\"looparrowright;\": \"\u21AC\",\r\n\t\"LowerLeftArrow;\": \"\u2199\",\r\n\t\"NestedLessLess;\": \"\u226A\",\r\n\t\"NotGreaterLess;\": \"\u2279\",\r\n\t\"NotLessGreater;\": \"\u2278\",\r\n\t\"NotSubsetEqual;\": \"\u2288\",\r\n\t\"NotVerticalBar;\": \"\u2224\",\r\n\t\"nshortparallel;\": \"\u2226\",\r\n\t\"ntriangleright;\": \"\u22EB\",\r\n\t\"OpenCurlyQuote;\": \"\u2018\",\r\n\t\"ReverseElement;\": \"\u220B\",\r\n\t\"rightarrowtail;\": \"\u21A3\",\r\n\t\"rightharpoonup;\": \"\u21C0\",\r\n\t\"RightTeeVector;\": \"\u295B\",\r\n\t\"RightVectorBar;\": \"\u2953\",\r\n\t\"ShortDownArrow;\": \"\u2193\",\r\n\t\"ShortLeftArrow;\": \"\u2190\",\r\n\t\"SquareSuperset;\": \"\u2290\",\r\n\t\"TildeFullEqual;\": \"\u2245\",\r\n\t\"trianglelefteq;\": \"\u22B4\",\r\n\t\"upharpoonright;\": \"\u21BE\",\r\n\t\"UpperLeftArrow;\": \"\u2196\",\r\n\t\"ZeroWidthSpace;\": \"\u200B\",\r\n\t\"bigtriangledown;\": \"\u25BD\",\r\n\t\"circlearrowleft;\": \"\u21BA\",\r\n\t\"CloseCurlyQuote;\": \"\u2019\",\r\n\t\"ContourIntegral;\": \"\u222E\",\r\n\t\"curvearrowright;\": \"\u21B7\",\r\n\t\"DoubleDownArrow;\": \"\u21D3\",\r\n\t\"DoubleLeftArrow;\": \"\u21D0\",\r\n\t\"downharpoonleft;\": \"\u21C3\",\r\n\t\"DownRightVector;\": \"\u21C1\",\r\n\t\"leftharpoondown;\": \"\u21BD\",\r\n\t\"leftrightarrows;\": \"\u21C6\",\r\n\t\"LeftRightVector;\": \"\u294E\",\r\n\t\"LeftTriangleBar;\": \"\u29CF\",\r\n\t\"LeftUpTeeVector;\": \"\u2960\",\r\n\t\"LeftUpVectorBar;\": \"\u2958\",\r\n\t\"LowerRightArrow;\": \"\u2198\",\r\n\t\"nLeftrightarrow;\": \"\u21CE\",\r\n\t\"nleftrightarrow;\": \"\u21AE\",\r\n\t\"NotGreaterEqual;\": \"\u2271\",\r\n\t\"NotGreaterTilde;\": \"\u2275\",\r\n\t\"NotHumpDownHump;\": \"\u224E\u0338\",\r\n\t\"NotLeftTriangle;\": \"\u22EA\",\r\n\t\"NotSquareSubset;\": \"\u228F\u0338\",\r\n\t\"ntrianglelefteq;\": \"\u22EC\",\r\n\t\"OverParenthesis;\": \"\u23DC\",\r\n\t\"RightDownVector;\": \"\u21C2\",\r\n\t\"rightleftarrows;\": \"\u21C4\",\r\n\t\"rightsquigarrow;\": \"\u219D\",\r\n\t\"rightthreetimes;\": \"\u22CC\",\r\n\t\"ShortRightArrow;\": \"\u2192\",\r\n\t\"straightepsilon;\": \"\u03F5\",\r\n\t\"trianglerighteq;\": \"\u22B5\",\r\n\t\"UpperRightArrow;\": \"\u2197\",\r\n\t\"vartriangleleft;\": \"\u22B2\",\r\n\t\"circlearrowright;\": \"\u21BB\",\r\n\t\"DiacriticalAcute;\": \"\u00B4\",\r\n\t\"DiacriticalGrave;\": \"`\",\r\n\t\"DiacriticalTilde;\": \"\u02DC\",\r\n\t\"DoubleRightArrow;\": \"\u21D2\",\r\n\t\"DownArrowUpArrow;\": \"\u21F5\",\r\n\t\"downharpoonright;\": \"\u21C2\",\r\n\t\"EmptySmallSquare;\": \"\u25FB\",\r\n\t\"GreaterEqualLess;\": \"\u22DB\",\r\n\t\"GreaterFullEqual;\": \"\u2267\",\r\n\t\"LeftAngleBracket;\": \"\u27E8\",\r\n\t\"LeftUpDownVector;\": \"\u2951\",\r\n\t\"LessEqualGreater;\": \"\u22DA\",\r\n\t\"NonBreakingSpace;\": \"\u00A0\",\r\n\t\"NotPrecedesEqual;\": \"\u2AAF\u0338\",\r\n\t\"NotRightTriangle;\": \"\u22EB\",\r\n\t\"NotSucceedsEqual;\": \"\u2AB0\u0338\",\r\n\t\"NotSucceedsTilde;\": \"\u227F\u0338\",\r\n\t\"NotSupersetEqual;\": \"\u2289\",\r\n\t\"ntrianglerighteq;\": \"\u22ED\",\r\n\t\"rightharpoondown;\": \"\u21C1\",\r\n\t\"rightrightarrows;\": \"\u21C9\",\r\n\t\"RightTriangleBar;\": \"\u29D0\",\r\n\t\"RightUpTeeVector;\": \"\u295C\",\r\n\t\"RightUpVectorBar;\": \"\u2954\",\r\n\t\"twoheadleftarrow;\": \"\u219E\",\r\n\t\"UnderParenthesis;\": \"\u23DD\",\r\n\t\"UpArrowDownArrow;\": \"\u21C5\",\r\n\t\"vartriangleright;\": \"\u22B3\",\r\n\t\"blacktriangledown;\": \"\u25BE\",\r\n\t\"blacktriangleleft;\": \"\u25C2\",\r\n\t\"DoubleUpDownArrow;\": \"\u21D5\",\r\n\t\"DoubleVerticalBar;\": \"\u2225\",\r\n\t\"DownLeftTeeVector;\": \"\u295E\",\r\n\t\"DownLeftVectorBar;\": \"\u2956\",\r\n\t\"FilledSmallSquare;\": \"\u25FC\",\r\n\t\"GreaterSlantEqual;\": \"\u2A7E\",\r\n\t\"LeftDoubleBracket;\": \"\u27E6\",\r\n\t\"LeftDownTeeVector;\": \"\u2961\",\r\n\t\"LeftDownVectorBar;\": \"\u2959\",\r\n\t\"leftrightharpoons;\": \"\u21CB\",\r\n\t\"LeftTriangleEqual;\": \"\u22B4\",\r\n\t\"NegativeThinSpace;\": \"\u200B\",\r\n\t\"NotGreaterGreater;\": \"\u226B\u0338\",\r\n\t\"NotLessSlantEqual;\": \"\u2A7D\u0338\",\r\n\t\"NotNestedLessLess;\": \"\u2AA1\u0338\",\r\n\t\"NotReverseElement;\": \"\u220C\",\r\n\t\"NotSquareSuperset;\": \"\u2290\u0338\",\r\n\t\"NotTildeFullEqual;\": \"\u2247\",\r\n\t\"RightAngleBracket;\": \"\u27E9\",\r\n\t\"rightleftharpoons;\": \"\u21CC\",\r\n\t\"RightUpDownVector;\": \"\u294F\",\r\n\t\"SquareSubsetEqual;\": \"\u2291\",\r\n\t\"twoheadrightarrow;\": \"\u21A0\",\r\n\t\"VerticalSeparator;\": \"\u2758\",\r\n\t\"blacktriangleright;\": \"\u25B8\",\r\n\t\"DownRightTeeVector;\": \"\u295F\",\r\n\t\"DownRightVectorBar;\": \"\u2957\",\r\n\t\"LongLeftRightArrow;\": \"\u27F7\",\r\n\t\"Longleftrightarrow;\": \"\u27FA\",\r\n\t\"longleftrightarrow;\": \"\u27F7\",\r\n\t\"NegativeThickSpace;\": \"\u200B\",\r\n\t\"NotLeftTriangleBar;\": \"\u29CF\u0338\",\r\n\t\"PrecedesSlantEqual;\": \"\u227C\",\r\n\t\"ReverseEquilibrium;\": \"\u21CB\",\r\n\t\"RightDoubleBracket;\": \"\u27E7\",\r\n\t\"RightDownTeeVector;\": \"\u295D\",\r\n\t\"RightDownVectorBar;\": \"\u2955\",\r\n\t\"RightTriangleEqual;\": \"\u22B5\",\r\n\t\"SquareIntersection;\": \"\u2293\",\r\n\t\"SucceedsSlantEqual;\": \"\u227D\",\r\n\t\"DoubleLongLeftArrow;\": \"\u27F8\",\r\n\t\"DownLeftRightVector;\": \"\u2950\",\r\n\t\"LeftArrowRightArrow;\": \"\u21C6\",\r\n\t\"leftrightsquigarrow;\": \"\u21AD\",\r\n\t\"NegativeMediumSpace;\": \"\u200B\",\r\n\t\"NotGreaterFullEqual;\": \"\u2267\u0338\",\r\n\t\"NotRightTriangleBar;\": \"\u29D0\u0338\",\r\n\t\"RightArrowLeftArrow;\": \"\u21C4\",\r\n\t\"SquareSupersetEqual;\": \"\u2292\",\r\n\t\"CapitalDifferentialD;\": \"\u2145\",\r\n\t\"DoubleLeftRightArrow;\": \"\u21D4\",\r\n\t\"DoubleLongRightArrow;\": \"\u27F9\",\r\n\t\"EmptyVerySmallSquare;\": \"\u25AB\",\r\n\t\"NestedGreaterGreater;\": \"\u226B\",\r\n\t\"NotDoubleVerticalBar;\": \"\u2226\",\r\n\t\"NotGreaterSlantEqual;\": \"\u2A7E\u0338\",\r\n\t\"NotLeftTriangleEqual;\": \"\u22EC\",\r\n\t\"NotSquareSubsetEqual;\": \"\u22E2\",\r\n\t\"OpenCurlyDoubleQuote;\": \"\u201C\",\r\n\t\"ReverseUpEquilibrium;\": \"\u296F\",\r\n\t\"CloseCurlyDoubleQuote;\": \"\u201D\",\r\n\t\"DoubleContourIntegral;\": \"\u222F\",\r\n\t\"FilledVerySmallSquare;\": \"\u25AA\",\r\n\t\"NegativeVeryThinSpace;\": \"\u200B\",\r\n\t\"NotPrecedesSlantEqual;\": \"\u22E0\",\r\n\t\"NotRightTriangleEqual;\": \"\u22ED\",\r\n\t\"NotSucceedsSlantEqual;\": \"\u22E1\",\r\n\t\"DiacriticalDoubleAcute;\": \"\u02DD\",\r\n\t\"NotSquareSupersetEqual;\": \"\u22E3\",\r\n\t\"NotNestedGreaterGreater;\": \"\u2AA2\u0338\",\r\n\t\"ClockwiseContourIntegral;\": \"\u2232\",\r\n\t\"DoubleLongLeftRightArrow;\": \"\u27FA\",\r\n\t\"CounterClockwiseContourIntegral;\": \"\u2233\"\r\n};\r\n\r\n// lazy compute this to make this file tree-shakable for browser\r\nlet maxCRNameLength;\r\nconst decodeHtml = (rawText, asAttr) => {\r\n    let offset = 0;\r\n    const end = rawText.length;\r\n    let decodedText = '';\r\n    function advance(length) {\r\n        offset += length;\r\n        rawText = rawText.slice(length);\r\n    }\r\n    while (offset < end) {\r\n        const head = /&(?:#x?)?/i.exec(rawText);\r\n        if (!head || offset + head.index >= end) {\r\n            const remaining = end - offset;\r\n            decodedText += rawText.slice(0, remaining);\r\n            advance(remaining);\r\n            break;\r\n        }\r\n        // Advance to the \"&\".\r\n        decodedText += rawText.slice(0, head.index);\r\n        advance(head.index);\r\n        if (head[0] === '&') {\r\n            // Named character reference.\r\n            let name = '';\r\n            let value = undefined;\r\n            if (/[0-9a-z]/i.test(rawText[1])) {\r\n                if (!maxCRNameLength) {\r\n                    maxCRNameLength = Object.keys(namedCharacterReferences).reduce((max, name) => Math.max(max, name.length), 0);\r\n                }\r\n                for (let length = maxCRNameLength; !value && length > 0; --length) {\r\n                    name = rawText.slice(1, 1 + length);\r\n                    value = namedCharacterReferences[name];\r\n                }\r\n                if (value) {\r\n                    const semi = name.endsWith(';');\r\n                    if (asAttr &&\r\n                        !semi &&\r\n                        /[=a-z0-9]/i.test(rawText[name.length + 1] || '')) {\r\n                        decodedText += '&' + name;\r\n                        advance(1 + name.length);\r\n                    }\r\n                    else {\r\n                        decodedText += value;\r\n                        advance(1 + name.length);\r\n                    }\r\n                }\r\n                else {\r\n                    decodedText += '&' + name;\r\n                    advance(1 + name.length);\r\n                }\r\n            }\r\n            else {\r\n                decodedText += '&';\r\n                advance(1);\r\n            }\r\n        }\r\n        else {\r\n            // Numeric character reference.\r\n            const hex = head[0] === '&#x';\r\n            const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\r\n            const body = pattern.exec(rawText);\r\n            if (!body) {\r\n                decodedText += head[0];\r\n                advance(head[0].length);\r\n            }\r\n            else {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\n                let cp = Number.parseInt(body[1], hex ? 16 : 10);\r\n                if (cp === 0) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp > 0x10ffff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp >= 0xd800 && cp <= 0xdfff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if ((cp >= 0xfdd0 && cp <= 0xfdef) || (cp & 0xfffe) === 0xfffe) ;\r\n                else if ((cp >= 0x01 && cp <= 0x08) ||\r\n                    cp === 0x0b ||\r\n                    (cp >= 0x0d && cp <= 0x1f) ||\r\n                    (cp >= 0x7f && cp <= 0x9f)) {\r\n                    cp = CCR_REPLACEMENTS[cp] || cp;\r\n                }\r\n                decodedText += String.fromCodePoint(cp);\r\n                advance(body[0].length);\r\n            }\r\n        }\r\n    }\r\n    return decodedText;\r\n};\r\n// https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\nconst CCR_REPLACEMENTS = {\r\n    0x80: 0x20ac,\r\n    0x82: 0x201a,\r\n    0x83: 0x0192,\r\n    0x84: 0x201e,\r\n    0x85: 0x2026,\r\n    0x86: 0x2020,\r\n    0x87: 0x2021,\r\n    0x88: 0x02c6,\r\n    0x89: 0x2030,\r\n    0x8a: 0x0160,\r\n    0x8b: 0x2039,\r\n    0x8c: 0x0152,\r\n    0x8e: 0x017d,\r\n    0x91: 0x2018,\r\n    0x92: 0x2019,\r\n    0x93: 0x201c,\r\n    0x94: 0x201d,\r\n    0x95: 0x2022,\r\n    0x96: 0x2013,\r\n    0x97: 0x2014,\r\n    0x98: 0x02dc,\r\n    0x99: 0x2122,\r\n    0x9a: 0x0161,\r\n    0x9b: 0x203a,\r\n    0x9c: 0x0153,\r\n    0x9e: 0x017e,\r\n    0x9f: 0x0178\r\n};\r\n\r\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtml,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* DOMNamespaces.HTML */;\r\n        if (parent && ns === 2 /* DOMNamespaces.MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* DOMNamespaces.SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* DOMNamespaces.HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* DOMNamespaces.HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* DOMNamespaces.SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* DOMNamespaces.HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* DOMNamespaces.HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* DOMNamespaces.SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* DOMNamespaces.MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* DOMNamespaces.HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* TextModes.RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* TextModes.RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* TextModes.DATA */;\r\n    }\r\n};\r\n\r\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* NodeTypes.DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n};\r\n\r\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, DOMErrorMessages );\r\n}\r\nconst DOMErrorMessages = {\r\n    [51 /* DOMErrorCodes.X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [52 /* DOMErrorCodes.X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [53 /* DOMErrorCodes.X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [54 /* DOMErrorCodes.X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [55 /* DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [56 /* DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [57 /* DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [58 /* DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [59 /* DOMErrorCodes.X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [60 /* DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [61 /* DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\r\n\r\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(51 /* DOMErrorCodes.X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(52 /* DOMErrorCodes.X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\r\n\r\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(53 /* DOMErrorCodes.X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(54 /* DOMErrorCodes.X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true), exp\r\n                ? getConstantType(exp, context) > 0\r\n                    ? exp\r\n                    : createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc)\r\n                : createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\r\n\r\nconst transformModel$1 = (dir, node, context) => {\r\n    const baseResult = transformModel(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(56 /* DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(58 /* DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(57 /* DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(55 /* DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\r\n\r\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn$1 = (dir, node, context) => {\r\n    return transformOn(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\r\n\r\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(59 /* DOMErrorCodes.X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\r\n\r\nconst transformTransition = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (!node.children.length) {\r\n                    return;\r\n                }\r\n                // warn multiple transition children\r\n                if (hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(60 /* DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n                // check if it's s single child w/ v-show\r\n                // if yes, inject \"persisted: true\" to the transition props\r\n                const child = node.children[0];\r\n                if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n                    for (const p of child.props) {\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'show') {\r\n                            node.props.push({\r\n                                type: 6 /* NodeTypes.ATTRIBUTE */,\r\n                                name: 'persisted',\r\n                                value: undefined,\r\n                                loc: node.loc\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */ &&\r\n        !(c.type === 2 /* NodeTypes.TEXT */ && !c.content.trim())));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* NodeTypes.FOR */ ||\r\n        (child.type === 9 /* NodeTypes.IF */ && child.branches.some(hasMultipleChildren)));\r\n}\r\n\r\n/**\r\n * This module is Node-only.\r\n */\r\n/**\r\n * Regex for replacing placeholders for embedded constant variables\r\n * (e.g. import URL string constants generated by compiler-sfc)\r\n */\r\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\r\n/**\r\n * Turn eligible hoisted static trees into stringified static nodes, e.g.\r\n *\r\n * ```js\r\n * const _hoisted_1 = createStaticVNode(`<div class=\"foo\">bar</div>`)\r\n * ```\r\n *\r\n * A single static vnode can contain stringified content for **multiple**\r\n * consecutive nodes (element and plain text), called a \"chunk\".\r\n * `@vue/runtime-dom` will create the content via innerHTML in a hidden\r\n * container element and insert all the nodes in place. The call must also\r\n * provide the number of nodes contained in the chunk so that during hydration\r\n * we can know how many nodes the static vnode should adopt.\r\n *\r\n * The optimization scans a children list that contains hoisted nodes, and\r\n * tries to find the largest chunk of consecutive hoisted nodes before running\r\n * into a non-hoisted node or the end of the list. A chunk is then converted\r\n * into a single static vnode and replaces the hoisted expression of the first\r\n * node in the chunk. Other nodes in the chunk are considered \"merged\" and\r\n * therefore removed from both the hoist list and the children array.\r\n *\r\n * This optimization is only performed in Node.js.\r\n */\r\nconst stringifyStatic = (children, context, parent) => {\r\n    // bail stringification for slot content\r\n    if (context.scopes.vSlot > 0) {\r\n        return;\r\n    }\r\n    let nc = 0; // current node count\r\n    let ec = 0; // current element with binding count\r\n    const currentChunk = [];\r\n    const stringifyCurrentChunk = (currentIndex) => {\r\n        if (nc >= 20 /* StringifyThresholds.NODE_COUNT */ ||\r\n            ec >= 5 /* StringifyThresholds.ELEMENT_WITH_BINDING_COUNT */) {\r\n            // combine all currently eligible nodes into a single static vnode call\r\n            const staticCall = createCallExpression(context.helper(CREATE_STATIC), [\r\n                JSON.stringify(currentChunk.map(node => stringifyNode(node, context)).join('')).replace(expReplaceRE, `\" + $1 + \"`),\r\n                // the 2nd argument indicates the number of DOM nodes this static vnode\r\n                // will insert / hydrate\r\n                String(currentChunk.length)\r\n            ]);\r\n            // replace the first node's hoisted expression with the static vnode call\r\n            replaceHoist(currentChunk[0], staticCall, context);\r\n            if (currentChunk.length > 1) {\r\n                for (let i = 1; i < currentChunk.length; i++) {\r\n                    // for the merged nodes, set their hoisted expression to null\r\n                    replaceHoist(currentChunk[i], null, context);\r\n                }\r\n                // also remove merged nodes from children\r\n                const deleteCount = currentChunk.length - 1;\r\n                children.splice(currentIndex - currentChunk.length + 1, deleteCount);\r\n                return deleteCount;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    let i = 0;\r\n    for (; i < children.length; i++) {\r\n        const child = children[i];\r\n        const hoisted = getHoistedNode(child);\r\n        if (hoisted) {\r\n            // presence of hoisted means child must be a stringifiable node\r\n            const node = child;\r\n            const result = analyzeNode(node);\r\n            if (result) {\r\n                // node is stringifiable, record state\r\n                nc += result[0];\r\n                ec += result[1];\r\n                currentChunk.push(node);\r\n                continue;\r\n            }\r\n        }\r\n        // we only reach here if we ran into a node that is not stringifiable\r\n        // check if currently analyzed nodes meet criteria for stringification.\r\n        // adjust iteration index\r\n        i -= stringifyCurrentChunk(i);\r\n        // reset state\r\n        nc = 0;\r\n        ec = 0;\r\n        currentChunk.length = 0;\r\n    }\r\n    // in case the last node was also stringifiable\r\n    stringifyCurrentChunk(i);\r\n};\r\nconst getHoistedNode = (node) => ((node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 0 /* ElementTypes.ELEMENT */) ||\r\n    node.type == 12 /* NodeTypes.TEXT_CALL */) &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n    node.codegenNode.hoisted;\r\nconst dataAriaRE = /^(data|aria)-/;\r\nconst isStringifiableAttr = (name, ns) => {\r\n    return ((ns === 0 /* DOMNamespaces.HTML */\r\n        ? isKnownHtmlAttr(name)\r\n        : ns === 1 /* DOMNamespaces.SVG */\r\n            ? isKnownSvgAttr(name)\r\n            : false) || dataAriaRE.test(name));\r\n};\r\nconst replaceHoist = (node, replacement, context) => {\r\n    const hoistToReplace = node.codegenNode.hoisted;\r\n    context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\r\n};\r\nconst isNonStringifiable = /*#__PURE__*/ makeMap(`caption,thead,tr,th,tbody,td,tfoot,colgroup,col`);\r\n/**\r\n * for a hoisted node, analyze it and return:\r\n * - false: bailed (contains non-stringifiable props or runtime constant)\r\n * - [nc, ec] where\r\n *   - nc is the number of nodes inside\r\n *   - ec is the number of element with bindings inside\r\n */\r\nfunction analyzeNode(node) {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && isNonStringifiable(node.tag)) {\r\n        return false;\r\n    }\r\n    if (node.type === 12 /* NodeTypes.TEXT_CALL */) {\r\n        return [1, 0];\r\n    }\r\n    let nc = 1; // node count\r\n    let ec = node.props.length > 0 ? 1 : 0; // element w/ binding count\r\n    let bailed = false;\r\n    const bail = () => {\r\n        bailed = true;\r\n        return false;\r\n    };\r\n    // TODO: check for cases where using innerHTML will result in different\r\n    // output compared to imperative node insertions.\r\n    // probably only need to check for most common case\r\n    // i.e. non-phrasing-content tags inside `<p>`\r\n    function walk(node) {\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i];\r\n            // bail on non-attr bindings\r\n            if (p.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n                !isStringifiableAttr(p.name, node.ns)) {\r\n                return bail();\r\n            }\r\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind') {\r\n                // bail on non-attr bindings\r\n                if (p.arg &&\r\n                    (p.arg.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ ||\r\n                        (p.arg.isStatic && !isStringifiableAttr(p.arg.content, node.ns)))) {\r\n                    return bail();\r\n                }\r\n                if (p.exp &&\r\n                    (p.exp.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ ||\r\n                        p.exp.constType < 3 /* ConstantTypes.CAN_STRINGIFY */)) {\r\n                    return bail();\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            nc++;\r\n            const child = node.children[i];\r\n            if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n                if (child.props.length > 0) {\r\n                    ec++;\r\n                }\r\n                walk(child);\r\n                if (bailed) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return walk(node) ? [nc, ec] : false;\r\n}\r\nfunction stringifyNode(node, context) {\r\n    if (isString(node)) {\r\n        return node;\r\n    }\r\n    if (isSymbol(node)) {\r\n        return ``;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            return stringifyElement(node, context);\r\n        case 2 /* NodeTypes.TEXT */:\r\n            return escapeHtml(node.content);\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return `<!--${escapeHtml(node.content)}-->`;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            return escapeHtml(toDisplayString(evaluateConstant(node.content)));\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            return escapeHtml(evaluateConstant(node));\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return stringifyNode(node.content, context);\r\n        default:\r\n            // static trees will not contain if/for nodes\r\n            return '';\r\n    }\r\n}\r\nfunction stringifyElement(node, context) {\r\n    let res = `<${node.tag}`;\r\n    let innerHTML = '';\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            res += ` ${p.name}`;\r\n            if (p.value) {\r\n                res += `=\"${escapeHtml(p.value.content)}\"`;\r\n            }\r\n        }\r\n        else if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n            if (p.name === 'bind') {\r\n                const exp = p.exp;\r\n                if (exp.content[0] === '_') {\r\n                    // internally generated string constant references\r\n                    // e.g. imported URL strings via compiler-sfc transformAssetUrl plugin\r\n                    res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\r\n                    continue;\r\n                }\r\n                // #6568\r\n                if (isBooleanAttr(p.arg.content) &&\r\n                    exp.content === 'false') {\r\n                    continue;\r\n                }\r\n                // constant v-bind, e.g. :foo=\"1\"\r\n                let evaluated = evaluateConstant(exp);\r\n                if (evaluated != null) {\r\n                    const arg = p.arg && p.arg.content;\r\n                    if (arg === 'class') {\r\n                        evaluated = normalizeClass(evaluated);\r\n                    }\r\n                    else if (arg === 'style') {\r\n                        evaluated = stringifyStyle(normalizeStyle(evaluated));\r\n                    }\r\n                    res += ` ${p.arg.content}=\"${escapeHtml(evaluated)}\"`;\r\n                }\r\n            }\r\n            else if (p.name === 'html') {\r\n                // #5439 v-html with constant value\r\n                // not sure why would anyone do this but it can happen\r\n                innerHTML = evaluateConstant(p.exp);\r\n            }\r\n            else if (p.name === 'text') {\r\n                innerHTML = escapeHtml(toDisplayString(evaluateConstant(p.exp)));\r\n            }\r\n        }\r\n    }\r\n    if (context.scopeId) {\r\n        res += ` ${context.scopeId}`;\r\n    }\r\n    res += `>`;\r\n    if (innerHTML) {\r\n        res += innerHTML;\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            res += stringifyNode(node.children[i], context);\r\n        }\r\n    }\r\n    if (!isVoidTag(node.tag)) {\r\n        res += `</${node.tag}>`;\r\n    }\r\n    return res;\r\n}\r\n// __UNSAFE__\r\n// Reason: eval.\r\n// It's technically safe to eval because only constant expressions are possible\r\n// here, e.g. `{{ 1 }}` or `{{ 'foo' }}`\r\n// in addition, constant exps bail on presence of parens so you can't even\r\n// run JSFuck in here. But we mark it unsafe for security review purposes.\r\n// (see compiler-core/src/transforms/transformExpression)\r\nfunction evaluateConstant(exp) {\r\n    if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        return new Function(`return ${exp.content}`)();\r\n    }\r\n    else {\r\n        // compound\r\n        let res = ``;\r\n        exp.children.forEach(c => {\r\n            if (isString(c) || isSymbol(c)) {\r\n                return;\r\n            }\r\n            if (c.type === 2 /* NodeTypes.TEXT */) {\r\n                res += c.content;\r\n            }\r\n            else if (c.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n                res += toDisplayString(evaluateConstant(c.content));\r\n            }\r\n            else {\r\n                res += evaluateConstant(c);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n}\r\n\r\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(61 /* DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\r\n\r\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...([transformTransition] )\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel$1,\r\n    on: transformOn$1,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: stringifyStatic\r\n    }));\r\n}\r\nfunction parse$1(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\r\n\r\nvar CompilerDOM = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  parserOptions: parserOptions,\r\n  DOMNodeTransforms: DOMNodeTransforms,\r\n  DOMDirectiveTransforms: DOMDirectiveTransforms,\r\n  compile: compile,\r\n  parse: parse$1,\r\n  transformStyle: transformStyle,\r\n  createDOMCompilerError: createDOMCompilerError,\r\n  V_MODEL_RADIO: V_MODEL_RADIO,\r\n  V_MODEL_CHECKBOX: V_MODEL_CHECKBOX,\r\n  V_MODEL_TEXT: V_MODEL_TEXT,\r\n  V_MODEL_SELECT: V_MODEL_SELECT,\r\n  V_MODEL_DYNAMIC: V_MODEL_DYNAMIC,\r\n  V_ON_WITH_MODIFIERS: V_ON_WITH_MODIFIERS,\r\n  V_ON_WITH_KEYS: V_ON_WITH_KEYS,\r\n  V_SHOW: V_SHOW,\r\n  TRANSITION: TRANSITION,\r\n  TRANSITION_GROUP: TRANSITION_GROUP,\r\n  baseCompile: baseCompile,\r\n  baseParse: baseParse,\r\n  transform: transform,\r\n  createTransformContext: createTransformContext,\r\n  traverseNode: traverseNode,\r\n  createStructuralDirectiveTransform: createStructuralDirectiveTransform,\r\n  generate: generate,\r\n  createCompilerError: createCompilerError,\r\n  getBaseTransformPreset: getBaseTransformPreset,\r\n  transformModel: transformModel,\r\n  transformOn: transformOn,\r\n  transformBind: transformBind,\r\n  noopDirectiveTransform: noopDirectiveTransform,\r\n  processIf: processIf,\r\n  processFor: processFor,\r\n  createForLoopParams: createForLoopParams,\r\n  transformExpression: transformExpression,\r\n  processExpression: processExpression,\r\n  stringifyExpression: stringifyExpression,\r\n  buildSlots: buildSlots,\r\n  trackVForSlotScopes: trackVForSlotScopes,\r\n  trackSlotScopes: trackSlotScopes,\r\n  transformElement: transformElement,\r\n  resolveComponentType: resolveComponentType,\r\n  buildProps: buildProps,\r\n  buildDirectiveArgs: buildDirectiveArgs,\r\n  processSlotOutlet: processSlotOutlet,\r\n  getConstantType: getConstantType,\r\n  generateCodeFrame: generateCodeFrame,\r\n  checkCompatEnabled: checkCompatEnabled,\r\n  warnDeprecation: warnDeprecation,\r\n  locStub: locStub,\r\n  createRoot: createRoot,\r\n  createVNodeCall: createVNodeCall,\r\n  createArrayExpression: createArrayExpression,\r\n  createObjectExpression: createObjectExpression,\r\n  createObjectProperty: createObjectProperty,\r\n  createSimpleExpression: createSimpleExpression,\r\n  createInterpolation: createInterpolation,\r\n  createCompoundExpression: createCompoundExpression,\r\n  createCallExpression: createCallExpression,\r\n  createFunctionExpression: createFunctionExpression,\r\n  createConditionalExpression: createConditionalExpression,\r\n  createCacheExpression: createCacheExpression,\r\n  createBlockStatement: createBlockStatement,\r\n  createTemplateLiteral: createTemplateLiteral,\r\n  createIfStatement: createIfStatement,\r\n  createAssignmentExpression: createAssignmentExpression,\r\n  createSequenceExpression: createSequenceExpression,\r\n  createReturnStatement: createReturnStatement,\r\n  isStaticExp: isStaticExp,\r\n  isBuiltInType: isBuiltInType,\r\n  isCoreComponent: isCoreComponent,\r\n  isSimpleIdentifier: isSimpleIdentifier,\r\n  isMemberExpressionBrowser: isMemberExpressionBrowser,\r\n  isMemberExpressionNode: isMemberExpressionNode,\r\n  isMemberExpression: isMemberExpression,\r\n  getInnerRange: getInnerRange,\r\n  advancePositionWithClone: advancePositionWithClone,\r\n  advancePositionWithMutation: advancePositionWithMutation,\r\n  assert: assert$1,\r\n  findDir: findDir,\r\n  findProp: findProp,\r\n  isStaticArgOf: isStaticArgOf,\r\n  hasDynamicKeyVBind: hasDynamicKeyVBind,\r\n  isText: isText,\r\n  isVSlot: isVSlot,\r\n  isTemplateNode: isTemplateNode,\r\n  isSlotOutlet: isSlotOutlet,\r\n  getVNodeHelper: getVNodeHelper,\r\n  getVNodeBlockHelper: getVNodeBlockHelper,\r\n  injectProp: injectProp,\r\n  toValidAssetId: toValidAssetId,\r\n  hasScopeRef: hasScopeRef,\r\n  getMemoedVNodeCall: getMemoedVNodeCall,\r\n  makeBlock: makeBlock,\r\n  walkIdentifiers: walkIdentifiers,\r\n  isReferencedIdentifier: isReferencedIdentifier,\r\n  isInDestructureAssignment: isInDestructureAssignment,\r\n  walkFunctionParams: walkFunctionParams,\r\n  walkBlockDeclarations: walkBlockDeclarations,\r\n  extractIdentifiers: extractIdentifiers,\r\n  isFunctionType: isFunctionType,\r\n  isStaticProperty: isStaticProperty,\r\n  isStaticPropertyKey: isStaticPropertyKey,\r\n  FRAGMENT: FRAGMENT,\r\n  TELEPORT: TELEPORT,\r\n  SUSPENSE: SUSPENSE,\r\n  KEEP_ALIVE: KEEP_ALIVE,\r\n  BASE_TRANSITION: BASE_TRANSITION,\r\n  OPEN_BLOCK: OPEN_BLOCK,\r\n  CREATE_BLOCK: CREATE_BLOCK,\r\n  CREATE_ELEMENT_BLOCK: CREATE_ELEMENT_BLOCK,\r\n  CREATE_VNODE: CREATE_VNODE,\r\n  CREATE_ELEMENT_VNODE: CREATE_ELEMENT_VNODE,\r\n  CREATE_COMMENT: CREATE_COMMENT,\r\n  CREATE_TEXT: CREATE_TEXT,\r\n  CREATE_STATIC: CREATE_STATIC,\r\n  RESOLVE_COMPONENT: RESOLVE_COMPONENT,\r\n  RESOLVE_DYNAMIC_COMPONENT: RESOLVE_DYNAMIC_COMPONENT,\r\n  RESOLVE_DIRECTIVE: RESOLVE_DIRECTIVE,\r\n  RESOLVE_FILTER: RESOLVE_FILTER,\r\n  WITH_DIRECTIVES: WITH_DIRECTIVES,\r\n  RENDER_LIST: RENDER_LIST,\r\n  RENDER_SLOT: RENDER_SLOT,\r\n  CREATE_SLOTS: CREATE_SLOTS,\r\n  TO_DISPLAY_STRING: TO_DISPLAY_STRING,\r\n  MERGE_PROPS: MERGE_PROPS,\r\n  NORMALIZE_CLASS: NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE: NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS: NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS: GUARD_REACTIVE_PROPS,\r\n  TO_HANDLERS: TO_HANDLERS,\r\n  CAMELIZE: CAMELIZE,\r\n  CAPITALIZE: CAPITALIZE,\r\n  TO_HANDLER_KEY: TO_HANDLER_KEY,\r\n  SET_BLOCK_TRACKING: SET_BLOCK_TRACKING,\r\n  PUSH_SCOPE_ID: PUSH_SCOPE_ID,\r\n  POP_SCOPE_ID: POP_SCOPE_ID,\r\n  WITH_CTX: WITH_CTX,\r\n  UNREF: UNREF,\r\n  IS_REF: IS_REF,\r\n  WITH_MEMO: WITH_MEMO,\r\n  IS_MEMO_SAME: IS_MEMO_SAME,\r\n  helperNameMap: helperNameMap,\r\n  registerRuntimeHelpers: registerRuntimeHelpers\r\n});\r\n\r\nfunction pad (hash, len) {\r\n  while (hash.length < len) {\r\n    hash = '0' + hash;\r\n  }\r\n  return hash;\r\n}\r\n\r\nfunction fold (hash, text) {\r\n  var i;\r\n  var chr;\r\n  var len;\r\n  if (text.length === 0) {\r\n    return hash;\r\n  }\r\n  for (i = 0, len = text.length; i < len; i++) {\r\n    chr = text.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + chr;\r\n    hash |= 0;\r\n  }\r\n  return hash < 0 ? hash * -2 : hash;\r\n}\r\n\r\nfunction foldObject (hash, o, seen) {\r\n  return Object.keys(o).sort().reduce(foldKey, hash);\r\n  function foldKey (hash, key) {\r\n    return foldValue(hash, o[key], key, seen);\r\n  }\r\n}\r\n\r\nfunction foldValue (input, value, key, seen) {\r\n  var hash = fold(fold(fold(input, key), toString(value)), typeof value);\r\n  if (value === null) {\r\n    return fold(hash, 'null');\r\n  }\r\n  if (value === undefined) {\r\n    return fold(hash, 'undefined');\r\n  }\r\n  if (typeof value === 'object' || typeof value === 'function') {\r\n    if (seen.indexOf(value) !== -1) {\r\n      return fold(hash, '[Circular]' + key);\r\n    }\r\n    seen.push(value);\r\n\r\n    var objHash = foldObject(hash, value, seen);\r\n\r\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\r\n      return objHash;\r\n    }\r\n\r\n    try {\r\n      return fold(objHash, String(value.valueOf()))\r\n    } catch (err) {\r\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\r\n    }\r\n  }\r\n  return fold(hash, value.toString());\r\n}\r\n\r\nfunction toString (o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\nfunction sum (o) {\r\n  return pad(foldValue(0, o, '', []).toString(16), 8);\r\n}\r\n\r\nvar hashSum = sum;\r\n\r\nconst CSS_VARS_HELPER = `useCssVars`;\r\nfunction genCssVarsFromList(vars, id, isProd, isSSR = false) {\r\n    return `{\\n  ${vars\r\n        .map(key => `\"${isSSR ? `--` : ``}${genVarName(id, key, isProd)}\": (${key})`)\r\n        .join(',\\n  ')}\\n}`;\r\n}\r\nfunction genVarName(id, raw, isProd) {\r\n    if (isProd) {\r\n        return hashSum(id + raw);\r\n    }\r\n    else {\r\n        // escape ASCII Punctuation & Symbols\r\n        return `${id}-${raw.replace(/[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g, s => `\\\\${s}`)}`;\r\n    }\r\n}\r\nfunction normalizeExpression(exp) {\r\n    exp = exp.trim();\r\n    if ((exp[0] === `'` && exp[exp.length - 1] === `'`) ||\r\n        (exp[0] === `\"` && exp[exp.length - 1] === `\"`)) {\r\n        return exp.slice(1, -1);\r\n    }\r\n    return exp;\r\n}\r\nconst vBindRE = /v-bind\\s*\\(/g;\r\nfunction parseCssVars(sfc) {\r\n    const vars = [];\r\n    sfc.styles.forEach(style => {\r\n        let match;\r\n        // ignore v-bind() in comments /* ... */\r\n        const content = style.content.replace(/\\/\\*([\\s\\S]*?)\\*\\//g, '');\r\n        while ((match = vBindRE.exec(content))) {\r\n            const start = match.index + match[0].length;\r\n            const end = lexBinding(content, start);\r\n            if (end !== null) {\r\n                const variable = normalizeExpression(content.slice(start, end));\r\n                if (!vars.includes(variable)) {\r\n                    vars.push(variable);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return vars;\r\n}\r\nfunction lexBinding(content, start) {\r\n    let state = 0 /* LexerState.inParens */;\r\n    let parenDepth = 0;\r\n    for (let i = start; i < content.length; i++) {\r\n        const char = content.charAt(i);\r\n        switch (state) {\r\n            case 0 /* LexerState.inParens */:\r\n                if (char === `'`) {\r\n                    state = 1 /* LexerState.inSingleQuoteString */;\r\n                }\r\n                else if (char === `\"`) {\r\n                    state = 2 /* LexerState.inDoubleQuoteString */;\r\n                }\r\n                else if (char === `(`) {\r\n                    parenDepth++;\r\n                }\r\n                else if (char === `)`) {\r\n                    if (parenDepth > 0) {\r\n                        parenDepth--;\r\n                    }\r\n                    else {\r\n                        return i;\r\n                    }\r\n                }\r\n                break;\r\n            case 1 /* LexerState.inSingleQuoteString */:\r\n                if (char === `'`) {\r\n                    state = 0 /* LexerState.inParens */;\r\n                }\r\n                break;\r\n            case 2 /* LexerState.inDoubleQuoteString */:\r\n                if (char === `\"`) {\r\n                    state = 0 /* LexerState.inParens */;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst cssVarsPlugin = opts => {\r\n    const { id, isProd } = opts;\r\n    return {\r\n        postcssPlugin: 'vue-sfc-vars',\r\n        Declaration(decl) {\r\n            // rewrite CSS variables\r\n            const value = decl.value;\r\n            if (vBindRE.test(value)) {\r\n                vBindRE.lastIndex = 0;\r\n                let transformed = '';\r\n                let lastIndex = 0;\r\n                let match;\r\n                while ((match = vBindRE.exec(value))) {\r\n                    const start = match.index + match[0].length;\r\n                    const end = lexBinding(value, start);\r\n                    if (end !== null) {\r\n                        const variable = normalizeExpression(value.slice(start, end));\r\n                        transformed +=\r\n                            value.slice(lastIndex, match.index) +\r\n                                `var(--${genVarName(id, variable, isProd)})`;\r\n                        lastIndex = end + 1;\r\n                    }\r\n                }\r\n                decl.value = transformed + value.slice(lastIndex);\r\n            }\r\n        }\r\n    };\r\n};\r\ncssVarsPlugin.postcss = true;\r\nfunction genCssVarsCode(vars, bindings, id, isProd) {\r\n    const varsExp = genCssVarsFromList(vars, id, isProd);\r\n    const exp = createSimpleExpression(varsExp, false);\r\n    const context = createTransformContext(createRoot([]), {\r\n        prefixIdentifiers: true,\r\n        inline: true,\r\n        bindingMetadata: bindings.__isScriptSetup === false ? undefined : bindings\r\n    });\r\n    const transformed = processExpression(exp, context);\r\n    const transformedString = transformed.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */\r\n        ? transformed.content\r\n        : transformed.children\r\n            .map(c => {\r\n            return typeof c === 'string'\r\n                ? c\r\n                : c.content;\r\n        })\r\n            .join('');\r\n    return `_${CSS_VARS_HELPER}(_ctx => (${transformedString}))`;\r\n}\r\n// <script setup> already gets the calls injected as part of the transform\r\n// this is only for single normal <script>\r\nfunction genNormalScriptCssVarsCode(cssVars, bindings, id, isProd) {\r\n    return (`\\nimport { ${CSS_VARS_HELPER} as _${CSS_VARS_HELPER} } from 'vue'\\n` +\r\n        `const __injectCSSVars__ = () => {\\n${genCssVarsCode(cssVars, bindings, id, isProd)}}\\n` +\r\n        `const __setup__ = __default__.setup\\n` +\r\n        `__default__.setup = __setup__\\n` +\r\n        `  ? (props, ctx) => { __injectCSSVars__();return __setup__(props, ctx) }\\n` +\r\n        `  : __injectCSSVars__\\n`);\r\n}\r\n\r\nfunction createCache(size = 500) {\r\n    return new Map()\r\n        ;\r\n}\r\n\r\nvar global = (typeof global !== \"undefined\" ? global :\r\n  typeof self !== \"undefined\" ? self :\r\n  typeof window !== \"undefined\" ? window : {});\r\n\r\nvar lookup = [];\r\nvar revLookup = [];\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\r\nvar inited = false;\r\nfunction init () {\r\n  inited = true;\r\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n  for (var i = 0, len = code.length; i < len; ++i) {\r\n    lookup[i] = code[i];\r\n    revLookup[code.charCodeAt(i)] = i;\r\n  }\r\n\r\n  revLookup['-'.charCodeAt(0)] = 62;\r\n  revLookup['_'.charCodeAt(0)] = 63;\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  if (!inited) {\r\n    init();\r\n  }\r\n  var i, j, l, tmp, placeHolders, arr;\r\n  var len = b64.length;\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // the number of equal signs (place holders)\r\n  // if there are two placeholders, than the two characters before it\r\n  // represent one byte\r\n  // if there is only one, then the three characters before it represent 2 bytes\r\n  // this is just a cheap hack to not do indexOf twice\r\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\r\n\r\n  // base64 is 4/3 + up to two characters of the original data\r\n  arr = new Arr(len * 3 / 4 - placeHolders);\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  l = placeHolders > 0 ? len - 4 : len;\r\n\r\n  var L = 0;\r\n\r\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\r\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\r\n    arr[L++] = (tmp >> 16) & 0xFF;\r\n    arr[L++] = (tmp >> 8) & 0xFF;\r\n    arr[L++] = tmp & 0xFF;\r\n  }\r\n\r\n  if (placeHolders === 2) {\r\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\r\n    arr[L++] = tmp & 0xFF;\r\n  } else if (placeHolders === 1) {\r\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\r\n    arr[L++] = (tmp >> 8) & 0xFF;\r\n    arr[L++] = tmp & 0xFF;\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp;\r\n  var output = [];\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\r\n    output.push(tripletToBase64(tmp));\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  if (!inited) {\r\n    init();\r\n  }\r\n  var tmp;\r\n  var len = uint8.length;\r\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\r\n  var output = '';\r\n  var parts = [];\r\n  var maxChunkLength = 16383; // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1];\r\n    output += lookup[tmp >> 2];\r\n    output += lookup[(tmp << 4) & 0x3F];\r\n    output += '==';\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\r\n    output += lookup[tmp >> 10];\r\n    output += lookup[(tmp >> 4) & 0x3F];\r\n    output += lookup[(tmp << 2) & 0x3F];\r\n    output += '=';\r\n  }\r\n\r\n  parts.push(output);\r\n\r\n  return parts.join('')\r\n}\r\n\r\nfunction read (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m;\r\n  var eLen = nBytes * 8 - mLen - 1;\r\n  var eMax = (1 << eLen) - 1;\r\n  var eBias = eMax >> 1;\r\n  var nBits = -7;\r\n  var i = isLE ? (nBytes - 1) : 0;\r\n  var d = isLE ? -1 : 1;\r\n  var s = buffer[offset + i];\r\n\r\n  i += d;\r\n\r\n  e = s & ((1 << (-nBits)) - 1);\r\n  s >>= (-nBits);\r\n  nBits += eLen;\r\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1);\r\n  e >>= (-nBits);\r\n  nBits += mLen;\r\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias;\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen);\r\n    e = e - eBias;\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c;\r\n  var eLen = nBytes * 8 - mLen - 1;\r\n  var eMax = (1 << eLen) - 1;\r\n  var eBias = eMax >> 1;\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\r\n  var i = isLE ? 0 : (nBytes - 1);\r\n  var d = isLE ? 1 : -1;\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\r\n\r\n  value = Math.abs(value);\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0;\r\n    e = eMax;\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2);\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--;\r\n      c *= 2;\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c;\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias);\r\n    }\r\n    if (value * c >= 2) {\r\n      e++;\r\n      c /= 2;\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0;\r\n      e = eMax;\r\n    } else if (e + eBias >= 1) {\r\n      m = (value * c - 1) * Math.pow(2, mLen);\r\n      e = e + eBias;\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\r\n      e = 0;\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m;\r\n  eLen += mLen;\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128;\r\n}\r\n\r\nvar toString$1 = {}.toString;\r\n\r\nvar isArray$1 = Array.isArray || function (arr) {\r\n  return toString$1.call(arr) == '[object Array]';\r\n};\r\n\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\r\n * @license  MIT\r\n */\r\n\r\nvar INSPECT_MAX_BYTES = 50;\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Use Object implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * Due to various browser bugs, sometimes the Object implementation will be used even\r\n * when the browser supports typed arrays.\r\n *\r\n * Note:\r\n *\r\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\r\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\r\n *\r\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\r\n *\r\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\r\n *     incorrect length in some situations.\r\n\r\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\r\n * get the Object implementation, which is slower but behaves correctly.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\r\n  ? global.TYPED_ARRAY_SUPPORT\r\n  : true;\r\n\r\nfunction kMaxLength () {\r\n  return Buffer.TYPED_ARRAY_SUPPORT\r\n    ? 0x7fffffff\r\n    : 0x3fffffff\r\n}\r\n\r\nfunction createBuffer (that, length) {\r\n  if (kMaxLength() < length) {\r\n    throw new RangeError('Invalid typed array length')\r\n  }\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = new Uint8Array(length);\r\n    that.__proto__ = Buffer.prototype;\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    if (that === null) {\r\n      that = new Buffer(length);\r\n    }\r\n    that.length = length;\r\n  }\r\n\r\n  return that\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer (arg, encodingOrOffset, length) {\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\r\n    return new Buffer(arg, encodingOrOffset, length)\r\n  }\r\n\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new Error(\r\n        'If encoding is specified then the first argument must be a string'\r\n      )\r\n    }\r\n    return allocUnsafe(this, arg)\r\n  }\r\n  return from(this, arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.poolSize = 8192; // not used by this implementation\r\n\r\n// TODO: Legacy, not needed anymore. Remove in next major version.\r\nBuffer._augment = function (arr) {\r\n  arr.__proto__ = Buffer.prototype;\r\n  return arr\r\n};\r\n\r\nfunction from (that, value, encodingOrOffset, length) {\r\n  if (typeof value === 'number') {\r\n    throw new TypeError('\"value\" argument must not be a number')\r\n  }\r\n\r\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\r\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return fromString(that, value, encodingOrOffset)\r\n  }\r\n\r\n  return fromObject(that, value)\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function (value, encodingOrOffset, length) {\r\n  return from(null, value, encodingOrOffset, length)\r\n};\r\n\r\nif (Buffer.TYPED_ARRAY_SUPPORT) {\r\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\r\n  Buffer.__proto__ = Uint8Array;\r\n}\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be a number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('\"size\" argument must not be negative')\r\n  }\r\n}\r\n\r\nfunction alloc (that, size, fill, encoding) {\r\n  assertSize(size);\r\n  if (size <= 0) {\r\n    return createBuffer(that, size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpretted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(that, size).fill(fill, encoding)\r\n      : createBuffer(that, size).fill(fill)\r\n  }\r\n  return createBuffer(that, size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function (size, fill, encoding) {\r\n  return alloc(null, size, fill, encoding)\r\n};\r\n\r\nfunction allocUnsafe (that, size) {\r\n  assertSize(size);\r\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\r\n    for (var i = 0; i < size; ++i) {\r\n      that[i] = 0;\r\n    }\r\n  }\r\n  return that\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function (size) {\r\n  return allocUnsafe(null, size)\r\n};\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(null, size)\r\n};\r\n\r\nfunction fromString (that, string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8';\r\n  }\r\n\r\n  if (!Buffer.isEncoding(encoding)) {\r\n    throw new TypeError('\"encoding\" must be a valid string encoding')\r\n  }\r\n\r\n  var length = byteLength(string, encoding) | 0;\r\n  that = createBuffer(that, length);\r\n\r\n  var actual = that.write(string, encoding);\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    that = that.slice(0, actual);\r\n  }\r\n\r\n  return that\r\n}\r\n\r\nfunction fromArrayLike (that, array) {\r\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\r\n  that = createBuffer(that, length);\r\n  for (var i = 0; i < length; i += 1) {\r\n    that[i] = array[i] & 255;\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromArrayBuffer (that, array, byteOffset, length) {\r\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\r\n\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\\'offset\\' is out of bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\\'length\\' is out of bounds')\r\n  }\r\n\r\n  if (byteOffset === undefined && length === undefined) {\r\n    array = new Uint8Array(array);\r\n  } else if (length === undefined) {\r\n    array = new Uint8Array(array, byteOffset);\r\n  } else {\r\n    array = new Uint8Array(array, byteOffset, length);\r\n  }\r\n\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = array;\r\n    that.__proto__ = Buffer.prototype;\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    that = fromArrayLike(that, array);\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromObject (that, obj) {\r\n  if (internalIsBuffer(obj)) {\r\n    var len = checked(obj.length) | 0;\r\n    that = createBuffer(that, len);\r\n\r\n    if (that.length === 0) {\r\n      return that\r\n    }\r\n\r\n    obj.copy(that, 0, 0, len);\r\n    return that\r\n  }\r\n\r\n  if (obj) {\r\n    if ((typeof ArrayBuffer !== 'undefined' &&\r\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\r\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\r\n        return createBuffer(that, 0)\r\n      }\r\n      return fromArrayLike(that, obj)\r\n    }\r\n\r\n    if (obj.type === 'Buffer' && isArray$1(obj.data)) {\r\n      return fromArrayLike(that, obj.data)\r\n    }\r\n  }\r\n\r\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < kMaxLength()` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= kMaxLength()) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\nBuffer.isBuffer = isBuffer;\r\nfunction internalIsBuffer (b) {\r\n  return !!(b != null && b._isBuffer)\r\n}\r\n\r\nBuffer.compare = function compare (a, b) {\r\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\r\n    throw new TypeError('Arguments must be Buffers')\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  var x = a.length;\r\n  var y = b.length;\r\n\r\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i];\r\n      y = b[i];\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n};\r\n\r\nBuffer.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n};\r\n\r\nBuffer.concat = function concat (list, length) {\r\n  if (!isArray$1(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer.alloc(0)\r\n  }\r\n\r\n  var i;\r\n  if (length === undefined) {\r\n    length = 0;\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length;\r\n    }\r\n  }\r\n\r\n  var buffer = Buffer.allocUnsafe(length);\r\n  var pos = 0;\r\n  for (i = 0; i < list.length; ++i) {\r\n    var buf = list[i];\r\n    if (!internalIsBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    }\r\n    buf.copy(buffer, pos);\r\n    pos += buf.length;\r\n  }\r\n  return buffer\r\n};\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (internalIsBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\r\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    string = '' + string;\r\n  }\r\n\r\n  var len = string.length;\r\n  if (len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  var loweredCase = false;\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n      case undefined:\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\r\n        encoding = ('' + encoding).toLowerCase();\r\n        loweredCase = true;\r\n    }\r\n  }\r\n}\r\nBuffer.byteLength = byteLength;\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  var loweredCase = false;\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0;\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length;\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0;\r\n  start >>>= 0;\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8';\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase();\r\n        loweredCase = true;\r\n    }\r\n  }\r\n}\r\n\r\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\r\n// Buffer instances.\r\nBuffer.prototype._isBuffer = true;\r\n\r\nfunction swap$1 (b, n, m) {\r\n  var i = b[n];\r\n  b[n] = b[m];\r\n  b[m] = i;\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16 () {\r\n  var len = this.length;\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 2) {\r\n    swap$1(this, i, i + 1);\r\n  }\r\n  return this\r\n};\r\n\r\nBuffer.prototype.swap32 = function swap32 () {\r\n  var len = this.length;\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 4) {\r\n    swap$1(this, i, i + 3);\r\n    swap$1(this, i + 1, i + 2);\r\n  }\r\n  return this\r\n};\r\n\r\nBuffer.prototype.swap64 = function swap64 () {\r\n  var len = this.length;\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 8) {\r\n    swap$1(this, i, i + 7);\r\n    swap$1(this, i + 1, i + 6);\r\n    swap$1(this, i + 2, i + 5);\r\n    swap$1(this, i + 3, i + 4);\r\n  }\r\n  return this\r\n};\r\n\r\nBuffer.prototype.toString = function toString () {\r\n  var length = this.length | 0;\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n};\r\n\r\nBuffer.prototype.equals = function equals (b) {\r\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer.compare(this, b) === 0\r\n};\r\n\r\nBuffer.prototype.inspect = function inspect () {\r\n  var str = '';\r\n  var max = INSPECT_MAX_BYTES;\r\n  if (this.length > 0) {\r\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\r\n    if (this.length > max) str += ' ... ';\r\n  }\r\n  return '<Buffer ' + str + '>'\r\n};\r\n\r\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (!internalIsBuffer(target)) {\r\n    throw new TypeError('Argument must be a Buffer')\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0;\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0;\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0;\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length;\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0;\r\n  end >>>= 0;\r\n  thisStart >>>= 0;\r\n  thisEnd >>>= 0;\r\n\r\n  if (this === target) return 0\r\n\r\n  var x = thisEnd - thisStart;\r\n  var y = end - start;\r\n  var len = Math.min(x, y);\r\n\r\n  var thisCopy = this.slice(thisStart, thisEnd);\r\n  var targetCopy = target.slice(start, end);\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i];\r\n      y = targetCopy[i];\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n};\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset;\r\n    byteOffset = 0;\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff;\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000;\r\n  }\r\n  byteOffset = +byteOffset;  // Coerce to Number.\r\n  if (isNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1);\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1;\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0;\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer.from(val, encoding);\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (internalIsBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF; // Search for a byte value [0-255]\r\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\r\n        typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  var indexSize = 1;\r\n  var arrLength = arr.length;\r\n  var valLength = val.length;\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase();\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2;\r\n      arrLength /= 2;\r\n      valLength /= 2;\r\n      byteOffset /= 2;\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  var i;\r\n  if (dir) {\r\n    var foundIndex = -1;\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i;\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex;\r\n        foundIndex = -1;\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      var found = true;\r\n      for (var j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false;\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n};\r\n\r\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n};\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n};\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0;\r\n  var remaining = buf.length - offset;\r\n  if (!length) {\r\n    length = remaining;\r\n  } else {\r\n    length = Number(length);\r\n    if (length > remaining) {\r\n      length = remaining;\r\n    }\r\n  }\r\n\r\n  // must be an even number of digits\r\n  var strLen = string.length;\r\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2;\r\n  }\r\n  for (var i = 0; i < length; ++i) {\r\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\r\n    if (isNaN(parsed)) return i\r\n    buf[offset + i] = parsed;\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction latin1Write (buf, string, offset, length) {\r\n  return asciiWrite(buf, string, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8';\r\n    length = this.length;\r\n    offset = 0;\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset;\r\n    length = this.length;\r\n    offset = 0;\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset | 0;\r\n    if (isFinite(length)) {\r\n      length = length | 0;\r\n      if (encoding === undefined) encoding = 'utf8';\r\n    } else {\r\n      encoding = length;\r\n      length = undefined;\r\n    }\r\n  // legacy write(string, encoding, offset, length) - remove in v0.13\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  var remaining = this.length - offset;\r\n  if (length === undefined || length > remaining) length = remaining;\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8';\r\n\r\n  var loweredCase = false;\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Write(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase();\r\n        loweredCase = true;\r\n    }\r\n  }\r\n};\r\n\r\nBuffer.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n};\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return fromByteArray(buf)\r\n  } else {\r\n    return fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end);\r\n  var res = [];\r\n\r\n  var i = start;\r\n  while (i < end) {\r\n    var firstByte = buf[i];\r\n    var codePoint = null;\r\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\r\n      : (firstByte > 0xDF) ? 3\r\n      : (firstByte > 0xBF) ? 2\r\n      : 1;\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte;\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1];\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint;\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1];\r\n          thirdByte = buf[i + 2];\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint;\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1];\r\n          thirdByte = buf[i + 2];\r\n          fourthByte = buf[i + 3];\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint;\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD;\r\n      bytesPerSequence = 1;\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000;\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\r\n      codePoint = 0xDC00 | codePoint & 0x3FF;\r\n    }\r\n\r\n    res.push(codePoint);\r\n    i += bytesPerSequence;\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  var len = codePoints.length;\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  var res = '';\r\n  var i = 0;\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    );\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  var ret = '';\r\n  end = Math.min(buf.length, end);\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F);\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  var ret = '';\r\n  end = Math.min(buf.length, end);\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i]);\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  var len = buf.length;\r\n\r\n  if (!start || start < 0) start = 0;\r\n  if (!end || end < 0 || end > len) end = len;\r\n\r\n  var out = '';\r\n  for (var i = start; i < end; ++i) {\r\n    out += toHex(buf[i]);\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  var bytes = buf.slice(start, end);\r\n  var res = '';\r\n  for (var i = 0; i < bytes.length; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice (start, end) {\r\n  var len = this.length;\r\n  start = ~~start;\r\n  end = end === undefined ? len : ~~end;\r\n\r\n  if (start < 0) {\r\n    start += len;\r\n    if (start < 0) start = 0;\r\n  } else if (start > len) {\r\n    start = len;\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len;\r\n    if (end < 0) end = 0;\r\n  } else if (end > len) {\r\n    end = len;\r\n  }\r\n\r\n  if (end < start) end = start;\r\n\r\n  var newBuf;\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    newBuf = this.subarray(start, end);\r\n    newBuf.__proto__ = Buffer.prototype;\r\n  } else {\r\n    var sliceLen = end - start;\r\n    newBuf = new Buffer(sliceLen, undefined);\r\n    for (var i = 0; i < sliceLen; ++i) {\r\n      newBuf[i] = this[i + start];\r\n    }\r\n  }\r\n\r\n  return newBuf\r\n};\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\r\n\r\n  var val = this[offset];\r\n  var mul = 1;\r\n  var i = 0;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul;\r\n  }\r\n\r\n  return val\r\n};\r\n\r\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length);\r\n  }\r\n\r\n  var val = this[offset + --byteLength];\r\n  var mul = 1;\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul;\r\n  }\r\n\r\n  return val\r\n};\r\n\r\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length);\r\n  return this[offset]\r\n};\r\n\r\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  return this[offset] | (this[offset + 1] << 8)\r\n};\r\n\r\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  return (this[offset] << 8) | this[offset + 1]\r\n};\r\n\r\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n};\r\n\r\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n};\r\n\r\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\r\n\r\n  var val = this[offset];\r\n  var mul = 1;\r\n  var i = 0;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul;\r\n  }\r\n  mul *= 0x80;\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\r\n\r\n  return val\r\n};\r\n\r\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\r\n\r\n  var i = byteLength;\r\n  var mul = 1;\r\n  var val = this[offset + --i];\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul;\r\n  }\r\n  mul *= 0x80;\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\r\n\r\n  return val\r\n};\r\n\r\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length);\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n};\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  var val = this[offset] | (this[offset + 1] << 8);\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n};\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length);\r\n  var val = this[offset + 1] | (this[offset] << 8);\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n};\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n};\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n};\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n  return read(this, offset, true, 23, 4)\r\n};\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length);\r\n  return read(this, offset, false, 23, 4)\r\n};\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length);\r\n  return read(this, offset, true, 52, 8)\r\n};\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length);\r\n  return read(this, offset, false, 52, 8)\r\n};\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\r\n  }\r\n\r\n  var mul = 1;\r\n  var i = 0;\r\n  this[offset] = value & 0xFF;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  byteLength = byteLength | 0;\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\r\n  }\r\n\r\n  var i = byteLength - 1;\r\n  var mul = 1;\r\n  this[offset + i] = value & 0xFF;\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\r\n  this[offset] = (value & 0xff);\r\n  return offset + 1\r\n};\r\n\r\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffff + value + 1;\r\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\r\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\r\n      (littleEndian ? i : 1 - i) * 8;\r\n  }\r\n}\r\n\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff);\r\n    this[offset + 1] = (value >>> 8);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8);\r\n    this[offset + 1] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffffffff + value + 1;\r\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\r\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\r\n  }\r\n}\r\n\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset + 3] = (value >>> 24);\r\n    this[offset + 2] = (value >>> 16);\r\n    this[offset + 1] = (value >>> 8);\r\n    this[offset] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24);\r\n    this[offset + 1] = (value >>> 16);\r\n    this[offset + 2] = (value >>> 8);\r\n    this[offset + 3] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1);\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\r\n  }\r\n\r\n  var i = 0;\r\n  var mul = 1;\r\n  var sub = 0;\r\n  this[offset] = value & 0xFF;\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1;\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1);\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\r\n  }\r\n\r\n  var i = byteLength - 1;\r\n  var mul = 1;\r\n  var sub = 0;\r\n  this[offset + i] = value & 0xFF;\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1;\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\r\n  }\r\n\r\n  return offset + byteLength\r\n};\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\r\n  if (value < 0) value = 0xff + value + 1;\r\n  this[offset] = (value & 0xff);\r\n  return offset + 1\r\n};\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff);\r\n    this[offset + 1] = (value >>> 8);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8);\r\n    this[offset + 1] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false);\r\n  }\r\n  return offset + 2\r\n};\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff);\r\n    this[offset + 1] = (value >>> 8);\r\n    this[offset + 2] = (value >>> 16);\r\n    this[offset + 3] = (value >>> 24);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value;\r\n  offset = offset | 0;\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\r\n  if (value < 0) value = 0xffffffff + value + 1;\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24);\r\n    this[offset + 1] = (value >>> 16);\r\n    this[offset + 2] = (value >>> 8);\r\n    this[offset + 3] = (value & 0xff);\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false);\r\n  }\r\n  return offset + 4\r\n};\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4);\r\n  }\r\n  write(buf, value, offset, littleEndian, 23, 4);\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n};\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n};\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8);\r\n  }\r\n  write(buf, value, offset, littleEndian, 52, 8);\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n};\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n};\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!start) start = 0;\r\n  if (!end && end !== 0) end = this.length;\r\n  if (targetStart >= target.length) targetStart = target.length;\r\n  if (!targetStart) targetStart = 0;\r\n  if (end > 0 && end < start) end = start;\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length;\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start;\r\n  }\r\n\r\n  var len = end - start;\r\n  var i;\r\n\r\n  if (this === target && start < targetStart && targetStart < end) {\r\n    // descending copy from end\r\n    for (i = len - 1; i >= 0; --i) {\r\n      target[i + targetStart] = this[i + start];\r\n    }\r\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // ascending copy from start\r\n    for (i = 0; i < len; ++i) {\r\n      target[i + targetStart] = this[i + start];\r\n    }\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, start + len),\r\n      targetStart\r\n    );\r\n  }\r\n\r\n  return len\r\n};\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start;\r\n      start = 0;\r\n      end = this.length;\r\n    } else if (typeof end === 'string') {\r\n      encoding = end;\r\n      end = this.length;\r\n    }\r\n    if (val.length === 1) {\r\n      var code = val.charCodeAt(0);\r\n      if (code < 256) {\r\n        val = code;\r\n      }\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255;\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0;\r\n  end = end === undefined ? this.length : end >>> 0;\r\n\r\n  if (!val) val = 0;\r\n\r\n  var i;\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val;\r\n    }\r\n  } else {\r\n    var bytes = internalIsBuffer(val)\r\n      ? val\r\n      : utf8ToBytes(new Buffer(val, encoding).toString());\r\n    var len = bytes.length;\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len];\r\n    }\r\n  }\r\n\r\n  return this\r\n};\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\r\n\r\nfunction base64clean (str) {\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '=';\r\n  }\r\n  return str\r\n}\r\n\r\nfunction stringtrim (str) {\r\n  if (str.trim) return str.trim()\r\n  return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nfunction toHex (n) {\r\n  if (n < 16) return '0' + n.toString(16)\r\n  return n.toString(16)\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity;\r\n  var codePoint;\r\n  var length = string.length;\r\n  var leadSurrogate = null;\r\n  var bytes = [];\r\n\r\n  for (var i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i);\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint;\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n        leadSurrogate = codePoint;\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\r\n    }\r\n\r\n    leadSurrogate = null;\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint);\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      );\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      );\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      );\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  var byteArray = [];\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF);\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  var c, hi, lo;\r\n  var byteArray = [];\r\n  for (var i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i);\r\n    hi = c >> 8;\r\n    lo = c % 256;\r\n    byteArray.push(lo);\r\n    byteArray.push(hi);\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\n\r\nfunction base64ToBytes (str) {\r\n  return toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i];\r\n  }\r\n  return i\r\n}\r\n\r\nfunction isnan (val) {\r\n  return val !== val // eslint-disable-line no-self-compare\r\n}\r\n\r\n\r\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nfunction isBuffer(obj) {\r\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\r\n}\r\n\r\nfunction isFastBuffer (obj) {\r\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer (obj) {\r\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\r\n}\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\nfunction encode$2(decoded) {\r\n    var sourceFileIndex = 0; // second field\r\n    var sourceCodeLine = 0; // third field\r\n    var sourceCodeColumn = 0; // fourth field\r\n    var nameIndex = 0; // fifth field\r\n    var mappings = '';\r\n    for (var i = 0; i < decoded.length; i++) {\r\n        var line = decoded[i];\r\n        if (i > 0)\r\n            mappings += ';';\r\n        if (line.length === 0)\r\n            continue;\r\n        var generatedCodeColumn = 0; // first field\r\n        var lineMappings = [];\r\n        for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\r\n            var segment = line_1[_i];\r\n            var segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\r\n            generatedCodeColumn = segment[0];\r\n            if (segment.length > 1) {\r\n                segmentMappings +=\r\n                    encodeInteger(segment[1] - sourceFileIndex) +\r\n                        encodeInteger(segment[2] - sourceCodeLine) +\r\n                        encodeInteger(segment[3] - sourceCodeColumn);\r\n                sourceFileIndex = segment[1];\r\n                sourceCodeLine = segment[2];\r\n                sourceCodeColumn = segment[3];\r\n            }\r\n            if (segment.length === 5) {\r\n                segmentMappings += encodeInteger(segment[4] - nameIndex);\r\n                nameIndex = segment[4];\r\n            }\r\n            lineMappings.push(segmentMappings);\r\n        }\r\n        mappings += lineMappings.join(',');\r\n    }\r\n    return mappings;\r\n}\r\nfunction encodeInteger(num) {\r\n    var result = '';\r\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\r\n    do {\r\n        var clamped = num & 31;\r\n        num >>>= 5;\r\n        if (num > 0) {\r\n            clamped |= 32;\r\n        }\r\n        result += chars[clamped];\r\n    } while (num > 0);\r\n    return result;\r\n}\r\n\r\nvar BitSet = function BitSet(arg) {\r\n\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\r\n};\r\n\r\nBitSet.prototype.add = function add (n) {\r\n\tthis.bits[n >> 5] |= 1 << (n & 31);\r\n};\r\n\r\nBitSet.prototype.has = function has (n) {\r\n\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\r\n};\r\n\r\nvar Chunk = function Chunk(start, end, content) {\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.original = content;\r\n\r\n\tthis.intro = '';\r\n\tthis.outro = '';\r\n\r\n\tthis.content = content;\r\n\tthis.storeName = false;\r\n\tthis.edited = false;\r\n\r\n\t// we make these non-enumerable, for sanity while debugging\r\n\tObject.defineProperties(this, {\r\n\t\tprevious: { writable: true, value: null },\r\n\t\tnext:     { writable: true, value: null }\r\n\t});\r\n};\r\n\r\nChunk.prototype.appendLeft = function appendLeft (content) {\r\n\tthis.outro += content;\r\n};\r\n\r\nChunk.prototype.appendRight = function appendRight (content) {\r\n\tthis.intro = this.intro + content;\r\n};\r\n\r\nChunk.prototype.clone = function clone () {\r\n\tvar chunk = new Chunk(this.start, this.end, this.original);\r\n\r\n\tchunk.intro = this.intro;\r\n\tchunk.outro = this.outro;\r\n\tchunk.content = this.content;\r\n\tchunk.storeName = this.storeName;\r\n\tchunk.edited = this.edited;\r\n\r\n\treturn chunk;\r\n};\r\n\r\nChunk.prototype.contains = function contains (index) {\r\n\treturn this.start < index && index < this.end;\r\n};\r\n\r\nChunk.prototype.eachNext = function eachNext (fn) {\r\n\tvar chunk = this;\r\n\twhile (chunk) {\r\n\t\tfn(chunk);\r\n\t\tchunk = chunk.next;\r\n\t}\r\n};\r\n\r\nChunk.prototype.eachPrevious = function eachPrevious (fn) {\r\n\tvar chunk = this;\r\n\twhile (chunk) {\r\n\t\tfn(chunk);\r\n\t\tchunk = chunk.previous;\r\n\t}\r\n};\r\n\r\nChunk.prototype.edit = function edit (content, storeName, contentOnly) {\r\n\tthis.content = content;\r\n\tif (!contentOnly) {\r\n\t\tthis.intro = '';\r\n\t\tthis.outro = '';\r\n\t}\r\n\tthis.storeName = storeName;\r\n\r\n\tthis.edited = true;\r\n\r\n\treturn this;\r\n};\r\n\r\nChunk.prototype.prependLeft = function prependLeft (content) {\r\n\tthis.outro = content + this.outro;\r\n};\r\n\r\nChunk.prototype.prependRight = function prependRight (content) {\r\n\tthis.intro = content + this.intro;\r\n};\r\n\r\nChunk.prototype.split = function split (index) {\r\n\tvar sliceIndex = index - this.start;\r\n\r\n\tvar originalBefore = this.original.slice(0, sliceIndex);\r\n\tvar originalAfter = this.original.slice(sliceIndex);\r\n\r\n\tthis.original = originalBefore;\r\n\r\n\tvar newChunk = new Chunk(index, this.end, originalAfter);\r\n\tnewChunk.outro = this.outro;\r\n\tthis.outro = '';\r\n\r\n\tthis.end = index;\r\n\r\n\tif (this.edited) {\r\n\t\t// TODO is this block necessary?...\r\n\t\tnewChunk.edit('', false);\r\n\t\tthis.content = '';\r\n\t} else {\r\n\t\tthis.content = originalBefore;\r\n\t}\r\n\r\n\tnewChunk.next = this.next;\r\n\tif (newChunk.next) { newChunk.next.previous = newChunk; }\r\n\tnewChunk.previous = this;\r\n\tthis.next = newChunk;\r\n\r\n\treturn newChunk;\r\n};\r\n\r\nChunk.prototype.toString = function toString () {\r\n\treturn this.intro + this.content + this.outro;\r\n};\r\n\r\nChunk.prototype.trimEnd = function trimEnd (rx) {\r\n\tthis.outro = this.outro.replace(rx, '');\r\n\tif (this.outro.length) { return true; }\r\n\r\n\tvar trimmed = this.content.replace(rx, '');\r\n\r\n\tif (trimmed.length) {\r\n\t\tif (trimmed !== this.content) {\r\n\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\r\n\t\t}\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthis.edit('', undefined, true);\r\n\r\n\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\tif (this.intro.length) { return true; }\r\n\t}\r\n};\r\n\r\nChunk.prototype.trimStart = function trimStart (rx) {\r\n\tthis.intro = this.intro.replace(rx, '');\r\n\tif (this.intro.length) { return true; }\r\n\r\n\tvar trimmed = this.content.replace(rx, '');\r\n\r\n\tif (trimmed.length) {\r\n\t\tif (trimmed !== this.content) {\r\n\t\t\tthis.split(this.end - trimmed.length);\r\n\t\t\tthis.edit('', undefined, true);\r\n\t\t}\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthis.edit('', undefined, true);\r\n\r\n\t\tthis.outro = this.outro.replace(rx, '');\r\n\t\tif (this.outro.length) { return true; }\r\n\t}\r\n};\r\n\r\nvar btoa = function () {\r\n\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\r\n};\r\nif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\r\n\tbtoa = function (str) { return window.btoa(unescape(encodeURIComponent(str))); };\r\n} else if (typeof Buffer === 'function') {\r\n\tbtoa = function (str) { return Buffer.from(str, 'utf-8').toString('base64'); };\r\n}\r\n\r\nvar SourceMap = function SourceMap(properties) {\r\n\tthis.version = 3;\r\n\tthis.file = properties.file;\r\n\tthis.sources = properties.sources;\r\n\tthis.sourcesContent = properties.sourcesContent;\r\n\tthis.names = properties.names;\r\n\tthis.mappings = encode$2(properties.mappings);\r\n};\r\n\r\nSourceMap.prototype.toString = function toString () {\r\n\treturn JSON.stringify(this);\r\n};\r\n\r\nSourceMap.prototype.toUrl = function toUrl () {\r\n\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\r\n};\r\n\r\nfunction guessIndent(code) {\r\n\tvar lines = code.split('\\n');\r\n\r\n\tvar tabbed = lines.filter(function (line) { return /^\\t+/.test(line); });\r\n\tvar spaced = lines.filter(function (line) { return /^ {2,}/.test(line); });\r\n\r\n\tif (tabbed.length === 0 && spaced.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// More lines tabbed than spaced? Assume tabs, and\r\n\t// default to tabs in the case of a tie (or nothing\r\n\t// to go on)\r\n\tif (tabbed.length >= spaced.length) {\r\n\t\treturn '\\t';\r\n\t}\r\n\r\n\t// Otherwise, we need to guess the multiple\r\n\tvar min = spaced.reduce(function (previous, current) {\r\n\t\tvar numSpaces = /^ +/.exec(current)[0].length;\r\n\t\treturn Math.min(numSpaces, previous);\r\n\t}, Infinity);\r\n\r\n\treturn new Array(min + 1).join(' ');\r\n}\r\n\r\nfunction getRelativePath(from, to) {\r\n\tvar fromParts = from.split(/[/\\\\]/);\r\n\tvar toParts = to.split(/[/\\\\]/);\r\n\r\n\tfromParts.pop(); // get dirname\r\n\r\n\twhile (fromParts[0] === toParts[0]) {\r\n\t\tfromParts.shift();\r\n\t\ttoParts.shift();\r\n\t}\r\n\r\n\tif (fromParts.length) {\r\n\t\tvar i = fromParts.length;\r\n\t\twhile (i--) { fromParts[i] = '..'; }\r\n\t}\r\n\r\n\treturn fromParts.concat(toParts).join('/');\r\n}\r\n\r\nvar toString$2 = Object.prototype.toString;\r\n\r\nfunction isObject$1(thing) {\r\n\treturn toString$2.call(thing) === '[object Object]';\r\n}\r\n\r\nfunction getLocator(source) {\r\n\tvar originalLines = source.split('\\n');\r\n\tvar lineOffsets = [];\r\n\r\n\tfor (var i = 0, pos = 0; i < originalLines.length; i++) {\r\n\t\tlineOffsets.push(pos);\r\n\t\tpos += originalLines[i].length + 1;\r\n\t}\r\n\r\n\treturn function locate(index) {\r\n\t\tvar i = 0;\r\n\t\tvar j = lineOffsets.length;\r\n\t\twhile (i < j) {\r\n\t\t\tvar m = (i + j) >> 1;\r\n\t\t\tif (index < lineOffsets[m]) {\r\n\t\t\t\tj = m;\r\n\t\t\t} else {\r\n\t\t\t\ti = m + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar line = i - 1;\r\n\t\tvar column = index - lineOffsets[line];\r\n\t\treturn { line: line, column: column };\r\n\t};\r\n}\r\n\r\nvar Mappings = function Mappings(hires) {\r\n\tthis.hires = hires;\r\n\tthis.generatedCodeLine = 0;\r\n\tthis.generatedCodeColumn = 0;\r\n\tthis.raw = [];\r\n\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\r\n\tthis.pending = null;\r\n};\r\n\r\nMappings.prototype.addEdit = function addEdit (sourceIndex, content, loc, nameIndex) {\r\n\tif (content.length) {\r\n\t\tvar segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\r\n\t\tif (nameIndex >= 0) {\r\n\t\t\tsegment.push(nameIndex);\r\n\t\t}\r\n\t\tthis.rawSegments.push(segment);\r\n\t} else if (this.pending) {\r\n\t\tthis.rawSegments.push(this.pending);\r\n\t}\r\n\r\n\tthis.advance(content);\r\n\tthis.pending = null;\r\n};\r\n\r\nMappings.prototype.addUneditedChunk = function addUneditedChunk (sourceIndex, chunk, original, loc, sourcemapLocations) {\r\n\tvar originalCharIndex = chunk.start;\r\n\tvar first = true;\r\n\r\n\twhile (originalCharIndex < chunk.end) {\r\n\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\r\n\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\r\n\t\t}\r\n\r\n\t\tif (original[originalCharIndex] === '\\n') {\r\n\t\t\tloc.line += 1;\r\n\t\t\tloc.column = 0;\r\n\t\t\tthis.generatedCodeLine += 1;\r\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\r\n\t\t\tthis.generatedCodeColumn = 0;\r\n\t\t\tfirst = true;\r\n\t\t} else {\r\n\t\t\tloc.column += 1;\r\n\t\t\tthis.generatedCodeColumn += 1;\r\n\t\t\tfirst = false;\r\n\t\t}\r\n\r\n\t\toriginalCharIndex += 1;\r\n\t}\r\n\r\n\tthis.pending = null;\r\n};\r\n\r\nMappings.prototype.advance = function advance (str) {\r\n\tif (!str) { return; }\r\n\r\n\tvar lines = str.split('\\n');\r\n\r\n\tif (lines.length > 1) {\r\n\t\tfor (var i = 0; i < lines.length - 1; i++) {\r\n\t\t\tthis.generatedCodeLine++;\r\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\r\n\t\t}\r\n\t\tthis.generatedCodeColumn = 0;\r\n\t}\r\n\r\n\tthis.generatedCodeColumn += lines[lines.length - 1].length;\r\n};\r\n\r\nvar n = '\\n';\r\n\r\nvar warned = {\r\n\tinsertLeft: false,\r\n\tinsertRight: false,\r\n\tstoreName: false\r\n};\r\n\r\nvar MagicString = function MagicString(string, options) {\r\n\tif ( options === void 0 ) options = {};\r\n\r\n\tvar chunk = new Chunk(0, string.length, string);\r\n\r\n\tObject.defineProperties(this, {\r\n\t\toriginal:              { writable: true, value: string },\r\n\t\toutro:                 { writable: true, value: '' },\r\n\t\tintro:                 { writable: true, value: '' },\r\n\t\tfirstChunk:            { writable: true, value: chunk },\r\n\t\tlastChunk:             { writable: true, value: chunk },\r\n\t\tlastSearchedChunk:     { writable: true, value: chunk },\r\n\t\tbyStart:               { writable: true, value: {} },\r\n\t\tbyEnd:                 { writable: true, value: {} },\r\n\t\tfilename:              { writable: true, value: options.filename },\r\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\r\n\t\tsourcemapLocations:    { writable: true, value: new BitSet() },\r\n\t\tstoredNames:           { writable: true, value: {} },\r\n\t\tindentStr:             { writable: true, value: guessIndent(string) }\r\n\t});\r\n\r\n\tthis.byStart[0] = chunk;\r\n\tthis.byEnd[string.length] = chunk;\r\n};\r\n\r\nMagicString.prototype.addSourcemapLocation = function addSourcemapLocation (char) {\r\n\tthis.sourcemapLocations.add(char);\r\n};\r\n\r\nMagicString.prototype.append = function append (content) {\r\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\r\n\r\n\tthis.outro += content;\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.appendLeft = function appendLeft (index, content) {\r\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\r\n\r\n\tthis._split(index);\r\n\r\n\tvar chunk = this.byEnd[index];\r\n\r\n\tif (chunk) {\r\n\t\tchunk.appendLeft(content);\r\n\t} else {\r\n\t\tthis.intro += content;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.appendRight = function appendRight (index, content) {\r\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\r\n\r\n\tthis._split(index);\r\n\r\n\tvar chunk = this.byStart[index];\r\n\r\n\tif (chunk) {\r\n\t\tchunk.appendRight(content);\r\n\t} else {\r\n\t\tthis.outro += content;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.clone = function clone () {\r\n\tvar cloned = new MagicString(this.original, { filename: this.filename });\r\n\r\n\tvar originalChunk = this.firstChunk;\r\n\tvar clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\r\n\r\n\twhile (originalChunk) {\r\n\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\r\n\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\r\n\r\n\t\tvar nextOriginalChunk = originalChunk.next;\r\n\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\r\n\r\n\t\tif (nextClonedChunk) {\r\n\t\t\tclonedChunk.next = nextClonedChunk;\r\n\t\t\tnextClonedChunk.previous = clonedChunk;\r\n\r\n\t\t\tclonedChunk = nextClonedChunk;\r\n\t\t}\r\n\r\n\t\toriginalChunk = nextOriginalChunk;\r\n\t}\r\n\r\n\tcloned.lastChunk = clonedChunk;\r\n\r\n\tif (this.indentExclusionRanges) {\r\n\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\r\n\t}\r\n\r\n\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\r\n\r\n\tcloned.intro = this.intro;\r\n\tcloned.outro = this.outro;\r\n\r\n\treturn cloned;\r\n};\r\n\r\nMagicString.prototype.generateDecodedMap = function generateDecodedMap (options) {\r\n\t\tvar this$1 = this;\r\n\r\n\toptions = options || {};\r\n\r\n\tvar sourceIndex = 0;\r\n\tvar names = Object.keys(this.storedNames);\r\n\tvar mappings = new Mappings(options.hires);\r\n\r\n\tvar locate = getLocator(this.original);\r\n\r\n\tif (this.intro) {\r\n\t\tmappings.advance(this.intro);\r\n\t}\r\n\r\n\tthis.firstChunk.eachNext(function (chunk) {\r\n\t\tvar loc = locate(chunk.start);\r\n\r\n\t\tif (chunk.intro.length) { mappings.advance(chunk.intro); }\r\n\r\n\t\tif (chunk.edited) {\r\n\t\t\tmappings.addEdit(\r\n\t\t\t\tsourceIndex,\r\n\t\t\t\tchunk.content,\r\n\t\t\t\tloc,\r\n\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this$1.original, loc, this$1.sourcemapLocations);\r\n\t\t}\r\n\r\n\t\tif (chunk.outro.length) { mappings.advance(chunk.outro); }\r\n\t});\r\n\r\n\treturn {\r\n\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\r\n\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : null],\r\n\t\tsourcesContent: options.includeContent ? [this.original] : [null],\r\n\t\tnames: names,\r\n\t\tmappings: mappings.raw\r\n\t};\r\n};\r\n\r\nMagicString.prototype.generateMap = function generateMap (options) {\r\n\treturn new SourceMap(this.generateDecodedMap(options));\r\n};\r\n\r\nMagicString.prototype.getIndentString = function getIndentString () {\r\n\treturn this.indentStr === null ? '\\t' : this.indentStr;\r\n};\r\n\r\nMagicString.prototype.indent = function indent (indentStr, options) {\r\n\tvar pattern = /^[^\\r\\n]/gm;\r\n\r\n\tif (isObject$1(indentStr)) {\r\n\t\toptions = indentStr;\r\n\t\tindentStr = undefined;\r\n\t}\r\n\r\n\tindentStr = indentStr !== undefined ? indentStr : this.indentStr || '\\t';\r\n\r\n\tif (indentStr === '') { return this; } // noop\r\n\r\n\toptions = options || {};\r\n\r\n\t// Process exclusion ranges\r\n\tvar isExcluded = {};\r\n\r\n\tif (options.exclude) {\r\n\t\tvar exclusions =\r\n\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\r\n\t\texclusions.forEach(function (exclusion) {\r\n\t\t\tfor (var i = exclusion[0]; i < exclusion[1]; i += 1) {\r\n\t\t\t\tisExcluded[i] = true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar shouldIndentNextCharacter = options.indentStart !== false;\r\n\tvar replacer = function (match) {\r\n\t\tif (shouldIndentNextCharacter) { return (\"\" + indentStr + match); }\r\n\t\tshouldIndentNextCharacter = true;\r\n\t\treturn match;\r\n\t};\r\n\r\n\tthis.intro = this.intro.replace(pattern, replacer);\r\n\r\n\tvar charIndex = 0;\r\n\tvar chunk = this.firstChunk;\r\n\r\n\twhile (chunk) {\r\n\t\tvar end = chunk.end;\r\n\r\n\t\tif (chunk.edited) {\r\n\t\t\tif (!isExcluded[charIndex]) {\r\n\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\r\n\r\n\t\t\t\tif (chunk.content.length) {\r\n\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcharIndex = chunk.start;\r\n\r\n\t\t\twhile (charIndex < end) {\r\n\t\t\t\tif (!isExcluded[charIndex]) {\r\n\t\t\t\t\tvar char = this.original[charIndex];\r\n\r\n\t\t\t\t\tif (char === '\\n') {\r\n\t\t\t\t\t\tshouldIndentNextCharacter = true;\r\n\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\r\n\t\t\t\t\t\tshouldIndentNextCharacter = false;\r\n\r\n\t\t\t\t\t\tif (charIndex === chunk.start) {\r\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\r\n\t\t\t\t\t\t\tchunk = chunk.next;\r\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcharIndex += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcharIndex = chunk.end;\r\n\t\tchunk = chunk.next;\r\n\t}\r\n\r\n\tthis.outro = this.outro.replace(pattern, replacer);\r\n\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.insert = function insert () {\r\n\tthrow new Error('magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)');\r\n};\r\n\r\nMagicString.prototype.insertLeft = function insertLeft (index, content) {\r\n\tif (!warned.insertLeft) {\r\n\t\tconsole.warn('magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'); // eslint-disable-line no-console\r\n\t\twarned.insertLeft = true;\r\n\t}\r\n\r\n\treturn this.appendLeft(index, content);\r\n};\r\n\r\nMagicString.prototype.insertRight = function insertRight (index, content) {\r\n\tif (!warned.insertRight) {\r\n\t\tconsole.warn('magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'); // eslint-disable-line no-console\r\n\t\twarned.insertRight = true;\r\n\t}\r\n\r\n\treturn this.prependRight(index, content);\r\n};\r\n\r\nMagicString.prototype.move = function move (start, end, index) {\r\n\tif (index >= start && index <= end) { throw new Error('Cannot move a selection inside itself'); }\r\n\r\n\tthis._split(start);\r\n\tthis._split(end);\r\n\tthis._split(index);\r\n\r\n\tvar first = this.byStart[start];\r\n\tvar last = this.byEnd[end];\r\n\r\n\tvar oldLeft = first.previous;\r\n\tvar oldRight = last.next;\r\n\r\n\tvar newRight = this.byStart[index];\r\n\tif (!newRight && last === this.lastChunk) { return this; }\r\n\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\r\n\r\n\tif (oldLeft) { oldLeft.next = oldRight; }\r\n\tif (oldRight) { oldRight.previous = oldLeft; }\r\n\r\n\tif (newLeft) { newLeft.next = first; }\r\n\tif (newRight) { newRight.previous = last; }\r\n\r\n\tif (!first.previous) { this.firstChunk = last.next; }\r\n\tif (!last.next) {\r\n\t\tthis.lastChunk = first.previous;\r\n\t\tthis.lastChunk.next = null;\r\n\t}\r\n\r\n\tfirst.previous = newLeft;\r\n\tlast.next = newRight || null;\r\n\r\n\tif (!newLeft) { this.firstChunk = first; }\r\n\tif (!newRight) { this.lastChunk = last; }\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.overwrite = function overwrite (start, end, content, options) {\r\n\tif (typeof content !== 'string') { throw new TypeError('replacement content must be a string'); }\r\n\r\n\twhile (start < 0) { start += this.original.length; }\r\n\twhile (end < 0) { end += this.original.length; }\r\n\r\n\tif (end > this.original.length) { throw new Error('end is out of bounds'); }\r\n\tif (start === end)\r\n\t\t{ throw new Error('Cannot overwrite a zero-length range \u2013 use appendLeft or prependRight instead'); }\r\n\r\n\tthis._split(start);\r\n\tthis._split(end);\r\n\r\n\tif (options === true) {\r\n\t\tif (!warned.storeName) {\r\n\t\t\tconsole.warn('The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'); // eslint-disable-line no-console\r\n\t\t\twarned.storeName = true;\r\n\t\t}\r\n\r\n\t\toptions = { storeName: true };\r\n\t}\r\n\tvar storeName = options !== undefined ? options.storeName : false;\r\n\tvar contentOnly = options !== undefined ? options.contentOnly : false;\r\n\r\n\tif (storeName) {\r\n\t\tvar original = this.original.slice(start, end);\r\n\t\tthis.storedNames[original] = true;\r\n\t}\r\n\r\n\tvar first = this.byStart[start];\r\n\tvar last = this.byEnd[end];\r\n\r\n\tif (first) {\r\n\t\tif (end > first.end && first.next !== this.byStart[first.end]) {\r\n\t\t\tthrow new Error('Cannot overwrite across a split point');\r\n\t\t}\r\n\r\n\t\tfirst.edit(content, storeName, contentOnly);\r\n\r\n\t\tif (first !== last) {\r\n\t\t\tvar chunk = first.next;\r\n\t\t\twhile (chunk !== last) {\r\n\t\t\t\tchunk.edit('', false);\r\n\t\t\t\tchunk = chunk.next;\r\n\t\t\t}\r\n\r\n\t\t\tchunk.edit('', false);\r\n\t\t}\r\n\t} else {\r\n\t\t// must be inserting at the end\r\n\t\tvar newChunk = new Chunk(start, end, '').edit(content, storeName);\r\n\r\n\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\r\n\t\tlast.next = newChunk;\r\n\t\tnewChunk.previous = last;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.prepend = function prepend (content) {\r\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\r\n\r\n\tthis.intro = content + this.intro;\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.prependLeft = function prependLeft (index, content) {\r\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\r\n\r\n\tthis._split(index);\r\n\r\n\tvar chunk = this.byEnd[index];\r\n\r\n\tif (chunk) {\r\n\t\tchunk.prependLeft(content);\r\n\t} else {\r\n\t\tthis.intro = content + this.intro;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.prependRight = function prependRight (index, content) {\r\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\r\n\r\n\tthis._split(index);\r\n\r\n\tvar chunk = this.byStart[index];\r\n\r\n\tif (chunk) {\r\n\t\tchunk.prependRight(content);\r\n\t} else {\r\n\t\tthis.outro = content + this.outro;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.remove = function remove (start, end) {\r\n\twhile (start < 0) { start += this.original.length; }\r\n\twhile (end < 0) { end += this.original.length; }\r\n\r\n\tif (start === end) { return this; }\r\n\r\n\tif (start < 0 || end > this.original.length) { throw new Error('Character is out of bounds'); }\r\n\tif (start > end) { throw new Error('end must be greater than start'); }\r\n\r\n\tthis._split(start);\r\n\tthis._split(end);\r\n\r\n\tvar chunk = this.byStart[start];\r\n\r\n\twhile (chunk) {\r\n\t\tchunk.intro = '';\r\n\t\tchunk.outro = '';\r\n\t\tchunk.edit('');\r\n\r\n\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nMagicString.prototype.lastChar = function lastChar () {\r\n\tif (this.outro.length)\r\n\t\t{ return this.outro[this.outro.length - 1]; }\r\n\tvar chunk = this.lastChunk;\r\n\tdo {\r\n\t\tif (chunk.outro.length)\r\n\t\t\t{ return chunk.outro[chunk.outro.length - 1]; }\r\n\t\tif (chunk.content.length)\r\n\t\t\t{ return chunk.content[chunk.content.length - 1]; }\r\n\t\tif (chunk.intro.length)\r\n\t\t\t{ return chunk.intro[chunk.intro.length - 1]; }\r\n\t} while (chunk = chunk.previous);\r\n\tif (this.intro.length)\r\n\t\t{ return this.intro[this.intro.length - 1]; }\r\n\treturn '';\r\n};\r\n\r\nMagicString.prototype.lastLine = function lastLine () {\r\n\tvar lineIndex = this.outro.lastIndexOf(n);\r\n\tif (lineIndex !== -1)\r\n\t\t{ return this.outro.substr(lineIndex + 1); }\r\n\tvar lineStr = this.outro;\r\n\tvar chunk = this.lastChunk;\r\n\tdo {\r\n\t\tif (chunk.outro.length > 0) {\r\n\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\r\n\t\t\tif (lineIndex !== -1)\r\n\t\t\t\t{ return chunk.outro.substr(lineIndex + 1) + lineStr; }\r\n\t\t\tlineStr = chunk.outro + lineStr;\r\n\t\t}\r\n\r\n\t\tif (chunk.content.length > 0) {\r\n\t\t\tlineIndex = chunk.content.lastIndexOf(n);\r\n\t\t\tif (lineIndex !== -1)\r\n\t\t\t\t{ return chunk.content.substr(lineIndex + 1) + lineStr; }\r\n\t\t\tlineStr = chunk.content + lineStr;\r\n\t\t}\r\n\r\n\t\tif (chunk.intro.length > 0) {\r\n\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\r\n\t\t\tif (lineIndex !== -1)\r\n\t\t\t\t{ return chunk.intro.substr(lineIndex + 1) + lineStr; }\r\n\t\t\tlineStr = chunk.intro + lineStr;\r\n\t\t}\r\n\t} while (chunk = chunk.previous);\r\n\tlineIndex = this.intro.lastIndexOf(n);\r\n\tif (lineIndex !== -1)\r\n\t\t{ return this.intro.substr(lineIndex + 1) + lineStr; }\r\n\treturn this.intro + lineStr;\r\n};\r\n\r\nMagicString.prototype.slice = function slice (start, end) {\r\n\t\tif ( start === void 0 ) start = 0;\r\n\t\tif ( end === void 0 ) end = this.original.length;\r\n\r\n\twhile (start < 0) { start += this.original.length; }\r\n\twhile (end < 0) { end += this.original.length; }\r\n\r\n\tvar result = '';\r\n\r\n\t// find start chunk\r\n\tvar chunk = this.firstChunk;\r\n\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\r\n\t\t// found end chunk before start\r\n\t\tif (chunk.start < end && chunk.end >= end) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tchunk = chunk.next;\r\n\t}\r\n\r\n\tif (chunk && chunk.edited && chunk.start !== start)\r\n\t\t{ throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\")); }\r\n\r\n\tvar startChunk = chunk;\r\n\twhile (chunk) {\r\n\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\r\n\t\t\tresult += chunk.intro;\r\n\t\t}\r\n\r\n\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\r\n\t\tif (containsEnd && chunk.edited && chunk.end !== end)\r\n\t\t\t{ throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\")); }\r\n\r\n\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\r\n\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\r\n\r\n\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\r\n\r\n\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\r\n\t\t\tresult += chunk.outro;\r\n\t\t}\r\n\r\n\t\tif (containsEnd) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tchunk = chunk.next;\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n// TODO deprecate this? not really very useful\r\nMagicString.prototype.snip = function snip (start, end) {\r\n\tvar clone = this.clone();\r\n\tclone.remove(0, start);\r\n\tclone.remove(end, clone.original.length);\r\n\r\n\treturn clone;\r\n};\r\n\r\nMagicString.prototype._split = function _split (index) {\r\n\tif (this.byStart[index] || this.byEnd[index]) { return; }\r\n\r\n\tvar chunk = this.lastSearchedChunk;\r\n\tvar searchForward = index > chunk.end;\r\n\r\n\twhile (chunk) {\r\n\t\tif (chunk.contains(index)) { return this._splitChunk(chunk, index); }\r\n\r\n\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\r\n\t}\r\n};\r\n\r\nMagicString.prototype._splitChunk = function _splitChunk (chunk, index) {\r\n\tif (chunk.edited && chunk.content.length) {\r\n\t\t// zero-length edited chunks are a special case (overlapping replacements)\r\n\t\tvar loc = getLocator(this.original)(index);\r\n\t\tthrow new Error(\r\n\t\t\t(\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" \u2013 \\\"\" + (chunk.original) + \"\\\")\")\r\n\t\t);\r\n\t}\r\n\r\n\tvar newChunk = chunk.split(index);\r\n\r\n\tthis.byEnd[index] = chunk;\r\n\tthis.byStart[index] = newChunk;\r\n\tthis.byEnd[newChunk.end] = newChunk;\r\n\r\n\tif (chunk === this.lastChunk) { this.lastChunk = newChunk; }\r\n\r\n\tthis.lastSearchedChunk = chunk;\r\n\treturn true;\r\n};\r\n\r\nMagicString.prototype.toString = function toString () {\r\n\tvar str = this.intro;\r\n\r\n\tvar chunk = this.firstChunk;\r\n\twhile (chunk) {\r\n\t\tstr += chunk.toString();\r\n\t\tchunk = chunk.next;\r\n\t}\r\n\r\n\treturn str + this.outro;\r\n};\r\n\r\nMagicString.prototype.isEmpty = function isEmpty () {\r\n\tvar chunk = this.firstChunk;\r\n\tdo {\r\n\t\tif (chunk.intro.length && chunk.intro.trim() ||\r\n\t\t\t\tchunk.content.length && chunk.content.trim() ||\r\n\t\t\t\tchunk.outro.length && chunk.outro.trim())\r\n\t\t\t{ return false; }\r\n\t} while (chunk = chunk.next);\r\n\treturn true;\r\n};\r\n\r\nMagicString.prototype.length = function length () {\r\n\tvar chunk = this.firstChunk;\r\n\tvar length = 0;\r\n\tdo {\r\n\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\r\n\t} while (chunk = chunk.next);\r\n\treturn length;\r\n};\r\n\r\nMagicString.prototype.trimLines = function trimLines () {\r\n\treturn this.trim('[\\\\r\\\\n]');\r\n};\r\n\r\nMagicString.prototype.trim = function trim (charType) {\r\n\treturn this.trimStart(charType).trimEnd(charType);\r\n};\r\n\r\nMagicString.prototype.trimEndAborted = function trimEndAborted (charType) {\r\n\tvar rx = new RegExp((charType || '\\\\s') + '+$');\r\n\r\n\tthis.outro = this.outro.replace(rx, '');\r\n\tif (this.outro.length) { return true; }\r\n\r\n\tvar chunk = this.lastChunk;\r\n\r\n\tdo {\r\n\t\tvar end = chunk.end;\r\n\t\tvar aborted = chunk.trimEnd(rx);\r\n\r\n\t\t// if chunk was trimmed, we have a new lastChunk\r\n\t\tif (chunk.end !== end) {\r\n\t\t\tif (this.lastChunk === chunk) {\r\n\t\t\t\tthis.lastChunk = chunk.next;\r\n\t\t\t}\r\n\r\n\t\t\tthis.byEnd[chunk.end] = chunk;\r\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\r\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\r\n\t\t}\r\n\r\n\t\tif (aborted) { return true; }\r\n\t\tchunk = chunk.previous;\r\n\t} while (chunk);\r\n\r\n\treturn false;\r\n};\r\n\r\nMagicString.prototype.trimEnd = function trimEnd (charType) {\r\n\tthis.trimEndAborted(charType);\r\n\treturn this;\r\n};\r\nMagicString.prototype.trimStartAborted = function trimStartAborted (charType) {\r\n\tvar rx = new RegExp('^' + (charType || '\\\\s') + '+');\r\n\r\n\tthis.intro = this.intro.replace(rx, '');\r\n\tif (this.intro.length) { return true; }\r\n\r\n\tvar chunk = this.firstChunk;\r\n\r\n\tdo {\r\n\t\tvar end = chunk.end;\r\n\t\tvar aborted = chunk.trimStart(rx);\r\n\r\n\t\tif (chunk.end !== end) {\r\n\t\t\t// special case...\r\n\t\t\tif (chunk === this.lastChunk) { this.lastChunk = chunk.next; }\r\n\r\n\t\t\tthis.byEnd[chunk.end] = chunk;\r\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\r\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\r\n\t\t}\r\n\r\n\t\tif (aborted) { return true; }\r\n\t\tchunk = chunk.next;\r\n\t} while (chunk);\r\n\r\n\treturn false;\r\n};\r\n\r\nMagicString.prototype.trimStart = function trimStart (charType) {\r\n\tthis.trimStartAborted(charType);\r\n\treturn this;\r\n};\r\n\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// resolves . and .. elements in a path array with directory names there\r\n// must be no slashes, empty elements, or device names (c:\\) in the array\r\n// (so also no leading and trailing slashes - it does not distinguish\r\n// relative and absolute paths)\r\nfunction normalizeArray(parts, allowAboveRoot) {\r\n  // if the path tries to go above the root, `up` ends up > 0\r\n  var up = 0;\r\n  for (var i = parts.length - 1; i >= 0; i--) {\r\n    var last = parts[i];\r\n    if (last === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (last === '..') {\r\n      parts.splice(i, 1);\r\n      up++;\r\n    } else if (up) {\r\n      parts.splice(i, 1);\r\n      up--;\r\n    }\r\n  }\r\n\r\n  // if the path is allowed to go above the root, restore leading ..s\r\n  if (allowAboveRoot) {\r\n    for (; up--; up) {\r\n      parts.unshift('..');\r\n    }\r\n  }\r\n\r\n  return parts;\r\n}\r\n\r\n// Split a filename into [root, dir, basename, ext], unix version\r\n// 'root' is just a slash, or nothing.\r\nvar splitPathRe =\r\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\nvar splitPath = function(filename) {\r\n  return splitPathRe.exec(filename).slice(1);\r\n};\r\n\r\n// path.resolve([from ...], to)\r\n// posix version\r\nfunction resolve() {\r\n  var resolvedPath = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n    var path = (i >= 0) ? arguments[i] : '/';\r\n\r\n    // Skip empty and invalid entries\r\n    if (typeof path !== 'string') {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    resolvedPath = path + '/' + resolvedPath;\r\n    resolvedAbsolute = path.charAt(0) === '/';\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path, but\r\n  // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n  // Normalize the path\r\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\r\n    return !!p;\r\n  }), !resolvedAbsolute).join('/');\r\n\r\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n}\r\n// path.normalize(path)\r\n// posix version\r\nfunction normalize(path) {\r\n  var isPathAbsolute = isAbsolute(path),\r\n      trailingSlash = substr(path, -1) === '/';\r\n\r\n  // Normalize the path\r\n  path = normalizeArray(filter(path.split('/'), function(p) {\r\n    return !!p;\r\n  }), !isPathAbsolute).join('/');\r\n\r\n  if (!path && !isPathAbsolute) {\r\n    path = '.';\r\n  }\r\n  if (path && trailingSlash) {\r\n    path += '/';\r\n  }\r\n\r\n  return (isPathAbsolute ? '/' : '') + path;\r\n}\r\n// posix version\r\nfunction isAbsolute(path) {\r\n  return path.charAt(0) === '/';\r\n}\r\n\r\n// posix version\r\nfunction join() {\r\n  var paths = Array.prototype.slice.call(arguments, 0);\r\n  return normalize(filter(paths, function(p, index) {\r\n    if (typeof p !== 'string') {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    return p;\r\n  }).join('/'));\r\n}\r\n\r\n\r\n// path.relative(from, to)\r\n// posix version\r\nfunction relative(from, to) {\r\n  from = resolve(from).substr(1);\r\n  to = resolve(to).substr(1);\r\n\r\n  function trim(arr) {\r\n    var start = 0;\r\n    for (; start < arr.length; start++) {\r\n      if (arr[start] !== '') break;\r\n    }\r\n\r\n    var end = arr.length - 1;\r\n    for (; end >= 0; end--) {\r\n      if (arr[end] !== '') break;\r\n    }\r\n\r\n    if (start > end) return [];\r\n    return arr.slice(start, end - start + 1);\r\n  }\r\n\r\n  var fromParts = trim(from.split('/'));\r\n  var toParts = trim(to.split('/'));\r\n\r\n  var length = Math.min(fromParts.length, toParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (fromParts[i] !== toParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('/');\r\n}\r\n\r\nvar sep = '/';\r\nvar delimiter = ':';\r\n\r\nfunction dirname(path) {\r\n  var result = splitPath(path),\r\n      root = result[0],\r\n      dir = result[1];\r\n\r\n  if (!root && !dir) {\r\n    // No dirname whatsoever\r\n    return '.';\r\n  }\r\n\r\n  if (dir) {\r\n    // It has a dirname, strip trailing slash\r\n    dir = dir.substr(0, dir.length - 1);\r\n  }\r\n\r\n  return root + dir;\r\n}\r\n\r\nfunction basename(path, ext) {\r\n  var f = splitPath(path)[2];\r\n  // TODO: make this comparison case-insensitive on windows?\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n}\r\n\r\n\r\nfunction extname(path) {\r\n  return splitPath(path)[3];\r\n}\r\nvar path = {\r\n  extname: extname,\r\n  basename: basename,\r\n  dirname: dirname,\r\n  sep: sep,\r\n  delimiter: delimiter,\r\n  relative: relative,\r\n  join: join,\r\n  isAbsolute: isAbsolute,\r\n  normalize: normalize,\r\n  resolve: resolve\r\n};\r\nfunction filter (xs, f) {\r\n    if (xs.filter) return xs.filter(f);\r\n    var res = [];\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (f(xs[i], i, xs)) res.push(xs[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\n// String.prototype.substr - negative index don't work in IE8\r\nvar substr = 'ab'.substr(-1) === 'b' ?\r\n    function (str, start, len) { return str.substr(start, len) } :\r\n    function (str, start, len) {\r\n        if (start < 0) start = str.length + start;\r\n        return str.substr(start, len);\r\n    }\r\n;\r\n\r\nvar _polyfillNode_path = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  resolve: resolve,\r\n  normalize: normalize,\r\n  isAbsolute: isAbsolute,\r\n  join: join,\r\n  relative: relative,\r\n  sep: sep,\r\n  delimiter: delimiter,\r\n  dirname: dirname,\r\n  basename: basename,\r\n  extname: extname,\r\n  'default': path\r\n});\r\n\r\n/*! https://mths.be/punycode v1.4.1 by @mathias */\r\n\r\n\r\n/** Highest positive signed 32-bit float value */\r\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\r\n\r\n/** Bootstring parameters */\r\nvar base = 36;\r\nvar tMin = 1;\r\nvar tMax = 26;\r\nvar skew = 38;\r\nvar damp = 700;\r\nvar initialBias = 72;\r\nvar initialN = 128; // 0x80\r\nvar delimiter$1 = '-'; // '\\x2D'\r\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\r\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\r\n\r\n/** Error messages */\r\nvar errors = {\r\n  'overflow': 'Overflow: input needs wider integers to process',\r\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\r\n  'invalid-input': 'Invalid input'\r\n};\r\n\r\n/** Convenience shortcuts */\r\nvar baseMinusTMin = base - tMin;\r\nvar floor = Math.floor;\r\nvar stringFromCharCode = String.fromCharCode;\r\n\r\n/*--------------------------------------------------------------------------*/\r\n\r\n/**\r\n * A generic error utility function.\r\n * @private\r\n * @param {String} type The error type.\r\n * @returns {Error} Throws a `RangeError` with the applicable error message.\r\n */\r\nfunction error(type) {\r\n  throw new RangeError(errors[type]);\r\n}\r\n\r\n/**\r\n * A generic `Array#map` utility function.\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} callback The function that gets called for every array\r\n * item.\r\n * @returns {Array} A new array of values returned by the callback function.\r\n */\r\nfunction map(array, fn) {\r\n  var length = array.length;\r\n  var result = [];\r\n  while (length--) {\r\n    result[length] = fn(array[length]);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * A simple `Array#map`-like wrapper to work with domain name strings or email\r\n * addresses.\r\n * @private\r\n * @param {String} domain The domain name or email address.\r\n * @param {Function} callback The function that gets called for every\r\n * character.\r\n * @returns {Array} A new string of characters returned by the callback\r\n * function.\r\n */\r\nfunction mapDomain(string, fn) {\r\n  var parts = string.split('@');\r\n  var result = '';\r\n  if (parts.length > 1) {\r\n    // In email addresses, only the domain name should be punycoded. Leave\r\n    // the local part (i.e. everything up to `@`) intact.\r\n    result = parts[0] + '@';\r\n    string = parts[1];\r\n  }\r\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\r\n  string = string.replace(regexSeparators, '\\x2E');\r\n  var labels = string.split('.');\r\n  var encoded = map(labels, fn).join('.');\r\n  return result + encoded;\r\n}\r\n\r\n/**\r\n * Creates an array containing the numeric code points of each Unicode\r\n * character in the string. While JavaScript uses UCS-2 internally,\r\n * this function will convert a pair of surrogate halves (each of which\r\n * UCS-2 exposes as separate characters) into a single code point,\r\n * matching UTF-16.\r\n * @see `punycode.ucs2.encode`\r\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\r\n * @memberOf punycode.ucs2\r\n * @name decode\r\n * @param {String} string The Unicode input string (UCS-2).\r\n * @returns {Array} The new array of code points.\r\n */\r\nfunction ucs2decode(string) {\r\n  var output = [],\r\n    counter = 0,\r\n    length = string.length,\r\n    value,\r\n    extra;\r\n  while (counter < length) {\r\n    value = string.charCodeAt(counter++);\r\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\r\n      // high surrogate, and there is a next character\r\n      extra = string.charCodeAt(counter++);\r\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\r\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\r\n      } else {\r\n        // unmatched surrogate; only append this code unit, in case the next\r\n        // code unit is the high surrogate of a surrogate pair\r\n        output.push(value);\r\n        counter--;\r\n      }\r\n    } else {\r\n      output.push(value);\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\n/**\r\n * Converts a digit/integer into a basic code point.\r\n * @see `basicToDigit()`\r\n * @private\r\n * @param {Number} digit The numeric value of a basic code point.\r\n * @returns {Number} The basic code point whose value (when used for\r\n * representing integers) is `digit`, which needs to be in the range\r\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\r\n * used; else, the lowercase form is used. The behavior is undefined\r\n * if `flag` is non-zero and `digit` has no uppercase form.\r\n */\r\nfunction digitToBasic(digit, flag) {\r\n  //  0..25 map to ASCII a..z or A..Z\r\n  // 26..35 map to ASCII 0..9\r\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\r\n}\r\n\r\n/**\r\n * Bias adaptation function as per section 3.4 of RFC 3492.\r\n * https://tools.ietf.org/html/rfc3492#section-3.4\r\n * @private\r\n */\r\nfunction adapt(delta, numPoints, firstTime) {\r\n  var k = 0;\r\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\r\n  delta += floor(delta / numPoints);\r\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\r\n    delta = floor(delta / baseMinusTMin);\r\n  }\r\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\r\n}\r\n\r\n/**\r\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\r\n * Punycode string of ASCII-only symbols.\r\n * @memberOf punycode\r\n * @param {String} input The string of Unicode symbols.\r\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\r\n */\r\nfunction encode$3(input) {\r\n  var n,\r\n    delta,\r\n    handledCPCount,\r\n    basicLength,\r\n    bias,\r\n    j,\r\n    m,\r\n    q,\r\n    k,\r\n    t,\r\n    currentValue,\r\n    output = [],\r\n    /** `inputLength` will hold the number of code points in `input`. */\r\n    inputLength,\r\n    /** Cached calculation results */\r\n    handledCPCountPlusOne,\r\n    baseMinusT,\r\n    qMinusT;\r\n\r\n  // Convert the input in UCS-2 to Unicode\r\n  input = ucs2decode(input);\r\n\r\n  // Cache the length\r\n  inputLength = input.length;\r\n\r\n  // Initialize the state\r\n  n = initialN;\r\n  delta = 0;\r\n  bias = initialBias;\r\n\r\n  // Handle the basic code points\r\n  for (j = 0; j < inputLength; ++j) {\r\n    currentValue = input[j];\r\n    if (currentValue < 0x80) {\r\n      output.push(stringFromCharCode(currentValue));\r\n    }\r\n  }\r\n\r\n  handledCPCount = basicLength = output.length;\r\n\r\n  // `handledCPCount` is the number of code points that have been handled;\r\n  // `basicLength` is the number of basic code points.\r\n\r\n  // Finish the basic string - if it is not empty - with a delimiter\r\n  if (basicLength) {\r\n    output.push(delimiter$1);\r\n  }\r\n\r\n  // Main encoding loop:\r\n  while (handledCPCount < inputLength) {\r\n\r\n    // All non-basic code points < n have been handled already. Find the next\r\n    // larger one:\r\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\r\n      currentValue = input[j];\r\n      if (currentValue >= n && currentValue < m) {\r\n        m = currentValue;\r\n      }\r\n    }\r\n\r\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\r\n    // but guard against overflow\r\n    handledCPCountPlusOne = handledCPCount + 1;\r\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\r\n      error('overflow');\r\n    }\r\n\r\n    delta += (m - n) * handledCPCountPlusOne;\r\n    n = m;\r\n\r\n    for (j = 0; j < inputLength; ++j) {\r\n      currentValue = input[j];\r\n\r\n      if (currentValue < n && ++delta > maxInt) {\r\n        error('overflow');\r\n      }\r\n\r\n      if (currentValue == n) {\r\n        // Represent delta as a generalized variable-length integer\r\n        for (q = delta, k = base; /* no condition */ ; k += base) {\r\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\r\n          if (q < t) {\r\n            break;\r\n          }\r\n          qMinusT = q - t;\r\n          baseMinusT = base - t;\r\n          output.push(\r\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\r\n          );\r\n          q = floor(qMinusT / baseMinusT);\r\n        }\r\n\r\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\r\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\r\n        delta = 0;\r\n        ++handledCPCount;\r\n      }\r\n    }\r\n\r\n    ++delta;\r\n    ++n;\r\n\r\n  }\r\n  return output.join('');\r\n}\r\n\r\n/**\r\n * Converts a Unicode string representing a domain name or an email address to\r\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\r\n * i.e. it doesn't matter if you call it with a domain that's already in\r\n * ASCII.\r\n * @memberOf punycode\r\n * @param {String} input The domain name or email address to convert, as a\r\n * Unicode string.\r\n * @returns {String} The Punycode representation of the given domain name or\r\n * email address.\r\n */\r\nfunction toASCII(input) {\r\n  return mapDomain(input, function(string) {\r\n    return regexNonASCII.test(string) ?\r\n      'xn--' + encode$3(string) :\r\n      string;\r\n  });\r\n}\r\n\r\n// shim for using process in browser\r\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\nvar cachedSetTimeout = defaultSetTimout;\r\nvar cachedClearTimeout = defaultClearTimeout;\r\nif (typeof global.setTimeout === 'function') {\r\n    cachedSetTimeout = setTimeout;\r\n}\r\nif (typeof global.clearTimeout === 'function') {\r\n    cachedClearTimeout = clearTimeout;\r\n}\r\n\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\nfunction nextTick(fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n}\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nvar title = 'browser';\r\nvar platform = 'browser';\r\nvar browser = true;\r\nvar env = {};\r\nvar argv = [];\r\nvar version = ''; // empty string to avoid regexp issues\r\nvar versions = {};\r\nvar release = {};\r\nvar config = {};\r\n\r\nfunction noop() {}\r\n\r\nvar on = noop;\r\nvar addListener = noop;\r\nvar once = noop;\r\nvar off = noop;\r\nvar removeListener = noop;\r\nvar removeAllListeners = noop;\r\nvar emit = noop;\r\n\r\nfunction binding(name) {\r\n    throw new Error('process.binding is not supported');\r\n}\r\n\r\nfunction cwd () { return '/' }\r\nfunction chdir (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n}function umask() { return 0; }\r\n\r\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\r\nvar performance = global.performance || {};\r\nvar performanceNow =\r\n  performance.now        ||\r\n  performance.mozNow     ||\r\n  performance.msNow      ||\r\n  performance.oNow       ||\r\n  performance.webkitNow  ||\r\n  function(){ return (new Date()).getTime() };\r\n\r\n// generate timestamp or delta\r\n// see http://nodejs.org/api/process.html#process_process_hrtime\r\nfunction hrtime(previousTimestamp){\r\n  var clocktime = performanceNow.call(performance)*1e-3;\r\n  var seconds = Math.floor(clocktime);\r\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\r\n  if (previousTimestamp) {\r\n    seconds = seconds - previousTimestamp[0];\r\n    nanoseconds = nanoseconds - previousTimestamp[1];\r\n    if (nanoseconds<0) {\r\n      seconds--;\r\n      nanoseconds += 1e9;\r\n    }\r\n  }\r\n  return [seconds,nanoseconds]\r\n}\r\n\r\nvar startTime = new Date();\r\nfunction uptime() {\r\n  var currentTime = new Date();\r\n  var dif = currentTime - startTime;\r\n  return dif / 1000;\r\n}\r\n\r\nvar browser$1 = {\r\n  nextTick: nextTick,\r\n  title: title,\r\n  browser: browser,\r\n  env: env,\r\n  argv: argv,\r\n  version: version,\r\n  versions: versions,\r\n  on: on,\r\n  addListener: addListener,\r\n  once: once,\r\n  off: off,\r\n  removeListener: removeListener,\r\n  removeAllListeners: removeAllListeners,\r\n  emit: emit,\r\n  binding: binding,\r\n  cwd: cwd,\r\n  chdir: chdir,\r\n  umask: umask,\r\n  hrtime: hrtime,\r\n  platform: platform,\r\n  release: release,\r\n  config: config,\r\n  uptime: uptime\r\n};\r\n\r\nvar inherits;\r\nif (typeof Object.create === 'function'){\r\n  inherits = function inherits(ctor, superCtor) {\r\n    // implementation from standard node.js 'util' module\r\n    ctor.super_ = superCtor;\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  };\r\n} else {\r\n  inherits = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor;\r\n    var TempCtor = function () {};\r\n    TempCtor.prototype = superCtor.prototype;\r\n    ctor.prototype = new TempCtor();\r\n    ctor.prototype.constructor = ctor;\r\n  };\r\n}\r\nvar inherits$1 = inherits;\r\n\r\nvar formatRegExp = /%[sdj%]/g;\r\nfunction format(f) {\r\n  if (!isString$1(f)) {\r\n    var objects = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      objects.push(inspect(arguments[i]));\r\n    }\r\n    return objects.join(' ');\r\n  }\r\n\r\n  var i = 1;\r\n  var args = arguments;\r\n  var len = args.length;\r\n  var str = String(f).replace(formatRegExp, function(x) {\r\n    if (x === '%%') return '%';\r\n    if (i >= len) return x;\r\n    switch (x) {\r\n      case '%s': return String(args[i++]);\r\n      case '%d': return Number(args[i++]);\r\n      case '%j':\r\n        try {\r\n          return JSON.stringify(args[i++]);\r\n        } catch (_) {\r\n          return '[Circular]';\r\n        }\r\n      default:\r\n        return x;\r\n    }\r\n  });\r\n  for (var x = args[i]; i < len; x = args[++i]) {\r\n    if (isNull(x) || !isObject$2(x)) {\r\n      str += ' ' + x;\r\n    } else {\r\n      str += ' ' + inspect(x);\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\n// Mark that a method should not be used.\r\n// Returns a modified function which warns once by default.\r\n// If --no-deprecation is set, then it is a no-op.\r\nfunction deprecate(fn, msg) {\r\n  // Allow for deprecating things in the process of starting up.\r\n  if (isUndefined(global.process)) {\r\n    return function() {\r\n      return deprecate(fn, msg).apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  if (browser$1.noDeprecation === true) {\r\n    return fn;\r\n  }\r\n\r\n  var warned = false;\r\n  function deprecated() {\r\n    if (!warned) {\r\n      if (browser$1.throwDeprecation) {\r\n        throw new Error(msg);\r\n      } else if (browser$1.traceDeprecation) {\r\n        console.trace(msg);\r\n      } else {\r\n        console.error(msg);\r\n      }\r\n      warned = true;\r\n    }\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return deprecated;\r\n}\r\n\r\nvar debugs = {};\r\nvar debugEnviron;\r\nfunction debuglog(set) {\r\n  if (isUndefined(debugEnviron))\r\n    debugEnviron = browser$1.env.NODE_DEBUG || '';\r\n  set = set.toUpperCase();\r\n  if (!debugs[set]) {\r\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\r\n      var pid = 0;\r\n      debugs[set] = function() {\r\n        var msg = format.apply(null, arguments);\r\n        console.error('%s %d: %s', set, pid, msg);\r\n      };\r\n    } else {\r\n      debugs[set] = function() {};\r\n    }\r\n  }\r\n  return debugs[set];\r\n}\r\n\r\n/**\r\n * Echos the value of a value. Trys to print the value out\r\n * in the best way possible given the different types.\r\n *\r\n * @param {Object} obj The object to print out.\r\n * @param {Object} opts Optional options object that alters the output.\r\n */\r\n/* legacy: obj, showHidden, depth, colors*/\r\nfunction inspect(obj, opts) {\r\n  // default options\r\n  var ctx = {\r\n    seen: [],\r\n    stylize: stylizeNoColor\r\n  };\r\n  // legacy...\r\n  if (arguments.length >= 3) ctx.depth = arguments[2];\r\n  if (arguments.length >= 4) ctx.colors = arguments[3];\r\n  if (isBoolean(opts)) {\r\n    // legacy...\r\n    ctx.showHidden = opts;\r\n  } else if (opts) {\r\n    // got an \"options\" object\r\n    _extend(ctx, opts);\r\n  }\r\n  // set default options\r\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\r\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\r\n  if (isUndefined(ctx.colors)) ctx.colors = false;\r\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\r\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\r\n  return formatValue(ctx, obj, ctx.depth);\r\n}\r\n\r\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\r\ninspect.colors = {\r\n  'bold' : [1, 22],\r\n  'italic' : [3, 23],\r\n  'underline' : [4, 24],\r\n  'inverse' : [7, 27],\r\n  'white' : [37, 39],\r\n  'grey' : [90, 39],\r\n  'black' : [30, 39],\r\n  'blue' : [34, 39],\r\n  'cyan' : [36, 39],\r\n  'green' : [32, 39],\r\n  'magenta' : [35, 39],\r\n  'red' : [31, 39],\r\n  'yellow' : [33, 39]\r\n};\r\n\r\n// Don't use 'blue' not visible on cmd.exe\r\ninspect.styles = {\r\n  'special': 'cyan',\r\n  'number': 'yellow',\r\n  'boolean': 'yellow',\r\n  'undefined': 'grey',\r\n  'null': 'bold',\r\n  'string': 'green',\r\n  'date': 'magenta',\r\n  // \"name\": intentionally not styling\r\n  'regexp': 'red'\r\n};\r\n\r\n\r\nfunction stylizeWithColor(str, styleType) {\r\n  var style = inspect.styles[styleType];\r\n\r\n  if (style) {\r\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\r\n           '\\u001b[' + inspect.colors[style][1] + 'm';\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n\r\n\r\nfunction stylizeNoColor(str, styleType) {\r\n  return str;\r\n}\r\n\r\n\r\nfunction arrayToHash(array) {\r\n  var hash = {};\r\n\r\n  array.forEach(function(val, idx) {\r\n    hash[val] = true;\r\n  });\r\n\r\n  return hash;\r\n}\r\n\r\n\r\nfunction formatValue(ctx, value, recurseTimes) {\r\n  // Provide a hook for user-specified inspect functions.\r\n  // Check that value is an object with an inspect function on it\r\n  if (ctx.customInspect &&\r\n      value &&\r\n      isFunction$1(value.inspect) &&\r\n      // Filter out the util module, it's inspect function is special\r\n      value.inspect !== inspect &&\r\n      // Also filter out any prototype objects using the circular check.\r\n      !(value.constructor && value.constructor.prototype === value)) {\r\n    var ret = value.inspect(recurseTimes, ctx);\r\n    if (!isString$1(ret)) {\r\n      ret = formatValue(ctx, ret, recurseTimes);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Primitive types cannot have properties\r\n  var primitive = formatPrimitive(ctx, value);\r\n  if (primitive) {\r\n    return primitive;\r\n  }\r\n\r\n  // Look up the keys of the object.\r\n  var keys = Object.keys(value);\r\n  var visibleKeys = arrayToHash(keys);\r\n\r\n  if (ctx.showHidden) {\r\n    keys = Object.getOwnPropertyNames(value);\r\n  }\r\n\r\n  // IE doesn't make error fields non-enumerable\r\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\r\n  if (isError(value)\r\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\r\n    return formatError(value);\r\n  }\r\n\r\n  // Some type of object without properties can be shortcutted.\r\n  if (keys.length === 0) {\r\n    if (isFunction$1(value)) {\r\n      var name = value.name ? ': ' + value.name : '';\r\n      return ctx.stylize('[Function' + name + ']', 'special');\r\n    }\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    }\r\n    if (isDate(value)) {\r\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\r\n    }\r\n    if (isError(value)) {\r\n      return formatError(value);\r\n    }\r\n  }\r\n\r\n  var base = '', array = false, braces = ['{', '}'];\r\n\r\n  // Make Array say that they are Array\r\n  if (isArray$2(value)) {\r\n    array = true;\r\n    braces = ['[', ']'];\r\n  }\r\n\r\n  // Make functions say that they are functions\r\n  if (isFunction$1(value)) {\r\n    var n = value.name ? ': ' + value.name : '';\r\n    base = ' [Function' + n + ']';\r\n  }\r\n\r\n  // Make RegExps say that they are RegExps\r\n  if (isRegExp(value)) {\r\n    base = ' ' + RegExp.prototype.toString.call(value);\r\n  }\r\n\r\n  // Make dates with properties first say the date\r\n  if (isDate(value)) {\r\n    base = ' ' + Date.prototype.toUTCString.call(value);\r\n  }\r\n\r\n  // Make error with message first say the error\r\n  if (isError(value)) {\r\n    base = ' ' + formatError(value);\r\n  }\r\n\r\n  if (keys.length === 0 && (!array || value.length == 0)) {\r\n    return braces[0] + base + braces[1];\r\n  }\r\n\r\n  if (recurseTimes < 0) {\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    } else {\r\n      return ctx.stylize('[Object]', 'special');\r\n    }\r\n  }\r\n\r\n  ctx.seen.push(value);\r\n\r\n  var output;\r\n  if (array) {\r\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\r\n  } else {\r\n    output = keys.map(function(key) {\r\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\r\n    });\r\n  }\r\n\r\n  ctx.seen.pop();\r\n\r\n  return reduceToSingleString(output, base, braces);\r\n}\r\n\r\n\r\nfunction formatPrimitive(ctx, value) {\r\n  if (isUndefined(value))\r\n    return ctx.stylize('undefined', 'undefined');\r\n  if (isString$1(value)) {\r\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\r\n                                             .replace(/'/g, \"\\\\'\")\r\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\r\n    return ctx.stylize(simple, 'string');\r\n  }\r\n  if (isNumber(value))\r\n    return ctx.stylize('' + value, 'number');\r\n  if (isBoolean(value))\r\n    return ctx.stylize('' + value, 'boolean');\r\n  // For some reason typeof null is \"object\", so special case here.\r\n  if (isNull(value))\r\n    return ctx.stylize('null', 'null');\r\n}\r\n\r\n\r\nfunction formatError(value) {\r\n  return '[' + Error.prototype.toString.call(value) + ']';\r\n}\r\n\r\n\r\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\r\n  var output = [];\r\n  for (var i = 0, l = value.length; i < l; ++i) {\r\n    if (hasOwnProperty$1(value, String(i))) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          String(i), true));\r\n    } else {\r\n      output.push('');\r\n    }\r\n  }\r\n  keys.forEach(function(key) {\r\n    if (!key.match(/^\\d+$/)) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          key, true));\r\n    }\r\n  });\r\n  return output;\r\n}\r\n\r\n\r\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\r\n  var name, str, desc;\r\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\r\n  if (desc.get) {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Getter/Setter]', 'special');\r\n    } else {\r\n      str = ctx.stylize('[Getter]', 'special');\r\n    }\r\n  } else {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Setter]', 'special');\r\n    }\r\n  }\r\n  if (!hasOwnProperty$1(visibleKeys, key)) {\r\n    name = '[' + key + ']';\r\n  }\r\n  if (!str) {\r\n    if (ctx.seen.indexOf(desc.value) < 0) {\r\n      if (isNull(recurseTimes)) {\r\n        str = formatValue(ctx, desc.value, null);\r\n      } else {\r\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\r\n      }\r\n      if (str.indexOf('\\n') > -1) {\r\n        if (array) {\r\n          str = str.split('\\n').map(function(line) {\r\n            return '  ' + line;\r\n          }).join('\\n').substr(2);\r\n        } else {\r\n          str = '\\n' + str.split('\\n').map(function(line) {\r\n            return '   ' + line;\r\n          }).join('\\n');\r\n        }\r\n      }\r\n    } else {\r\n      str = ctx.stylize('[Circular]', 'special');\r\n    }\r\n  }\r\n  if (isUndefined(name)) {\r\n    if (array && key.match(/^\\d+$/)) {\r\n      return str;\r\n    }\r\n    name = JSON.stringify('' + key);\r\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\r\n      name = name.substr(1, name.length - 2);\r\n      name = ctx.stylize(name, 'name');\r\n    } else {\r\n      name = name.replace(/'/g, \"\\\\'\")\r\n                 .replace(/\\\\\"/g, '\"')\r\n                 .replace(/(^\"|\"$)/g, \"'\");\r\n      name = ctx.stylize(name, 'string');\r\n    }\r\n  }\r\n\r\n  return name + ': ' + str;\r\n}\r\n\r\n\r\nfunction reduceToSingleString(output, base, braces) {\r\n  var length = output.reduce(function(prev, cur) {\r\n    if (cur.indexOf('\\n') >= 0) ;\r\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\r\n  }, 0);\r\n\r\n  if (length > 60) {\r\n    return braces[0] +\r\n           (base === '' ? '' : base + '\\n ') +\r\n           ' ' +\r\n           output.join(',\\n  ') +\r\n           ' ' +\r\n           braces[1];\r\n  }\r\n\r\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\r\n}\r\n\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\nfunction isArray$2(ar) {\r\n  return Array.isArray(ar);\r\n}\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\n\r\nfunction isString$1(arg) {\r\n  return typeof arg === 'string';\r\n}\r\n\r\nfunction isSymbol$1(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\n\r\nfunction isRegExp(re) {\r\n  return isObject$2(re) && objectToString$1(re) === '[object RegExp]';\r\n}\r\n\r\nfunction isObject$2(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\n\r\nfunction isDate(d) {\r\n  return isObject$2(d) && objectToString$1(d) === '[object Date]';\r\n}\r\n\r\nfunction isError(e) {\r\n  return isObject$2(e) &&\r\n      (objectToString$1(e) === '[object Error]' || e instanceof Error);\r\n}\r\n\r\nfunction isFunction$1(arg) {\r\n  return typeof arg === 'function';\r\n}\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\n\r\nfunction isBuffer$1(maybeBuf) {\r\n  return Buffer.isBuffer(maybeBuf);\r\n}\r\n\r\nfunction objectToString$1(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\n\r\nfunction pad$1(n) {\r\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\r\n}\r\n\r\n\r\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\r\n              'Oct', 'Nov', 'Dec'];\r\n\r\n// 26 Feb 16:19:34\r\nfunction timestamp() {\r\n  var d = new Date();\r\n  var time = [pad$1(d.getHours()),\r\n              pad$1(d.getMinutes()),\r\n              pad$1(d.getSeconds())].join(':');\r\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\r\n}\r\n\r\n\r\n// log is just a thin wrapper to console.log that prepends a timestamp\r\nfunction log() {\r\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\r\n}\r\n\r\nfunction _extend(origin, add) {\r\n  // Don't do anything if add isn't an object\r\n  if (!add || !isObject$2(add)) return origin;\r\n\r\n  var keys = Object.keys(add);\r\n  var i = keys.length;\r\n  while (i--) {\r\n    origin[keys[i]] = add[keys[i]];\r\n  }\r\n  return origin;\r\n}\r\nfunction hasOwnProperty$1(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\nvar _polyfillNode_util = {\r\n  inherits: inherits$1,\r\n  _extend: _extend,\r\n  log: log,\r\n  isBuffer: isBuffer$1,\r\n  isPrimitive: isPrimitive,\r\n  isFunction: isFunction$1,\r\n  isError: isError,\r\n  isDate: isDate,\r\n  isObject: isObject$2,\r\n  isRegExp: isRegExp,\r\n  isUndefined: isUndefined,\r\n  isSymbol: isSymbol$1,\r\n  isString: isString$1,\r\n  isNumber: isNumber,\r\n  isNullOrUndefined: isNullOrUndefined,\r\n  isNull: isNull,\r\n  isBoolean: isBoolean,\r\n  isArray: isArray$2,\r\n  inspect: inspect,\r\n  deprecate: deprecate,\r\n  format: format,\r\n  debuglog: debuglog\r\n};\r\n\r\nvar _polyfillNode_util$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  format: format,\r\n  deprecate: deprecate,\r\n  debuglog: debuglog,\r\n  inspect: inspect,\r\n  isArray: isArray$2,\r\n  isBoolean: isBoolean,\r\n  isNull: isNull,\r\n  isNullOrUndefined: isNullOrUndefined,\r\n  isNumber: isNumber,\r\n  isString: isString$1,\r\n  isSymbol: isSymbol$1,\r\n  isUndefined: isUndefined,\r\n  isRegExp: isRegExp,\r\n  isObject: isObject$2,\r\n  isDate: isDate,\r\n  isError: isError,\r\n  isFunction: isFunction$1,\r\n  isPrimitive: isPrimitive,\r\n  isBuffer: isBuffer$1,\r\n  log: log,\r\n  inherits: inherits$1,\r\n  _extend: _extend,\r\n  'default': _polyfillNode_util\r\n});\r\n\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n// If obj.hasOwnProperty has been overridden, then calling\r\n// obj.hasOwnProperty(prop) will break.\r\n// See: https://github.com/joyent/node/issues/1707\r\nfunction hasOwnProperty$2(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\nvar isArray$3 = Array.isArray || function (xs) {\r\n  return Object.prototype.toString.call(xs) === '[object Array]';\r\n};\r\nfunction stringifyPrimitive(v) {\r\n  switch (typeof v) {\r\n    case 'string':\r\n      return v;\r\n\r\n    case 'boolean':\r\n      return v ? 'true' : 'false';\r\n\r\n    case 'number':\r\n      return isFinite(v) ? v : '';\r\n\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction stringify (obj, sep, eq, name) {\r\n  sep = sep || '&';\r\n  eq = eq || '=';\r\n  if (obj === null) {\r\n    obj = undefined;\r\n  }\r\n\r\n  if (typeof obj === 'object') {\r\n    return map$1(objectKeys(obj), function(k) {\r\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\r\n      if (isArray$3(obj[k])) {\r\n        return map$1(obj[k], function(v) {\r\n          return ks + encodeURIComponent(stringifyPrimitive(v));\r\n        }).join(sep);\r\n      } else {\r\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\r\n      }\r\n    }).join(sep);\r\n\r\n  }\r\n\r\n  if (!name) return '';\r\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\r\n         encodeURIComponent(stringifyPrimitive(obj));\r\n}\r\nfunction map$1 (xs, f) {\r\n  if (xs.map) return xs.map(f);\r\n  var res = [];\r\n  for (var i = 0; i < xs.length; i++) {\r\n    res.push(f(xs[i], i));\r\n  }\r\n  return res;\r\n}\r\n\r\nvar objectKeys = Object.keys || function (obj) {\r\n  var res = [];\r\n  for (var key in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\r\n  }\r\n  return res;\r\n};\r\n\r\nfunction parse$2(qs, sep, eq, options) {\r\n  sep = sep || '&';\r\n  eq = eq || '=';\r\n  var obj = {};\r\n\r\n  if (typeof qs !== 'string' || qs.length === 0) {\r\n    return obj;\r\n  }\r\n\r\n  var regexp = /\\+/g;\r\n  qs = qs.split(sep);\r\n\r\n  var maxKeys = 1000;\r\n  if (options && typeof options.maxKeys === 'number') {\r\n    maxKeys = options.maxKeys;\r\n  }\r\n\r\n  var len = qs.length;\r\n  // maxKeys <= 0 means that we should not limit keys count\r\n  if (maxKeys > 0 && len > maxKeys) {\r\n    len = maxKeys;\r\n  }\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    var x = qs[i].replace(regexp, '%20'),\r\n        idx = x.indexOf(eq),\r\n        kstr, vstr, k, v;\r\n\r\n    if (idx >= 0) {\r\n      kstr = x.substr(0, idx);\r\n      vstr = x.substr(idx + 1);\r\n    } else {\r\n      kstr = x;\r\n      vstr = '';\r\n    }\r\n\r\n    k = decodeURIComponent(kstr);\r\n    v = decodeURIComponent(vstr);\r\n\r\n    if (!hasOwnProperty$2(obj, k)) {\r\n      obj[k] = v;\r\n    } else if (isArray$3(obj[k])) {\r\n      obj[k].push(v);\r\n    } else {\r\n      obj[k] = [obj[k], v];\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n// Copyright Joyent, Inc. and other Node contributors.\r\nvar _polyfillNode_url = {\r\n  parse: urlParse,\r\n  resolve: urlResolve,\r\n  resolveObject: urlResolveObject,\r\n  format: urlFormat,\r\n  Url: Url\r\n};\r\nfunction Url() {\r\n  this.protocol = null;\r\n  this.slashes = null;\r\n  this.auth = null;\r\n  this.host = null;\r\n  this.port = null;\r\n  this.hostname = null;\r\n  this.hash = null;\r\n  this.search = null;\r\n  this.query = null;\r\n  this.pathname = null;\r\n  this.path = null;\r\n  this.href = null;\r\n}\r\n\r\n// Reference: RFC 3986, RFC 1808, RFC 2396\r\n\r\n// define these here so at least they only have to be\r\n// compiled once on the first module load.\r\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\r\n  portPattern = /:[0-9]*$/,\r\n\r\n  // Special case for a simple path URL\r\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\r\n\r\n  // RFC 2396: characters reserved for delimiting URLs.\r\n  // We actually just auto-escape these.\r\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\r\n\r\n  // RFC 2396: characters not allowed for various reasons.\r\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\r\n\r\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\r\n  autoEscape = ['\\''].concat(unwise),\r\n  // Characters that are never ever allowed in a hostname.\r\n  // Note that any invalid chars are also handled, but these\r\n  // are the ones that are *expected* to be seen, so we fast-path\r\n  // them.\r\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\r\n  hostEndingChars = ['/', '?', '#'],\r\n  hostnameMaxLen = 255,\r\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\r\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\r\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\r\n  unsafeProtocol = {\r\n    'javascript': true,\r\n    'javascript:': true\r\n  },\r\n  // protocols that never have a hostname.\r\n  hostlessProtocol = {\r\n    'javascript': true,\r\n    'javascript:': true\r\n  },\r\n  // protocols that always contain a // bit.\r\n  slashedProtocol = {\r\n    'http': true,\r\n    'https': true,\r\n    'ftp': true,\r\n    'gopher': true,\r\n    'file': true,\r\n    'http:': true,\r\n    'https:': true,\r\n    'ftp:': true,\r\n    'gopher:': true,\r\n    'file:': true\r\n  };\r\n\r\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\r\n  if (url && isObject$2(url) && url instanceof Url) return url;\r\n\r\n  var u = new Url;\r\n  u.parse(url, parseQueryString, slashesDenoteHost);\r\n  return u;\r\n}\r\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\r\n  return parse$3(this, url, parseQueryString, slashesDenoteHost);\r\n};\r\n\r\nfunction parse$3(self, url, parseQueryString, slashesDenoteHost) {\r\n  if (!isString$1(url)) {\r\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\r\n  }\r\n\r\n  // Copy chrome, IE, opera backslash-handling behavior.\r\n  // Back slashes before the query string get converted to forward slashes\r\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\r\n  var queryIndex = url.indexOf('?'),\r\n    splitter =\r\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\r\n    uSplit = url.split(splitter),\r\n    slashRegex = /\\\\/g;\r\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\r\n  url = uSplit.join(splitter);\r\n\r\n  var rest = url;\r\n\r\n  // trim before proceeding.\r\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\r\n  rest = rest.trim();\r\n\r\n  if (!slashesDenoteHost && url.split('#').length === 1) {\r\n    // Try fast path regexp\r\n    var simplePath = simplePathPattern.exec(rest);\r\n    if (simplePath) {\r\n      self.path = rest;\r\n      self.href = rest;\r\n      self.pathname = simplePath[1];\r\n      if (simplePath[2]) {\r\n        self.search = simplePath[2];\r\n        if (parseQueryString) {\r\n          self.query = parse$2(self.search.substr(1));\r\n        } else {\r\n          self.query = self.search.substr(1);\r\n        }\r\n      } else if (parseQueryString) {\r\n        self.search = '';\r\n        self.query = {};\r\n      }\r\n      return self;\r\n    }\r\n  }\r\n\r\n  var proto = protocolPattern.exec(rest);\r\n  if (proto) {\r\n    proto = proto[0];\r\n    var lowerProto = proto.toLowerCase();\r\n    self.protocol = lowerProto;\r\n    rest = rest.substr(proto.length);\r\n  }\r\n\r\n  // figure out if it's got a host\r\n  // user@server is *always* interpreted as a hostname, and url\r\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\r\n  // how the browser resolves relative URLs.\r\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\r\n    var slashes = rest.substr(0, 2) === '//';\r\n    if (slashes && !(proto && hostlessProtocol[proto])) {\r\n      rest = rest.substr(2);\r\n      self.slashes = true;\r\n    }\r\n  }\r\n  var i, hec, l, p;\r\n  if (!hostlessProtocol[proto] &&\r\n    (slashes || (proto && !slashedProtocol[proto]))) {\r\n\r\n    // there's a hostname.\r\n    // the first instance of /, ?, ;, or # ends the host.\r\n    //\r\n    // If there is an @ in the hostname, then non-host chars *are* allowed\r\n    // to the left of the last @ sign, unless some host-ending character\r\n    // comes *before* the @-sign.\r\n    // URLs are obnoxious.\r\n    //\r\n    // ex:\r\n    // http://a@b@c/ => user:a@b host:c\r\n    // http://a@b?@c => user:a host:c path:/?@c\r\n\r\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\r\n    // Review our test case against browsers more comprehensively.\r\n\r\n    // find the first instance of any hostEndingChars\r\n    var hostEnd = -1;\r\n    for (i = 0; i < hostEndingChars.length; i++) {\r\n      hec = rest.indexOf(hostEndingChars[i]);\r\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\r\n        hostEnd = hec;\r\n    }\r\n\r\n    // at this point, either we have an explicit point where the\r\n    // auth portion cannot go past, or the last @ char is the decider.\r\n    var auth, atSign;\r\n    if (hostEnd === -1) {\r\n      // atSign can be anywhere.\r\n      atSign = rest.lastIndexOf('@');\r\n    } else {\r\n      // atSign must be in auth portion.\r\n      // http://a@b/c@d => host:b auth:a path:/c@d\r\n      atSign = rest.lastIndexOf('@', hostEnd);\r\n    }\r\n\r\n    // Now we have a portion which is definitely the auth.\r\n    // Pull that off.\r\n    if (atSign !== -1) {\r\n      auth = rest.slice(0, atSign);\r\n      rest = rest.slice(atSign + 1);\r\n      self.auth = decodeURIComponent(auth);\r\n    }\r\n\r\n    // the host is the remaining to the left of the first non-host char\r\n    hostEnd = -1;\r\n    for (i = 0; i < nonHostChars.length; i++) {\r\n      hec = rest.indexOf(nonHostChars[i]);\r\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\r\n        hostEnd = hec;\r\n    }\r\n    // if we still have not hit it, then the entire thing is a host.\r\n    if (hostEnd === -1)\r\n      hostEnd = rest.length;\r\n\r\n    self.host = rest.slice(0, hostEnd);\r\n    rest = rest.slice(hostEnd);\r\n\r\n    // pull out port.\r\n    parseHost(self);\r\n\r\n    // we've indicated that there is a hostname,\r\n    // so even if it's empty, it has to be present.\r\n    self.hostname = self.hostname || '';\r\n\r\n    // if hostname begins with [ and ends with ]\r\n    // assume that it's an IPv6 address.\r\n    var ipv6Hostname = self.hostname[0] === '[' &&\r\n      self.hostname[self.hostname.length - 1] === ']';\r\n\r\n    // validate a little.\r\n    if (!ipv6Hostname) {\r\n      var hostparts = self.hostname.split(/\\./);\r\n      for (i = 0, l = hostparts.length; i < l; i++) {\r\n        var part = hostparts[i];\r\n        if (!part) continue;\r\n        if (!part.match(hostnamePartPattern)) {\r\n          var newpart = '';\r\n          for (var j = 0, k = part.length; j < k; j++) {\r\n            if (part.charCodeAt(j) > 127) {\r\n              // we replace non-ASCII char with a temporary placeholder\r\n              // we need this to make sure size of hostname is not\r\n              // broken by replacing non-ASCII by nothing\r\n              newpart += 'x';\r\n            } else {\r\n              newpart += part[j];\r\n            }\r\n          }\r\n          // we test again with ASCII char only\r\n          if (!newpart.match(hostnamePartPattern)) {\r\n            var validParts = hostparts.slice(0, i);\r\n            var notHost = hostparts.slice(i + 1);\r\n            var bit = part.match(hostnamePartStart);\r\n            if (bit) {\r\n              validParts.push(bit[1]);\r\n              notHost.unshift(bit[2]);\r\n            }\r\n            if (notHost.length) {\r\n              rest = '/' + notHost.join('.') + rest;\r\n            }\r\n            self.hostname = validParts.join('.');\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (self.hostname.length > hostnameMaxLen) {\r\n      self.hostname = '';\r\n    } else {\r\n      // hostnames are always lower case.\r\n      self.hostname = self.hostname.toLowerCase();\r\n    }\r\n\r\n    if (!ipv6Hostname) {\r\n      // IDNA Support: Returns a punycoded representation of \"domain\".\r\n      // It only converts parts of the domain name that\r\n      // have non-ASCII characters, i.e. it doesn't matter if\r\n      // you call it with a domain that already is ASCII-only.\r\n      self.hostname = toASCII(self.hostname);\r\n    }\r\n\r\n    p = self.port ? ':' + self.port : '';\r\n    var h = self.hostname || '';\r\n    self.host = h + p;\r\n    self.href += self.host;\r\n\r\n    // strip [ and ] from the hostname\r\n    // the host field still retains them, though\r\n    if (ipv6Hostname) {\r\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\r\n      if (rest[0] !== '/') {\r\n        rest = '/' + rest;\r\n      }\r\n    }\r\n  }\r\n\r\n  // now rest is set to the post-host stuff.\r\n  // chop off any delim chars.\r\n  if (!unsafeProtocol[lowerProto]) {\r\n\r\n    // First, make 100% sure that any \"autoEscape\" chars get\r\n    // escaped, even if encodeURIComponent doesn't think they\r\n    // need to be.\r\n    for (i = 0, l = autoEscape.length; i < l; i++) {\r\n      var ae = autoEscape[i];\r\n      if (rest.indexOf(ae) === -1)\r\n        continue;\r\n      var esc = encodeURIComponent(ae);\r\n      if (esc === ae) {\r\n        esc = escape(ae);\r\n      }\r\n      rest = rest.split(ae).join(esc);\r\n    }\r\n  }\r\n\r\n\r\n  // chop off from the tail first.\r\n  var hash = rest.indexOf('#');\r\n  if (hash !== -1) {\r\n    // got a fragment string.\r\n    self.hash = rest.substr(hash);\r\n    rest = rest.slice(0, hash);\r\n  }\r\n  var qm = rest.indexOf('?');\r\n  if (qm !== -1) {\r\n    self.search = rest.substr(qm);\r\n    self.query = rest.substr(qm + 1);\r\n    if (parseQueryString) {\r\n      self.query = parse$2(self.query);\r\n    }\r\n    rest = rest.slice(0, qm);\r\n  } else if (parseQueryString) {\r\n    // no query string, but parseQueryString still requested\r\n    self.search = '';\r\n    self.query = {};\r\n  }\r\n  if (rest) self.pathname = rest;\r\n  if (slashedProtocol[lowerProto] &&\r\n    self.hostname && !self.pathname) {\r\n    self.pathname = '/';\r\n  }\r\n\r\n  //to support http.request\r\n  if (self.pathname || self.search) {\r\n    p = self.pathname || '';\r\n    var s = self.search || '';\r\n    self.path = p + s;\r\n  }\r\n\r\n  // finally, reconstruct the href based on what has been validated.\r\n  self.href = format$1(self);\r\n  return self;\r\n}\r\n\r\n// format a parsed object into a url string\r\nfunction urlFormat(obj) {\r\n  // ensure it's an object, and not a string url.\r\n  // If it's an obj, this is a no-op.\r\n  // this way, you can call url_format() on strings\r\n  // to clean up potentially wonky urls.\r\n  if (isString$1(obj)) obj = parse$3({}, obj);\r\n  return format$1(obj);\r\n}\r\n\r\nfunction format$1(self) {\r\n  var auth = self.auth || '';\r\n  if (auth) {\r\n    auth = encodeURIComponent(auth);\r\n    auth = auth.replace(/%3A/i, ':');\r\n    auth += '@';\r\n  }\r\n\r\n  var protocol = self.protocol || '',\r\n    pathname = self.pathname || '',\r\n    hash = self.hash || '',\r\n    host = false,\r\n    query = '';\r\n\r\n  if (self.host) {\r\n    host = auth + self.host;\r\n  } else if (self.hostname) {\r\n    host = auth + (self.hostname.indexOf(':') === -1 ?\r\n      self.hostname :\r\n      '[' + this.hostname + ']');\r\n    if (self.port) {\r\n      host += ':' + self.port;\r\n    }\r\n  }\r\n\r\n  if (self.query &&\r\n    isObject$2(self.query) &&\r\n    Object.keys(self.query).length) {\r\n    query = stringify(self.query);\r\n  }\r\n\r\n  var search = self.search || (query && ('?' + query)) || '';\r\n\r\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\r\n\r\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\r\n  // unless they had them to begin with.\r\n  if (self.slashes ||\r\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\r\n    host = '//' + (host || '');\r\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\r\n  } else if (!host) {\r\n    host = '';\r\n  }\r\n\r\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\r\n  if (search && search.charAt(0) !== '?') search = '?' + search;\r\n\r\n  pathname = pathname.replace(/[?#]/g, function(match) {\r\n    return encodeURIComponent(match);\r\n  });\r\n  search = search.replace('#', '%23');\r\n\r\n  return protocol + host + pathname + search + hash;\r\n}\r\n\r\nUrl.prototype.format = function() {\r\n  return format$1(this);\r\n};\r\n\r\nfunction urlResolve(source, relative) {\r\n  return urlParse(source, false, true).resolve(relative);\r\n}\r\n\r\nUrl.prototype.resolve = function(relative) {\r\n  return this.resolveObject(urlParse(relative, false, true)).format();\r\n};\r\n\r\nfunction urlResolveObject(source, relative) {\r\n  if (!source) return relative;\r\n  return urlParse(source, false, true).resolveObject(relative);\r\n}\r\n\r\nUrl.prototype.resolveObject = function(relative) {\r\n  if (isString$1(relative)) {\r\n    var rel = new Url();\r\n    rel.parse(relative, false, true);\r\n    relative = rel;\r\n  }\r\n\r\n  var result = new Url();\r\n  var tkeys = Object.keys(this);\r\n  for (var tk = 0; tk < tkeys.length; tk++) {\r\n    var tkey = tkeys[tk];\r\n    result[tkey] = this[tkey];\r\n  }\r\n\r\n  // hash is always overridden, no matter what.\r\n  // even href=\"\" will remove it.\r\n  result.hash = relative.hash;\r\n\r\n  // if the relative url is empty, then there's nothing left to do here.\r\n  if (relative.href === '') {\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  // hrefs like //foo/bar always cut to the protocol.\r\n  if (relative.slashes && !relative.protocol) {\r\n    // take everything except the protocol from relative\r\n    var rkeys = Object.keys(relative);\r\n    for (var rk = 0; rk < rkeys.length; rk++) {\r\n      var rkey = rkeys[rk];\r\n      if (rkey !== 'protocol')\r\n        result[rkey] = relative[rkey];\r\n    }\r\n\r\n    //urlParse appends trailing / to urls like http://www.example.com\r\n    if (slashedProtocol[result.protocol] &&\r\n      result.hostname && !result.pathname) {\r\n      result.path = result.pathname = '/';\r\n    }\r\n\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n  var relPath;\r\n  if (relative.protocol && relative.protocol !== result.protocol) {\r\n    // if it's a known url protocol, then changing\r\n    // the protocol does weird things\r\n    // first, if it's not file:, then we MUST have a host,\r\n    // and if there was a path\r\n    // to begin with, then we MUST have a path.\r\n    // if it is file:, then the host is dropped,\r\n    // because that's known to be hostless.\r\n    // anything else is assumed to be absolute.\r\n    if (!slashedProtocol[relative.protocol]) {\r\n      var keys = Object.keys(relative);\r\n      for (var v = 0; v < keys.length; v++) {\r\n        var k = keys[v];\r\n        result[k] = relative[k];\r\n      }\r\n      result.href = result.format();\r\n      return result;\r\n    }\r\n\r\n    result.protocol = relative.protocol;\r\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\r\n      relPath = (relative.pathname || '').split('/');\r\n      while (relPath.length && !(relative.host = relPath.shift()));\r\n      if (!relative.host) relative.host = '';\r\n      if (!relative.hostname) relative.hostname = '';\r\n      if (relPath[0] !== '') relPath.unshift('');\r\n      if (relPath.length < 2) relPath.unshift('');\r\n      result.pathname = relPath.join('/');\r\n    } else {\r\n      result.pathname = relative.pathname;\r\n    }\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n    result.host = relative.host || '';\r\n    result.auth = relative.auth;\r\n    result.hostname = relative.hostname || relative.host;\r\n    result.port = relative.port;\r\n    // to support http.request\r\n    if (result.pathname || result.search) {\r\n      var p = result.pathname || '';\r\n      var s = result.search || '';\r\n      result.path = p + s;\r\n    }\r\n    result.slashes = result.slashes || relative.slashes;\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\r\n    isRelAbs = (\r\n      relative.host ||\r\n      relative.pathname && relative.pathname.charAt(0) === '/'\r\n    ),\r\n    mustEndAbs = (isRelAbs || isSourceAbs ||\r\n      (result.host && relative.pathname)),\r\n    removeAllDots = mustEndAbs,\r\n    srcPath = result.pathname && result.pathname.split('/') || [],\r\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\r\n  relPath = relative.pathname && relative.pathname.split('/') || [];\r\n  // if the url is a non-slashed url, then relative\r\n  // links like ../.. should be able\r\n  // to crawl up to the hostname, as well.  This is strange.\r\n  // result.protocol has already been set by now.\r\n  // Later on, put the first path part into the host field.\r\n  if (psychotic) {\r\n    result.hostname = '';\r\n    result.port = null;\r\n    if (result.host) {\r\n      if (srcPath[0] === '') srcPath[0] = result.host;\r\n      else srcPath.unshift(result.host);\r\n    }\r\n    result.host = '';\r\n    if (relative.protocol) {\r\n      relative.hostname = null;\r\n      relative.port = null;\r\n      if (relative.host) {\r\n        if (relPath[0] === '') relPath[0] = relative.host;\r\n        else relPath.unshift(relative.host);\r\n      }\r\n      relative.host = null;\r\n    }\r\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\r\n  }\r\n  var authInHost;\r\n  if (isRelAbs) {\r\n    // it's absolute.\r\n    result.host = (relative.host || relative.host === '') ?\r\n      relative.host : result.host;\r\n    result.hostname = (relative.hostname || relative.hostname === '') ?\r\n      relative.hostname : result.hostname;\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n    srcPath = relPath;\r\n    // fall through to the dot-handling below.\r\n  } else if (relPath.length) {\r\n    // it's relative\r\n    // throw away the existing file, and take the new path instead.\r\n    if (!srcPath) srcPath = [];\r\n    srcPath.pop();\r\n    srcPath = srcPath.concat(relPath);\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n  } else if (!isNullOrUndefined(relative.search)) {\r\n    // just pull out the search.\r\n    // like href='?foo'.\r\n    // Put this after the other two cases because it simplifies the booleans\r\n    if (psychotic) {\r\n      result.hostname = result.host = srcPath.shift();\r\n      //occationaly the auth can get stuck only in host\r\n      //this especially happens in cases like\r\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\r\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\r\n        result.host.split('@') : false;\r\n      if (authInHost) {\r\n        result.auth = authInHost.shift();\r\n        result.host = result.hostname = authInHost.shift();\r\n      }\r\n    }\r\n    result.search = relative.search;\r\n    result.query = relative.query;\r\n    //to support http.request\r\n    if (!isNull(result.pathname) || !isNull(result.search)) {\r\n      result.path = (result.pathname ? result.pathname : '') +\r\n        (result.search ? result.search : '');\r\n    }\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  if (!srcPath.length) {\r\n    // no path at all.  easy.\r\n    // we've already handled the other stuff above.\r\n    result.pathname = null;\r\n    //to support http.request\r\n    if (result.search) {\r\n      result.path = '/' + result.search;\r\n    } else {\r\n      result.path = null;\r\n    }\r\n    result.href = result.format();\r\n    return result;\r\n  }\r\n\r\n  // if a url ENDs in . or .., then it must get a trailing slash.\r\n  // however, if it ends in anything else non-slashy,\r\n  // then it must NOT get a trailing slash.\r\n  var last = srcPath.slice(-1)[0];\r\n  var hasTrailingSlash = (\r\n    (result.host || relative.host || srcPath.length > 1) &&\r\n    (last === '.' || last === '..') || last === '');\r\n\r\n  // strip single dots, resolve double dots to parent dir\r\n  // if the path tries to go above the root, `up` ends up > 0\r\n  var up = 0;\r\n  for (var i = srcPath.length; i >= 0; i--) {\r\n    last = srcPath[i];\r\n    if (last === '.') {\r\n      srcPath.splice(i, 1);\r\n    } else if (last === '..') {\r\n      srcPath.splice(i, 1);\r\n      up++;\r\n    } else if (up) {\r\n      srcPath.splice(i, 1);\r\n      up--;\r\n    }\r\n  }\r\n\r\n  // if the path is allowed to go above the root, restore leading ..s\r\n  if (!mustEndAbs && !removeAllDots) {\r\n    for (; up--; up) {\r\n      srcPath.unshift('..');\r\n    }\r\n  }\r\n\r\n  if (mustEndAbs && srcPath[0] !== '' &&\r\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\r\n    srcPath.unshift('');\r\n  }\r\n\r\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\r\n    srcPath.push('');\r\n  }\r\n\r\n  var isAbsolute = srcPath[0] === '' ||\r\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\r\n\r\n  // put the host back\r\n  if (psychotic) {\r\n    result.hostname = result.host = isAbsolute ? '' :\r\n      srcPath.length ? srcPath.shift() : '';\r\n    //occationaly the auth can get stuck only in host\r\n    //this especially happens in cases like\r\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\r\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\r\n      result.host.split('@') : false;\r\n    if (authInHost) {\r\n      result.auth = authInHost.shift();\r\n      result.host = result.hostname = authInHost.shift();\r\n    }\r\n  }\r\n\r\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\r\n\r\n  if (mustEndAbs && !isAbsolute) {\r\n    srcPath.unshift('');\r\n  }\r\n\r\n  if (!srcPath.length) {\r\n    result.pathname = null;\r\n    result.path = null;\r\n  } else {\r\n    result.pathname = srcPath.join('/');\r\n  }\r\n\r\n  //to support request.http\r\n  if (!isNull(result.pathname) || !isNull(result.search)) {\r\n    result.path = (result.pathname ? result.pathname : '') +\r\n      (result.search ? result.search : '');\r\n  }\r\n  result.auth = relative.auth || result.auth;\r\n  result.slashes = result.slashes || relative.slashes;\r\n  result.href = result.format();\r\n  return result;\r\n};\r\n\r\nUrl.prototype.parseHost = function() {\r\n  return parseHost(this);\r\n};\r\n\r\nfunction parseHost(self) {\r\n  var host = self.host;\r\n  var port = portPattern.exec(host);\r\n  if (port) {\r\n    port = port[0];\r\n    if (port !== ':') {\r\n      self.port = port.substr(1);\r\n    }\r\n    host = host.substr(0, host.length - port.length);\r\n  }\r\n  if (host) self.hostname = host;\r\n}\r\n\r\nvar _polyfillNode_url$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  parse: urlParse,\r\n  resolve: urlResolve,\r\n  resolveObject: urlResolveObject,\r\n  format: urlFormat,\r\n  'default': _polyfillNode_url,\r\n  Url: Url\r\n});\r\n\r\nfunction isRelativeUrl(url) {\r\n    const firstChar = url.charAt(0);\r\n    return firstChar === '.' || firstChar === '~' || firstChar === '@';\r\n}\r\nconst externalRE = /^(https?:)?\\/\\//;\r\nfunction isExternalUrl(url) {\r\n    return externalRE.test(url);\r\n}\r\nconst dataUrlRE = /^\\s*data:/i;\r\nfunction isDataUrl(url) {\r\n    return dataUrlRE.test(url);\r\n}\r\n/**\r\n * Parses string url into URL object.\r\n */\r\nfunction parseUrl(url) {\r\n    const firstChar = url.charAt(0);\r\n    if (firstChar === '~') {\r\n        const secondChar = url.charAt(1);\r\n        url = url.slice(secondChar === '/' ? 2 : 1);\r\n    }\r\n    return parseUriParts(url);\r\n}\r\n/**\r\n * vuejs/component-compiler-utils#22 Support uri fragment in transformed require\r\n * @param urlString an url as a string\r\n */\r\nfunction parseUriParts(urlString) {\r\n    // A TypeError is thrown if urlString is not a string\r\n    // @see https://nodejs.org/api/url.html#url_url_parse_urlstring_parsequerystring_slashesdenotehost\r\n    return urlParse(isString(urlString) ? urlString : '', false, true);\r\n}\r\n\r\nconst defaultAssetUrlOptions = {\r\n    base: null,\r\n    includeAbsolute: false,\r\n    tags: {\r\n        video: ['src', 'poster'],\r\n        source: ['src'],\r\n        img: ['src'],\r\n        image: ['xlink:href', 'href'],\r\n        use: ['xlink:href', 'href']\r\n    }\r\n};\r\nconst normalizeOptions = (options) => {\r\n    if (Object.keys(options).some(key => isArray(options[key]))) {\r\n        // legacy option format which directly passes in tags config\r\n        return Object.assign(Object.assign({}, defaultAssetUrlOptions), { tags: options });\r\n    }\r\n    return Object.assign(Object.assign({}, defaultAssetUrlOptions), options);\r\n};\r\nconst createAssetUrlTransformWithOptions = (options) => {\r\n    return (node, context) => transformAssetUrl(node, context, options);\r\n};\r\n/**\r\n * A `@vue/compiler-core` plugin that transforms relative asset urls into\r\n * either imports or absolute urls.\r\n *\r\n * ``` js\r\n * // Before\r\n * createVNode('img', { src: './logo.png' })\r\n *\r\n * // After\r\n * import _imports_0 from './logo.png'\r\n * createVNode('img', { src: _imports_0 })\r\n * ```\r\n */\r\nconst transformAssetUrl = (node, context, options = defaultAssetUrlOptions) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        if (!node.props.length) {\r\n            return;\r\n        }\r\n        const tags = options.tags || defaultAssetUrlOptions.tags;\r\n        const attrs = tags[node.tag];\r\n        const wildCardAttrs = tags['*'];\r\n        if (!attrs && !wildCardAttrs) {\r\n            return;\r\n        }\r\n        const assetAttrs = (attrs || []).concat(wildCardAttrs || []);\r\n        node.props.forEach((attr, index) => {\r\n            if (attr.type !== 6 /* NodeTypes.ATTRIBUTE */ ||\r\n                !assetAttrs.includes(attr.name) ||\r\n                !attr.value ||\r\n                isExternalUrl(attr.value.content) ||\r\n                isDataUrl(attr.value.content) ||\r\n                attr.value.content[0] === '#' ||\r\n                (!options.includeAbsolute && !isRelativeUrl(attr.value.content))) {\r\n                return;\r\n            }\r\n            const url = parseUrl(attr.value.content);\r\n            if (options.base && attr.value.content[0] === '.') {\r\n                // explicit base - directly rewrite relative urls into absolute url\r\n                // to avoid generating extra imports\r\n                // Allow for full hostnames provided in options.base\r\n                const base = parseUrl(options.base);\r\n                const protocol = base.protocol || '';\r\n                const host = base.host ? protocol + '//' + base.host : '';\r\n                const basePath = base.path || '/';\r\n                // when packaged in the browser, path will be using the posix-\r\n                // only version provided by rollup-plugin-node-builtins.\r\n                attr.value.content =\r\n                    host +\r\n                        (path.posix || path).join(basePath, url.path + (url.hash || ''));\r\n                return;\r\n            }\r\n            // otherwise, transform the url into an import.\r\n            // this assumes a bundler will resolve the import into the correct\r\n            // absolute url (e.g. webpack file-loader)\r\n            const exp = getImportsExpressionExp(url.path, url.hash, attr.loc, context);\r\n            node.props[index] = {\r\n                type: 7 /* NodeTypes.DIRECTIVE */,\r\n                name: 'bind',\r\n                arg: createSimpleExpression(attr.name, true, attr.loc),\r\n                exp,\r\n                modifiers: [],\r\n                loc: attr.loc\r\n            };\r\n        });\r\n    }\r\n};\r\nfunction getImportsExpressionExp(path, hash, loc, context) {\r\n    if (path) {\r\n        let name;\r\n        let exp;\r\n        const existingIndex = context.imports.findIndex(i => i.path === path);\r\n        if (existingIndex > -1) {\r\n            name = `_imports_${existingIndex}`;\r\n            exp = context.imports[existingIndex].exp;\r\n        }\r\n        else {\r\n            name = `_imports_${context.imports.length}`;\r\n            exp = createSimpleExpression(name, false, loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n            context.imports.push({ exp, path });\r\n        }\r\n        if (!hash) {\r\n            return exp;\r\n        }\r\n        const hashExp = `${name} + '${hash}'`;\r\n        const finalExp = createSimpleExpression(hashExp, false, loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n        if (!context.hoistStatic) {\r\n            return finalExp;\r\n        }\r\n        const existingHoistIndex = context.hoists.findIndex(h => {\r\n            return (h &&\r\n                h.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                !h.isStatic &&\r\n                h.content === hashExp);\r\n        });\r\n        if (existingHoistIndex > -1) {\r\n            return createSimpleExpression(`_hoisted_${existingHoistIndex + 1}`, false, loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n        }\r\n        return context.hoist(finalExp);\r\n    }\r\n    else {\r\n        return createSimpleExpression(`''`, false, loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n    }\r\n}\r\n\r\nconst srcsetTags = ['img', 'source'];\r\n// http://w3c.github.io/html/semantics-embedded-content.html#ref-for-image-candidate-string-5\r\nconst escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g;\r\nconst createSrcsetTransformWithOptions = (options) => {\r\n    return (node, context) => transformSrcset(node, context, options);\r\n};\r\nconst transformSrcset = (node, context, options = defaultAssetUrlOptions) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        if (srcsetTags.includes(node.tag) && node.props.length) {\r\n            node.props.forEach((attr, index) => {\r\n                if (attr.name === 'srcset' && attr.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n                    if (!attr.value)\r\n                        return;\r\n                    const value = attr.value.content;\r\n                    if (!value)\r\n                        return;\r\n                    const imageCandidates = value.split(',').map(s => {\r\n                        // The attribute value arrives here with all whitespace, except\r\n                        // normal spaces, represented by escape sequences\r\n                        const [url, descriptor] = s\r\n                            .replace(escapedSpaceCharacters, ' ')\r\n                            .trim()\r\n                            .split(' ', 2);\r\n                        return { url, descriptor };\r\n                    });\r\n                    // data urls contains comma after the encoding so we need to re-merge\r\n                    // them\r\n                    for (let i = 0; i < imageCandidates.length; i++) {\r\n                        const { url } = imageCandidates[i];\r\n                        if (isDataUrl(url)) {\r\n                            imageCandidates[i + 1].url =\r\n                                url + ',' + imageCandidates[i + 1].url;\r\n                            imageCandidates.splice(i, 1);\r\n                        }\r\n                    }\r\n                    const shouldProcessUrl = (url) => {\r\n                        return (!isExternalUrl(url) &&\r\n                            !isDataUrl(url) &&\r\n                            (options.includeAbsolute || isRelativeUrl(url)));\r\n                    };\r\n                    // When srcset does not contain any qualified URLs, skip transforming\r\n                    if (!imageCandidates.some(({ url }) => shouldProcessUrl(url))) {\r\n                        return;\r\n                    }\r\n                    if (options.base) {\r\n                        const base = options.base;\r\n                        const set = [];\r\n                        let needImportTransform = false;\r\n                        imageCandidates.forEach(candidate => {\r\n                            let { url, descriptor } = candidate;\r\n                            descriptor = descriptor ? ` ${descriptor}` : ``;\r\n                            if (url[0] === '.') {\r\n                                candidate.url = (path.posix || path).join(base, url);\r\n                                set.push(candidate.url + descriptor);\r\n                            }\r\n                            else if (shouldProcessUrl(url)) {\r\n                                needImportTransform = true;\r\n                            }\r\n                            else {\r\n                                set.push(url + descriptor);\r\n                            }\r\n                        });\r\n                        if (!needImportTransform) {\r\n                            attr.value.content = set.join(', ');\r\n                            return;\r\n                        }\r\n                    }\r\n                    const compoundExpression = createCompoundExpression([], attr.loc);\r\n                    imageCandidates.forEach(({ url, descriptor }, index) => {\r\n                        if (shouldProcessUrl(url)) {\r\n                            const { path } = parseUrl(url);\r\n                            let exp;\r\n                            if (path) {\r\n                                const existingImportsIndex = context.imports.findIndex(i => i.path === path);\r\n                                if (existingImportsIndex > -1) {\r\n                                    exp = createSimpleExpression(`_imports_${existingImportsIndex}`, false, attr.loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n                                }\r\n                                else {\r\n                                    exp = createSimpleExpression(`_imports_${context.imports.length}`, false, attr.loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n                                    context.imports.push({ exp, path });\r\n                                }\r\n                                compoundExpression.children.push(exp);\r\n                            }\r\n                        }\r\n                        else {\r\n                            const exp = createSimpleExpression(`\"${url}\"`, false, attr.loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n                            compoundExpression.children.push(exp);\r\n                        }\r\n                        const isNotLast = imageCandidates.length - 1 > index;\r\n                        if (descriptor && isNotLast) {\r\n                            compoundExpression.children.push(` + ' ${descriptor}, ' + `);\r\n                        }\r\n                        else if (descriptor) {\r\n                            compoundExpression.children.push(` + ' ${descriptor}'`);\r\n                        }\r\n                        else if (isNotLast) {\r\n                            compoundExpression.children.push(` + ', ' + `);\r\n                        }\r\n                    });\r\n                    let exp = compoundExpression;\r\n                    if (context.hoistStatic) {\r\n                        exp = context.hoist(compoundExpression);\r\n                        exp.constType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n                    }\r\n                    node.props[index] = {\r\n                        type: 7 /* NodeTypes.DIRECTIVE */,\r\n                        name: 'bind',\r\n                        arg: createSimpleExpression('srcset', true, attr.loc),\r\n                        exp,\r\n                        modifiers: [],\r\n                        loc: attr.loc\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nconst SSR_INTERPOLATE = Symbol(`ssrInterpolate`);\r\nconst SSR_RENDER_VNODE = Symbol(`ssrRenderVNode`);\r\nconst SSR_RENDER_COMPONENT = Symbol(`ssrRenderComponent`);\r\nconst SSR_RENDER_SLOT = Symbol(`ssrRenderSlot`);\r\nconst SSR_RENDER_SLOT_INNER = Symbol(`ssrRenderSlotInner`);\r\nconst SSR_RENDER_CLASS = Symbol(`ssrRenderClass`);\r\nconst SSR_RENDER_STYLE = Symbol(`ssrRenderStyle`);\r\nconst SSR_RENDER_ATTRS = Symbol(`ssrRenderAttrs`);\r\nconst SSR_RENDER_ATTR = Symbol(`ssrRenderAttr`);\r\nconst SSR_RENDER_DYNAMIC_ATTR = Symbol(`ssrRenderDynamicAttr`);\r\nconst SSR_RENDER_LIST = Symbol(`ssrRenderList`);\r\nconst SSR_INCLUDE_BOOLEAN_ATTR = Symbol(`ssrIncludeBooleanAttr`);\r\nconst SSR_LOOSE_EQUAL = Symbol(`ssrLooseEqual`);\r\nconst SSR_LOOSE_CONTAIN = Symbol(`ssrLooseContain`);\r\nconst SSR_RENDER_DYNAMIC_MODEL = Symbol(`ssrRenderDynamicModel`);\r\nconst SSR_GET_DYNAMIC_MODEL_PROPS = Symbol(`ssrGetDynamicModelProps`);\r\nconst SSR_RENDER_TELEPORT = Symbol(`ssrRenderTeleport`);\r\nconst SSR_RENDER_SUSPENSE = Symbol(`ssrRenderSuspense`);\r\nconst SSR_GET_DIRECTIVE_PROPS = Symbol(`ssrGetDirectiveProps`);\r\nconst ssrHelpers = {\r\n    [SSR_INTERPOLATE]: `ssrInterpolate`,\r\n    [SSR_RENDER_VNODE]: `ssrRenderVNode`,\r\n    [SSR_RENDER_COMPONENT]: `ssrRenderComponent`,\r\n    [SSR_RENDER_SLOT]: `ssrRenderSlot`,\r\n    [SSR_RENDER_SLOT_INNER]: `ssrRenderSlotInner`,\r\n    [SSR_RENDER_CLASS]: `ssrRenderClass`,\r\n    [SSR_RENDER_STYLE]: `ssrRenderStyle`,\r\n    [SSR_RENDER_ATTRS]: `ssrRenderAttrs`,\r\n    [SSR_RENDER_ATTR]: `ssrRenderAttr`,\r\n    [SSR_RENDER_DYNAMIC_ATTR]: `ssrRenderDynamicAttr`,\r\n    [SSR_RENDER_LIST]: `ssrRenderList`,\r\n    [SSR_INCLUDE_BOOLEAN_ATTR]: `ssrIncludeBooleanAttr`,\r\n    [SSR_LOOSE_EQUAL]: `ssrLooseEqual`,\r\n    [SSR_LOOSE_CONTAIN]: `ssrLooseContain`,\r\n    [SSR_RENDER_DYNAMIC_MODEL]: `ssrRenderDynamicModel`,\r\n    [SSR_GET_DYNAMIC_MODEL_PROPS]: `ssrGetDynamicModelProps`,\r\n    [SSR_RENDER_TELEPORT]: `ssrRenderTeleport`,\r\n    [SSR_RENDER_SUSPENSE]: `ssrRenderSuspense`,\r\n    [SSR_GET_DIRECTIVE_PROPS]: `ssrGetDirectiveProps`\r\n};\r\n// Note: these are helpers imported from @vue/server-renderer\r\n// make sure the names match!\r\nregisterRuntimeHelpers(ssrHelpers);\r\n\r\n// Plugin for the first transform pass, which simply constructs the AST node\r\nconst ssrTransformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, processIf);\r\n// This is called during the 2nd transform pass to construct the SSR-specific\r\n// codegen nodes.\r\nfunction ssrProcessIf(node, context, disableNestedFragments = false) {\r\n    const [rootBranch] = node.branches;\r\n    const ifStatement = createIfStatement(rootBranch.condition, processIfBranch(rootBranch, context, disableNestedFragments));\r\n    context.pushStatement(ifStatement);\r\n    let currentIf = ifStatement;\r\n    for (let i = 1; i < node.branches.length; i++) {\r\n        const branch = node.branches[i];\r\n        const branchBlockStatement = processIfBranch(branch, context, disableNestedFragments);\r\n        if (branch.condition) {\r\n            // else-if\r\n            currentIf = currentIf.alternate = createIfStatement(branch.condition, branchBlockStatement);\r\n        }\r\n        else {\r\n            // else\r\n            currentIf.alternate = branchBlockStatement;\r\n        }\r\n    }\r\n    if (!currentIf.alternate) {\r\n        currentIf.alternate = createBlockStatement([\r\n            createCallExpression(`_push`, ['`<!---->`'])\r\n        ]);\r\n    }\r\n}\r\nfunction processIfBranch(branch, context, disableNestedFragments = false) {\r\n    const { children } = branch;\r\n    const needFragmentWrapper = !disableNestedFragments &&\r\n        (children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */) &&\r\n        // optimize away nested fragments when the only child is a ForNode\r\n        !(children.length === 1 && children[0].type === 11 /* NodeTypes.FOR */);\r\n    return processChildrenAsStatement(branch, context, needFragmentWrapper);\r\n}\r\n\r\n// Plugin for the first transform pass, which simply constructs the AST node\r\nconst ssrTransformFor = createStructuralDirectiveTransform('for', processFor);\r\n// This is called during the 2nd transform pass to construct the SSR-specific\r\n// codegen nodes.\r\nfunction ssrProcessFor(node, context, disableNestedFragments = false) {\r\n    const needFragmentWrapper = !disableNestedFragments &&\r\n        (node.children.length !== 1 || node.children[0].type !== 1 /* NodeTypes.ELEMENT */);\r\n    const renderLoop = createFunctionExpression(createForLoopParams(node.parseResult));\r\n    renderLoop.body = processChildrenAsStatement(node, context, needFragmentWrapper);\r\n    // v-for always renders a fragment unless explicitly disabled\r\n    if (!disableNestedFragments) {\r\n        context.pushStringPart(`<!--[-->`);\r\n    }\r\n    context.pushStatement(createCallExpression(context.helper(SSR_RENDER_LIST), [\r\n        node.source,\r\n        renderLoop\r\n    ]));\r\n    if (!disableNestedFragments) {\r\n        context.pushStringPart(`<!--]-->`);\r\n    }\r\n}\r\n\r\nconst ssrTransformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const args = [\r\n            `_ctx.$slots`,\r\n            slotName,\r\n            slotProps || `{}`,\r\n            // fallback content placeholder. will be replaced in the process phase\r\n            `null`,\r\n            `_push`,\r\n            `_parent`\r\n        ];\r\n        // inject slot scope id if current template uses :slotted\r\n        if (context.scopeId && context.slotted !== false) {\r\n            args.push(`\"${context.scopeId}-s\"`);\r\n        }\r\n        let method = SSR_RENDER_SLOT;\r\n        // #3989\r\n        // check if this is a single slot inside a transition wrapper - since\r\n        // transition will unwrap the slot fragment into a single vnode at runtime,\r\n        // we need to avoid rendering the slot as a fragment.\r\n        const parent = context.parent;\r\n        if (parent &&\r\n            parent.type === 1 /* NodeTypes.ELEMENT */ &&\r\n            parent.tagType === 1 /* ElementTypes.COMPONENT */ &&\r\n            resolveComponentType(parent, context, true) === TRANSITION &&\r\n            parent.children.filter(c => c.type === 1 /* NodeTypes.ELEMENT */).length === 1) {\r\n            method = SSR_RENDER_SLOT_INNER;\r\n            if (!(context.scopeId && context.slotted !== false)) {\r\n                args.push('null');\r\n            }\r\n            args.push('true');\r\n        }\r\n        node.ssrCodegenNode = createCallExpression(context.helper(method), args);\r\n    }\r\n};\r\nfunction ssrProcessSlotOutlet(node, context) {\r\n    const renderCall = node.ssrCodegenNode;\r\n    // has fallback content\r\n    if (node.children.length) {\r\n        const fallbackRenderFn = createFunctionExpression([]);\r\n        fallbackRenderFn.body = processChildrenAsStatement(node, context);\r\n        // _renderSlot(slots, name, props, fallback, ...)\r\n        renderCall.arguments[3] = fallbackRenderFn;\r\n    }\r\n    // Forwarded <slot/>. Merge slot scope ids\r\n    if (context.withSlotScopeId) {\r\n        const slotScopeId = renderCall.arguments[6];\r\n        renderCall.arguments[6] = slotScopeId\r\n            ? `${slotScopeId} + _scopeId`\r\n            : `_scopeId`;\r\n    }\r\n    context.pushStatement(node.ssrCodegenNode);\r\n}\r\n\r\nfunction createSSRCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, SSRErrorMessages);\r\n}\r\nconst SSRErrorMessages = {\r\n    [62 /* SSRErrorCodes.X_SSR_UNSAFE_ATTR_NAME */]: `Unsafe attribute name for SSR.`,\r\n    [63 /* SSRErrorCodes.X_SSR_NO_TELEPORT_TARGET */]: `Missing the 'to' prop on teleport element.`,\r\n    [64 /* SSRErrorCodes.X_SSR_INVALID_AST_NODE */]: `Invalid AST node during SSR transform.`\r\n};\r\n\r\n// Note: this is a 2nd-pass codegen transform.\r\nfunction ssrProcessTeleport(node, context) {\r\n    const targetProp = findProp(node, 'to');\r\n    if (!targetProp) {\r\n        context.onError(createSSRCompilerError(63 /* SSRErrorCodes.X_SSR_NO_TELEPORT_TARGET */, node.loc));\r\n        return;\r\n    }\r\n    let target;\r\n    if (targetProp.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n        target =\r\n            targetProp.value && createSimpleExpression(targetProp.value.content, true);\r\n    }\r\n    else {\r\n        target = targetProp.exp;\r\n    }\r\n    if (!target) {\r\n        context.onError(createSSRCompilerError(63 /* SSRErrorCodes.X_SSR_NO_TELEPORT_TARGET */, targetProp.loc));\r\n        return;\r\n    }\r\n    const disabledProp = findProp(node, 'disabled', false, true /* allow empty */);\r\n    const disabled = disabledProp\r\n        ? disabledProp.type === 6 /* NodeTypes.ATTRIBUTE */\r\n            ? `true`\r\n            : disabledProp.exp || `false`\r\n        : `false`;\r\n    const contentRenderFn = createFunctionExpression([`_push`], undefined, // Body is added later\r\n    true, // newline\r\n    false, // isSlot\r\n    node.loc);\r\n    contentRenderFn.body = processChildrenAsStatement(node, context);\r\n    context.pushStatement(createCallExpression(context.helper(SSR_RENDER_TELEPORT), [\r\n        `_push`,\r\n        contentRenderFn,\r\n        target,\r\n        disabled,\r\n        `_parent`\r\n    ]));\r\n}\r\n\r\nconst wipMap = new WeakMap();\r\n// phase 1\r\nfunction ssrTransformSuspense(node, context) {\r\n    return () => {\r\n        if (node.children.length) {\r\n            const wipEntry = {\r\n                slotsExp: null,\r\n                wipSlots: []\r\n            };\r\n            wipMap.set(node, wipEntry);\r\n            wipEntry.slotsExp = buildSlots(node, context, (_props, children, loc) => {\r\n                const fn = createFunctionExpression([], undefined, // no return, assign body later\r\n                true, // newline\r\n                false, // suspense slots are not treated as normal slots\r\n                loc);\r\n                wipEntry.wipSlots.push({\r\n                    fn,\r\n                    children\r\n                });\r\n                return fn;\r\n            }).slots;\r\n        }\r\n    };\r\n}\r\n// phase 2\r\nfunction ssrProcessSuspense(node, context) {\r\n    // complete wip slots with ssr code\r\n    const wipEntry = wipMap.get(node);\r\n    if (!wipEntry) {\r\n        return;\r\n    }\r\n    const { slotsExp, wipSlots } = wipEntry;\r\n    for (let i = 0; i < wipSlots.length; i++) {\r\n        const slot = wipSlots[i];\r\n        slot.fn.body = processChildrenAsStatement(slot, context);\r\n    }\r\n    // _push(ssrRenderSuspense(slots))\r\n    context.pushStatement(createCallExpression(context.helper(SSR_RENDER_SUSPENSE), [\r\n        `_push`,\r\n        slotsExp\r\n    ]));\r\n}\r\n\r\n// for directives with children overwrite (e.g. v-html & v-text), we need to\r\n// store the raw children so that they can be added in the 2nd pass.\r\nconst rawChildrenMap = new WeakMap();\r\nconst ssrTransformElement = (node, context) => {\r\n    if (node.type !== 1 /* NodeTypes.ELEMENT */ ||\r\n        node.tagType !== 0 /* ElementTypes.ELEMENT */) {\r\n        return;\r\n    }\r\n    return function ssrPostTransformElement() {\r\n        // element\r\n        // generate the template literal representing the open tag.\r\n        const openTag = [`<${node.tag}`];\r\n        // some tags need to be passed to runtime for special checks\r\n        const needTagForRuntime = node.tag === 'textarea' || node.tag.indexOf('-') > 0;\r\n        // v-bind=\"obj\", v-bind:[key] and custom directives can potentially\r\n        // overwrite other static attrs and can affect final rendering result,\r\n        // so when they are present we need to bail out to full `renderAttrs`\r\n        const hasDynamicVBind = hasDynamicKeyVBind(node);\r\n        const hasCustomDir = node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && !isBuiltInDirective(p.name));\r\n        const needMergeProps = hasDynamicVBind || hasCustomDir;\r\n        if (needMergeProps) {\r\n            const { props, directives } = buildProps(node, context, node.props, false /* isComponent */, false /* isDynamicComponent */, true /* ssr */);\r\n            if (props || directives.length) {\r\n                const mergedProps = buildSSRProps(props, directives, context);\r\n                const propsExp = createCallExpression(context.helper(SSR_RENDER_ATTRS), [mergedProps]);\r\n                if (node.tag === 'textarea') {\r\n                    const existingText = node.children[0];\r\n                    // If interpolation, this is dynamic <textarea> content, potentially\r\n                    // injected by v-model and takes higher priority than v-bind value\r\n                    if (!existingText || existingText.type !== 5 /* NodeTypes.INTERPOLATION */) {\r\n                        // <textarea> with dynamic v-bind. We don't know if the final props\r\n                        // will contain .value, so we will have to do something special:\r\n                        // assign the merged props to a temp variable, and check whether\r\n                        // it contains value (if yes, render is as children).\r\n                        const tempId = `_temp${context.temps++}`;\r\n                        propsExp.arguments = [\r\n                            createAssignmentExpression(createSimpleExpression(tempId, false), mergedProps)\r\n                        ];\r\n                        rawChildrenMap.set(node, createCallExpression(context.helper(SSR_INTERPOLATE), [\r\n                            createConditionalExpression(createSimpleExpression(`\"value\" in ${tempId}`, false), createSimpleExpression(`${tempId}.value`, false), createSimpleExpression(existingText ? existingText.content : ``, true), false)\r\n                        ]));\r\n                    }\r\n                }\r\n                else if (node.tag === 'input') {\r\n                    // <input v-bind=\"obj\" v-model>\r\n                    // we need to determine the props to render for the dynamic v-model\r\n                    // and merge it with the v-bind expression.\r\n                    const vModel = findVModel(node);\r\n                    if (vModel) {\r\n                        // 1. save the props (san v-model) in a temp variable\r\n                        const tempId = `_temp${context.temps++}`;\r\n                        const tempExp = createSimpleExpression(tempId, false);\r\n                        propsExp.arguments = [\r\n                            createSequenceExpression([\r\n                                createAssignmentExpression(tempExp, mergedProps),\r\n                                createCallExpression(context.helper(MERGE_PROPS), [\r\n                                    tempExp,\r\n                                    createCallExpression(context.helper(SSR_GET_DYNAMIC_MODEL_PROPS), [\r\n                                        tempExp,\r\n                                        vModel.exp // model\r\n                                    ])\r\n                                ])\r\n                            ])\r\n                        ];\r\n                    }\r\n                }\r\n                if (needTagForRuntime) {\r\n                    propsExp.arguments.push(`\"${node.tag}\"`);\r\n                }\r\n                openTag.push(propsExp);\r\n            }\r\n        }\r\n        // book keeping static/dynamic class merging.\r\n        let dynamicClassBinding = undefined;\r\n        let staticClassBinding = undefined;\r\n        // all style bindings are converted to dynamic by transformStyle.\r\n        // but we need to make sure to merge them.\r\n        let dynamicStyleBinding = undefined;\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const prop = node.props[i];\r\n            // ignore true-value/false-value on input\r\n            if (node.tag === 'input' && isTrueFalseValue(prop)) {\r\n                continue;\r\n            }\r\n            // special cases with children override\r\n            if (prop.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                if (prop.name === 'html' && prop.exp) {\r\n                    rawChildrenMap.set(node, prop.exp);\r\n                }\r\n                else if (prop.name === 'text' && prop.exp) {\r\n                    node.children = [createInterpolation(prop.exp, prop.loc)];\r\n                }\r\n                else if (prop.name === 'slot') {\r\n                    context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, prop.loc));\r\n                }\r\n                else if (isTextareaWithValue(node, prop) && prop.exp) {\r\n                    if (!needMergeProps) {\r\n                        node.children = [createInterpolation(prop.exp, prop.loc)];\r\n                    }\r\n                }\r\n                else if (!needMergeProps && prop.name !== 'on') {\r\n                    // Directive transforms.\r\n                    const directiveTransform = context.directiveTransforms[prop.name];\r\n                    if (directiveTransform) {\r\n                        const { props, ssrTagParts } = directiveTransform(prop, node, context);\r\n                        if (ssrTagParts) {\r\n                            openTag.push(...ssrTagParts);\r\n                        }\r\n                        for (let j = 0; j < props.length; j++) {\r\n                            const { key, value } = props[j];\r\n                            if (isStaticExp(key)) {\r\n                                let attrName = key.content;\r\n                                // static key attr\r\n                                if (attrName === 'key' || attrName === 'ref') {\r\n                                    continue;\r\n                                }\r\n                                if (attrName === 'class') {\r\n                                    openTag.push(` class=\"`, (dynamicClassBinding = createCallExpression(context.helper(SSR_RENDER_CLASS), [value])), `\"`);\r\n                                }\r\n                                else if (attrName === 'style') {\r\n                                    if (dynamicStyleBinding) {\r\n                                        // already has style binding, merge into it.\r\n                                        mergeCall(dynamicStyleBinding, value);\r\n                                    }\r\n                                    else {\r\n                                        openTag.push(` style=\"`, (dynamicStyleBinding = createCallExpression(context.helper(SSR_RENDER_STYLE), [value])), `\"`);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    attrName =\r\n                                        node.tag.indexOf('-') > 0\r\n                                            ? attrName // preserve raw name on custom elements\r\n                                            : propsToAttrMap[attrName] || attrName.toLowerCase();\r\n                                    if (isBooleanAttr(attrName)) {\r\n                                        openTag.push(createConditionalExpression(createCallExpression(context.helper(SSR_INCLUDE_BOOLEAN_ATTR), [value]), createSimpleExpression(' ' + attrName, true), createSimpleExpression('', true), false /* no newline */));\r\n                                    }\r\n                                    else if (isSSRSafeAttrName(attrName)) {\r\n                                        openTag.push(createCallExpression(context.helper(SSR_RENDER_ATTR), [\r\n                                            key,\r\n                                            value\r\n                                        ]));\r\n                                    }\r\n                                    else {\r\n                                        context.onError(createSSRCompilerError(62 /* SSRErrorCodes.X_SSR_UNSAFE_ATTR_NAME */, key.loc));\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // dynamic key attr\r\n                                // this branch is only encountered for custom directive\r\n                                // transforms that returns properties with dynamic keys\r\n                                const args = [key, value];\r\n                                if (needTagForRuntime) {\r\n                                    args.push(`\"${node.tag}\"`);\r\n                                }\r\n                                openTag.push(createCallExpression(context.helper(SSR_RENDER_DYNAMIC_ATTR), args));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // special case: value on <textarea>\r\n                if (node.tag === 'textarea' && prop.name === 'value' && prop.value) {\r\n                    rawChildrenMap.set(node, escapeHtml(prop.value.content));\r\n                }\r\n                else if (!needMergeProps) {\r\n                    if (prop.name === 'key' || prop.name === 'ref') {\r\n                        continue;\r\n                    }\r\n                    // static prop\r\n                    if (prop.name === 'class' && prop.value) {\r\n                        staticClassBinding = JSON.stringify(prop.value.content);\r\n                    }\r\n                    openTag.push(` ${prop.name}` +\r\n                        (prop.value ? `=\"${escapeHtml(prop.value.content)}\"` : ``));\r\n                }\r\n            }\r\n        }\r\n        // handle co-existence of dynamic + static class bindings\r\n        if (dynamicClassBinding && staticClassBinding) {\r\n            mergeCall(dynamicClassBinding, staticClassBinding);\r\n            removeStaticBinding(openTag, 'class');\r\n        }\r\n        if (context.scopeId) {\r\n            openTag.push(` ${context.scopeId}`);\r\n        }\r\n        node.ssrCodegenNode = createTemplateLiteral(openTag);\r\n    };\r\n};\r\nfunction buildSSRProps(props, directives, context) {\r\n    let mergePropsArgs = [];\r\n    if (props) {\r\n        if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n            // already a mergeProps call\r\n            mergePropsArgs = props.arguments;\r\n        }\r\n        else {\r\n            mergePropsArgs.push(props);\r\n        }\r\n    }\r\n    if (directives.length) {\r\n        for (const dir of directives) {\r\n            mergePropsArgs.push(createCallExpression(context.helper(SSR_GET_DIRECTIVE_PROPS), [\r\n                `_ctx`,\r\n                ...buildDirectiveArgs(dir, context).elements\r\n            ]));\r\n        }\r\n    }\r\n    return mergePropsArgs.length > 1\r\n        ? createCallExpression(context.helper(MERGE_PROPS), mergePropsArgs)\r\n        : mergePropsArgs[0];\r\n}\r\nfunction isTrueFalseValue(prop) {\r\n    if (prop.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n        return (prop.name === 'bind' &&\r\n            prop.arg &&\r\n            isStaticExp(prop.arg) &&\r\n            (prop.arg.content === 'true-value' || prop.arg.content === 'false-value'));\r\n    }\r\n    else {\r\n        return prop.name === 'true-value' || prop.name === 'false-value';\r\n    }\r\n}\r\nfunction isTextareaWithValue(node, prop) {\r\n    return !!(node.tag === 'textarea' &&\r\n        prop.name === 'bind' &&\r\n        isStaticArgOf(prop.arg, 'value'));\r\n}\r\nfunction mergeCall(call, arg) {\r\n    const existing = call.arguments[0];\r\n    if (existing.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\r\n        existing.elements.push(arg);\r\n    }\r\n    else {\r\n        call.arguments[0] = createArrayExpression([existing, arg]);\r\n    }\r\n}\r\nfunction removeStaticBinding(tag, binding) {\r\n    const regExp = new RegExp(`^ ${binding}=\".+\"$`);\r\n    const i = tag.findIndex(e => typeof e === 'string' && regExp.test(e));\r\n    if (i > -1) {\r\n        tag.splice(i, 1);\r\n    }\r\n}\r\nfunction findVModel(node) {\r\n    return node.props.find(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'model' && p.exp);\r\n}\r\nfunction ssrProcessElement(node, context) {\r\n    const isVoidTag = context.options.isVoidTag || NO;\r\n    const elementsToAdd = node.ssrCodegenNode.elements;\r\n    for (let j = 0; j < elementsToAdd.length; j++) {\r\n        context.pushStringPart(elementsToAdd[j]);\r\n    }\r\n    // Handle slot scopeId\r\n    if (context.withSlotScopeId) {\r\n        context.pushStringPart(createSimpleExpression(`_scopeId`, false));\r\n    }\r\n    // close open tag\r\n    context.pushStringPart(`>`);\r\n    const rawChildren = rawChildrenMap.get(node);\r\n    if (rawChildren) {\r\n        context.pushStringPart(rawChildren);\r\n    }\r\n    else if (node.children.length) {\r\n        processChildren(node, context);\r\n    }\r\n    if (!isVoidTag(node.tag)) {\r\n        // push closing tag\r\n        context.pushStringPart(`</${node.tag}>`);\r\n    }\r\n}\r\n\r\nconst wipMap$1 = new WeakMap();\r\n// phase 1: build props\r\nfunction ssrTransformTransitionGroup(node, context) {\r\n    return () => {\r\n        const tag = findProp(node, 'tag');\r\n        if (tag) {\r\n            const otherProps = node.props.filter(p => p !== tag);\r\n            const { props, directives } = buildProps(node, context, otherProps, true /* isComponent */, false /* isDynamicComponent */, true /* ssr (skip event listeners) */);\r\n            let propsExp = null;\r\n            if (props || directives.length) {\r\n                propsExp = createCallExpression(context.helper(SSR_RENDER_ATTRS), [\r\n                    buildSSRProps(props, directives, context)\r\n                ]);\r\n            }\r\n            wipMap$1.set(node, {\r\n                tag,\r\n                propsExp\r\n            });\r\n        }\r\n    };\r\n}\r\n// phase 2: process children\r\nfunction ssrProcessTransitionGroup(node, context) {\r\n    const entry = wipMap$1.get(node);\r\n    if (entry) {\r\n        const { tag, propsExp } = entry;\r\n        if (tag.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n            // dynamic :tag\r\n            context.pushStringPart(`<`);\r\n            context.pushStringPart(tag.exp);\r\n            if (propsExp) {\r\n                context.pushStringPart(propsExp);\r\n            }\r\n            context.pushStringPart(`>`);\r\n            processChildren(node, context, false, \r\n            /**\r\n             * TransitionGroup has the special runtime behavior of flattening and\r\n             * concatenating all children into a single fragment (in order for them to\r\n             * be patched using the same key map) so we need to account for that here\r\n             * by disabling nested fragment wrappers from being generated.\r\n             */\r\n            true);\r\n            context.pushStringPart(`</`);\r\n            context.pushStringPart(tag.exp);\r\n            context.pushStringPart(`>`);\r\n        }\r\n        else {\r\n            // static tag\r\n            context.pushStringPart(`<${tag.value.content}`);\r\n            if (propsExp) {\r\n                context.pushStringPart(propsExp);\r\n            }\r\n            context.pushStringPart(`>`);\r\n            processChildren(node, context, false, true);\r\n            context.pushStringPart(`</${tag.value.content}>`);\r\n        }\r\n    }\r\n    else {\r\n        // fragment\r\n        processChildren(node, context, true, true);\r\n    }\r\n}\r\n\r\n// We need to construct the slot functions in the 1st pass to ensure proper\r\n// scope tracking, but the children of each slot cannot be processed until\r\n// the 2nd pass, so we store the WIP slot functions in a weakMap during the 1st\r\n// pass and complete them in the 2nd pass.\r\nconst wipMap$2 = new WeakMap();\r\nconst WIP_SLOT = Symbol();\r\nconst componentTypeMap = new WeakMap();\r\n// ssr component transform is done in two phases:\r\n// In phase 1. we use `buildSlot` to analyze the children of the component into\r\n// WIP slot functions (it must be done in phase 1 because `buildSlot` relies on\r\n// the core transform context).\r\n// In phase 2. we convert the WIP slots from phase 1 into ssr-specific codegen\r\n// nodes.\r\nconst ssrTransformComponent = (node, context) => {\r\n    if (node.type !== 1 /* NodeTypes.ELEMENT */ ||\r\n        node.tagType !== 1 /* ElementTypes.COMPONENT */) {\r\n        return;\r\n    }\r\n    const component = resolveComponentType(node, context, true /* ssr */);\r\n    const isDynamicComponent = isObject(component) && component.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n    componentTypeMap.set(node, component);\r\n    if (isSymbol(component)) {\r\n        if (component === SUSPENSE) {\r\n            return ssrTransformSuspense(node, context);\r\n        }\r\n        if (component === TRANSITION_GROUP) {\r\n            return ssrTransformTransitionGroup(node, context);\r\n        }\r\n        return; // other built-in components: fallthrough\r\n    }\r\n    // Build the fallback vnode-based branch for the component's slots.\r\n    // We need to clone the node into a fresh copy and use the buildSlots' logic\r\n    // to get access to the children of each slot. We then compile them with\r\n    // a child transform pipeline using vnode-based transforms (instead of ssr-\r\n    // based ones), and save the result branch (a ReturnStatement) in an array.\r\n    // The branch is retrieved when processing slots again in ssr mode.\r\n    const vnodeBranches = [];\r\n    const clonedNode = clone(node);\r\n    return function ssrPostTransformComponent() {\r\n        // Using the cloned node, build the normal VNode-based branches (for\r\n        // fallback in case the child is render-fn based). Store them in an array\r\n        // for later use.\r\n        if (clonedNode.children.length) {\r\n            buildSlots(clonedNode, context, (props, children) => {\r\n                vnodeBranches.push(createVNodeSlotBranch(props, children, context));\r\n                return createFunctionExpression(undefined);\r\n            });\r\n        }\r\n        let propsExp = `null`;\r\n        if (node.props.length) {\r\n            // note we are not passing ssr: true here because for components, v-on\r\n            // handlers should still be passed\r\n            const { props, directives } = buildProps(node, context, undefined, true, isDynamicComponent);\r\n            if (props || directives.length) {\r\n                propsExp = buildSSRProps(props, directives, context);\r\n            }\r\n        }\r\n        const wipEntries = [];\r\n        wipMap$2.set(node, wipEntries);\r\n        const buildSSRSlotFn = (props, children, loc) => {\r\n            const param0 = (props && stringifyExpression(props)) || `_`;\r\n            const fn = createFunctionExpression([param0, `_push`, `_parent`, `_scopeId`], undefined, // no return, assign body later\r\n            true, // newline\r\n            true, // isSlot\r\n            loc);\r\n            wipEntries.push({\r\n                type: WIP_SLOT,\r\n                fn,\r\n                children,\r\n                // also collect the corresponding vnode branch built earlier\r\n                vnodeBranch: vnodeBranches[wipEntries.length]\r\n            });\r\n            return fn;\r\n        };\r\n        const slots = node.children.length\r\n            ? buildSlots(node, context, buildSSRSlotFn).slots\r\n            : `null`;\r\n        if (typeof component !== 'string') {\r\n            // dynamic component that resolved to a `resolveDynamicComponent` call\r\n            // expression - since the resolved result may be a plain element (string)\r\n            // or a VNode, handle it with `renderVNode`.\r\n            node.ssrCodegenNode = createCallExpression(context.helper(SSR_RENDER_VNODE), [\r\n                `_push`,\r\n                createCallExpression(context.helper(CREATE_VNODE), [\r\n                    component,\r\n                    propsExp,\r\n                    slots\r\n                ]),\r\n                `_parent`\r\n            ]);\r\n        }\r\n        else {\r\n            node.ssrCodegenNode = createCallExpression(context.helper(SSR_RENDER_COMPONENT), [component, propsExp, slots, `_parent`]);\r\n        }\r\n    };\r\n};\r\nfunction ssrProcessComponent(node, context, parent) {\r\n    const component = componentTypeMap.get(node);\r\n    if (!node.ssrCodegenNode) {\r\n        // this is a built-in component that fell-through.\r\n        if (component === TELEPORT) {\r\n            return ssrProcessTeleport(node, context);\r\n        }\r\n        else if (component === SUSPENSE) {\r\n            return ssrProcessSuspense(node, context);\r\n        }\r\n        else if (component === TRANSITION_GROUP) {\r\n            return ssrProcessTransitionGroup(node, context);\r\n        }\r\n        else {\r\n            // real fall-through: Transition / KeepAlive\r\n            // just render its children.\r\n            // #5352: if is at root level of a slot, push an empty string.\r\n            // this does not affect the final output, but avoids all-comment slot\r\n            // content of being treated as empty by ssrRenderSlot().\r\n            if (parent.type === WIP_SLOT) {\r\n                context.pushStringPart(``);\r\n            }\r\n            // #5351: filter out comment children inside transition\r\n            if (component === TRANSITION) {\r\n                node.children = node.children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */);\r\n            }\r\n            processChildren(node, context);\r\n        }\r\n    }\r\n    else {\r\n        // finish up slot function expressions from the 1st pass.\r\n        const wipEntries = wipMap$2.get(node) || [];\r\n        for (let i = 0; i < wipEntries.length; i++) {\r\n            const { fn, vnodeBranch } = wipEntries[i];\r\n            // For each slot, we generate two branches: one SSR-optimized branch and\r\n            // one normal vnode-based branch. The branches are taken based on the\r\n            // presence of the 2nd `_push` argument (which is only present if the slot\r\n            // is called by `_ssrRenderSlot`.\r\n            fn.body = createIfStatement(createSimpleExpression(`_push`, false), processChildrenAsStatement(wipEntries[i], context, false, true /* withSlotScopeId */), vnodeBranch);\r\n        }\r\n        // component is inside a slot, inherit slot scope Id\r\n        if (context.withSlotScopeId) {\r\n            node.ssrCodegenNode.arguments.push(`_scopeId`);\r\n        }\r\n        if (typeof component === 'string') {\r\n            // static component\r\n            context.pushStatement(createCallExpression(`_push`, [node.ssrCodegenNode]));\r\n        }\r\n        else {\r\n            // dynamic component (`resolveDynamicComponent` call)\r\n            // the codegen node is a `renderVNode` call\r\n            context.pushStatement(node.ssrCodegenNode);\r\n        }\r\n    }\r\n}\r\nconst rawOptionsMap = new WeakMap();\r\nconst [baseNodeTransforms, baseDirectiveTransforms] = getBaseTransformPreset(true);\r\nconst vnodeNodeTransforms = [...baseNodeTransforms, ...DOMNodeTransforms];\r\nconst vnodeDirectiveTransforms = Object.assign(Object.assign({}, baseDirectiveTransforms), DOMDirectiveTransforms);\r\nfunction createVNodeSlotBranch(props, children, parentContext) {\r\n    // apply a sub-transform using vnode-based transforms.\r\n    const rawOptions = rawOptionsMap.get(parentContext.root);\r\n    const subOptions = Object.assign(Object.assign({}, rawOptions), { \r\n        // overwrite with vnode-based transforms\r\n        nodeTransforms: [\r\n            ...vnodeNodeTransforms,\r\n            ...(rawOptions.nodeTransforms || [])\r\n        ], directiveTransforms: Object.assign(Object.assign({}, vnodeDirectiveTransforms), (rawOptions.directiveTransforms || {})) });\r\n    // wrap the children with a wrapper template for proper children treatment.\r\n    const wrapperNode = {\r\n        type: 1 /* NodeTypes.ELEMENT */,\r\n        ns: 0 /* Namespaces.HTML */,\r\n        tag: 'template',\r\n        tagType: 3 /* ElementTypes.TEMPLATE */,\r\n        isSelfClosing: false,\r\n        // important: provide v-slot=\"props\" on the wrapper for proper\r\n        // scope analysis\r\n        props: [\r\n            {\r\n                type: 7 /* NodeTypes.DIRECTIVE */,\r\n                name: 'slot',\r\n                exp: props,\r\n                arg: undefined,\r\n                modifiers: [],\r\n                loc: locStub\r\n            }\r\n        ],\r\n        children,\r\n        loc: locStub,\r\n        codegenNode: undefined\r\n    };\r\n    subTransform(wrapperNode, subOptions, parentContext);\r\n    return createReturnStatement(children);\r\n}\r\nfunction subTransform(node, options, parentContext) {\r\n    const childRoot = createRoot([node]);\r\n    const childContext = createTransformContext(childRoot, options);\r\n    // this sub transform is for vnode fallback branch so it should be handled\r\n    // like normal render functions\r\n    childContext.ssr = false;\r\n    // inherit parent scope analysis state\r\n    childContext.scopes = Object.assign({}, parentContext.scopes);\r\n    childContext.identifiers = Object.assign({}, parentContext.identifiers);\r\n    childContext.imports = parentContext.imports;\r\n    // traverse\r\n    traverseNode(childRoot, childContext);\r\n    ['helpers', 'components', 'directives'].forEach(key => {\r\n        childContext[key].forEach((value, helperKey) => {\r\n            if (key === 'helpers') {\r\n                const parentCount = parentContext.helpers.get(helperKey);\r\n                if (parentCount === undefined) {\r\n                    parentContext.helpers.set(helperKey, value);\r\n                }\r\n                else {\r\n                    parentContext.helpers.set(helperKey, value + parentCount);\r\n                }\r\n            }\r\n            else {\r\n                parentContext[key].add(value);\r\n            }\r\n        });\r\n    });\r\n    // imports/hoists are not merged because:\r\n    // - imports are only used for asset urls and should be consistent between\r\n    //   node/client branches\r\n    // - hoists are not enabled for the client branch here\r\n}\r\nfunction clone(v) {\r\n    if (isArray(v)) {\r\n        return v.map(clone);\r\n    }\r\n    else if (isObject(v)) {\r\n        const res = {};\r\n        for (const key in v) {\r\n            res[key] = clone(v[key]);\r\n        }\r\n        return res;\r\n    }\r\n    else {\r\n        return v;\r\n    }\r\n}\r\n\r\n// Because SSR codegen output is completely different from client-side output\r\n// (e.g. multiple elements can be concatenated into a single template literal\r\n// instead of each getting a corresponding call), we need to apply an extra\r\n// transform pass to convert the template AST into a fresh JS AST before\r\n// passing it to codegen.\r\nfunction ssrCodegenTransform(ast, options) {\r\n    const context = createSSRTransformContext(ast, options);\r\n    // inject SFC <style> CSS variables\r\n    // we do this instead of inlining the expression to ensure the vars are\r\n    // only resolved once per render\r\n    if (options.ssrCssVars) {\r\n        const cssContext = createTransformContext(createRoot([]), options);\r\n        const varsExp = processExpression(createSimpleExpression(options.ssrCssVars, false), cssContext);\r\n        context.body.push(createCompoundExpression([`const _cssVars = { style: `, varsExp, `}`]));\r\n        Array.from(cssContext.helpers.keys()).forEach(helper => {\r\n            if (!ast.helpers.includes(helper))\r\n                ast.helpers.push(helper);\r\n        });\r\n    }\r\n    const isFragment = ast.children.length > 1 && ast.children.some(c => !isText(c));\r\n    processChildren(ast, context, isFragment);\r\n    ast.codegenNode = createBlockStatement(context.body);\r\n    // Finalize helpers.\r\n    // We need to separate helpers imported from 'vue' vs. '@vue/server-renderer'\r\n    ast.ssrHelpers = Array.from(new Set([...ast.helpers.filter(h => h in ssrHelpers), ...context.helpers]));\r\n    ast.helpers = ast.helpers.filter(h => !(h in ssrHelpers));\r\n}\r\nfunction createSSRTransformContext(root, options, helpers = new Set(), withSlotScopeId = false) {\r\n    const body = [];\r\n    let currentString = null;\r\n    return {\r\n        root,\r\n        options,\r\n        body,\r\n        helpers,\r\n        withSlotScopeId,\r\n        onError: options.onError ||\r\n            (e => {\r\n                throw e;\r\n            }),\r\n        helper(name) {\r\n            helpers.add(name);\r\n            return name;\r\n        },\r\n        pushStringPart(part) {\r\n            if (!currentString) {\r\n                const currentCall = createCallExpression(`_push`);\r\n                body.push(currentCall);\r\n                currentString = createTemplateLiteral([]);\r\n                currentCall.arguments.push(currentString);\r\n            }\r\n            const bufferedElements = currentString.elements;\r\n            const lastItem = bufferedElements[bufferedElements.length - 1];\r\n            if (isString(part) && isString(lastItem)) {\r\n                bufferedElements[bufferedElements.length - 1] += part;\r\n            }\r\n            else {\r\n                bufferedElements.push(part);\r\n            }\r\n        },\r\n        pushStatement(statement) {\r\n            // close current string\r\n            currentString = null;\r\n            body.push(statement);\r\n        }\r\n    };\r\n}\r\nfunction createChildContext(parent, withSlotScopeId = parent.withSlotScopeId) {\r\n    // ensure child inherits parent helpers\r\n    return createSSRTransformContext(parent.root, parent.options, parent.helpers, withSlotScopeId);\r\n}\r\nfunction processChildren(parent, context, asFragment = false, disableNestedFragments = false) {\r\n    if (asFragment) {\r\n        context.pushStringPart(`<!--[-->`);\r\n    }\r\n    const { children } = parent;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* NodeTypes.ELEMENT */:\r\n                switch (child.tagType) {\r\n                    case 0 /* ElementTypes.ELEMENT */:\r\n                        ssrProcessElement(child, context);\r\n                        break;\r\n                    case 1 /* ElementTypes.COMPONENT */:\r\n                        ssrProcessComponent(child, context, parent);\r\n                        break;\r\n                    case 2 /* ElementTypes.SLOT */:\r\n                        ssrProcessSlotOutlet(child, context);\r\n                        break;\r\n                    case 3 /* ElementTypes.TEMPLATE */:\r\n                        // TODO\r\n                        break;\r\n                    default:\r\n                        context.onError(createSSRCompilerError(64 /* SSRErrorCodes.X_SSR_INVALID_AST_NODE */, child.loc));\r\n                        // make sure we exhaust all possible types\r\n                        const exhaustiveCheck = child;\r\n                        return exhaustiveCheck;\r\n                }\r\n                break;\r\n            case 2 /* NodeTypes.TEXT */:\r\n                context.pushStringPart(escapeHtml(child.content));\r\n                break;\r\n            case 3 /* NodeTypes.COMMENT */:\r\n                // no need to escape comment here because the AST can only\r\n                // contain valid comments.\r\n                context.pushStringPart(`<!--${child.content}-->`);\r\n                break;\r\n            case 5 /* NodeTypes.INTERPOLATION */:\r\n                context.pushStringPart(createCallExpression(context.helper(SSR_INTERPOLATE), [child.content]));\r\n                break;\r\n            case 9 /* NodeTypes.IF */:\r\n                ssrProcessIf(child, context, disableNestedFragments);\r\n                break;\r\n            case 11 /* NodeTypes.FOR */:\r\n                ssrProcessFor(child, context, disableNestedFragments);\r\n                break;\r\n            case 10 /* NodeTypes.IF_BRANCH */:\r\n                // no-op - handled by ssrProcessIf\r\n                break;\r\n            case 12 /* NodeTypes.TEXT_CALL */:\r\n            case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n                // no-op - these two types can never appear as template child node since\r\n                // `transformText` is not used during SSR compile.\r\n                break;\r\n            default:\r\n                context.onError(createSSRCompilerError(64 /* SSRErrorCodes.X_SSR_INVALID_AST_NODE */, child.loc));\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = child;\r\n                return exhaustiveCheck;\r\n        }\r\n    }\r\n    if (asFragment) {\r\n        context.pushStringPart(`<!--]-->`);\r\n    }\r\n}\r\nfunction processChildrenAsStatement(parent, parentContext, asFragment = false, withSlotScopeId = parentContext.withSlotScopeId) {\r\n    const childContext = createChildContext(parentContext, withSlotScopeId);\r\n    processChildren(parent, childContext, asFragment);\r\n    return createBlockStatement(childContext.body);\r\n}\r\n\r\nconst ssrTransformModel = (dir, node, context) => {\r\n    const model = dir.exp;\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(58 /* DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    if (node.tagType === 0 /* ElementTypes.ELEMENT */) {\r\n        const res = { props: [] };\r\n        const defaultProps = [\r\n            // default value binding for text type inputs\r\n            createObjectProperty(`value`, model)\r\n        ];\r\n        if (node.tag === 'input') {\r\n            const type = findProp(node, 'type');\r\n            if (type) {\r\n                const value = findValueBinding(node);\r\n                if (type.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                    // dynamic type\r\n                    res.ssrTagParts = [\r\n                        createCallExpression(context.helper(SSR_RENDER_DYNAMIC_MODEL), [\r\n                            type.exp,\r\n                            model,\r\n                            value\r\n                        ])\r\n                    ];\r\n                }\r\n                else if (type.value) {\r\n                    // static type\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            res.props = [\r\n                                createObjectProperty(`checked`, createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                                    model,\r\n                                    value\r\n                                ]))\r\n                            ];\r\n                            break;\r\n                        case 'checkbox':\r\n                            const trueValueBinding = findProp(node, 'true-value');\r\n                            if (trueValueBinding) {\r\n                                const trueValue = trueValueBinding.type === 6 /* NodeTypes.ATTRIBUTE */\r\n                                    ? JSON.stringify(trueValueBinding.value.content)\r\n                                    : trueValueBinding.exp;\r\n                                res.props = [\r\n                                    createObjectProperty(`checked`, createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                                        model,\r\n                                        trueValue\r\n                                    ]))\r\n                                ];\r\n                            }\r\n                            else {\r\n                                res.props = [\r\n                                    createObjectProperty(`checked`, createConditionalExpression(createCallExpression(`Array.isArray`, [model]), createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [\r\n                                        model,\r\n                                        value\r\n                                    ]), model))\r\n                                ];\r\n                            }\r\n                            break;\r\n                        case 'file':\r\n                            context.onError(createDOMCompilerError(57 /* DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            checkDuplicatedValue();\r\n                            res.props = defaultProps;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) ;\r\n            else {\r\n                // text type\r\n                checkDuplicatedValue();\r\n                res.props = defaultProps;\r\n            }\r\n        }\r\n        else if (node.tag === 'textarea') {\r\n            checkDuplicatedValue();\r\n            node.children = [createInterpolation(model, model.loc)];\r\n        }\r\n        else if (node.tag === 'select') ;\r\n        else {\r\n            context.onError(createDOMCompilerError(55 /* DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n        }\r\n        return res;\r\n    }\r\n    else {\r\n        // component v-model\r\n        return transformModel(dir, node, context);\r\n    }\r\n};\r\nfunction findValueBinding(node) {\r\n    const valueBinding = findProp(node, 'value');\r\n    return valueBinding\r\n        ? valueBinding.type === 7 /* NodeTypes.DIRECTIVE */\r\n            ? valueBinding.exp\r\n            : createSimpleExpression(valueBinding.value.content, true)\r\n        : createSimpleExpression(`null`, false);\r\n}\r\n\r\nconst ssrTransformShow = (dir, node, context) => {\r\n    if (!dir.exp) {\r\n        context.onError(createDOMCompilerError(59 /* DOMErrorCodes.X_V_SHOW_NO_EXPRESSION */));\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(`style`, createConditionalExpression(dir.exp, createSimpleExpression(`null`, false), createObjectExpression([\r\n                createObjectProperty(`display`, createSimpleExpression(`none`, true))\r\n            ]), false /* no newline */))\r\n        ]\r\n    };\r\n};\r\n\r\nconst filterChild = (node) => node.children.filter(n => n.type !== 3 /* NodeTypes.COMMENT */);\r\nconst hasSingleChild = (node) => filterChild(node).length === 1;\r\nconst ssrInjectFallthroughAttrs = (node, context) => {\r\n    // _attrs is provided as a function argument.\r\n    // mark it as a known identifier so that it doesn't get prefixed by\r\n    // transformExpression.\r\n    if (node.type === 0 /* NodeTypes.ROOT */) {\r\n        context.identifiers._attrs = 1;\r\n    }\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 1 /* ElementTypes.COMPONENT */ &&\r\n        (isBuiltInType(node.tag, 'Transition') ||\r\n            isBuiltInType(node.tag, 'KeepAlive'))) {\r\n        const rootChildren = filterChild(context.root);\r\n        if (rootChildren.length === 1 && rootChildren[0] === node) {\r\n            if (hasSingleChild(node)) {\r\n                injectFallthroughAttrs(node.children[0]);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    const parent = context.parent;\r\n    if (!parent || parent.type !== 0 /* NodeTypes.ROOT */) {\r\n        return;\r\n    }\r\n    if (node.type === 10 /* NodeTypes.IF_BRANCH */ && hasSingleChild(node)) {\r\n        // detect cases where the parent v-if is not the only root level node\r\n        let hasEncounteredIf = false;\r\n        for (const c of filterChild(parent)) {\r\n            if (c.type === 9 /* NodeTypes.IF */ ||\r\n                (c.type === 1 /* NodeTypes.ELEMENT */ && findDir(c, 'if'))) {\r\n                // multiple root v-if\r\n                if (hasEncounteredIf)\r\n                    return;\r\n                hasEncounteredIf = true;\r\n            }\r\n            else if (\r\n            // node before v-if\r\n            !hasEncounteredIf ||\r\n                // non else nodes\r\n                !(c.type === 1 /* NodeTypes.ELEMENT */ && findDir(c, /else/, true))) {\r\n                return;\r\n            }\r\n        }\r\n        injectFallthroughAttrs(node.children[0]);\r\n    }\r\n    else if (hasSingleChild(parent)) {\r\n        injectFallthroughAttrs(node);\r\n    }\r\n};\r\nfunction injectFallthroughAttrs(node) {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        (node.tagType === 0 /* ElementTypes.ELEMENT */ ||\r\n            node.tagType === 1 /* ElementTypes.COMPONENT */) &&\r\n        !findDir(node, 'for')) {\r\n        node.props.push({\r\n            type: 7 /* NodeTypes.DIRECTIVE */,\r\n            name: 'bind',\r\n            arg: undefined,\r\n            exp: createSimpleExpression(`_attrs`, false),\r\n            modifiers: [],\r\n            loc: locStub\r\n        });\r\n    }\r\n}\r\n\r\nconst ssrInjectCssVars = (node, context) => {\r\n    if (!context.ssrCssVars) {\r\n        return;\r\n    }\r\n    // _cssVars is initialized once per render function\r\n    // the code is injected in ssrCodegenTransform when creating the\r\n    // ssr transform context\r\n    if (node.type === 0 /* NodeTypes.ROOT */) {\r\n        context.identifiers._cssVars = 1;\r\n    }\r\n    const parent = context.parent;\r\n    if (!parent || parent.type !== 0 /* NodeTypes.ROOT */) {\r\n        return;\r\n    }\r\n    if (node.type === 10 /* NodeTypes.IF_BRANCH */) {\r\n        for (const child of node.children) {\r\n            injectCssVars(child);\r\n        }\r\n    }\r\n    else {\r\n        injectCssVars(node);\r\n    }\r\n};\r\nfunction injectCssVars(node) {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        (node.tagType === 0 /* ElementTypes.ELEMENT */ ||\r\n            node.tagType === 1 /* ElementTypes.COMPONENT */) &&\r\n        !findDir(node, 'for')) {\r\n        if (isBuiltInType(node.tag, 'Suspense')) {\r\n            for (const child of node.children) {\r\n                if (child.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                    child.tagType === 3 /* ElementTypes.TEMPLATE */) {\r\n                    // suspense slot\r\n                    child.children.forEach(injectCssVars);\r\n                }\r\n                else {\r\n                    injectCssVars(child);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            node.props.push({\r\n                type: 7 /* NodeTypes.DIRECTIVE */,\r\n                name: 'bind',\r\n                arg: undefined,\r\n                exp: createSimpleExpression(`_cssVars`, false),\r\n                modifiers: [],\r\n                loc: locStub\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction compile$1(template, options = {}) {\r\n    options = Object.assign(Object.assign(Object.assign({}, options), parserOptions), { ssr: true, inSSR: true, scopeId: options.mode === 'function' ? null : options.scopeId, \r\n        // always prefix since compiler-ssr doesn't have size concern\r\n        prefixIdentifiers: true, \r\n        // disable optimizations that are unnecessary for ssr\r\n        cacheHandlers: false, hoistStatic: false });\r\n    const ast = baseParse(template, options);\r\n    // Save raw options for AST. This is needed when performing sub-transforms\r\n    // on slot vnode branches.\r\n    rawOptionsMap.set(ast, options);\r\n    transform(ast, Object.assign(Object.assign({}, options), { hoistStatic: false, nodeTransforms: [\r\n            ssrTransformIf,\r\n            ssrTransformFor,\r\n            trackVForSlotScopes,\r\n            transformExpression,\r\n            ssrTransformSlotOutlet,\r\n            ssrInjectFallthroughAttrs,\r\n            ssrInjectCssVars,\r\n            ssrTransformElement,\r\n            ssrTransformComponent,\r\n            trackSlotScopes,\r\n            transformStyle,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ], directiveTransforms: Object.assign({ \r\n            // reusing core v-bind\r\n            bind: transformBind, on: transformOn, \r\n            // model and show has dedicated SSR handling\r\n            model: ssrTransformModel, show: ssrTransformShow, \r\n            // the following are ignored during SSR\r\n            // on: noopDirectiveTransform,\r\n            cloak: noopDirectiveTransform, once: noopDirectiveTransform, memo: noopDirectiveTransform }, (options.directiveTransforms || {}) // user transforms\r\n        ) }));\r\n    // traverse the template AST and convert into SSR codegen AST\r\n    // by replacing ast.codegenNode.\r\n    ssrCodegenTransform(ast, options);\r\n    return generate(ast, options);\r\n}\r\n\r\nvar CompilerSSR = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  compile: compile$1\r\n});\r\n\r\nvar _polyfillNode_fs = {};\r\n\r\nvar _polyfillNode_fs$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  'default': _polyfillNode_fs\r\n});\r\n\r\nvar _fs = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_fs$1);\r\n\r\nvar _path = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_path);\r\n\r\nvar require$$0 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_util$1);\r\n\r\nconst hasWarned = {};\r\nfunction warnOnce(msg) {\r\n    const isNodeProd = typeof process !== 'undefined' && ({}).NODE_ENV === 'production';\r\n    if (!isNodeProd && !false && !hasWarned[msg]) {\r\n        hasWarned[msg] = true;\r\n        warn(msg);\r\n    }\r\n}\r\nfunction warn(msg) {\r\n    console.warn(`\\x1b[1m\\x1b[33m[@vue/compiler-sfc]\\x1b[0m\\x1b[33m ${msg}\\x1b[0m\\n`);\r\n}\r\n\r\nfunction preprocess({ source, filename, preprocessOptions }, preprocessor) {\r\n    // Consolidate exposes a callback based API, but the callback is in fact\r\n    // called synchronously for most templating engines. In our case, we have to\r\n    // expose a synchronous API so that it is usable in Jest transforms (which\r\n    // have to be sync because they are applied via Node.js require hooks)\r\n    let res = '';\r\n    let err = null;\r\n    preprocessor.render(source, Object.assign({ filename }, preprocessOptions), (_err, _res) => {\r\n        if (_err)\r\n            err = _err;\r\n        res = _res;\r\n    });\r\n    if (err)\r\n        throw err;\r\n    return res;\r\n}\r\nfunction compileTemplate(options) {\r\n    const { preprocessLang, preprocessCustomRequire } = options;\r\n    if (preprocessLang &&\r\n        !preprocessCustomRequire) {\r\n        throw new Error(`[@vue/compiler-sfc] Template preprocessing in the browser build must ` +\r\n            `provide the \\`preprocessCustomRequire\\` option to return the in-browser ` +\r\n            `version of the preprocessor in the shape of { render(): string }.`);\r\n    }\r\n    const preprocessor = preprocessLang\r\n        ? preprocessCustomRequire\r\n            ? preprocessCustomRequire(preprocessLang)\r\n            : undefined\r\n                \r\n        : false;\r\n    if (preprocessor) {\r\n        try {\r\n            return doCompileTemplate(Object.assign(Object.assign({}, options), { source: preprocess(options, preprocessor) }));\r\n        }\r\n        catch (e) {\r\n            return {\r\n                code: `export default function render() {}`,\r\n                source: options.source,\r\n                tips: [],\r\n                errors: [e]\r\n            };\r\n        }\r\n    }\r\n    else if (preprocessLang) {\r\n        return {\r\n            code: `export default function render() {}`,\r\n            source: options.source,\r\n            tips: [\r\n                `Component ${options.filename} uses lang ${preprocessLang} for template. Please install the language preprocessor.`\r\n            ],\r\n            errors: [\r\n                `Component ${options.filename} uses lang ${preprocessLang} for template, however it is not installed.`\r\n            ]\r\n        };\r\n    }\r\n    else {\r\n        return doCompileTemplate(options);\r\n    }\r\n}\r\nfunction doCompileTemplate({ filename, id, scoped, slotted, inMap, source, ssr = false, ssrCssVars, isProd = false, compiler = ssr ? CompilerSSR : CompilerDOM, compilerOptions = {}, transformAssetUrls }) {\r\n    const errors = [];\r\n    const warnings = [];\r\n    let nodeTransforms = [];\r\n    if (isObject(transformAssetUrls)) {\r\n        const assetOptions = normalizeOptions(transformAssetUrls);\r\n        nodeTransforms = [\r\n            createAssetUrlTransformWithOptions(assetOptions),\r\n            createSrcsetTransformWithOptions(assetOptions)\r\n        ];\r\n    }\r\n    else if (transformAssetUrls !== false) {\r\n        nodeTransforms = [transformAssetUrl, transformSrcset];\r\n    }\r\n    if (ssr && !ssrCssVars) {\r\n        warnOnce(`compileTemplate is called with \\`ssr: true\\` but no ` +\r\n            `corresponding \\`cssVars\\` option.\\`.`);\r\n    }\r\n    if (!id) {\r\n        warnOnce(`compileTemplate now requires the \\`id\\` option.\\`.`);\r\n        id = '';\r\n    }\r\n    const shortId = id.replace(/^data-v-/, '');\r\n    const longId = `data-v-${shortId}`;\r\n    let { code, ast, preamble, map } = compiler.compile(source, Object.assign(Object.assign({ mode: 'module', prefixIdentifiers: true, hoistStatic: true, cacheHandlers: true, ssrCssVars: ssr && ssrCssVars && ssrCssVars.length\r\n            ? genCssVarsFromList(ssrCssVars, shortId, isProd, true)\r\n            : '', scopeId: scoped ? longId : undefined, slotted, sourceMap: true }, compilerOptions), { nodeTransforms: nodeTransforms.concat(compilerOptions.nodeTransforms || []), filename, onError: e => errors.push(e), onWarn: w => warnings.push(w) }));\r\n    // inMap should be the map produced by ./parse.ts which is a simple line-only\r\n    // mapping. If it is present, we need to adjust the final map and errors to\r\n    // reflect the original line numbers.\r\n    if (inMap) {\r\n        if (map) {\r\n            map = mapLines(inMap, map);\r\n        }\r\n        if (errors.length) {\r\n            patchErrors(errors, source, inMap);\r\n        }\r\n    }\r\n    const tips = warnings.map(w => {\r\n        let msg = w.message;\r\n        if (w.loc) {\r\n            msg += `\\n${generateCodeFrame(source, w.loc.start.offset, w.loc.end.offset)}`;\r\n        }\r\n        return msg;\r\n    });\r\n    return { code, ast, preamble, source, errors, tips, map };\r\n}\r\nfunction mapLines(oldMap, newMap) {\r\n    if (!oldMap)\r\n        return newMap;\r\n    if (!newMap)\r\n        return oldMap;\r\n    const oldMapConsumer = new SourceMapConsumer$1(oldMap);\r\n    const newMapConsumer = new SourceMapConsumer$1(newMap);\r\n    const mergedMapGenerator = new SourceMapGenerator$2();\r\n    newMapConsumer.eachMapping(m => {\r\n        if (m.originalLine == null) {\r\n            return;\r\n        }\r\n        const origPosInOldMap = oldMapConsumer.originalPositionFor({\r\n            line: m.originalLine,\r\n            column: m.originalColumn\r\n        });\r\n        if (origPosInOldMap.source == null) {\r\n            return;\r\n        }\r\n        mergedMapGenerator.addMapping({\r\n            generated: {\r\n                line: m.generatedLine,\r\n                column: m.generatedColumn\r\n            },\r\n            original: {\r\n                line: origPosInOldMap.line,\r\n                // use current column, since the oldMap produced by @vue/compiler-sfc\r\n                // does not\r\n                column: m.originalColumn\r\n            },\r\n            source: origPosInOldMap.source,\r\n            name: origPosInOldMap.name\r\n        });\r\n    });\r\n    // source-map's type definition is incomplete\r\n    const generator = mergedMapGenerator;\r\n    oldMapConsumer.sources.forEach((sourceFile) => {\r\n        generator._sources.add(sourceFile);\r\n        const sourceContent = oldMapConsumer.sourceContentFor(sourceFile);\r\n        if (sourceContent != null) {\r\n            mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\r\n        }\r\n    });\r\n    generator._sourceRoot = oldMap.sourceRoot;\r\n    generator._file = oldMap.file;\r\n    return generator.toJSON();\r\n}\r\nfunction patchErrors(errors, source, inMap) {\r\n    const originalSource = inMap.sourcesContent[0];\r\n    const offset = originalSource.indexOf(source);\r\n    const lineOffset = originalSource.slice(0, offset).split(/\\r?\\n/).length - 1;\r\n    errors.forEach(err => {\r\n        if (err.loc) {\r\n            err.loc.start.line += lineOffset;\r\n            err.loc.start.offset += offset;\r\n            if (err.loc.end !== err.loc.start) {\r\n                err.loc.end.line += lineOffset;\r\n                err.loc.end.offset += offset;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst defaultExportRE = /((?:^|\\n|;)\\s*)export(\\s*)default/;\r\nconst namedDefaultExportRE = /((?:^|\\n|;)\\s*)export(.+)(?:as)?(\\s*)default/s;\r\nconst exportDefaultClassRE = /((?:^|\\n|;)\\s*)export\\s+default\\s+class\\s+([\\w$]+)/;\r\n/**\r\n * Utility for rewriting `export default` in a script block into a variable\r\n * declaration so that we can inject things into it\r\n */\r\nfunction rewriteDefault(input, as, parserPlugins) {\r\n    if (!hasDefaultExport(input)) {\r\n        return input + `\\nconst ${as} = {}`;\r\n    }\r\n    let replaced;\r\n    const classMatch = input.match(exportDefaultClassRE);\r\n    if (classMatch) {\r\n        replaced =\r\n            input.replace(exportDefaultClassRE, '$1class $2') +\r\n                `\\nconst ${as} = ${classMatch[2]}`;\r\n    }\r\n    else {\r\n        replaced = input.replace(defaultExportRE, `$1const ${as} =`);\r\n    }\r\n    if (!hasDefaultExport(replaced)) {\r\n        return replaced;\r\n    }\r\n    // if the script somehow still contains `default export`, it probably has\r\n    // multi-line comments or template strings. fallback to a full parse.\r\n    const s = new MagicString(input);\r\n    const ast = parse_1(input, {\r\n        sourceType: 'module',\r\n        plugins: parserPlugins\r\n    }).program.body;\r\n    ast.forEach(node => {\r\n        if (node.type === 'ExportDefaultDeclaration') {\r\n            if (node.declaration.type === 'ClassDeclaration') {\r\n                s.overwrite(node.start, node.declaration.id.start, `class `);\r\n                s.append(`\\nconst ${as} = ${node.declaration.id.name}`);\r\n            }\r\n            else {\r\n                s.overwrite(node.start, node.declaration.start, `const ${as} = `);\r\n            }\r\n        }\r\n        if (node.type === 'ExportNamedDeclaration') {\r\n            for (const specifier of node.specifiers) {\r\n                if (specifier.type === 'ExportSpecifier' &&\r\n                    specifier.exported.type === 'Identifier' &&\r\n                    specifier.exported.name === 'default') {\r\n                    if (node.source) {\r\n                        if (specifier.local.name === 'default') {\r\n                            const end = specifierEnd(input, specifier.local.end, node.end);\r\n                            s.prepend(`import { default as __VUE_DEFAULT__ } from '${node.source.value}'\\n`);\r\n                            s.overwrite(specifier.start, end, ``);\r\n                            s.append(`\\nconst ${as} = __VUE_DEFAULT__`);\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            const end = specifierEnd(input, specifier.exported.end, node.end);\r\n                            s.prepend(`import { ${input.slice(specifier.local.start, specifier.local.end)} } from '${node.source.value}'\\n`);\r\n                            s.overwrite(specifier.start, end, ``);\r\n                            s.append(`\\nconst ${as} = ${specifier.local.name}`);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    const end = specifierEnd(input, specifier.end, node.end);\r\n                    s.overwrite(specifier.start, end, ``);\r\n                    s.append(`\\nconst ${as} = ${specifier.local.name}`);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return s.toString();\r\n}\r\nfunction hasDefaultExport(input) {\r\n    return defaultExportRE.test(input) || namedDefaultExportRE.test(input);\r\n}\r\nfunction specifierEnd(input, end, nodeEnd) {\r\n    // export { default   , foo } ...\r\n    let hasCommas = false;\r\n    let oldEnd = end;\r\n    while (end < nodeEnd) {\r\n        if (/\\s/.test(input.charAt(end))) {\r\n            end++;\r\n        }\r\n        else if (input.charAt(end) === ',') {\r\n            end++;\r\n            hasCommas = true;\r\n            break;\r\n        }\r\n        else if (input.charAt(end) === '}') {\r\n            break;\r\n        }\r\n    }\r\n    return hasCommas ? end : oldEnd;\r\n}\r\n\r\nconst CONVERT_SYMBOL = '$';\r\nconst ESCAPE_SYMBOL = '$$';\r\nconst IMPORT_SOURCE = 'vue/macros';\r\nconst shorthands = ['ref', 'computed', 'shallowRef', 'toRef', 'customRef'];\r\nconst transformCheckRE = /[^\\w]\\$(?:\\$|ref|computed|shallowRef)?\\s*(\\(|\\<)/;\r\nfunction shouldTransform(src) {\r\n    return transformCheckRE.test(src);\r\n}\r\nfunction transform$1(src, { filename, sourceMap, parserPlugins, importHelpersFrom = 'vue' } = {}) {\r\n    const plugins = parserPlugins || [];\r\n    if (filename) {\r\n        if (/\\.tsx?$/.test(filename)) {\r\n            plugins.push('typescript');\r\n        }\r\n        if (filename.endsWith('x')) {\r\n            plugins.push('jsx');\r\n        }\r\n    }\r\n    const ast = parse_1(src, {\r\n        sourceType: 'module',\r\n        plugins\r\n    });\r\n    const s = new MagicString(src);\r\n    const res = transformAST(ast.program, s, 0);\r\n    // inject helper imports\r\n    if (res.importedHelpers.length) {\r\n        s.prepend(`import { ${res.importedHelpers\r\n            .map(h => `${h} as _${h}`)\r\n            .join(', ')} } from '${importHelpersFrom}'\\n`);\r\n    }\r\n    return Object.assign(Object.assign({}, res), { code: s.toString(), map: sourceMap\r\n            ? s.generateMap({\r\n                source: filename,\r\n                hires: true,\r\n                includeContent: true\r\n            })\r\n            : null });\r\n}\r\nfunction transformAST(ast, s, offset = 0, knownRefs, knownProps) {\r\n    // TODO remove when out of experimental\r\n    warnExperimental();\r\n    const userImports = Object.create(null);\r\n    for (const node of ast.body) {\r\n        if (node.type !== 'ImportDeclaration')\r\n            continue;\r\n        walkImportDeclaration(node);\r\n    }\r\n    // macro import handling\r\n    let convertSymbol;\r\n    let escapeSymbol;\r\n    for (const { local, imported, source, specifier } of Object.values(userImports)) {\r\n        if (source === IMPORT_SOURCE) {\r\n            if (imported === ESCAPE_SYMBOL) {\r\n                escapeSymbol = local;\r\n            }\r\n            else if (imported === CONVERT_SYMBOL) {\r\n                convertSymbol = local;\r\n            }\r\n            else if (imported !== local) {\r\n                error(`macro imports for ref-creating methods do not support aliasing.`, specifier);\r\n            }\r\n        }\r\n    }\r\n    // default symbol\r\n    if (!convertSymbol && !userImports[CONVERT_SYMBOL]) {\r\n        convertSymbol = CONVERT_SYMBOL;\r\n    }\r\n    if (!escapeSymbol && !userImports[ESCAPE_SYMBOL]) {\r\n        escapeSymbol = ESCAPE_SYMBOL;\r\n    }\r\n    const importedHelpers = new Set();\r\n    const rootScope = {};\r\n    const scopeStack = [rootScope];\r\n    let currentScope = rootScope;\r\n    let escapeScope; // inside $$()\r\n    const excludedIds = new WeakSet();\r\n    const parentStack = [];\r\n    const propsLocalToPublicMap = Object.create(null);\r\n    if (knownRefs) {\r\n        for (const key of knownRefs) {\r\n            rootScope[key] = true;\r\n        }\r\n    }\r\n    if (knownProps) {\r\n        for (const key in knownProps) {\r\n            const { local } = knownProps[key];\r\n            rootScope[local] = 'prop';\r\n            propsLocalToPublicMap[local] = key;\r\n        }\r\n    }\r\n    function walkImportDeclaration(node) {\r\n        const source = node.source.value;\r\n        if (source === IMPORT_SOURCE) {\r\n            s.remove(node.start + offset, node.end + offset);\r\n        }\r\n        for (const specifier of node.specifiers) {\r\n            const local = specifier.local.name;\r\n            const imported = (specifier.type === 'ImportSpecifier' &&\r\n                specifier.imported.type === 'Identifier' &&\r\n                specifier.imported.name) ||\r\n                'default';\r\n            userImports[local] = {\r\n                source,\r\n                local,\r\n                imported,\r\n                specifier\r\n            };\r\n        }\r\n    }\r\n    function isRefCreationCall(callee) {\r\n        if (!convertSymbol || currentScope[convertSymbol] !== undefined) {\r\n            return false;\r\n        }\r\n        if (callee === convertSymbol) {\r\n            return convertSymbol;\r\n        }\r\n        if (callee[0] === '$' && shorthands.includes(callee.slice(1))) {\r\n            return callee;\r\n        }\r\n        return false;\r\n    }\r\n    function error(msg, node) {\r\n        const e = new Error(msg);\r\n        e.node = node;\r\n        throw e;\r\n    }\r\n    function helper(msg) {\r\n        importedHelpers.add(msg);\r\n        return `_${msg}`;\r\n    }\r\n    function registerBinding(id, isRef = false) {\r\n        excludedIds.add(id);\r\n        if (currentScope) {\r\n            currentScope[id.name] = isRef;\r\n        }\r\n        else {\r\n            error('registerBinding called without active scope, something is wrong.', id);\r\n        }\r\n    }\r\n    const registerRefBinding = (id) => registerBinding(id, true);\r\n    let tempVarCount = 0;\r\n    function genTempVar() {\r\n        return `__$temp_${++tempVarCount}`;\r\n    }\r\n    function snip(node) {\r\n        return s.original.slice(node.start + offset, node.end + offset);\r\n    }\r\n    function walkScope(node, isRoot = false) {\r\n        for (const stmt of node.body) {\r\n            if (stmt.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt, isRoot);\r\n            }\r\n            else if (stmt.type === 'FunctionDeclaration' ||\r\n                stmt.type === 'ClassDeclaration') {\r\n                if (stmt.declare || !stmt.id)\r\n                    continue;\r\n                registerBinding(stmt.id);\r\n            }\r\n            else if ((stmt.type === 'ForOfStatement' || stmt.type === 'ForInStatement') &&\r\n                stmt.left.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt.left);\r\n            }\r\n            else if (stmt.type === 'ExportNamedDeclaration' &&\r\n                stmt.declaration &&\r\n                stmt.declaration.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt.declaration, isRoot);\r\n            }\r\n            else if (stmt.type === 'LabeledStatement' &&\r\n                stmt.body.type === 'VariableDeclaration') {\r\n                walkVariableDeclaration(stmt.body, isRoot);\r\n            }\r\n        }\r\n    }\r\n    function walkVariableDeclaration(stmt, isRoot = false) {\r\n        if (stmt.declare) {\r\n            return;\r\n        }\r\n        for (const decl of stmt.declarations) {\r\n            let refCall;\r\n            const isCall = decl.init &&\r\n                decl.init.type === 'CallExpression' &&\r\n                decl.init.callee.type === 'Identifier';\r\n            if (isCall &&\r\n                (refCall = isRefCreationCall(decl.init.callee.name))) {\r\n                processRefDeclaration(refCall, decl.id, decl.init);\r\n            }\r\n            else {\r\n                const isProps = isRoot && isCall && decl.init.callee.name === 'defineProps';\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    if (isProps) {\r\n                        // for defineProps destructure, only exclude them since they\r\n                        // are already passed in as knownProps\r\n                        excludedIds.add(id);\r\n                    }\r\n                    else {\r\n                        registerBinding(id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function processRefDeclaration(method, id, call) {\r\n        excludedIds.add(call.callee);\r\n        if (method === convertSymbol) {\r\n            // $\r\n            // remove macro\r\n            s.remove(call.callee.start + offset, call.callee.end + offset);\r\n            if (id.type === 'Identifier') {\r\n                // single variable\r\n                registerRefBinding(id);\r\n            }\r\n            else if (id.type === 'ObjectPattern') {\r\n                processRefObjectPattern(id, call);\r\n            }\r\n            else if (id.type === 'ArrayPattern') {\r\n                processRefArrayPattern(id, call);\r\n            }\r\n        }\r\n        else {\r\n            // shorthands\r\n            if (id.type === 'Identifier') {\r\n                registerRefBinding(id);\r\n                // replace call\r\n                s.overwrite(call.start + offset, call.start + method.length + offset, helper(method.slice(1)));\r\n            }\r\n            else {\r\n                error(`${method}() cannot be used with destructure patterns.`, call);\r\n            }\r\n        }\r\n    }\r\n    function processRefObjectPattern(pattern, call, tempVar, path = []) {\r\n        if (!tempVar) {\r\n            tempVar = genTempVar();\r\n            // const { x } = $(useFoo()) --> const __$temp_1 = useFoo()\r\n            s.overwrite(pattern.start + offset, pattern.end + offset, tempVar);\r\n        }\r\n        let nameId;\r\n        for (const p of pattern.properties) {\r\n            let key;\r\n            let defaultValue;\r\n            if (p.type === 'ObjectProperty') {\r\n                if (p.key.start === p.value.start) {\r\n                    // shorthand { foo }\r\n                    nameId = p.key;\r\n                    if (p.value.type === 'Identifier') {\r\n                        // avoid shorthand value identifier from being processed\r\n                        excludedIds.add(p.value);\r\n                    }\r\n                    else if (p.value.type === 'AssignmentPattern' &&\r\n                        p.value.left.type === 'Identifier') {\r\n                        // { foo = 1 }\r\n                        excludedIds.add(p.value.left);\r\n                        defaultValue = p.value.right;\r\n                    }\r\n                }\r\n                else {\r\n                    key = p.computed ? p.key : p.key.name;\r\n                    if (p.value.type === 'Identifier') {\r\n                        // { foo: bar }\r\n                        nameId = p.value;\r\n                    }\r\n                    else if (p.value.type === 'ObjectPattern') {\r\n                        processRefObjectPattern(p.value, call, tempVar, [...path, key]);\r\n                    }\r\n                    else if (p.value.type === 'ArrayPattern') {\r\n                        processRefArrayPattern(p.value, call, tempVar, [...path, key]);\r\n                    }\r\n                    else if (p.value.type === 'AssignmentPattern') {\r\n                        if (p.value.left.type === 'Identifier') {\r\n                            // { foo: bar = 1 }\r\n                            nameId = p.value.left;\r\n                            defaultValue = p.value.right;\r\n                        }\r\n                        else if (p.value.left.type === 'ObjectPattern') {\r\n                            processRefObjectPattern(p.value.left, call, tempVar, [\r\n                                ...path,\r\n                                [key, p.value.right]\r\n                            ]);\r\n                        }\r\n                        else if (p.value.left.type === 'ArrayPattern') {\r\n                            processRefArrayPattern(p.value.left, call, tempVar, [\r\n                                ...path,\r\n                                [key, p.value.right]\r\n                            ]);\r\n                        }\r\n                        else ;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // rest element { ...foo }\r\n                error(`reactivity destructure does not support rest elements.`, p);\r\n            }\r\n            if (nameId) {\r\n                registerRefBinding(nameId);\r\n                // inject toRef() after original replaced pattern\r\n                const source = pathToString(tempVar, path);\r\n                const keyStr = isString(key)\r\n                    ? `'${key}'`\r\n                    : key\r\n                        ? snip(key)\r\n                        : `'${nameId.name}'`;\r\n                const defaultStr = defaultValue ? `, ${snip(defaultValue)}` : ``;\r\n                s.appendLeft(call.end + offset, `,\\n  ${nameId.name} = ${helper('toRef')}(${source}, ${keyStr}${defaultStr})`);\r\n            }\r\n        }\r\n        if (nameId) {\r\n            s.appendLeft(call.end + offset, ';');\r\n        }\r\n    }\r\n    function processRefArrayPattern(pattern, call, tempVar, path = []) {\r\n        if (!tempVar) {\r\n            // const [x] = $(useFoo()) --> const __$temp_1 = useFoo()\r\n            tempVar = genTempVar();\r\n            s.overwrite(pattern.start + offset, pattern.end + offset, tempVar);\r\n        }\r\n        let nameId;\r\n        for (let i = 0; i < pattern.elements.length; i++) {\r\n            const e = pattern.elements[i];\r\n            if (!e)\r\n                continue;\r\n            let defaultValue;\r\n            if (e.type === 'Identifier') {\r\n                // [a] --> [__a]\r\n                nameId = e;\r\n            }\r\n            else if (e.type === 'AssignmentPattern') {\r\n                // [a = 1]\r\n                nameId = e.left;\r\n                defaultValue = e.right;\r\n            }\r\n            else if (e.type === 'RestElement') {\r\n                // [...a]\r\n                error(`reactivity destructure does not support rest elements.`, e);\r\n            }\r\n            else if (e.type === 'ObjectPattern') {\r\n                processRefObjectPattern(e, call, tempVar, [...path, i]);\r\n            }\r\n            else if (e.type === 'ArrayPattern') {\r\n                processRefArrayPattern(e, call, tempVar, [...path, i]);\r\n            }\r\n            if (nameId) {\r\n                registerRefBinding(nameId);\r\n                // inject toRef() after original replaced pattern\r\n                const source = pathToString(tempVar, path);\r\n                const defaultStr = defaultValue ? `, ${snip(defaultValue)}` : ``;\r\n                s.appendLeft(call.end + offset, `,\\n  ${nameId.name} = ${helper('toRef')}(${source}, ${i}${defaultStr})`);\r\n            }\r\n        }\r\n        if (nameId) {\r\n            s.appendLeft(call.end + offset, ';');\r\n        }\r\n    }\r\n    function pathToString(source, path) {\r\n        if (path.length) {\r\n            for (const seg of path) {\r\n                if (isArray(seg)) {\r\n                    source = `(${source}${segToString(seg[0])} || ${snip(seg[1])})`;\r\n                }\r\n                else {\r\n                    source += segToString(seg);\r\n                }\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n    function segToString(seg) {\r\n        if (typeof seg === 'number') {\r\n            return `[${seg}]`;\r\n        }\r\n        else if (typeof seg === 'string') {\r\n            return `.${seg}`;\r\n        }\r\n        else {\r\n            return snip(seg);\r\n        }\r\n    }\r\n    function rewriteId(scope, id, parent, parentStack) {\r\n        if (hasOwn(scope, id.name)) {\r\n            const bindingType = scope[id.name];\r\n            if (bindingType) {\r\n                const isProp = bindingType === 'prop';\r\n                if (isStaticProperty(parent) && parent.shorthand) {\r\n                    // let binding used in a property shorthand\r\n                    // skip for destructure patterns\r\n                    if (!parent.inPattern ||\r\n                        isInDestructureAssignment(parent, parentStack)) {\r\n                        if (isProp) {\r\n                            if (escapeScope) {\r\n                                // prop binding in $$()\r\n                                // { prop } -> { prop: __props_prop }\r\n                                registerEscapedPropBinding(id);\r\n                                s.appendLeft(id.end + offset, `: __props_${propsLocalToPublicMap[id.name]}`);\r\n                            }\r\n                            else {\r\n                                // { prop } -> { prop: __props.prop }\r\n                                s.appendLeft(id.end + offset, `: ${genPropsAccessExp(propsLocalToPublicMap[id.name])}`);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // { foo } -> { foo: foo.value }\r\n                            s.appendLeft(id.end + offset, `: ${id.name}.value`);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (isProp) {\r\n                        if (escapeScope) {\r\n                            // x --> __props_x\r\n                            registerEscapedPropBinding(id);\r\n                            s.overwrite(id.start + offset, id.end + offset, `__props_${propsLocalToPublicMap[id.name]}`);\r\n                        }\r\n                        else {\r\n                            // x --> __props.x\r\n                            s.overwrite(id.start + offset, id.end + offset, genPropsAccessExp(propsLocalToPublicMap[id.name]));\r\n                        }\r\n                    }\r\n                    else {\r\n                        // x --> x.value\r\n                        s.appendLeft(id.end + offset, '.value');\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    const propBindingRefs = {};\r\n    function registerEscapedPropBinding(id) {\r\n        if (!propBindingRefs.hasOwnProperty(id.name)) {\r\n            propBindingRefs[id.name] = true;\r\n            const publicKey = propsLocalToPublicMap[id.name];\r\n            s.prependRight(offset, `const __props_${publicKey} = ${helper(`toRef`)}(__props, '${publicKey}');\\n`);\r\n        }\r\n    }\r\n    // check root scope first\r\n    walkScope(ast, true);\r\n    walk$1(ast, {\r\n        enter(node, parent) {\r\n            parent && parentStack.push(parent);\r\n            // function scopes\r\n            if (isFunctionType(node)) {\r\n                scopeStack.push((currentScope = {}));\r\n                walkFunctionParams(node, registerBinding);\r\n                if (node.body.type === 'BlockStatement') {\r\n                    walkScope(node.body);\r\n                }\r\n                return;\r\n            }\r\n            // catch param\r\n            if (node.type === 'CatchClause') {\r\n                scopeStack.push((currentScope = {}));\r\n                if (node.param && node.param.type === 'Identifier') {\r\n                    registerBinding(node.param);\r\n                }\r\n                walkScope(node.body);\r\n                return;\r\n            }\r\n            // non-function block scopes\r\n            if (node.type === 'BlockStatement' && !isFunctionType(parent)) {\r\n                scopeStack.push((currentScope = {}));\r\n                walkScope(node);\r\n                return;\r\n            }\r\n            // skip type nodes\r\n            if (parent &&\r\n                parent.type.startsWith('TS') &&\r\n                parent.type !== 'TSAsExpression' &&\r\n                parent.type !== 'TSNonNullExpression' &&\r\n                parent.type !== 'TSTypeAssertion') {\r\n                return this.skip();\r\n            }\r\n            if (node.type === 'Identifier' &&\r\n                // if inside $$(), skip unless this is a destructured prop binding\r\n                !(escapeScope && rootScope[node.name] !== 'prop') &&\r\n                isReferencedIdentifier(node, parent, parentStack) &&\r\n                !excludedIds.has(node)) {\r\n                // walk up the scope chain to check if id should be appended .value\r\n                let i = scopeStack.length;\r\n                while (i--) {\r\n                    if (rewriteId(scopeStack[i], node, parent, parentStack)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (node.type === 'CallExpression' && node.callee.type === 'Identifier') {\r\n                const callee = node.callee.name;\r\n                const refCall = isRefCreationCall(callee);\r\n                if (refCall && (!parent || parent.type !== 'VariableDeclarator')) {\r\n                    return error(`${refCall} can only be used as the initializer of ` +\r\n                        `a variable declaration.`, node);\r\n                }\r\n                if (escapeSymbol &&\r\n                    currentScope[escapeSymbol] === undefined &&\r\n                    callee === escapeSymbol) {\r\n                    s.remove(node.callee.start + offset, node.callee.end + offset);\r\n                    escapeScope = node;\r\n                }\r\n                // TODO remove when out of experimental\r\n                if (callee === '$raw') {\r\n                    error(`$raw() has been replaced by $$(). ` +\r\n                        `See ${RFC_LINK} for latest updates.`, node);\r\n                }\r\n                if (callee === '$fromRef') {\r\n                    error(`$fromRef() has been replaced by $(). ` +\r\n                        `See ${RFC_LINK} for latest updates.`, node);\r\n                }\r\n            }\r\n        },\r\n        leave(node, parent) {\r\n            parent && parentStack.pop();\r\n            if ((node.type === 'BlockStatement' && !isFunctionType(parent)) ||\r\n                isFunctionType(node)) {\r\n                scopeStack.pop();\r\n                currentScope = scopeStack[scopeStack.length - 1] || null;\r\n            }\r\n            if (node === escapeScope) {\r\n                escapeScope = undefined;\r\n            }\r\n        }\r\n    });\r\n    return {\r\n        rootRefs: Object.keys(rootScope).filter(key => rootScope[key] === true),\r\n        importedHelpers: [...importedHelpers]\r\n    };\r\n}\r\nconst RFC_LINK = `https://github.com/vuejs/rfcs/discussions/369`;\r\nconst hasWarned$1 = {};\r\nfunction warnExperimental() {\r\n    // eslint-disable-next-line\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n    warnOnce$1(`Reactivity transform is an experimental feature.\\n` +\r\n        `Experimental features may change behavior between patch versions.\\n` +\r\n        `It is recommended to pin your vue dependencies to exact versions to avoid breakage.\\n` +\r\n        `You can follow the proposal's status at ${RFC_LINK}.`);\r\n}\r\nfunction warnOnce$1(msg) {\r\n    const isNodeProd = typeof process !== 'undefined' && ({}).NODE_ENV === 'production';\r\n    if (!isNodeProd && !false && !hasWarned$1[msg]) {\r\n        hasWarned$1[msg] = true;\r\n        warn$1(msg);\r\n    }\r\n}\r\nfunction warn$1(msg) {\r\n    console.warn(`\\x1b[1m\\x1b[33m[@vue/reactivity-transform]\\x1b[0m\\x1b[33m ${msg}\\x1b[0m\\n`);\r\n}\r\n\r\n// Special compiler macros\r\nconst DEFINE_PROPS = 'defineProps';\r\nconst DEFINE_EMITS = 'defineEmits';\r\nconst DEFINE_EXPOSE = 'defineExpose';\r\nconst WITH_DEFAULTS = 'withDefaults';\r\n// constants\r\nconst DEFAULT_VAR = `__default__`;\r\nconst isBuiltInDir = makeMap(`once,memo,if,for,else,else-if,slot,text,html,on,bind,model,show,cloak,is`);\r\n/**\r\n * Compile `<script setup>`\r\n * It requires the whole SFC descriptor because we need to handle and merge\r\n * normal `<script>` + `<script setup>` if both are present.\r\n */\r\nfunction compileScript(sfc, options) {\r\n    var _a;\r\n    let { script, scriptSetup, source, filename } = sfc;\r\n    // feature flags\r\n    // TODO remove support for deprecated options when out of experimental\r\n    const enableReactivityTransform = !!options.reactivityTransform ||\r\n        !!options.refSugar ||\r\n        !!options.refTransform;\r\n    const enablePropsTransform = !!options.reactivityTransform || !!options.propsDestructureTransform;\r\n    const isProd = !!options.isProd;\r\n    const genSourceMap = options.sourceMap !== false;\r\n    let refBindings;\r\n    if (!options.id) {\r\n        warnOnce(`compileScript now requires passing the \\`id\\` option.\\n` +\r\n            `Upgrade your vite or vue-loader version for compatibility with ` +\r\n            `the latest experimental proposals.`);\r\n    }\r\n    const scopeId = options.id ? options.id.replace(/^data-v-/, '') : '';\r\n    const cssVars = sfc.cssVars;\r\n    const scriptLang = script && script.lang;\r\n    const scriptSetupLang = scriptSetup && scriptSetup.lang;\r\n    const isTS = scriptLang === 'ts' ||\r\n        scriptLang === 'tsx' ||\r\n        scriptSetupLang === 'ts' ||\r\n        scriptSetupLang === 'tsx';\r\n    // resolve parser plugins\r\n    const plugins = [];\r\n    if (!isTS || scriptLang === 'tsx' || scriptSetupLang === 'tsx') {\r\n        plugins.push('jsx');\r\n    }\r\n    else {\r\n        // If don't match the case of adding jsx, should remove the jsx from the babelParserPlugins\r\n        if (options.babelParserPlugins)\r\n            options.babelParserPlugins = options.babelParserPlugins.filter(n => n !== 'jsx');\r\n    }\r\n    if (options.babelParserPlugins)\r\n        plugins.push(...options.babelParserPlugins);\r\n    if (isTS) {\r\n        plugins.push('typescript');\r\n        if (!plugins.includes('decorators')) {\r\n            plugins.push('decorators-legacy');\r\n        }\r\n    }\r\n    if (!scriptSetup) {\r\n        if (!script) {\r\n            throw new Error(`[@vue/compiler-sfc] SFC contains no <script> tags.`);\r\n        }\r\n        if (scriptLang && !isTS && scriptLang !== 'jsx') {\r\n            // do not process non js/ts script blocks\r\n            return script;\r\n        }\r\n        try {\r\n            let content = script.content;\r\n            let map = script.map;\r\n            const scriptAst = parse_1(content, {\r\n                plugins,\r\n                sourceType: 'module'\r\n            }).program;\r\n            const bindings = analyzeScriptBindings(scriptAst.body);\r\n            if (enableReactivityTransform && shouldTransform(content)) {\r\n                const s = new MagicString(source);\r\n                const startOffset = script.loc.start.offset;\r\n                const endOffset = script.loc.end.offset;\r\n                const { importedHelpers } = transformAST(scriptAst, s, startOffset);\r\n                if (importedHelpers.length) {\r\n                    s.prepend(`import { ${importedHelpers\r\n                        .map(h => `${h} as _${h}`)\r\n                        .join(', ')} } from 'vue'\\n`);\r\n                }\r\n                s.remove(0, startOffset);\r\n                s.remove(endOffset, source.length);\r\n                content = s.toString();\r\n                if (genSourceMap) {\r\n                    map = s.generateMap({\r\n                        source: filename,\r\n                        hires: true,\r\n                        includeContent: true\r\n                    });\r\n                }\r\n            }\r\n            if (cssVars.length) {\r\n                content = rewriteDefault(content, DEFAULT_VAR, plugins);\r\n                content += genNormalScriptCssVarsCode(cssVars, bindings, scopeId, isProd);\r\n                content += `\\nexport default ${DEFAULT_VAR}`;\r\n            }\r\n            return Object.assign(Object.assign({}, script), { content,\r\n                map,\r\n                bindings, scriptAst: scriptAst.body });\r\n        }\r\n        catch (e) {\r\n            // silently fallback if parse fails since user may be using custom\r\n            // babel syntax\r\n            return script;\r\n        }\r\n    }\r\n    if (script && scriptLang !== scriptSetupLang) {\r\n        throw new Error(`[@vue/compiler-sfc] <script> and <script setup> must have the same ` +\r\n            `language type.`);\r\n    }\r\n    if (scriptSetupLang && !isTS && scriptSetupLang !== 'jsx') {\r\n        // do not process non js/ts script blocks\r\n        return scriptSetup;\r\n    }\r\n    // metadata that needs to be returned\r\n    const bindingMetadata = {};\r\n    const helperImports = new Set();\r\n    const userImports = Object.create(null);\r\n    const scriptBindings = Object.create(null);\r\n    const setupBindings = Object.create(null);\r\n    let defaultExport;\r\n    let hasDefinePropsCall = false;\r\n    let hasDefineEmitCall = false;\r\n    let hasDefineExposeCall = false;\r\n    let hasDefaultExportName = false;\r\n    let hasDefaultExportRender = false;\r\n    let propsRuntimeDecl;\r\n    let propsRuntimeDefaults;\r\n    let propsDestructureDecl;\r\n    let propsDestructureRestId;\r\n    let propsTypeDecl;\r\n    let propsTypeDeclRaw;\r\n    let propsIdentifier;\r\n    let emitsRuntimeDecl;\r\n    let emitsTypeDecl;\r\n    let emitsTypeDeclRaw;\r\n    let emitIdentifier;\r\n    let hasAwait = false;\r\n    let hasInlinedSsrRenderFn = false;\r\n    // props/emits declared via types\r\n    const typeDeclaredProps = {};\r\n    const typeDeclaredEmits = new Set();\r\n    // record declared types for runtime props type generation\r\n    const declaredTypes = {};\r\n    // props destructure data\r\n    const propsDestructuredBindings = Object.create(null);\r\n    // magic-string state\r\n    const s = new MagicString(source);\r\n    const startOffset = scriptSetup.loc.start.offset;\r\n    const endOffset = scriptSetup.loc.end.offset;\r\n    const scriptStartOffset = script && script.loc.start.offset;\r\n    const scriptEndOffset = script && script.loc.end.offset;\r\n    function helper(key) {\r\n        helperImports.add(key);\r\n        return `_${key}`;\r\n    }\r\n    function parse(input, options, offset) {\r\n        try {\r\n            return parse_1(input, options).program;\r\n        }\r\n        catch (e) {\r\n            e.message = `[@vue/compiler-sfc] ${e.message}\\n\\n${sfc.filename}\\n${generateCodeFrame(source, e.pos + offset, e.pos + offset + 1)}`;\r\n            throw e;\r\n        }\r\n    }\r\n    function error(msg, node, end = node.end + startOffset) {\r\n        throw new Error(`[@vue/compiler-sfc] ${msg}\\n\\n${sfc.filename}\\n${generateCodeFrame(source, node.start + startOffset, end)}`);\r\n    }\r\n    function hoistNode(node) {\r\n        const start = node.start + startOffset;\r\n        let end = node.end + startOffset;\r\n        // locate comment\r\n        if (node.trailingComments && node.trailingComments.length > 0) {\r\n            const lastCommentNode = node.trailingComments[node.trailingComments.length - 1];\r\n            end = lastCommentNode.end + startOffset;\r\n        }\r\n        // locate the end of whitespace between this statement and the next\r\n        while (end <= source.length) {\r\n            if (!/\\s/.test(source.charAt(end))) {\r\n                break;\r\n            }\r\n            end++;\r\n        }\r\n        s.move(start, end, 0);\r\n    }\r\n    function registerUserImport(source, local, imported, isType, isFromSetup, needTemplateUsageCheck) {\r\n        // template usage check is only needed in non-inline mode, so we can skip\r\n        // the work if inlineTemplate is true.\r\n        let isUsedInTemplate = needTemplateUsageCheck;\r\n        if (needTemplateUsageCheck &&\r\n            isTS &&\r\n            sfc.template &&\r\n            !sfc.template.src &&\r\n            !sfc.template.lang) {\r\n            isUsedInTemplate = isImportUsed(local, sfc);\r\n        }\r\n        userImports[local] = {\r\n            isType,\r\n            imported: imported || 'default',\r\n            local,\r\n            source,\r\n            isFromSetup,\r\n            isUsedInTemplate\r\n        };\r\n    }\r\n    function processDefineProps(node, declId) {\r\n        if (!isCallOf(node, DEFINE_PROPS)) {\r\n            return false;\r\n        }\r\n        if (hasDefinePropsCall) {\r\n            error(`duplicate ${DEFINE_PROPS}() call`, node);\r\n        }\r\n        hasDefinePropsCall = true;\r\n        propsRuntimeDecl = node.arguments[0];\r\n        // call has type parameters - infer runtime types from it\r\n        if (node.typeParameters) {\r\n            if (propsRuntimeDecl) {\r\n                error(`${DEFINE_PROPS}() cannot accept both type and non-type arguments ` +\r\n                    `at the same time. Use one or the other.`, node);\r\n            }\r\n            propsTypeDeclRaw = node.typeParameters.params[0];\r\n            propsTypeDecl = resolveQualifiedType(propsTypeDeclRaw, node => node.type === 'TSTypeLiteral');\r\n            if (!propsTypeDecl) {\r\n                error(`type argument passed to ${DEFINE_PROPS}() must be a literal type, ` +\r\n                    `or a reference to an interface or literal type.`, propsTypeDeclRaw);\r\n            }\r\n        }\r\n        if (declId) {\r\n            if (enablePropsTransform && declId.type === 'ObjectPattern') {\r\n                propsDestructureDecl = declId;\r\n                // props destructure - handle compilation sugar\r\n                for (const prop of declId.properties) {\r\n                    if (prop.type === 'ObjectProperty') {\r\n                        const propKey = resolveObjectKey(prop.key, prop.computed);\r\n                        if (!propKey) {\r\n                            error(`${DEFINE_PROPS}() destructure cannot use computed key.`, prop.key);\r\n                        }\r\n                        if (prop.value.type === 'AssignmentPattern') {\r\n                            // default value { foo = 123 }\r\n                            const { left, right } = prop.value;\r\n                            if (left.type !== 'Identifier') {\r\n                                error(`${DEFINE_PROPS}() destructure does not support nested patterns.`, left);\r\n                            }\r\n                            // store default value\r\n                            propsDestructuredBindings[propKey] = {\r\n                                local: left.name,\r\n                                default: right\r\n                            };\r\n                        }\r\n                        else if (prop.value.type === 'Identifier') {\r\n                            // simple destructure\r\n                            propsDestructuredBindings[propKey] = {\r\n                                local: prop.value.name\r\n                            };\r\n                        }\r\n                        else {\r\n                            error(`${DEFINE_PROPS}() destructure does not support nested patterns.`, prop.value);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // rest spread\r\n                        propsDestructureRestId = prop.argument.name;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                propsIdentifier = scriptSetup.content.slice(declId.start, declId.end);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function processWithDefaults(node, declId) {\r\n        if (!isCallOf(node, WITH_DEFAULTS)) {\r\n            return false;\r\n        }\r\n        if (processDefineProps(node.arguments[0], declId)) {\r\n            if (propsRuntimeDecl) {\r\n                error(`${WITH_DEFAULTS} can only be used with type-based ` +\r\n                    `${DEFINE_PROPS} declaration.`, node);\r\n            }\r\n            if (propsDestructureDecl) {\r\n                error(`${WITH_DEFAULTS}() is unnecessary when using destructure with ${DEFINE_PROPS}().\\n` +\r\n                    `Prefer using destructure default values, e.g. const { foo = 1 } = defineProps(...).`, node.callee);\r\n            }\r\n            propsRuntimeDefaults = node.arguments[1];\r\n            if (!propsRuntimeDefaults ||\r\n                propsRuntimeDefaults.type !== 'ObjectExpression') {\r\n                error(`The 2nd argument of ${WITH_DEFAULTS} must be an object literal.`, propsRuntimeDefaults || node);\r\n            }\r\n        }\r\n        else {\r\n            error(`${WITH_DEFAULTS}' first argument must be a ${DEFINE_PROPS} call.`, node.arguments[0] || node);\r\n        }\r\n        return true;\r\n    }\r\n    function processDefineEmits(node, declId) {\r\n        if (!isCallOf(node, DEFINE_EMITS)) {\r\n            return false;\r\n        }\r\n        if (hasDefineEmitCall) {\r\n            error(`duplicate ${DEFINE_EMITS}() call`, node);\r\n        }\r\n        hasDefineEmitCall = true;\r\n        emitsRuntimeDecl = node.arguments[0];\r\n        if (node.typeParameters) {\r\n            if (emitsRuntimeDecl) {\r\n                error(`${DEFINE_EMITS}() cannot accept both type and non-type arguments ` +\r\n                    `at the same time. Use one or the other.`, node);\r\n            }\r\n            emitsTypeDeclRaw = node.typeParameters.params[0];\r\n            emitsTypeDecl = resolveQualifiedType(emitsTypeDeclRaw, node => node.type === 'TSFunctionType' || node.type === 'TSTypeLiteral');\r\n            if (!emitsTypeDecl) {\r\n                error(`type argument passed to ${DEFINE_EMITS}() must be a function type, ` +\r\n                    `a literal type with call signatures, or a reference to the above types.`, emitsTypeDeclRaw);\r\n            }\r\n        }\r\n        if (declId) {\r\n            emitIdentifier =\r\n                declId.type === 'Identifier'\r\n                    ? declId.name\r\n                    : scriptSetup.content.slice(declId.start, declId.end);\r\n        }\r\n        return true;\r\n    }\r\n    function getAstBody() {\r\n        return scriptAst\r\n            ? [...scriptSetupAst.body, ...scriptAst.body]\r\n            : scriptSetupAst.body;\r\n    }\r\n    function resolveExtendsType(node, qualifier, cache = []) {\r\n        if (node.type === 'TSInterfaceDeclaration' && node.extends) {\r\n            node.extends.forEach(extend => {\r\n                if (extend.type === 'TSExpressionWithTypeArguments' &&\r\n                    extend.expression.type === 'Identifier') {\r\n                    const body = getAstBody();\r\n                    for (const node of body) {\r\n                        const qualified = isQualifiedType(node, qualifier, extend.expression.name);\r\n                        if (qualified) {\r\n                            cache.push(qualified);\r\n                            resolveExtendsType(node, qualifier, cache);\r\n                            return cache;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return cache;\r\n    }\r\n    function isQualifiedType(node, qualifier, refName) {\r\n        if (node.type === 'TSInterfaceDeclaration' && node.id.name === refName) {\r\n            return node.body;\r\n        }\r\n        else if (node.type === 'TSTypeAliasDeclaration' &&\r\n            node.id.name === refName &&\r\n            qualifier(node.typeAnnotation)) {\r\n            return node.typeAnnotation;\r\n        }\r\n        else if (node.type === 'ExportNamedDeclaration' && node.declaration) {\r\n            return isQualifiedType(node.declaration, qualifier, refName);\r\n        }\r\n    }\r\n    // filter all extends types to keep the override declaration\r\n    function filterExtendsType(extendsTypes, bodies) {\r\n        extendsTypes.forEach(extend => {\r\n            const body = extend.body;\r\n            body.forEach(newBody => {\r\n                if (newBody.type === 'TSPropertySignature' &&\r\n                    newBody.key.type === 'Identifier') {\r\n                    const name = newBody.key.name;\r\n                    const hasOverride = bodies.some(seenBody => seenBody.type === 'TSPropertySignature' &&\r\n                        seenBody.key.type === 'Identifier' &&\r\n                        seenBody.key.name === name);\r\n                    if (!hasOverride)\r\n                        bodies.push(newBody);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function resolveQualifiedType(node, qualifier) {\r\n        if (qualifier(node)) {\r\n            return node;\r\n        }\r\n        if (node.type === 'TSTypeReference' &&\r\n            node.typeName.type === 'Identifier') {\r\n            const refName = node.typeName.name;\r\n            const body = getAstBody();\r\n            for (const node of body) {\r\n                let qualified = isQualifiedType(node, qualifier, refName);\r\n                if (qualified) {\r\n                    const extendsTypes = resolveExtendsType(node, qualifier);\r\n                    if (extendsTypes.length) {\r\n                        const bodies = [...qualified.body];\r\n                        filterExtendsType(extendsTypes, bodies);\r\n                        qualified.body = bodies;\r\n                    }\r\n                    return qualified;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function processDefineExpose(node) {\r\n        if (isCallOf(node, DEFINE_EXPOSE)) {\r\n            if (hasDefineExposeCall) {\r\n                error(`duplicate ${DEFINE_EXPOSE}() call`, node);\r\n            }\r\n            hasDefineExposeCall = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function checkInvalidScopeReference(node, method) {\r\n        if (!node)\r\n            return;\r\n        walkIdentifiers(node, id => {\r\n            if (setupBindings[id.name]) {\r\n                error(`\\`${method}()\\` in <script setup> cannot reference locally ` +\r\n                    `declared variables because it will be hoisted outside of the ` +\r\n                    `setup() function. If your component options require initialization ` +\r\n                    `in the module scope, use a separate normal <script> to export ` +\r\n                    `the options instead.`, id);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * await foo()\r\n     * -->\r\n     * ;(\r\n     *   ([__temp,__restore] = withAsyncContext(() => foo())),\r\n     *   await __temp,\r\n     *   __restore()\r\n     * )\r\n     *\r\n     * const a = await foo()\r\n     * -->\r\n     * const a = (\r\n     *   ([__temp, __restore] = withAsyncContext(() => foo())),\r\n     *   __temp = await __temp,\r\n     *   __restore(),\r\n     *   __temp\r\n     * )\r\n     */\r\n    function processAwait(node, needSemi, isStatement) {\r\n        const argumentStart = node.argument.extra && node.argument.extra.parenthesized\r\n            ? node.argument.extra.parenStart\r\n            : node.argument.start;\r\n        const argumentStr = source.slice(argumentStart + startOffset, node.argument.end + startOffset);\r\n        const containsNestedAwait = /\\bawait\\b/.test(argumentStr);\r\n        s.overwrite(node.start + startOffset, argumentStart + startOffset, `${needSemi ? `;` : ``}(\\n  ([__temp,__restore] = ${helper(`withAsyncContext`)}(${containsNestedAwait ? `async ` : ``}() => `);\r\n        s.appendLeft(node.end + startOffset, `)),\\n  ${isStatement ? `` : `__temp = `}await __temp,\\n  __restore()${isStatement ? `` : `,\\n  __temp`}\\n)`);\r\n    }\r\n    /**\r\n     * check defaults. If the default object is an object literal with only\r\n     * static properties, we can directly generate more optimized default\r\n     * declarations. Otherwise we will have to fallback to runtime merging.\r\n     */\r\n    function hasStaticWithDefaults() {\r\n        return (propsRuntimeDefaults &&\r\n            propsRuntimeDefaults.type === 'ObjectExpression' &&\r\n            propsRuntimeDefaults.properties.every(node => (node.type === 'ObjectProperty' &&\r\n                (!node.computed || node.key.type.endsWith('Literal'))) ||\r\n                node.type === 'ObjectMethod'));\r\n    }\r\n    function genRuntimeProps(props) {\r\n        const keys = Object.keys(props);\r\n        if (!keys.length) {\r\n            return ``;\r\n        }\r\n        const hasStaticDefaults = hasStaticWithDefaults();\r\n        const scriptSetupSource = scriptSetup.content;\r\n        let propsDecls = `{\r\n    ${keys\r\n            .map(key => {\r\n            let defaultString;\r\n            const destructured = genDestructuredDefaultValue(key);\r\n            if (destructured) {\r\n                defaultString = `default: ${destructured}`;\r\n            }\r\n            else if (hasStaticDefaults) {\r\n                const prop = propsRuntimeDefaults.properties.find(node => {\r\n                    if (node.type === 'SpreadElement')\r\n                        return false;\r\n                    return resolveObjectKey(node.key, node.computed) === key;\r\n                });\r\n                if (prop) {\r\n                    if (prop.type === 'ObjectProperty') {\r\n                        // prop has corresponding static default value\r\n                        defaultString = `default: ${scriptSetupSource.slice(prop.value.start, prop.value.end)}`;\r\n                    }\r\n                    else {\r\n                        defaultString = `${prop.async ? 'async ' : ''}${prop.kind !== 'method' ? `${prop.kind} ` : ''}default() ${scriptSetupSource.slice(prop.body.start, prop.body.end)}`;\r\n                    }\r\n                }\r\n            }\r\n            const { type, required } = props[key];\r\n            if (!isProd) {\r\n                return `${key}: { type: ${toRuntimeTypeString(type)}, required: ${required}${defaultString ? `, ${defaultString}` : ``} }`;\r\n            }\r\n            else if (type.some(el => el === 'Boolean' || (defaultString && el === 'Function'))) {\r\n                // #4783 production: if boolean or defaultString and function exists, should keep the type.\r\n                return `${key}: { type: ${toRuntimeTypeString(type)}${defaultString ? `, ${defaultString}` : ``} }`;\r\n            }\r\n            else {\r\n                // production: checks are useless\r\n                return `${key}: ${defaultString ? `{ ${defaultString} }` : 'null'}`;\r\n            }\r\n        })\r\n            .join(',\\n    ')}\\n  }`;\r\n        if (propsRuntimeDefaults && !hasStaticDefaults) {\r\n            propsDecls = `${helper('mergeDefaults')}(${propsDecls}, ${source.slice(propsRuntimeDefaults.start + startOffset, propsRuntimeDefaults.end + startOffset)})`;\r\n        }\r\n        return `\\n  props: ${propsDecls},`;\r\n    }\r\n    function genDestructuredDefaultValue(key) {\r\n        const destructured = propsDestructuredBindings[key];\r\n        if (destructured && destructured.default) {\r\n            const value = scriptSetup.content.slice(destructured.default.start, destructured.default.end);\r\n            const isLiteral = destructured.default.type.endsWith('Literal');\r\n            return isLiteral ? value : `() => (${value})`;\r\n        }\r\n    }\r\n    function genSetupPropsType(node) {\r\n        const scriptSetupSource = scriptSetup.content;\r\n        if (hasStaticWithDefaults()) {\r\n            // if withDefaults() is used, we need to remove the optional flags\r\n            // on props that have default values\r\n            let res = `{ `;\r\n            const members = node.type === 'TSTypeLiteral' ? node.members : node.body;\r\n            for (const m of members) {\r\n                if ((m.type === 'TSPropertySignature' ||\r\n                    m.type === 'TSMethodSignature') &&\r\n                    m.typeAnnotation &&\r\n                    m.key.type === 'Identifier') {\r\n                    if (propsRuntimeDefaults.properties.some(p => {\r\n                        if (p.type === 'SpreadElement')\r\n                            return false;\r\n                        return (resolveObjectKey(p.key, p.computed) ===\r\n                            m.key.name);\r\n                    })) {\r\n                        res +=\r\n                            m.key.name +\r\n                                (m.type === 'TSMethodSignature' ? '()' : '') +\r\n                                scriptSetupSource.slice(m.typeAnnotation.start, m.typeAnnotation.end) +\r\n                                ', ';\r\n                    }\r\n                    else {\r\n                        res +=\r\n                            scriptSetupSource.slice(m.start, m.typeAnnotation.end) + `, `;\r\n                    }\r\n                }\r\n            }\r\n            return (res.length ? res.slice(0, -2) : res) + ` }`;\r\n        }\r\n        else {\r\n            return scriptSetupSource.slice(node.start, node.end);\r\n        }\r\n    }\r\n    // 0. parse both <script> and <script setup> blocks\r\n    const scriptAst = script &&\r\n        parse(script.content, {\r\n            plugins,\r\n            sourceType: 'module'\r\n        }, scriptStartOffset);\r\n    const scriptSetupAst = parse(scriptSetup.content, {\r\n        plugins: [\r\n            ...plugins,\r\n            // allow top level await but only inside <script setup>\r\n            'topLevelAwait'\r\n        ],\r\n        sourceType: 'module'\r\n    }, startOffset);\r\n    // 1.1 walk import delcarations of <script>\r\n    if (scriptAst) {\r\n        for (const node of scriptAst.body) {\r\n            if (node.type === 'ImportDeclaration') {\r\n                // record imports for dedupe\r\n                for (const specifier of node.specifiers) {\r\n                    const imported = specifier.type === 'ImportSpecifier' &&\r\n                        specifier.imported.type === 'Identifier' &&\r\n                        specifier.imported.name;\r\n                    registerUserImport(node.source.value, specifier.local.name, imported, node.importKind === 'type' ||\r\n                        (specifier.type === 'ImportSpecifier' &&\r\n                            specifier.importKind === 'type'), false, !options.inlineTemplate);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 1.2 walk import declarations of <script setup>\r\n    for (const node of scriptSetupAst.body) {\r\n        if (node.type === 'ImportDeclaration') {\r\n            // import declarations are moved to top\r\n            hoistNode(node);\r\n            // dedupe imports\r\n            let removed = 0;\r\n            const removeSpecifier = (i) => {\r\n                const removeLeft = i > removed;\r\n                removed++;\r\n                const current = node.specifiers[i];\r\n                const next = node.specifiers[i + 1];\r\n                s.remove(removeLeft\r\n                    ? node.specifiers[i - 1].end + startOffset\r\n                    : current.start + startOffset, next && !removeLeft\r\n                    ? next.start + startOffset\r\n                    : current.end + startOffset);\r\n            };\r\n            for (let i = 0; i < node.specifiers.length; i++) {\r\n                const specifier = node.specifiers[i];\r\n                const local = specifier.local.name;\r\n                let imported = specifier.type === 'ImportSpecifier' &&\r\n                    specifier.imported.type === 'Identifier' &&\r\n                    specifier.imported.name;\r\n                if (specifier.type === 'ImportNamespaceSpecifier') {\r\n                    imported = '*';\r\n                }\r\n                const source = node.source.value;\r\n                const existing = userImports[local];\r\n                if (source === 'vue' &&\r\n                    (imported === DEFINE_PROPS ||\r\n                        imported === DEFINE_EMITS ||\r\n                        imported === DEFINE_EXPOSE)) {\r\n                    warnOnce(`\\`${imported}\\` is a compiler macro and no longer needs to be imported.`);\r\n                    removeSpecifier(i);\r\n                }\r\n                else if (existing) {\r\n                    if (existing.source === source && existing.imported === imported) {\r\n                        // already imported in <script setup>, dedupe\r\n                        removeSpecifier(i);\r\n                    }\r\n                    else {\r\n                        error(`different imports aliased to same local name.`, specifier);\r\n                    }\r\n                }\r\n                else {\r\n                    registerUserImport(source, local, imported, node.importKind === 'type' ||\r\n                        (specifier.type === 'ImportSpecifier' &&\r\n                            specifier.importKind === 'type'), true, !options.inlineTemplate);\r\n                }\r\n            }\r\n            if (node.specifiers.length && removed === node.specifiers.length) {\r\n                s.remove(node.start + startOffset, node.end + startOffset);\r\n            }\r\n        }\r\n    }\r\n    // 1.3 resolve possible user import alias of `ref` and `reactive`\r\n    const vueImportAliases = {};\r\n    for (const key in userImports) {\r\n        const { source, imported, local } = userImports[key];\r\n        if (source === 'vue')\r\n            vueImportAliases[imported] = local;\r\n    }\r\n    // 2.1 process normal <script> body\r\n    if (script && scriptAst) {\r\n        for (const node of scriptAst.body) {\r\n            if (node.type === 'ExportDefaultDeclaration') {\r\n                // export default\r\n                defaultExport = node;\r\n                // check if user has manually specified `name` or 'render` option in\r\n                // export default\r\n                // if has name, skip name inference\r\n                // if has render and no template, generate return object instead of\r\n                // empty render function (#4980)\r\n                let optionProperties;\r\n                if (defaultExport.declaration.type === 'ObjectExpression') {\r\n                    optionProperties = defaultExport.declaration.properties;\r\n                }\r\n                else if (defaultExport.declaration.type === 'CallExpression' &&\r\n                    defaultExport.declaration.arguments[0].type === 'ObjectExpression') {\r\n                    optionProperties = defaultExport.declaration.arguments[0].properties;\r\n                }\r\n                if (optionProperties) {\r\n                    for (const s of optionProperties) {\r\n                        if (s.type === 'ObjectProperty' &&\r\n                            s.key.type === 'Identifier' &&\r\n                            s.key.name === 'name') {\r\n                            hasDefaultExportName = true;\r\n                        }\r\n                        if ((s.type === 'ObjectMethod' || s.type === 'ObjectProperty') &&\r\n                            s.key.type === 'Identifier' &&\r\n                            s.key.name === 'render') {\r\n                            // TODO warn when we provide a better way to do it?\r\n                            hasDefaultExportRender = true;\r\n                        }\r\n                    }\r\n                }\r\n                // export default { ... } --> const __default__ = { ... }\r\n                const start = node.start + scriptStartOffset;\r\n                const end = node.declaration.start + scriptStartOffset;\r\n                s.overwrite(start, end, `const ${DEFAULT_VAR} = `);\r\n            }\r\n            else if (node.type === 'ExportNamedDeclaration') {\r\n                const defaultSpecifier = node.specifiers.find(s => s.exported.type === 'Identifier' && s.exported.name === 'default');\r\n                if (defaultSpecifier) {\r\n                    defaultExport = node;\r\n                    // 1. remove specifier\r\n                    if (node.specifiers.length > 1) {\r\n                        s.remove(defaultSpecifier.start + scriptStartOffset, defaultSpecifier.end + scriptStartOffset);\r\n                    }\r\n                    else {\r\n                        s.remove(node.start + scriptStartOffset, node.end + scriptStartOffset);\r\n                    }\r\n                    if (node.source) {\r\n                        // export { x as default } from './x'\r\n                        // rewrite to `import { x as __default__ } from './x'` and\r\n                        // add to top\r\n                        s.prepend(`import { ${defaultSpecifier.local.name} as ${DEFAULT_VAR} } from '${node.source.value}'\\n`);\r\n                    }\r\n                    else {\r\n                        // export { x as default }\r\n                        // rewrite to `const __default__ = x` and move to end\r\n                        s.appendLeft(scriptEndOffset, `\\nconst ${DEFAULT_VAR} = ${defaultSpecifier.local.name}\\n`);\r\n                    }\r\n                }\r\n                if (node.declaration) {\r\n                    walkDeclaration(node.declaration, scriptBindings, vueImportAliases);\r\n                }\r\n            }\r\n            else if ((node.type === 'VariableDeclaration' ||\r\n                node.type === 'FunctionDeclaration' ||\r\n                node.type === 'ClassDeclaration' ||\r\n                node.type === 'TSEnumDeclaration') &&\r\n                !node.declare) {\r\n                walkDeclaration(node, scriptBindings, vueImportAliases);\r\n            }\r\n        }\r\n        // apply reactivity transform\r\n        if (enableReactivityTransform && shouldTransform(script.content)) {\r\n            const { rootRefs, importedHelpers } = transformAST(scriptAst, s, scriptStartOffset);\r\n            refBindings = rootRefs;\r\n            for (const h of importedHelpers) {\r\n                helperImports.add(h);\r\n            }\r\n        }\r\n        // <script> after <script setup>\r\n        // we need to move the block up so that `const __default__` is\r\n        // declared before being used in the actual component definition\r\n        if (scriptStartOffset > startOffset) {\r\n            // if content doesn't end with newline, add one\r\n            if (!/\\n$/.test(script.content.trim())) {\r\n                s.appendLeft(scriptEndOffset, `\\n`);\r\n            }\r\n            s.move(scriptStartOffset, scriptEndOffset, 0);\r\n        }\r\n    }\r\n    // 2.2 process <script setup> body\r\n    for (const node of scriptSetupAst.body) {\r\n        // (Dropped) `ref: x` bindings\r\n        // TODO remove when out of experimental\r\n        if (node.type === 'LabeledStatement' &&\r\n            node.label.name === 'ref' &&\r\n            node.body.type === 'ExpressionStatement') {\r\n            error(`ref sugar using the label syntax was an experimental proposal and ` +\r\n                `has been dropped based on community feedback. Please check out ` +\r\n                `the new proposal at https://github.com/vuejs/rfcs/discussions/369`, node);\r\n        }\r\n        if (node.type === 'ExpressionStatement') {\r\n            // process `defineProps` and `defineEmit(s)` calls\r\n            if (processDefineProps(node.expression) ||\r\n                processDefineEmits(node.expression) ||\r\n                processWithDefaults(node.expression)) {\r\n                s.remove(node.start + startOffset, node.end + startOffset);\r\n            }\r\n            else if (processDefineExpose(node.expression)) {\r\n                // defineExpose({}) -> expose({})\r\n                const callee = node.expression.callee;\r\n                s.overwrite(callee.start + startOffset, callee.end + startOffset, 'expose');\r\n            }\r\n        }\r\n        if (node.type === 'VariableDeclaration' && !node.declare) {\r\n            const total = node.declarations.length;\r\n            let left = total;\r\n            for (let i = 0; i < total; i++) {\r\n                const decl = node.declarations[i];\r\n                if (decl.init) {\r\n                    // defineProps / defineEmits\r\n                    const isDefineProps = processDefineProps(decl.init, decl.id) ||\r\n                        processWithDefaults(decl.init, decl.id);\r\n                    const isDefineEmits = processDefineEmits(decl.init, decl.id);\r\n                    if (isDefineProps || isDefineEmits) {\r\n                        if (left === 1) {\r\n                            s.remove(node.start + startOffset, node.end + startOffset);\r\n                        }\r\n                        else {\r\n                            let start = decl.start + startOffset;\r\n                            let end = decl.end + startOffset;\r\n                            if (i === 0) {\r\n                                // first one, locate the start of the next\r\n                                end = node.declarations[i + 1].start + startOffset;\r\n                            }\r\n                            else {\r\n                                // not first one, locate the end of the prev\r\n                                start = node.declarations[i - 1].end + startOffset;\r\n                            }\r\n                            s.remove(start, end);\r\n                            left--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // walk declarations to record declared bindings\r\n        if ((node.type === 'VariableDeclaration' ||\r\n            node.type === 'FunctionDeclaration' ||\r\n            node.type === 'ClassDeclaration') &&\r\n            !node.declare) {\r\n            walkDeclaration(node, setupBindings, vueImportAliases);\r\n        }\r\n        // walk statements & named exports / variable declarations for top level\r\n        // await\r\n        if ((node.type === 'VariableDeclaration' && !node.declare) ||\r\n            node.type.endsWith('Statement')) {\r\n            const scope = [scriptSetupAst.body];\r\n            walk$1(node, {\r\n                enter(child, parent) {\r\n                    if (isFunctionType(child)) {\r\n                        this.skip();\r\n                    }\r\n                    if (child.type === 'BlockStatement') {\r\n                        scope.push(child.body);\r\n                    }\r\n                    if (child.type === 'AwaitExpression') {\r\n                        hasAwait = true;\r\n                        // if the await expression is an expression statement and\r\n                        // - is in the root scope\r\n                        // - or is not the first statement in a nested block scope\r\n                        // then it needs a semicolon before the generated code.\r\n                        const currentScope = scope[scope.length - 1];\r\n                        const needsSemi = currentScope.some((n, i) => {\r\n                            return ((scope.length === 1 || i > 0) &&\r\n                                n.type === 'ExpressionStatement' &&\r\n                                n.start === child.start);\r\n                        });\r\n                        processAwait(child, needsSemi, parent.type === 'ExpressionStatement');\r\n                    }\r\n                },\r\n                exit(node) {\r\n                    if (node.type === 'BlockStatement')\r\n                        scope.pop();\r\n                }\r\n            });\r\n        }\r\n        if ((node.type === 'ExportNamedDeclaration' && node.exportKind !== 'type') ||\r\n            node.type === 'ExportAllDeclaration' ||\r\n            node.type === 'ExportDefaultDeclaration') {\r\n            error(`<script setup> cannot contain ES module exports. ` +\r\n                `If you are using a previous version of <script setup>, please ` +\r\n                `consult the updated RFC at https://github.com/vuejs/rfcs/pull/227.`, node);\r\n        }\r\n        if (isTS) {\r\n            // runtime enum\r\n            if (node.type === 'TSEnumDeclaration') {\r\n                registerBinding(setupBindings, node.id, \"setup-const\" /* BindingTypes.SETUP_CONST */);\r\n            }\r\n            // move all Type declarations to outer scope\r\n            if (node.type.startsWith('TS') ||\r\n                (node.type === 'ExportNamedDeclaration' &&\r\n                    node.exportKind === 'type') ||\r\n                (node.type === 'VariableDeclaration' && node.declare)) {\r\n                recordType(node, declaredTypes);\r\n                hoistNode(node);\r\n            }\r\n        }\r\n    }\r\n    // 3. Apply reactivity transform\r\n    if ((enableReactivityTransform &&\r\n        // normal <script> had ref bindings that maybe used in <script setup>\r\n        (refBindings || shouldTransform(scriptSetup.content))) ||\r\n        propsDestructureDecl) {\r\n        const { rootRefs, importedHelpers } = transformAST(scriptSetupAst, s, startOffset, refBindings, propsDestructuredBindings);\r\n        refBindings = refBindings ? [...refBindings, ...rootRefs] : rootRefs;\r\n        for (const h of importedHelpers) {\r\n            helperImports.add(h);\r\n        }\r\n    }\r\n    // 4. extract runtime props/emits code from setup context type\r\n    if (propsTypeDecl) {\r\n        extractRuntimeProps(propsTypeDecl, typeDeclaredProps, declaredTypes);\r\n    }\r\n    if (emitsTypeDecl) {\r\n        extractRuntimeEmits(emitsTypeDecl, typeDeclaredEmits);\r\n    }\r\n    // 5. check useOptions args to make sure it doesn't reference setup scope\r\n    // variables\r\n    checkInvalidScopeReference(propsRuntimeDecl, DEFINE_PROPS);\r\n    checkInvalidScopeReference(propsRuntimeDefaults, DEFINE_PROPS);\r\n    checkInvalidScopeReference(propsDestructureDecl, DEFINE_PROPS);\r\n    checkInvalidScopeReference(emitsRuntimeDecl, DEFINE_EMITS);\r\n    // 6. remove non-script content\r\n    if (script) {\r\n        if (startOffset < scriptStartOffset) {\r\n            // <script setup> before <script>\r\n            s.remove(0, startOffset);\r\n            s.remove(endOffset, scriptStartOffset);\r\n            s.remove(scriptEndOffset, source.length);\r\n        }\r\n        else {\r\n            // <script> before <script setup>\r\n            s.remove(0, scriptStartOffset);\r\n            s.remove(scriptEndOffset, startOffset);\r\n            s.remove(endOffset, source.length);\r\n        }\r\n    }\r\n    else {\r\n        // only <script setup>\r\n        s.remove(0, startOffset);\r\n        s.remove(endOffset, source.length);\r\n    }\r\n    // 7. analyze binding metadata\r\n    if (scriptAst) {\r\n        Object.assign(bindingMetadata, analyzeScriptBindings(scriptAst.body));\r\n    }\r\n    if (propsRuntimeDecl) {\r\n        for (const key of getObjectOrArrayExpressionKeys(propsRuntimeDecl)) {\r\n            bindingMetadata[key] = \"props\" /* BindingTypes.PROPS */;\r\n        }\r\n    }\r\n    for (const key in typeDeclaredProps) {\r\n        bindingMetadata[key] = \"props\" /* BindingTypes.PROPS */;\r\n    }\r\n    // props aliases\r\n    if (propsDestructureDecl) {\r\n        if (propsDestructureRestId) {\r\n            bindingMetadata[propsDestructureRestId] =\r\n                \"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */;\r\n        }\r\n        for (const key in propsDestructuredBindings) {\r\n            const { local } = propsDestructuredBindings[key];\r\n            if (local !== key) {\r\n                bindingMetadata[local] = \"props-aliased\" /* BindingTypes.PROPS_ALIASED */;\r\n                (bindingMetadata.__propsAliases ||\r\n                    (bindingMetadata.__propsAliases = {}))[local] = key;\r\n            }\r\n        }\r\n    }\r\n    for (const [key, { isType, imported, source }] of Object.entries(userImports)) {\r\n        if (isType)\r\n            continue;\r\n        bindingMetadata[key] =\r\n            imported === '*' ||\r\n                (imported === 'default' && source.endsWith('.vue')) ||\r\n                source === 'vue'\r\n                ? \"setup-const\" /* BindingTypes.SETUP_CONST */\r\n                : \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */;\r\n    }\r\n    for (const key in scriptBindings) {\r\n        bindingMetadata[key] = scriptBindings[key];\r\n    }\r\n    for (const key in setupBindings) {\r\n        bindingMetadata[key] = setupBindings[key];\r\n    }\r\n    // known ref bindings\r\n    if (refBindings) {\r\n        for (const key of refBindings) {\r\n            bindingMetadata[key] = \"setup-ref\" /* BindingTypes.SETUP_REF */;\r\n        }\r\n    }\r\n    // 8. inject `useCssVars` calls\r\n    if (cssVars.length &&\r\n        // no need to do this when targeting SSR\r\n        !(options.inlineTemplate && ((_a = options.templateOptions) === null || _a === void 0 ? void 0 : _a.ssr))) {\r\n        helperImports.add(CSS_VARS_HELPER);\r\n        helperImports.add('unref');\r\n        s.prependRight(startOffset, `\\n${genCssVarsCode(cssVars, bindingMetadata, scopeId, isProd)}\\n`);\r\n    }\r\n    // 9. finalize setup() argument signature\r\n    let args = `__props`;\r\n    if (propsTypeDecl) {\r\n        // mark as any and only cast on assignment\r\n        // since the user defined complex types may be incompatible with the\r\n        // inferred type from generated runtime declarations\r\n        args += `: any`;\r\n    }\r\n    // inject user assignment of props\r\n    // we use a default __props so that template expressions referencing props\r\n    // can use it directly\r\n    if (propsIdentifier) {\r\n        s.prependLeft(startOffset, `\\nconst ${propsIdentifier} = __props${propsTypeDecl ? ` as ${genSetupPropsType(propsTypeDecl)}` : ``};\\n`);\r\n    }\r\n    if (propsDestructureRestId) {\r\n        s.prependLeft(startOffset, `\\nconst ${propsDestructureRestId} = ${helper(`createPropsRestProxy`)}(__props, ${JSON.stringify(Object.keys(propsDestructuredBindings))});\\n`);\r\n    }\r\n    // inject temp variables for async context preservation\r\n    if (hasAwait) {\r\n        const any = isTS ? `: any` : ``;\r\n        s.prependLeft(startOffset, `\\nlet __temp${any}, __restore${any}\\n`);\r\n    }\r\n    const destructureElements = hasDefineExposeCall || !options.inlineTemplate ? [`expose`] : [];\r\n    if (emitIdentifier) {\r\n        destructureElements.push(emitIdentifier === `emit` ? `emit` : `emit: ${emitIdentifier}`);\r\n    }\r\n    if (destructureElements.length) {\r\n        args += `, { ${destructureElements.join(', ')} }`;\r\n        if (emitsTypeDecl) {\r\n            args += `: { emit: (${scriptSetup.content.slice(emitsTypeDecl.start, emitsTypeDecl.end)}), expose: any, slots: any, attrs: any }`;\r\n        }\r\n    }\r\n    // 10. generate return statement\r\n    let returned;\r\n    if (!options.inlineTemplate || (!sfc.template && hasDefaultExportRender)) {\r\n        // non-inline mode, or has manual render in normal <script>\r\n        // return bindings from script and script setup\r\n        const allBindings = Object.assign(Object.assign({}, scriptBindings), setupBindings);\r\n        for (const key in userImports) {\r\n            if (!userImports[key].isType && userImports[key].isUsedInTemplate) {\r\n                allBindings[key] = true;\r\n            }\r\n        }\r\n        returned = `{ `;\r\n        for (const key in allBindings) {\r\n            if (allBindings[key] === true &&\r\n                userImports[key].source !== 'vue' &&\r\n                !userImports[key].source.endsWith('.vue')) {\r\n                // generate getter for import bindings\r\n                // skip vue imports since we know they will never change\r\n                returned += `get ${key}() { return ${key} }, `;\r\n            }\r\n            else if (bindingMetadata[key] === \"setup-let\" /* BindingTypes.SETUP_LET */) {\r\n                // local let binding, also add setter\r\n                const setArg = key === 'v' ? `_v` : `v`;\r\n                returned +=\r\n                    `get ${key}() { return ${key} }, ` +\r\n                        `set ${key}(${setArg}) { ${key} = ${setArg} }, `;\r\n            }\r\n            else {\r\n                returned += `${key}, `;\r\n            }\r\n        }\r\n        returned = returned.replace(/, $/, '') + ` }`;\r\n    }\r\n    else {\r\n        // inline mode\r\n        if (sfc.template && !sfc.template.src) {\r\n            if (options.templateOptions && options.templateOptions.ssr) {\r\n                hasInlinedSsrRenderFn = true;\r\n            }\r\n            // inline render function mode - we are going to compile the template and\r\n            // inline it right here\r\n            const { code, ast, preamble, tips, errors } = compileTemplate(Object.assign(Object.assign({ filename, source: sfc.template.content, inMap: sfc.template.map }, options.templateOptions), { id: scopeId, scoped: sfc.styles.some(s => s.scoped), isProd: options.isProd, ssrCssVars: sfc.cssVars, compilerOptions: Object.assign(Object.assign({}, (options.templateOptions &&\r\n                    options.templateOptions.compilerOptions)), { inline: true, isTS,\r\n                    bindingMetadata }) }));\r\n            if (tips.length) {\r\n                tips.forEach(warnOnce);\r\n            }\r\n            const err = errors[0];\r\n            if (typeof err === 'string') {\r\n                throw new Error(err);\r\n            }\r\n            else if (err) {\r\n                if (err.loc) {\r\n                    err.message +=\r\n                        `\\n\\n` +\r\n                            sfc.filename +\r\n                            '\\n' +\r\n                            generateCodeFrame(source, err.loc.start.offset, err.loc.end.offset) +\r\n                            `\\n`;\r\n                }\r\n                throw err;\r\n            }\r\n            if (preamble) {\r\n                s.prepend(preamble);\r\n            }\r\n            // avoid duplicated unref import\r\n            // as this may get injected by the render function preamble OR the\r\n            // css vars codegen\r\n            if (ast && ast.helpers.includes(UNREF)) {\r\n                helperImports.delete('unref');\r\n            }\r\n            returned = code;\r\n        }\r\n        else {\r\n            returned = `() => {}`;\r\n        }\r\n    }\r\n    if (!options.inlineTemplate && !false) {\r\n        // in non-inline mode, the `__isScriptSetup: true` flag is used by\r\n        // componentPublicInstance proxy to allow properties that start with $ or _\r\n        s.appendRight(endOffset, `\\nconst __returned__ = ${returned}\\n` +\r\n            `Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })\\n` +\r\n            `return __returned__` +\r\n            `\\n}\\n\\n`);\r\n    }\r\n    else {\r\n        s.appendRight(endOffset, `\\nreturn ${returned}\\n}\\n\\n`);\r\n    }\r\n    // 11. finalize default export\r\n    let runtimeOptions = ``;\r\n    if (!hasDefaultExportName && filename && filename !== DEFAULT_FILENAME) {\r\n        const match = filename.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            runtimeOptions += `\\n  __name: '${match[1]}',`;\r\n        }\r\n    }\r\n    if (hasInlinedSsrRenderFn) {\r\n        runtimeOptions += `\\n  __ssrInlineRender: true,`;\r\n    }\r\n    if (propsRuntimeDecl) {\r\n        let declCode = scriptSetup.content\r\n            .slice(propsRuntimeDecl.start, propsRuntimeDecl.end)\r\n            .trim();\r\n        if (propsDestructureDecl) {\r\n            const defaults = [];\r\n            for (const key in propsDestructuredBindings) {\r\n                const d = genDestructuredDefaultValue(key);\r\n                if (d)\r\n                    defaults.push(`${key}: ${d}`);\r\n            }\r\n            if (defaults.length) {\r\n                declCode = `${helper(`mergeDefaults`)}(${declCode}, {\\n  ${defaults.join(',\\n  ')}\\n})`;\r\n            }\r\n        }\r\n        runtimeOptions += `\\n  props: ${declCode},`;\r\n    }\r\n    else if (propsTypeDecl) {\r\n        runtimeOptions += genRuntimeProps(typeDeclaredProps);\r\n    }\r\n    if (emitsRuntimeDecl) {\r\n        runtimeOptions += `\\n  emits: ${scriptSetup.content\r\n            .slice(emitsRuntimeDecl.start, emitsRuntimeDecl.end)\r\n            .trim()},`;\r\n    }\r\n    else if (emitsTypeDecl) {\r\n        runtimeOptions += genRuntimeEmits(typeDeclaredEmits);\r\n    }\r\n    // <script setup> components are closed by default. If the user did not\r\n    // explicitly call `defineExpose`, call expose() with no args.\r\n    const exposeCall = hasDefineExposeCall || options.inlineTemplate ? `` : `  expose();\\n`;\r\n    // wrap setup code with function.\r\n    if (isTS) {\r\n        // for TS, make sure the exported type is still valid type with\r\n        // correct props information\r\n        // we have to use object spread for types to be merged properly\r\n        // user's TS setting should compile it down to proper targets\r\n        // export default defineComponent({ ...__default__, ... })\r\n        const def = defaultExport ? `\\n  ...${DEFAULT_VAR},` : ``;\r\n        s.prependLeft(startOffset, `\\nexport default /*#__PURE__*/${helper(`defineComponent`)}({${def}${runtimeOptions}\\n  ${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`);\r\n        s.appendRight(endOffset, `})`);\r\n    }\r\n    else {\r\n        if (defaultExport) {\r\n            // without TS, can't rely on rest spread, so we use Object.assign\r\n            // export default Object.assign(__default__, { ... })\r\n            s.prependLeft(startOffset, `\\nexport default /*#__PURE__*/Object.assign(${DEFAULT_VAR}, {${runtimeOptions}\\n  ` +\r\n                `${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`);\r\n            s.appendRight(endOffset, `})`);\r\n        }\r\n        else {\r\n            s.prependLeft(startOffset, `\\nexport default {${runtimeOptions}\\n  ` +\r\n                `${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`);\r\n            s.appendRight(endOffset, `}`);\r\n        }\r\n    }\r\n    // 12. finalize Vue helper imports\r\n    if (helperImports.size > 0) {\r\n        s.prepend(`import { ${[...helperImports]\r\n            .map(h => `${h} as _${h}`)\r\n            .join(', ')} } from 'vue'\\n`);\r\n    }\r\n    s.trim();\r\n    return Object.assign(Object.assign({}, scriptSetup), { bindings: bindingMetadata, imports: userImports, content: s.toString(), map: genSourceMap\r\n            ? s.generateMap({\r\n                source: filename,\r\n                hires: true,\r\n                includeContent: true\r\n            })\r\n            : undefined, scriptAst: scriptAst === null || scriptAst === void 0 ? void 0 : scriptAst.body, scriptSetupAst: scriptSetupAst === null || scriptSetupAst === void 0 ? void 0 : scriptSetupAst.body });\r\n}\r\nfunction registerBinding(bindings, node, type) {\r\n    bindings[node.name] = type;\r\n}\r\nfunction walkDeclaration(node, bindings, userImportAliases) {\r\n    if (node.type === 'VariableDeclaration') {\r\n        const isConst = node.kind === 'const';\r\n        // export const foo = ...\r\n        for (const { id, init } of node.declarations) {\r\n            const isDefineCall = !!(isConst &&\r\n                isCallOf(init, c => c === DEFINE_PROPS || c === DEFINE_EMITS || c === WITH_DEFAULTS));\r\n            if (id.type === 'Identifier') {\r\n                let bindingType;\r\n                const userReactiveBinding = userImportAliases['reactive'];\r\n                if (isCallOf(init, userReactiveBinding)) {\r\n                    // treat reactive() calls as let since it's meant to be mutable\r\n                    bindingType = isConst\r\n                        ? \"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */\r\n                        : \"setup-let\" /* BindingTypes.SETUP_LET */;\r\n                }\r\n                else if (\r\n                // if a declaration is a const literal, we can mark it so that\r\n                // the generated render fn code doesn't need to unref() it\r\n                isDefineCall ||\r\n                    (isConst && canNeverBeRef(init, userReactiveBinding))) {\r\n                    bindingType = isCallOf(init, DEFINE_PROPS)\r\n                        ? \"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */\r\n                        : \"setup-const\" /* BindingTypes.SETUP_CONST */;\r\n                }\r\n                else if (isConst) {\r\n                    if (isCallOf(init, userImportAliases['ref'])) {\r\n                        bindingType = \"setup-ref\" /* BindingTypes.SETUP_REF */;\r\n                    }\r\n                    else {\r\n                        bindingType = \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */;\r\n                    }\r\n                }\r\n                else {\r\n                    bindingType = \"setup-let\" /* BindingTypes.SETUP_LET */;\r\n                }\r\n                registerBinding(bindings, id, bindingType);\r\n            }\r\n            else {\r\n                if (isCallOf(init, DEFINE_PROPS)) {\r\n                    // skip walking props destructure\r\n                    return;\r\n                }\r\n                if (id.type === 'ObjectPattern') {\r\n                    walkObjectPattern(id, bindings, isConst, isDefineCall);\r\n                }\r\n                else if (id.type === 'ArrayPattern') {\r\n                    walkArrayPattern(id, bindings, isConst, isDefineCall);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (node.type === 'TSEnumDeclaration' ||\r\n        node.type === 'FunctionDeclaration' ||\r\n        node.type === 'ClassDeclaration') {\r\n        // export function foo() {} / export class Foo {}\r\n        // export declarations must be named.\r\n        bindings[node.id.name] = \"setup-const\" /* BindingTypes.SETUP_CONST */;\r\n    }\r\n}\r\nfunction walkObjectPattern(node, bindings, isConst, isDefineCall = false) {\r\n    for (const p of node.properties) {\r\n        if (p.type === 'ObjectProperty') {\r\n            if (p.key.type === 'Identifier' && p.key === p.value) {\r\n                // shorthand: const { x } = ...\r\n                const type = isDefineCall\r\n                    ? \"setup-const\" /* BindingTypes.SETUP_CONST */\r\n                    : isConst\r\n                        ? \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */\r\n                        : \"setup-let\" /* BindingTypes.SETUP_LET */;\r\n                registerBinding(bindings, p.key, type);\r\n            }\r\n            else {\r\n                walkPattern(p.value, bindings, isConst, isDefineCall);\r\n            }\r\n        }\r\n        else {\r\n            // ...rest\r\n            // argument can only be identifier when destructuring\r\n            const type = isConst ? \"setup-const\" /* BindingTypes.SETUP_CONST */ : \"setup-let\" /* BindingTypes.SETUP_LET */;\r\n            registerBinding(bindings, p.argument, type);\r\n        }\r\n    }\r\n}\r\nfunction walkArrayPattern(node, bindings, isConst, isDefineCall = false) {\r\n    for (const e of node.elements) {\r\n        e && walkPattern(e, bindings, isConst, isDefineCall);\r\n    }\r\n}\r\nfunction walkPattern(node, bindings, isConst, isDefineCall = false) {\r\n    if (node.type === 'Identifier') {\r\n        const type = isDefineCall\r\n            ? \"setup-const\" /* BindingTypes.SETUP_CONST */\r\n            : isConst\r\n                ? \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */\r\n                : \"setup-let\" /* BindingTypes.SETUP_LET */;\r\n        registerBinding(bindings, node, type);\r\n    }\r\n    else if (node.type === 'RestElement') {\r\n        // argument can only be identifier when destructuring\r\n        const type = isConst ? \"setup-const\" /* BindingTypes.SETUP_CONST */ : \"setup-let\" /* BindingTypes.SETUP_LET */;\r\n        registerBinding(bindings, node.argument, type);\r\n    }\r\n    else if (node.type === 'ObjectPattern') {\r\n        walkObjectPattern(node, bindings, isConst);\r\n    }\r\n    else if (node.type === 'ArrayPattern') {\r\n        walkArrayPattern(node, bindings, isConst);\r\n    }\r\n    else if (node.type === 'AssignmentPattern') {\r\n        if (node.left.type === 'Identifier') {\r\n            const type = isDefineCall\r\n                ? \"setup-const\" /* BindingTypes.SETUP_CONST */\r\n                : isConst\r\n                    ? \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */\r\n                    : \"setup-let\" /* BindingTypes.SETUP_LET */;\r\n            registerBinding(bindings, node.left, type);\r\n        }\r\n        else {\r\n            walkPattern(node.left, bindings, isConst);\r\n        }\r\n    }\r\n}\r\nfunction recordType(node, declaredTypes) {\r\n    if (node.type === 'TSInterfaceDeclaration') {\r\n        declaredTypes[node.id.name] = [`Object`];\r\n    }\r\n    else if (node.type === 'TSTypeAliasDeclaration') {\r\n        declaredTypes[node.id.name] = inferRuntimeType(node.typeAnnotation, declaredTypes);\r\n    }\r\n    else if (node.type === 'ExportNamedDeclaration' && node.declaration) {\r\n        recordType(node.declaration, declaredTypes);\r\n    }\r\n}\r\nfunction extractRuntimeProps(node, props, declaredTypes, isProd) {\r\n    const members = node.type === 'TSTypeLiteral' ? node.members : node.body;\r\n    for (const m of members) {\r\n        if ((m.type === 'TSPropertySignature' || m.type === 'TSMethodSignature') &&\r\n            m.key.type === 'Identifier') {\r\n            let type;\r\n            if (m.type === 'TSMethodSignature') {\r\n                type = ['Function'];\r\n            }\r\n            else if (m.typeAnnotation) {\r\n                type = inferRuntimeType(m.typeAnnotation.typeAnnotation, declaredTypes);\r\n            }\r\n            props[m.key.name] = {\r\n                key: m.key.name,\r\n                required: !m.optional,\r\n                type: type || [`null`]\r\n            };\r\n        }\r\n    }\r\n}\r\nfunction inferRuntimeType(node, declaredTypes) {\r\n    switch (node.type) {\r\n        case 'TSStringKeyword':\r\n            return ['String'];\r\n        case 'TSNumberKeyword':\r\n            return ['Number'];\r\n        case 'TSBooleanKeyword':\r\n            return ['Boolean'];\r\n        case 'TSObjectKeyword':\r\n            return ['Object'];\r\n        case 'TSTypeLiteral':\r\n            // TODO (nice to have) generate runtime property validation\r\n            return ['Object'];\r\n        case 'TSFunctionType':\r\n            return ['Function'];\r\n        case 'TSArrayType':\r\n        case 'TSTupleType':\r\n            // TODO (nice to have) generate runtime element type/length checks\r\n            return ['Array'];\r\n        case 'TSLiteralType':\r\n            switch (node.literal.type) {\r\n                case 'StringLiteral':\r\n                    return ['String'];\r\n                case 'BooleanLiteral':\r\n                    return ['Boolean'];\r\n                case 'NumericLiteral':\r\n                case 'BigIntLiteral':\r\n                    return ['Number'];\r\n                default:\r\n                    return [`null`];\r\n            }\r\n        case 'TSTypeReference':\r\n            if (node.typeName.type === 'Identifier') {\r\n                if (declaredTypes[node.typeName.name]) {\r\n                    return declaredTypes[node.typeName.name];\r\n                }\r\n                switch (node.typeName.name) {\r\n                    case 'Array':\r\n                    case 'Function':\r\n                    case 'Object':\r\n                    case 'Set':\r\n                    case 'Map':\r\n                    case 'WeakSet':\r\n                    case 'WeakMap':\r\n                    case 'Date':\r\n                    case 'Promise':\r\n                        return [node.typeName.name];\r\n                    case 'Record':\r\n                    case 'Partial':\r\n                    case 'Readonly':\r\n                    case 'Pick':\r\n                    case 'Omit':\r\n                    case 'Exclude':\r\n                    case 'Extract':\r\n                    case 'Required':\r\n                    case 'InstanceType':\r\n                        return ['Object'];\r\n                }\r\n            }\r\n            return [`null`];\r\n        case 'TSParenthesizedType':\r\n            return inferRuntimeType(node.typeAnnotation, declaredTypes);\r\n        case 'TSUnionType':\r\n            return [\r\n                ...new Set([].concat(...node.types.map(t => inferRuntimeType(t, declaredTypes))))\r\n            ];\r\n        case 'TSIntersectionType':\r\n            return ['Object'];\r\n        case 'TSSymbolKeyword':\r\n            return ['Symbol'];\r\n        default:\r\n            return [`null`]; // no runtime check\r\n    }\r\n}\r\nfunction toRuntimeTypeString(types) {\r\n    return types.length > 1 ? `[${types.join(', ')}]` : types[0];\r\n}\r\nfunction extractRuntimeEmits(node, emits) {\r\n    if (node.type === 'TSTypeLiteral' || node.type === 'TSInterfaceBody') {\r\n        const members = node.type === 'TSTypeLiteral' ? node.members : node.body;\r\n        for (let t of members) {\r\n            if (t.type === 'TSCallSignatureDeclaration') {\r\n                extractEventNames(t.parameters[0], emits);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    else {\r\n        extractEventNames(node.parameters[0], emits);\r\n    }\r\n}\r\nfunction extractEventNames(eventName, emits) {\r\n    if (eventName.type === 'Identifier' &&\r\n        eventName.typeAnnotation &&\r\n        eventName.typeAnnotation.type === 'TSTypeAnnotation') {\r\n        const typeNode = eventName.typeAnnotation.typeAnnotation;\r\n        if (typeNode.type === 'TSLiteralType') {\r\n            if (typeNode.literal.type !== 'UnaryExpression') {\r\n                emits.add(String(typeNode.literal.value));\r\n            }\r\n        }\r\n        else if (typeNode.type === 'TSUnionType') {\r\n            for (const t of typeNode.types) {\r\n                if (t.type === 'TSLiteralType' &&\r\n                    t.literal.type !== 'UnaryExpression') {\r\n                    emits.add(String(t.literal.value));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genRuntimeEmits(emits) {\r\n    return emits.size\r\n        ? `\\n  emits: [${Array.from(emits)\r\n            .map(p => JSON.stringify(p))\r\n            .join(', ')}],`\r\n        : ``;\r\n}\r\nfunction isCallOf(node, test) {\r\n    return !!(node &&\r\n        test &&\r\n        node.type === 'CallExpression' &&\r\n        node.callee.type === 'Identifier' &&\r\n        (typeof test === 'string'\r\n            ? node.callee.name === test\r\n            : test(node.callee.name)));\r\n}\r\nfunction canNeverBeRef(node, userReactiveImport) {\r\n    if (isCallOf(node, userReactiveImport)) {\r\n        return true;\r\n    }\r\n    switch (node.type) {\r\n        case 'UnaryExpression':\r\n        case 'BinaryExpression':\r\n        case 'ArrayExpression':\r\n        case 'ObjectExpression':\r\n        case 'FunctionExpression':\r\n        case 'ArrowFunctionExpression':\r\n        case 'UpdateExpression':\r\n        case 'ClassExpression':\r\n        case 'TaggedTemplateExpression':\r\n            return true;\r\n        case 'SequenceExpression':\r\n            return canNeverBeRef(node.expressions[node.expressions.length - 1], userReactiveImport);\r\n        default:\r\n            if (node.type.endsWith('Literal')) {\r\n                return true;\r\n            }\r\n            return false;\r\n    }\r\n}\r\n/**\r\n * Analyze bindings in normal `<script>`\r\n * Note that `compileScriptSetup` already analyzes bindings as part of its\r\n * compilation process so this should only be used on single `<script>` SFCs.\r\n */\r\nfunction analyzeScriptBindings(ast) {\r\n    for (const node of ast) {\r\n        if (node.type === 'ExportDefaultDeclaration' &&\r\n            node.declaration.type === 'ObjectExpression') {\r\n            return analyzeBindingsFromOptions(node.declaration);\r\n        }\r\n    }\r\n    return {};\r\n}\r\nfunction analyzeBindingsFromOptions(node) {\r\n    const bindings = {};\r\n    // #3270, #3275\r\n    // mark non-script-setup so we don't resolve components/directives from these\r\n    Object.defineProperty(bindings, '__isScriptSetup', {\r\n        enumerable: false,\r\n        value: false\r\n    });\r\n    for (const property of node.properties) {\r\n        if (property.type === 'ObjectProperty' &&\r\n            !property.computed &&\r\n            property.key.type === 'Identifier') {\r\n            // props\r\n            if (property.key.name === 'props') {\r\n                // props: ['foo']\r\n                // props: { foo: ... }\r\n                for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n                    bindings[key] = \"props\" /* BindingTypes.PROPS */;\r\n                }\r\n            }\r\n            // inject\r\n            else if (property.key.name === 'inject') {\r\n                // inject: ['foo']\r\n                // inject: { foo: {} }\r\n                for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n                    bindings[key] = \"options\" /* BindingTypes.OPTIONS */;\r\n                }\r\n            }\r\n            // computed & methods\r\n            else if (property.value.type === 'ObjectExpression' &&\r\n                (property.key.name === 'computed' || property.key.name === 'methods')) {\r\n                // methods: { foo() {} }\r\n                // computed: { foo() {} }\r\n                for (const key of getObjectExpressionKeys(property.value)) {\r\n                    bindings[key] = \"options\" /* BindingTypes.OPTIONS */;\r\n                }\r\n            }\r\n        }\r\n        // setup & data\r\n        else if (property.type === 'ObjectMethod' &&\r\n            property.key.type === 'Identifier' &&\r\n            (property.key.name === 'setup' || property.key.name === 'data')) {\r\n            for (const bodyItem of property.body.body) {\r\n                // setup() {\r\n                //   return {\r\n                //     foo: null\r\n                //   }\r\n                // }\r\n                if (bodyItem.type === 'ReturnStatement' &&\r\n                    bodyItem.argument &&\r\n                    bodyItem.argument.type === 'ObjectExpression') {\r\n                    for (const key of getObjectExpressionKeys(bodyItem.argument)) {\r\n                        bindings[key] =\r\n                            property.key.name === 'setup'\r\n                                ? \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */\r\n                                : \"data\" /* BindingTypes.DATA */;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return bindings;\r\n}\r\nfunction getObjectExpressionKeys(node) {\r\n    const keys = [];\r\n    for (const prop of node.properties) {\r\n        if (prop.type === 'SpreadElement')\r\n            continue;\r\n        const key = resolveObjectKey(prop.key, prop.computed);\r\n        if (key)\r\n            keys.push(String(key));\r\n    }\r\n    return keys;\r\n}\r\nfunction getArrayExpressionKeys(node) {\r\n    const keys = [];\r\n    for (const element of node.elements) {\r\n        if (element && element.type === 'StringLiteral') {\r\n            keys.push(element.value);\r\n        }\r\n    }\r\n    return keys;\r\n}\r\nfunction getObjectOrArrayExpressionKeys(value) {\r\n    if (value.type === 'ArrayExpression') {\r\n        return getArrayExpressionKeys(value);\r\n    }\r\n    if (value.type === 'ObjectExpression') {\r\n        return getObjectExpressionKeys(value);\r\n    }\r\n    return [];\r\n}\r\nconst templateUsageCheckCache = createCache();\r\nfunction resolveTemplateUsageCheckString(sfc) {\r\n    const { content, ast } = sfc.template;\r\n    const cached = templateUsageCheckCache.get(content);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let code = '';\r\n    transform(createRoot([ast]), {\r\n        nodeTransforms: [\r\n            node => {\r\n                if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n                    if (!parserOptions.isNativeTag(node.tag) &&\r\n                        !parserOptions.isBuiltInComponent(node.tag)) {\r\n                        code += `,${camelize(node.tag)},${capitalize(camelize(node.tag))}`;\r\n                    }\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const prop = node.props[i];\r\n                        if (prop.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                            if (!isBuiltInDir(prop.name)) {\r\n                                code += `,v${capitalize(camelize(prop.name))}`;\r\n                            }\r\n                            if (prop.exp) {\r\n                                code += `,${processExp(prop.exp.content, prop.name)}`;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n                    code += `,${processExp(node.content.content)}`;\r\n                }\r\n            }\r\n        ]\r\n    });\r\n    code += ';';\r\n    templateUsageCheckCache.set(content, code);\r\n    return code;\r\n}\r\nconst forAliasRE$1 = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\nfunction processExp(exp, dir) {\r\n    if (/ as\\s+\\w|<.*>|:/.test(exp)) {\r\n        if (dir === 'slot') {\r\n            exp = `(${exp})=>{}`;\r\n        }\r\n        else if (dir === 'on') {\r\n            exp = `()=>{return ${exp}}`;\r\n        }\r\n        else if (dir === 'for') {\r\n            const inMatch = exp.match(forAliasRE$1);\r\n            if (inMatch) {\r\n                const [, LHS, RHS] = inMatch;\r\n                return processExp(`(${LHS})=>{}`) + processExp(RHS);\r\n            }\r\n        }\r\n        let ret = '';\r\n        // has potential type cast or generic arguments that uses types\r\n        const ast = parseExpression_1(exp, { plugins: ['typescript'] });\r\n        walkIdentifiers(ast, node => {\r\n            ret += `,` + node.name;\r\n        });\r\n        return ret;\r\n    }\r\n    return stripStrings(exp);\r\n}\r\nfunction stripStrings(exp) {\r\n    return exp\r\n        .replace(/'[^']*'|\"[^\"]*\"/g, '')\r\n        .replace(/`[^`]+`/g, stripTemplateString);\r\n}\r\nfunction stripTemplateString(str) {\r\n    const interpMatch = str.match(/\\${[^}]+}/g);\r\n    if (interpMatch) {\r\n        return interpMatch.map(m => m.slice(2, -1)).join(',');\r\n    }\r\n    return '';\r\n}\r\nfunction isImportUsed(local, sfc) {\r\n    return new RegExp(\r\n    // #4274 escape $ since it's a special char in regex\r\n    // (and is the only regex special char that is valid in identifiers)\r\n    `[^\\\\w$_]${local.replace(/\\$/g, '\\\\$')}[^\\\\w$_]`).test(resolveTemplateUsageCheckString(sfc));\r\n}\r\n/**\r\n * Note: this comparison assumes the prev/next script are already identical,\r\n * and only checks the special case where <script setup lang=\"ts\"> unused import\r\n * pruning result changes due to template changes.\r\n */\r\nfunction hmrShouldReload(prevImports, next) {\r\n    if (!next.scriptSetup ||\r\n        (next.scriptSetup.lang !== 'ts' && next.scriptSetup.lang !== 'tsx')) {\r\n        return false;\r\n    }\r\n    // for each previous import, check if its used status remain the same based on\r\n    // the next descriptor's template\r\n    for (const key in prevImports) {\r\n        // if an import was previous unused, but now is used, we need to force\r\n        // reload so that the script now includes that import.\r\n        if (!prevImports[key].isUsedInTemplate && isImportUsed(key, next)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction resolveObjectKey(node, computed) {\r\n    switch (node.type) {\r\n        case 'StringLiteral':\r\n        case 'NumericLiteral':\r\n            return node.value;\r\n        case 'Identifier':\r\n            if (!computed)\r\n                return node.name;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nconst DEFAULT_FILENAME = 'anonymous.vue';\r\nconst sourceToSFC = createCache();\r\nfunction parse$4(source, { sourceMap = true, filename = DEFAULT_FILENAME, sourceRoot = '', pad = false, ignoreEmpty = true, compiler = CompilerDOM } = {}) {\r\n    const sourceKey = source + sourceMap + filename + sourceRoot + pad + compiler.parse;\r\n    const cache = sourceToSFC.get(sourceKey);\r\n    if (cache) {\r\n        return cache;\r\n    }\r\n    const descriptor = {\r\n        filename,\r\n        source,\r\n        template: null,\r\n        script: null,\r\n        scriptSetup: null,\r\n        styles: [],\r\n        customBlocks: [],\r\n        cssVars: [],\r\n        slotted: false,\r\n        shouldForceReload: prevImports => hmrShouldReload(prevImports, descriptor)\r\n    };\r\n    const errors = [];\r\n    const ast = compiler.parse(source, {\r\n        // there are no components at SFC parsing level\r\n        isNativeTag: () => true,\r\n        // preserve all whitespaces\r\n        isPreTag: () => true,\r\n        getTextMode: ({ tag, props }, parent) => {\r\n            // all top level elements except <template> are parsed as raw text\r\n            // containers\r\n            if ((!parent && tag !== 'template') ||\r\n                // <template lang=\"xxx\"> should also be treated as raw text\r\n                (tag === 'template' &&\r\n                    props.some(p => p.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n                        p.name === 'lang' &&\r\n                        p.value &&\r\n                        p.value.content &&\r\n                        p.value.content !== 'html'))) {\r\n                return 2 /* TextModes.RAWTEXT */;\r\n            }\r\n            else {\r\n                return 0 /* TextModes.DATA */;\r\n            }\r\n        },\r\n        onError: e => {\r\n            errors.push(e);\r\n        }\r\n    });\r\n    ast.children.forEach(node => {\r\n        if (node.type !== 1 /* NodeTypes.ELEMENT */) {\r\n            return;\r\n        }\r\n        // we only want to keep the nodes that are not empty (when the tag is not a template)\r\n        if (ignoreEmpty &&\r\n            node.tag !== 'template' &&\r\n            isEmpty(node) &&\r\n            !hasSrc(node)) {\r\n            return;\r\n        }\r\n        switch (node.tag) {\r\n            case 'template':\r\n                if (!descriptor.template) {\r\n                    const templateBlock = (descriptor.template = createBlock(node, source, false));\r\n                    templateBlock.ast = node;\r\n                    // warn against 2.x <template functional>\r\n                    if (templateBlock.attrs.functional) {\r\n                        const err = new SyntaxError(`<template functional> is no longer supported in Vue 3, since ` +\r\n                            `functional components no longer have significant performance ` +\r\n                            `difference from stateful ones. Just use a normal <template> ` +\r\n                            `instead.`);\r\n                        err.loc = node.props.find(p => p.name === 'functional').loc;\r\n                        errors.push(err);\r\n                    }\r\n                }\r\n                else {\r\n                    errors.push(createDuplicateBlockError(node));\r\n                }\r\n                break;\r\n            case 'script':\r\n                const scriptBlock = createBlock(node, source, pad);\r\n                const isSetup = !!scriptBlock.attrs.setup;\r\n                if (isSetup && !descriptor.scriptSetup) {\r\n                    descriptor.scriptSetup = scriptBlock;\r\n                    break;\r\n                }\r\n                if (!isSetup && !descriptor.script) {\r\n                    descriptor.script = scriptBlock;\r\n                    break;\r\n                }\r\n                errors.push(createDuplicateBlockError(node, isSetup));\r\n                break;\r\n            case 'style':\r\n                const styleBlock = createBlock(node, source, pad);\r\n                if (styleBlock.attrs.vars) {\r\n                    errors.push(new SyntaxError(`<style vars> has been replaced by a new proposal: ` +\r\n                        `https://github.com/vuejs/rfcs/pull/231`));\r\n                }\r\n                descriptor.styles.push(styleBlock);\r\n                break;\r\n            default:\r\n                descriptor.customBlocks.push(createBlock(node, source, pad));\r\n                break;\r\n        }\r\n    });\r\n    if (!descriptor.template && !descriptor.script && !descriptor.scriptSetup) {\r\n        errors.push(new SyntaxError(`At least one <template> or <script> is required in a single file component.`));\r\n    }\r\n    if (descriptor.scriptSetup) {\r\n        if (descriptor.scriptSetup.src) {\r\n            errors.push(new SyntaxError(`<script setup> cannot use the \"src\" attribute because ` +\r\n                `its syntax will be ambiguous outside of the component.`));\r\n            descriptor.scriptSetup = null;\r\n        }\r\n        if (descriptor.script && descriptor.script.src) {\r\n            errors.push(new SyntaxError(`<script> cannot use the \"src\" attribute when <script setup> is ` +\r\n                `also present because they must be processed together.`));\r\n            descriptor.script = null;\r\n        }\r\n    }\r\n    if (sourceMap) {\r\n        const genMap = (block) => {\r\n            if (block && !block.src) {\r\n                block.map = generateSourceMap(filename, source, block.content, sourceRoot, !pad || block.type === 'template' ? block.loc.start.line - 1 : 0);\r\n            }\r\n        };\r\n        genMap(descriptor.template);\r\n        genMap(descriptor.script);\r\n        descriptor.styles.forEach(genMap);\r\n        descriptor.customBlocks.forEach(genMap);\r\n    }\r\n    // parse CSS vars\r\n    descriptor.cssVars = parseCssVars(descriptor);\r\n    // check if the SFC uses :slotted\r\n    const slottedRE = /(?:::v-|:)slotted\\(/;\r\n    descriptor.slotted = descriptor.styles.some(s => s.scoped && slottedRE.test(s.content));\r\n    const result = {\r\n        descriptor,\r\n        errors\r\n    };\r\n    sourceToSFC.set(sourceKey, result);\r\n    return result;\r\n}\r\nfunction createDuplicateBlockError(node, isScriptSetup = false) {\r\n    const err = new SyntaxError(`Single file component can contain only one <${node.tag}${isScriptSetup ? ` setup` : ``}> element`);\r\n    err.loc = node.loc;\r\n    return err;\r\n}\r\nfunction createBlock(node, source, pad) {\r\n    const type = node.tag;\r\n    let { start, end } = node.loc;\r\n    let content = '';\r\n    if (node.children.length) {\r\n        start = node.children[0].loc.start;\r\n        end = node.children[node.children.length - 1].loc.end;\r\n        content = source.slice(start.offset, end.offset);\r\n    }\r\n    else {\r\n        const offset = node.loc.source.indexOf(`</`);\r\n        if (offset > -1) {\r\n            start = {\r\n                line: start.line,\r\n                column: start.column + offset,\r\n                offset: start.offset + offset\r\n            };\r\n        }\r\n        end = Object.assign({}, start);\r\n    }\r\n    const loc = {\r\n        source: content,\r\n        start,\r\n        end\r\n    };\r\n    const attrs = {};\r\n    const block = {\r\n        type,\r\n        content,\r\n        loc,\r\n        attrs\r\n    };\r\n    if (pad) {\r\n        block.content = padContent(source, block, pad) + block.content;\r\n    }\r\n    node.props.forEach(p => {\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            attrs[p.name] = p.value ? p.value.content || true : true;\r\n            if (p.name === 'lang') {\r\n                block.lang = p.value && p.value.content;\r\n            }\r\n            else if (p.name === 'src') {\r\n                block.src = p.value && p.value.content;\r\n            }\r\n            else if (type === 'style') {\r\n                if (p.name === 'scoped') {\r\n                    block.scoped = true;\r\n                }\r\n                else if (p.name === 'module') {\r\n                    block.module = attrs[p.name];\r\n                }\r\n            }\r\n            else if (type === 'script' && p.name === 'setup') {\r\n                block.setup = attrs.setup;\r\n            }\r\n        }\r\n    });\r\n    return block;\r\n}\r\nconst splitRE = /\\r?\\n/g;\r\nconst emptyRE = /^(?:\\/\\/)?\\s*$/;\r\nconst replaceRE = /./g;\r\nfunction generateSourceMap(filename, source, generated, sourceRoot, lineOffset) {\r\n    const map = new SourceMapGenerator$2({\r\n        file: filename.replace(/\\\\/g, '/'),\r\n        sourceRoot: sourceRoot.replace(/\\\\/g, '/')\r\n    });\r\n    map.setSourceContent(filename, source);\r\n    generated.split(splitRE).forEach((line, index) => {\r\n        if (!emptyRE.test(line)) {\r\n            const originalLine = index + 1 + lineOffset;\r\n            const generatedLine = index + 1;\r\n            for (let i = 0; i < line.length; i++) {\r\n                if (!/\\s/.test(line[i])) {\r\n                    map.addMapping({\r\n                        source: filename,\r\n                        original: {\r\n                            line: originalLine,\r\n                            column: i\r\n                        },\r\n                        generated: {\r\n                            line: generatedLine,\r\n                            column: i\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return JSON.parse(map.toString());\r\n}\r\nfunction padContent(content, block, pad) {\r\n    content = content.slice(0, block.loc.start.offset);\r\n    if (pad === 'space') {\r\n        return content.replace(replaceRE, ' ');\r\n    }\r\n    else {\r\n        const offset = content.split(splitRE).length;\r\n        const padChar = block.type === 'script' && !block.lang ? '//\\n' : '\\n';\r\n        return Array(offset).join(padChar);\r\n    }\r\n}\r\nfunction hasSrc(node) {\r\n    return node.props.some(p => {\r\n        if (p.type !== 6 /* NodeTypes.ATTRIBUTE */) {\r\n            return false;\r\n        }\r\n        return p.name === 'src';\r\n    });\r\n}\r\n/**\r\n * Returns true if the node has no children\r\n * once the empty text nodes (trimmed content) have been filtered out.\r\n */\r\nfunction isEmpty(node) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (child.type !== 2 /* NodeTypes.TEXT */ || child.content.trim() !== '') {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// MIT lisence\r\n// from https://github.com/substack/tty-browserify/blob/1ba769a6429d242f36226538835b4034bf6b7886/index.js\r\n\r\nfunction isatty() {\r\n  return false;\r\n}\r\n\r\nfunction ReadStream() {\r\n  throw new Error('tty.ReadStream is not implemented');\r\n}\r\n\r\nfunction WriteStream() {\r\n  throw new Error('tty.ReadStream is not implemented');\r\n}\r\n\r\nvar _polyfillNode_tty = {\r\n  isatty: isatty,\r\n  ReadStream: ReadStream,\r\n  WriteStream: WriteStream\r\n};\r\n\r\nvar _polyfillNode_tty$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  isatty: isatty,\r\n  ReadStream: ReadStream,\r\n  WriteStream: WriteStream,\r\n  'default': _polyfillNode_tty\r\n});\r\n\r\nvar tty = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_tty$1);\r\n\r\nlet isColorSupported =\r\n\t!(\"NO_COLOR\" in ({}) || browser$1.argv.includes(\"--no-color\")) &&\r\n\t(\"FORCE_COLOR\" in ({}) ||\r\n\t\tbrowser$1.argv.includes(\"--color\") ||\r\n\t\t\"\" === \"win32\" ||\r\n\t\t(tty.isatty(1) && ({}).TERM !== \"dumb\") ||\r\n\t\t\"CI\" in ({}));\r\n\r\nlet formatter =\r\n\t(open, close, replace = open) =>\r\n\tinput => {\r\n\t\tlet string = \"\" + input;\r\n\t\tlet index = string.indexOf(close, open.length);\r\n\t\treturn ~index\r\n\t\t\t? open + replaceClose(string, close, replace, index) + close\r\n\t\t\t: open + string + close\r\n\t};\r\n\r\nlet replaceClose = (string, close, replace, index) => {\r\n\tlet start = string.substring(0, index) + replace;\r\n\tlet end = string.substring(index + close.length);\r\n\tlet nextIndex = end.indexOf(close);\r\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\r\n};\r\n\r\nlet createColors = (enabled = isColorSupported) => ({\r\n\tisColorSupported: enabled,\r\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\r\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\r\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\r\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\r\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\r\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\r\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\r\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\r\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\r\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\r\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\r\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\r\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\r\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\r\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\r\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\r\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\r\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\r\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\r\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\r\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\r\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\r\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\r\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\r\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\r\n});\r\n\r\nvar picocolors = createColors();\r\nvar createColors_1 = createColors;\r\npicocolors.createColors = createColors_1;\r\n\r\nconst SINGLE_QUOTE = \"'\".charCodeAt(0);\r\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\r\nconst BACKSLASH = '\\\\'.charCodeAt(0);\r\nconst SLASH = '/'.charCodeAt(0);\r\nconst NEWLINE = '\\n'.charCodeAt(0);\r\nconst SPACE = ' '.charCodeAt(0);\r\nconst FEED = '\\f'.charCodeAt(0);\r\nconst TAB = '\\t'.charCodeAt(0);\r\nconst CR = '\\r'.charCodeAt(0);\r\nconst OPEN_SQUARE = '['.charCodeAt(0);\r\nconst CLOSE_SQUARE = ']'.charCodeAt(0);\r\nconst OPEN_PARENTHESES = '('.charCodeAt(0);\r\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0);\r\nconst OPEN_CURLY = '{'.charCodeAt(0);\r\nconst CLOSE_CURLY = '}'.charCodeAt(0);\r\nconst SEMICOLON = ';'.charCodeAt(0);\r\nconst ASTERISK = '*'.charCodeAt(0);\r\nconst COLON = ':'.charCodeAt(0);\r\nconst AT = '@'.charCodeAt(0);\r\n\r\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\r\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\r\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/;\r\nconst RE_HEX_ESCAPE = /[\\da-f]/i;\r\n\r\nvar tokenize = function tokenizer(input, options = {}) {\r\n  let css = input.css.valueOf();\r\n  let ignore = options.ignoreErrors;\r\n\r\n  let code, next, quote, content, escape;\r\n  let escaped, escapePos, prev, n, currentToken;\r\n\r\n  let length = css.length;\r\n  let pos = 0;\r\n  let buffer = [];\r\n  let returned = [];\r\n\r\n  function position() {\r\n    return pos\r\n  }\r\n\r\n  function unclosed(what) {\r\n    throw input.error('Unclosed ' + what, pos)\r\n  }\r\n\r\n  function endOfFile() {\r\n    return returned.length === 0 && pos >= length\r\n  }\r\n\r\n  function nextToken(opts) {\r\n    if (returned.length) return returned.pop()\r\n    if (pos >= length) return\r\n\r\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\r\n\r\n    code = css.charCodeAt(pos);\r\n\r\n    switch (code) {\r\n      case NEWLINE:\r\n      case SPACE:\r\n      case TAB:\r\n      case CR:\r\n      case FEED: {\r\n        next = pos;\r\n        do {\r\n          next += 1;\r\n          code = css.charCodeAt(next);\r\n        } while (\r\n          code === SPACE ||\r\n          code === NEWLINE ||\r\n          code === TAB ||\r\n          code === CR ||\r\n          code === FEED\r\n        )\r\n\r\n        currentToken = ['space', css.slice(pos, next)];\r\n        pos = next - 1;\r\n        break\r\n      }\r\n\r\n      case OPEN_SQUARE:\r\n      case CLOSE_SQUARE:\r\n      case OPEN_CURLY:\r\n      case CLOSE_CURLY:\r\n      case COLON:\r\n      case SEMICOLON:\r\n      case CLOSE_PARENTHESES: {\r\n        let controlChar = String.fromCharCode(code);\r\n        currentToken = [controlChar, controlChar, pos];\r\n        break\r\n      }\r\n\r\n      case OPEN_PARENTHESES: {\r\n        prev = buffer.length ? buffer.pop()[1] : '';\r\n        n = css.charCodeAt(pos + 1);\r\n        if (\r\n          prev === 'url' &&\r\n          n !== SINGLE_QUOTE &&\r\n          n !== DOUBLE_QUOTE &&\r\n          n !== SPACE &&\r\n          n !== NEWLINE &&\r\n          n !== TAB &&\r\n          n !== FEED &&\r\n          n !== CR\r\n        ) {\r\n          next = pos;\r\n          do {\r\n            escaped = false;\r\n            next = css.indexOf(')', next + 1);\r\n            if (next === -1) {\r\n              if (ignore || ignoreUnclosed) {\r\n                next = pos;\r\n                break\r\n              } else {\r\n                unclosed('bracket');\r\n              }\r\n            }\r\n            escapePos = next;\r\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\r\n              escapePos -= 1;\r\n              escaped = !escaped;\r\n            }\r\n          } while (escaped)\r\n\r\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next];\r\n\r\n          pos = next;\r\n        } else {\r\n          next = css.indexOf(')', pos + 1);\r\n          content = css.slice(pos, next + 1);\r\n\r\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\r\n            currentToken = ['(', '(', pos];\r\n          } else {\r\n            currentToken = ['brackets', content, pos, next];\r\n            pos = next;\r\n          }\r\n        }\r\n\r\n        break\r\n      }\r\n\r\n      case SINGLE_QUOTE:\r\n      case DOUBLE_QUOTE: {\r\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\r\n        next = pos;\r\n        do {\r\n          escaped = false;\r\n          next = css.indexOf(quote, next + 1);\r\n          if (next === -1) {\r\n            if (ignore || ignoreUnclosed) {\r\n              next = pos + 1;\r\n              break\r\n            } else {\r\n              unclosed('string');\r\n            }\r\n          }\r\n          escapePos = next;\r\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\r\n            escapePos -= 1;\r\n            escaped = !escaped;\r\n          }\r\n        } while (escaped)\r\n\r\n        currentToken = ['string', css.slice(pos, next + 1), pos, next];\r\n        pos = next;\r\n        break\r\n      }\r\n\r\n      case AT: {\r\n        RE_AT_END.lastIndex = pos + 1;\r\n        RE_AT_END.test(css);\r\n        if (RE_AT_END.lastIndex === 0) {\r\n          next = css.length - 1;\r\n        } else {\r\n          next = RE_AT_END.lastIndex - 2;\r\n        }\r\n\r\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next];\r\n\r\n        pos = next;\r\n        break\r\n      }\r\n\r\n      case BACKSLASH: {\r\n        next = pos;\r\n        escape = true;\r\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\r\n          next += 1;\r\n          escape = !escape;\r\n        }\r\n        code = css.charCodeAt(next + 1);\r\n        if (\r\n          escape &&\r\n          code !== SLASH &&\r\n          code !== SPACE &&\r\n          code !== NEWLINE &&\r\n          code !== TAB &&\r\n          code !== CR &&\r\n          code !== FEED\r\n        ) {\r\n          next += 1;\r\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\r\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\r\n              next += 1;\r\n            }\r\n            if (css.charCodeAt(next + 1) === SPACE) {\r\n              next += 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        currentToken = ['word', css.slice(pos, next + 1), pos, next];\r\n\r\n        pos = next;\r\n        break\r\n      }\r\n\r\n      default: {\r\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\r\n          next = css.indexOf('*/', pos + 2) + 1;\r\n          if (next === 0) {\r\n            if (ignore || ignoreUnclosed) {\r\n              next = css.length;\r\n            } else {\r\n              unclosed('comment');\r\n            }\r\n          }\r\n\r\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next];\r\n          pos = next;\r\n        } else {\r\n          RE_WORD_END.lastIndex = pos + 1;\r\n          RE_WORD_END.test(css);\r\n          if (RE_WORD_END.lastIndex === 0) {\r\n            next = css.length - 1;\r\n          } else {\r\n            next = RE_WORD_END.lastIndex - 2;\r\n          }\r\n\r\n          currentToken = ['word', css.slice(pos, next + 1), pos, next];\r\n          buffer.push(currentToken);\r\n          pos = next;\r\n        }\r\n\r\n        break\r\n      }\r\n    }\r\n\r\n    pos++;\r\n    return currentToken\r\n  }\r\n\r\n  function back(token) {\r\n    returned.push(token);\r\n  }\r\n\r\n  return {\r\n    back,\r\n    nextToken,\r\n    endOfFile,\r\n    position\r\n  }\r\n};\r\n\r\nlet Input;\r\n\r\nfunction registerInput(dependant) {\r\n  Input = dependant;\r\n}\r\n\r\nconst HIGHLIGHT_THEME = {\r\n  'brackets': picocolors.cyan,\r\n  'at-word': picocolors.cyan,\r\n  'comment': picocolors.gray,\r\n  'string': picocolors.green,\r\n  'class': picocolors.yellow,\r\n  'hash': picocolors.magenta,\r\n  'call': picocolors.cyan,\r\n  '(': picocolors.cyan,\r\n  ')': picocolors.cyan,\r\n  '{': picocolors.yellow,\r\n  '}': picocolors.yellow,\r\n  '[': picocolors.yellow,\r\n  ']': picocolors.yellow,\r\n  ':': picocolors.yellow,\r\n  ';': picocolors.yellow\r\n};\r\n\r\nfunction getTokenType([type, value], processor) {\r\n  if (type === 'word') {\r\n    if (value[0] === '.') {\r\n      return 'class'\r\n    }\r\n    if (value[0] === '#') {\r\n      return 'hash'\r\n    }\r\n  }\r\n\r\n  if (!processor.endOfFile()) {\r\n    let next = processor.nextToken();\r\n    processor.back(next);\r\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\r\n  }\r\n\r\n  return type\r\n}\r\n\r\nfunction terminalHighlight(css) {\r\n  let processor = tokenize(new Input(css), { ignoreErrors: true });\r\n  let result = '';\r\n  while (!processor.endOfFile()) {\r\n    let token = processor.nextToken();\r\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)];\r\n    if (color) {\r\n      result += token[1]\r\n        .split(/\\r?\\n/)\r\n        .map(i => color(i))\r\n        .join('\\n');\r\n    } else {\r\n      result += token[1];\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nterminalHighlight.registerInput = registerInput;\r\n\r\nvar terminalHighlight_1 = terminalHighlight;\r\n\r\nclass CssSyntaxError extends Error {\r\n  constructor(message, line, column, source, file, plugin) {\r\n    super(message);\r\n    this.name = 'CssSyntaxError';\r\n    this.reason = message;\r\n\r\n    if (file) {\r\n      this.file = file;\r\n    }\r\n    if (source) {\r\n      this.source = source;\r\n    }\r\n    if (plugin) {\r\n      this.plugin = plugin;\r\n    }\r\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\r\n      if (typeof line === 'number') {\r\n        this.line = line;\r\n        this.column = column;\r\n      } else {\r\n        this.line = line.line;\r\n        this.column = line.column;\r\n        this.endLine = column.line;\r\n        this.endColumn = column.column;\r\n      }\r\n    }\r\n\r\n    this.setMessage();\r\n\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, CssSyntaxError);\r\n    }\r\n  }\r\n\r\n  setMessage() {\r\n    this.message = this.plugin ? this.plugin + ': ' : '';\r\n    this.message += this.file ? this.file : '<css input>';\r\n    if (typeof this.line !== 'undefined') {\r\n      this.message += ':' + this.line + ':' + this.column;\r\n    }\r\n    this.message += ': ' + this.reason;\r\n  }\r\n\r\n  showSourceCode(color) {\r\n    if (!this.source) return ''\r\n\r\n    let css = this.source;\r\n    if (color == null) color = picocolors.isColorSupported;\r\n    if (terminalHighlight_1) {\r\n      if (color) css = terminalHighlight_1(css);\r\n    }\r\n\r\n    let lines = css.split(/\\r?\\n/);\r\n    let start = Math.max(this.line - 3, 0);\r\n    let end = Math.min(this.line + 2, lines.length);\r\n\r\n    let maxWidth = String(end).length;\r\n\r\n    let mark, aside;\r\n    if (color) {\r\n      let { bold, red, gray } = picocolors.createColors(true);\r\n      mark = text => bold(red(text));\r\n      aside = text => gray(text);\r\n    } else {\r\n      mark = aside = str => str;\r\n    }\r\n\r\n    return lines\r\n      .slice(start, end)\r\n      .map((line, index) => {\r\n        let number = start + 1 + index;\r\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\r\n        if (number === this.line) {\r\n          let spacing =\r\n            aside(gutter.replace(/\\d/g, ' ')) +\r\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ');\r\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\r\n        }\r\n        return ' ' + aside(gutter) + line\r\n      })\r\n      .join('\\n')\r\n  }\r\n\r\n  toString() {\r\n    let code = this.showSourceCode();\r\n    if (code) {\r\n      code = '\\n\\n' + code + '\\n';\r\n    }\r\n    return this.name + ': ' + this.message + code\r\n  }\r\n}\r\n\r\nvar cssSyntaxError = CssSyntaxError;\r\nCssSyntaxError.default = CssSyntaxError;\r\n\r\nvar isClean = Symbol('isClean');\r\n\r\nvar my = Symbol('my');\r\n\r\nvar symbols = {\r\n\tisClean: isClean,\r\n\tmy: my\r\n};\r\n\r\nconst DEFAULT_RAW = {\r\n  colon: ': ',\r\n  indent: '    ',\r\n  beforeDecl: '\\n',\r\n  beforeRule: '\\n',\r\n  beforeOpen: ' ',\r\n  beforeClose: '\\n',\r\n  beforeComment: '\\n',\r\n  after: '\\n',\r\n  emptyBody: '',\r\n  commentLeft: ' ',\r\n  commentRight: ' ',\r\n  semicolon: false\r\n};\r\n\r\nfunction capitalize$1(str) {\r\n  return str[0].toUpperCase() + str.slice(1)\r\n}\r\n\r\nclass Stringifier {\r\n  constructor(builder) {\r\n    this.builder = builder;\r\n  }\r\n\r\n  stringify(node, semicolon) {\r\n    /* c8 ignore start */\r\n    if (!this[node.type]) {\r\n      throw new Error(\r\n        'Unknown AST node type ' +\r\n          node.type +\r\n          '. ' +\r\n          'Maybe you need to change PostCSS stringifier.'\r\n      )\r\n    }\r\n    /* c8 ignore stop */\r\n    this[node.type](node, semicolon);\r\n  }\r\n\r\n  document(node) {\r\n    this.body(node);\r\n  }\r\n\r\n  root(node) {\r\n    this.body(node);\r\n    if (node.raws.after) this.builder(node.raws.after);\r\n  }\r\n\r\n  comment(node) {\r\n    let left = this.raw(node, 'left', 'commentLeft');\r\n    let right = this.raw(node, 'right', 'commentRight');\r\n    this.builder('/*' + left + node.text + right + '*/', node);\r\n  }\r\n\r\n  decl(node, semicolon) {\r\n    let between = this.raw(node, 'between', 'colon');\r\n    let string = node.prop + between + this.rawValue(node, 'value');\r\n\r\n    if (node.important) {\r\n      string += node.raws.important || ' !important';\r\n    }\r\n\r\n    if (semicolon) string += ';';\r\n    this.builder(string, node);\r\n  }\r\n\r\n  rule(node) {\r\n    this.block(node, this.rawValue(node, 'selector'));\r\n    if (node.raws.ownSemicolon) {\r\n      this.builder(node.raws.ownSemicolon, node, 'end');\r\n    }\r\n  }\r\n\r\n  atrule(node, semicolon) {\r\n    let name = '@' + node.name;\r\n    let params = node.params ? this.rawValue(node, 'params') : '';\r\n\r\n    if (typeof node.raws.afterName !== 'undefined') {\r\n      name += node.raws.afterName;\r\n    } else if (params) {\r\n      name += ' ';\r\n    }\r\n\r\n    if (node.nodes) {\r\n      this.block(node, name + params);\r\n    } else {\r\n      let end = (node.raws.between || '') + (semicolon ? ';' : '');\r\n      this.builder(name + params + end, node);\r\n    }\r\n  }\r\n\r\n  body(node) {\r\n    let last = node.nodes.length - 1;\r\n    while (last > 0) {\r\n      if (node.nodes[last].type !== 'comment') break\r\n      last -= 1;\r\n    }\r\n\r\n    let semicolon = this.raw(node, 'semicolon');\r\n    for (let i = 0; i < node.nodes.length; i++) {\r\n      let child = node.nodes[i];\r\n      let before = this.raw(child, 'before');\r\n      if (before) this.builder(before);\r\n      this.stringify(child, last !== i || semicolon);\r\n    }\r\n  }\r\n\r\n  block(node, start) {\r\n    let between = this.raw(node, 'between', 'beforeOpen');\r\n    this.builder(start + between + '{', node, 'start');\r\n\r\n    let after;\r\n    if (node.nodes && node.nodes.length) {\r\n      this.body(node);\r\n      after = this.raw(node, 'after');\r\n    } else {\r\n      after = this.raw(node, 'after', 'emptyBody');\r\n    }\r\n\r\n    if (after) this.builder(after);\r\n    this.builder('}', node, 'end');\r\n  }\r\n\r\n  raw(node, own, detect) {\r\n    let value;\r\n    if (!detect) detect = own;\r\n\r\n    // Already had\r\n    if (own) {\r\n      value = node.raws[own];\r\n      if (typeof value !== 'undefined') return value\r\n    }\r\n\r\n    let parent = node.parent;\r\n\r\n    if (detect === 'before') {\r\n      // Hack for first rule in CSS\r\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\r\n        return ''\r\n      }\r\n\r\n      // `root` nodes in `document` should use only their own raws\r\n      if (parent && parent.type === 'document') {\r\n        return ''\r\n      }\r\n    }\r\n\r\n    // Floating child without parent\r\n    if (!parent) return DEFAULT_RAW[detect]\r\n\r\n    // Detect style by other nodes\r\n    let root = node.root();\r\n    if (!root.rawCache) root.rawCache = {};\r\n    if (typeof root.rawCache[detect] !== 'undefined') {\r\n      return root.rawCache[detect]\r\n    }\r\n\r\n    if (detect === 'before' || detect === 'after') {\r\n      return this.beforeAfter(node, detect)\r\n    } else {\r\n      let method = 'raw' + capitalize$1(detect);\r\n      if (this[method]) {\r\n        value = this[method](root, node);\r\n      } else {\r\n        root.walk(i => {\r\n          value = i.raws[own];\r\n          if (typeof value !== 'undefined') return false\r\n        });\r\n      }\r\n    }\r\n\r\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\r\n\r\n    root.rawCache[detect] = value;\r\n    return value\r\n  }\r\n\r\n  rawSemicolon(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\r\n        value = i.raws.semicolon;\r\n        if (typeof value !== 'undefined') return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawEmptyBody(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && i.nodes.length === 0) {\r\n        value = i.raws.after;\r\n        if (typeof value !== 'undefined') return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawIndent(root) {\r\n    if (root.raws.indent) return root.raws.indent\r\n    let value;\r\n    root.walk(i => {\r\n      let p = i.parent;\r\n      if (p && p !== root && p.parent && p.parent === root) {\r\n        if (typeof i.raws.before !== 'undefined') {\r\n          let parts = i.raws.before.split('\\n');\r\n          value = parts[parts.length - 1];\r\n          value = value.replace(/\\S/g, '');\r\n          return false\r\n        }\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawBeforeComment(root, node) {\r\n    let value;\r\n    root.walkComments(i => {\r\n      if (typeof i.raws.before !== 'undefined') {\r\n        value = i.raws.before;\r\n        if (value.includes('\\n')) {\r\n          value = value.replace(/[^\\n]+$/, '');\r\n        }\r\n        return false\r\n      }\r\n    });\r\n    if (typeof value === 'undefined') {\r\n      value = this.raw(node, null, 'beforeDecl');\r\n    } else if (value) {\r\n      value = value.replace(/\\S/g, '');\r\n    }\r\n    return value\r\n  }\r\n\r\n  rawBeforeDecl(root, node) {\r\n    let value;\r\n    root.walkDecls(i => {\r\n      if (typeof i.raws.before !== 'undefined') {\r\n        value = i.raws.before;\r\n        if (value.includes('\\n')) {\r\n          value = value.replace(/[^\\n]+$/, '');\r\n        }\r\n        return false\r\n      }\r\n    });\r\n    if (typeof value === 'undefined') {\r\n      value = this.raw(node, null, 'beforeRule');\r\n    } else if (value) {\r\n      value = value.replace(/\\S/g, '');\r\n    }\r\n    return value\r\n  }\r\n\r\n  rawBeforeRule(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\r\n        if (typeof i.raws.before !== 'undefined') {\r\n          value = i.raws.before;\r\n          if (value.includes('\\n')) {\r\n            value = value.replace(/[^\\n]+$/, '');\r\n          }\r\n          return false\r\n        }\r\n      }\r\n    });\r\n    if (value) value = value.replace(/\\S/g, '');\r\n    return value\r\n  }\r\n\r\n  rawBeforeClose(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.nodes && i.nodes.length > 0) {\r\n        if (typeof i.raws.after !== 'undefined') {\r\n          value = i.raws.after;\r\n          if (value.includes('\\n')) {\r\n            value = value.replace(/[^\\n]+$/, '');\r\n          }\r\n          return false\r\n        }\r\n      }\r\n    });\r\n    if (value) value = value.replace(/\\S/g, '');\r\n    return value\r\n  }\r\n\r\n  rawBeforeOpen(root) {\r\n    let value;\r\n    root.walk(i => {\r\n      if (i.type !== 'decl') {\r\n        value = i.raws.between;\r\n        if (typeof value !== 'undefined') return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  rawColon(root) {\r\n    let value;\r\n    root.walkDecls(i => {\r\n      if (typeof i.raws.between !== 'undefined') {\r\n        value = i.raws.between.replace(/[^\\s:]/g, '');\r\n        return false\r\n      }\r\n    });\r\n    return value\r\n  }\r\n\r\n  beforeAfter(node, detect) {\r\n    let value;\r\n    if (node.type === 'decl') {\r\n      value = this.raw(node, null, 'beforeDecl');\r\n    } else if (node.type === 'comment') {\r\n      value = this.raw(node, null, 'beforeComment');\r\n    } else if (detect === 'before') {\r\n      value = this.raw(node, null, 'beforeRule');\r\n    } else {\r\n      value = this.raw(node, null, 'beforeClose');\r\n    }\r\n\r\n    let buf = node.parent;\r\n    let depth = 0;\r\n    while (buf && buf.type !== 'root') {\r\n      depth += 1;\r\n      buf = buf.parent;\r\n    }\r\n\r\n    if (value.includes('\\n')) {\r\n      let indent = this.raw(node, null, 'indent');\r\n      if (indent.length) {\r\n        for (let step = 0; step < depth; step++) value += indent;\r\n      }\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  rawValue(node, prop) {\r\n    let value = node[prop];\r\n    let raw = node.raws[prop];\r\n    if (raw && raw.value === value) {\r\n      return raw.raw\r\n    }\r\n\r\n    return value\r\n  }\r\n}\r\n\r\nvar stringifier = Stringifier;\r\nStringifier.default = Stringifier;\r\n\r\nfunction stringify$1(node, builder) {\r\n  let str = new stringifier(builder);\r\n  str.stringify(node);\r\n}\r\n\r\nvar stringify_1 = stringify$1;\r\nstringify$1.default = stringify$1;\r\n\r\nlet { isClean: isClean$1, my: my$1 } = symbols;\r\n\r\n\r\n\r\n\r\nfunction cloneNode(obj, parent) {\r\n  let cloned = new obj.constructor();\r\n\r\n  for (let i in obj) {\r\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\r\n      /* c8 ignore next 2 */\r\n      continue\r\n    }\r\n    if (i === 'proxyCache') continue\r\n    let value = obj[i];\r\n    let type = typeof value;\r\n\r\n    if (i === 'parent' && type === 'object') {\r\n      if (parent) cloned[i] = parent;\r\n    } else if (i === 'source') {\r\n      cloned[i] = value;\r\n    } else if (Array.isArray(value)) {\r\n      cloned[i] = value.map(j => cloneNode(j, cloned));\r\n    } else {\r\n      if (type === 'object' && value !== null) value = cloneNode(value);\r\n      cloned[i] = value;\r\n    }\r\n  }\r\n\r\n  return cloned\r\n}\r\n\r\nclass Node$1 {\r\n  constructor(defaults = {}) {\r\n    this.raws = {};\r\n    this[isClean$1] = false;\r\n    this[my$1] = true;\r\n\r\n    for (let name in defaults) {\r\n      if (name === 'nodes') {\r\n        this.nodes = [];\r\n        for (let node of defaults[name]) {\r\n          if (typeof node.clone === 'function') {\r\n            this.append(node.clone());\r\n          } else {\r\n            this.append(node);\r\n          }\r\n        }\r\n      } else {\r\n        this[name] = defaults[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  error(message, opts = {}) {\r\n    if (this.source) {\r\n      let { start, end } = this.rangeBy(opts);\r\n      return this.source.input.error(\r\n        message,\r\n        { line: start.line, column: start.column },\r\n        { line: end.line, column: end.column },\r\n        opts\r\n      )\r\n    }\r\n    return new cssSyntaxError(message)\r\n  }\r\n\r\n  warn(result, text, opts) {\r\n    let data = { node: this };\r\n    for (let i in opts) data[i] = opts[i];\r\n    return result.warn(text, data)\r\n  }\r\n\r\n  remove() {\r\n    if (this.parent) {\r\n      this.parent.removeChild(this);\r\n    }\r\n    this.parent = undefined;\r\n    return this\r\n  }\r\n\r\n  toString(stringifier = stringify_1) {\r\n    if (stringifier.stringify) stringifier = stringifier.stringify;\r\n    let result = '';\r\n    stringifier(this, i => {\r\n      result += i;\r\n    });\r\n    return result\r\n  }\r\n\r\n  assign(overrides = {}) {\r\n    for (let name in overrides) {\r\n      this[name] = overrides[name];\r\n    }\r\n    return this\r\n  }\r\n\r\n  clone(overrides = {}) {\r\n    let cloned = cloneNode(this);\r\n    for (let name in overrides) {\r\n      cloned[name] = overrides[name];\r\n    }\r\n    return cloned\r\n  }\r\n\r\n  cloneBefore(overrides = {}) {\r\n    let cloned = this.clone(overrides);\r\n    this.parent.insertBefore(this, cloned);\r\n    return cloned\r\n  }\r\n\r\n  cloneAfter(overrides = {}) {\r\n    let cloned = this.clone(overrides);\r\n    this.parent.insertAfter(this, cloned);\r\n    return cloned\r\n  }\r\n\r\n  replaceWith(...nodes) {\r\n    if (this.parent) {\r\n      let bookmark = this;\r\n      let foundSelf = false;\r\n      for (let node of nodes) {\r\n        if (node === this) {\r\n          foundSelf = true;\r\n        } else if (foundSelf) {\r\n          this.parent.insertAfter(bookmark, node);\r\n          bookmark = node;\r\n        } else {\r\n          this.parent.insertBefore(bookmark, node);\r\n        }\r\n      }\r\n\r\n      if (!foundSelf) {\r\n        this.remove();\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  next() {\r\n    if (!this.parent) return undefined\r\n    let index = this.parent.index(this);\r\n    return this.parent.nodes[index + 1]\r\n  }\r\n\r\n  prev() {\r\n    if (!this.parent) return undefined\r\n    let index = this.parent.index(this);\r\n    return this.parent.nodes[index - 1]\r\n  }\r\n\r\n  before(add) {\r\n    this.parent.insertBefore(this, add);\r\n    return this\r\n  }\r\n\r\n  after(add) {\r\n    this.parent.insertAfter(this, add);\r\n    return this\r\n  }\r\n\r\n  root() {\r\n    let result = this;\r\n    while (result.parent && result.parent.type !== 'document') {\r\n      result = result.parent;\r\n    }\r\n    return result\r\n  }\r\n\r\n  raw(prop, defaultType) {\r\n    let str = new stringifier();\r\n    return str.raw(this, prop, defaultType)\r\n  }\r\n\r\n  cleanRaws(keepBetween) {\r\n    delete this.raws.before;\r\n    delete this.raws.after;\r\n    if (!keepBetween) delete this.raws.between;\r\n  }\r\n\r\n  toJSON(_, inputs) {\r\n    let fixed = {};\r\n    let emitInputs = inputs == null;\r\n    inputs = inputs || new Map();\r\n    let inputsNextIndex = 0;\r\n\r\n    for (let name in this) {\r\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\r\n        /* c8 ignore next 2 */\r\n        continue\r\n      }\r\n      if (name === 'parent' || name === 'proxyCache') continue\r\n      let value = this[name];\r\n\r\n      if (Array.isArray(value)) {\r\n        fixed[name] = value.map(i => {\r\n          if (typeof i === 'object' && i.toJSON) {\r\n            return i.toJSON(null, inputs)\r\n          } else {\r\n            return i\r\n          }\r\n        });\r\n      } else if (typeof value === 'object' && value.toJSON) {\r\n        fixed[name] = value.toJSON(null, inputs);\r\n      } else if (name === 'source') {\r\n        let inputId = inputs.get(value.input);\r\n        if (inputId == null) {\r\n          inputId = inputsNextIndex;\r\n          inputs.set(value.input, inputsNextIndex);\r\n          inputsNextIndex++;\r\n        }\r\n        fixed[name] = {\r\n          inputId,\r\n          start: value.start,\r\n          end: value.end\r\n        };\r\n      } else {\r\n        fixed[name] = value;\r\n      }\r\n    }\r\n\r\n    if (emitInputs) {\r\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\r\n    }\r\n\r\n    return fixed\r\n  }\r\n\r\n  positionInside(index) {\r\n    let string = this.toString();\r\n    let column = this.source.start.column;\r\n    let line = this.source.start.line;\r\n\r\n    for (let i = 0; i < index; i++) {\r\n      if (string[i] === '\\n') {\r\n        column = 1;\r\n        line += 1;\r\n      } else {\r\n        column += 1;\r\n      }\r\n    }\r\n\r\n    return { line, column }\r\n  }\r\n\r\n  positionBy(opts) {\r\n    let pos = this.source.start;\r\n    if (opts.index) {\r\n      pos = this.positionInside(opts.index);\r\n    } else if (opts.word) {\r\n      let index = this.toString().indexOf(opts.word);\r\n      if (index !== -1) pos = this.positionInside(index);\r\n    }\r\n    return pos\r\n  }\r\n\r\n  rangeBy(opts) {\r\n    let start = {\r\n      line: this.source.start.line,\r\n      column: this.source.start.column\r\n    };\r\n    let end = this.source.end\r\n      ? {\r\n          line: this.source.end.line,\r\n          column: this.source.end.column + 1\r\n        }\r\n      : {\r\n          line: start.line,\r\n          column: start.column + 1\r\n        };\r\n\r\n    if (opts.word) {\r\n      let index = this.toString().indexOf(opts.word);\r\n      if (index !== -1) {\r\n        start = this.positionInside(index);\r\n        end = this.positionInside(index + opts.word.length);\r\n      }\r\n    } else {\r\n      if (opts.start) {\r\n        start = {\r\n          line: opts.start.line,\r\n          column: opts.start.column\r\n        };\r\n      } else if (opts.index) {\r\n        start = this.positionInside(opts.index);\r\n      }\r\n\r\n      if (opts.end) {\r\n        end = {\r\n          line: opts.end.line,\r\n          column: opts.end.column\r\n        };\r\n      } else if (opts.endIndex) {\r\n        end = this.positionInside(opts.endIndex);\r\n      } else if (opts.index) {\r\n        end = this.positionInside(opts.index + 1);\r\n      }\r\n    }\r\n\r\n    if (\r\n      end.line < start.line ||\r\n      (end.line === start.line && end.column <= start.column)\r\n    ) {\r\n      end = { line: start.line, column: start.column + 1 };\r\n    }\r\n\r\n    return { start, end }\r\n  }\r\n\r\n  getProxyProcessor() {\r\n    return {\r\n      set(node, prop, value) {\r\n        if (node[prop] === value) return true\r\n        node[prop] = value;\r\n        if (\r\n          prop === 'prop' ||\r\n          prop === 'value' ||\r\n          prop === 'name' ||\r\n          prop === 'params' ||\r\n          prop === 'important' ||\r\n          /* c8 ignore next */\r\n          prop === 'text'\r\n        ) {\r\n          node.markDirty();\r\n        }\r\n        return true\r\n      },\r\n\r\n      get(node, prop) {\r\n        if (prop === 'proxyOf') {\r\n          return node\r\n        } else if (prop === 'root') {\r\n          return () => node.root().toProxy()\r\n        } else {\r\n          return node[prop]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toProxy() {\r\n    if (!this.proxyCache) {\r\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\r\n    }\r\n    return this.proxyCache\r\n  }\r\n\r\n  addToError(error) {\r\n    error.postcssNode = this;\r\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\r\n      let s = this.source;\r\n      error.stack = error.stack.replace(\r\n        /\\n\\s{4}at /,\r\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\r\n      );\r\n    }\r\n    return error\r\n  }\r\n\r\n  markDirty() {\r\n    if (this[isClean$1]) {\r\n      this[isClean$1] = false;\r\n      let next = this;\r\n      while ((next = next.parent)) {\r\n        next[isClean$1] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  get proxyOf() {\r\n    return this\r\n  }\r\n}\r\n\r\nvar node_1 = Node$1;\r\nNode$1.default = Node$1;\r\n\r\nclass Declaration extends node_1 {\r\n  constructor(defaults) {\r\n    if (\r\n      defaults &&\r\n      typeof defaults.value !== 'undefined' &&\r\n      typeof defaults.value !== 'string'\r\n    ) {\r\n      defaults = { ...defaults, value: String(defaults.value) };\r\n    }\r\n    super(defaults);\r\n    this.type = 'decl';\r\n  }\r\n\r\n  get variable() {\r\n    return this.prop.startsWith('--') || this.prop[0] === '$'\r\n  }\r\n}\r\n\r\nvar declaration = Declaration;\r\nDeclaration.default = Declaration;\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar intToCharMap$1 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\r\n\r\n/**\r\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\r\n */\r\nvar encode$4 = function (number) {\r\n  if (0 <= number && number < intToCharMap$1.length) {\r\n    return intToCharMap$1[number];\r\n  }\r\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\r\n};\r\n\r\n/**\r\n * Decode a single base 64 character code digit to an integer. Returns -1 on\r\n * failure.\r\n */\r\nvar decode$2 = function (charCode) {\r\n  var bigA = 65;     // 'A'\r\n  var bigZ = 90;     // 'Z'\r\n\r\n  var littleA = 97;  // 'a'\r\n  var littleZ = 122; // 'z'\r\n\r\n  var zero = 48;     // '0'\r\n  var nine = 57;     // '9'\r\n\r\n  var plus = 43;     // '+'\r\n  var slash = 47;    // '/'\r\n\r\n  var littleOffset = 26;\r\n  var numberOffset = 52;\r\n\r\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n  if (bigA <= charCode && charCode <= bigZ) {\r\n    return (charCode - bigA);\r\n  }\r\n\r\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\r\n  if (littleA <= charCode && charCode <= littleZ) {\r\n    return (charCode - littleA + littleOffset);\r\n  }\r\n\r\n  // 52 - 61: 0123456789\r\n  if (zero <= charCode && charCode <= nine) {\r\n    return (charCode - zero + numberOffset);\r\n  }\r\n\r\n  // 62: +\r\n  if (charCode == plus) {\r\n    return 62;\r\n  }\r\n\r\n  // 63: /\r\n  if (charCode == slash) {\r\n    return 63;\r\n  }\r\n\r\n  // Invalid base64 digit.\r\n  return -1;\r\n};\r\n\r\nvar base64$1 = {\r\n\tencode: encode$4,\r\n\tdecode: decode$2\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n * Based on the Base 64 VLQ implementation in Closure Compiler:\r\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\r\n *\r\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *  * Neither the name of Google Inc. nor the names of its\r\n *    contributors may be used to endorse or promote products derived\r\n *    from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\n\r\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\r\n// length quantities we use in the source map spec, the first bit is the sign,\r\n// the next four bits are the actual value, and the 6th bit is the\r\n// continuation bit. The continuation bit tells us whether there are more\r\n// digits in this value following this digit.\r\n//\r\n//   Continuation\r\n//   |    Sign\r\n//   |    |\r\n//   V    V\r\n//   101011\r\n\r\nvar VLQ_BASE_SHIFT$1 = 5;\r\n\r\n// binary: 100000\r\nvar VLQ_BASE$1 = 1 << VLQ_BASE_SHIFT$1;\r\n\r\n// binary: 011111\r\nvar VLQ_BASE_MASK$1 = VLQ_BASE$1 - 1;\r\n\r\n// binary: 100000\r\nvar VLQ_CONTINUATION_BIT$1 = VLQ_BASE$1;\r\n\r\n/**\r\n * Converts from a two-complement value to a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\r\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\r\n */\r\nfunction toVLQSigned$1(aValue) {\r\n  return aValue < 0\r\n    ? ((-aValue) << 1) + 1\r\n    : (aValue << 1) + 0;\r\n}\r\n\r\n/**\r\n * Converts to a two-complement value from a value where the sign bit is\r\n * placed in the least significant bit.  For example, as decimals:\r\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\r\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\r\n */\r\nfunction fromVLQSigned$1(aValue) {\r\n  var isNegative = (aValue & 1) === 1;\r\n  var shifted = aValue >> 1;\r\n  return isNegative\r\n    ? -shifted\r\n    : shifted;\r\n}\r\n\r\n/**\r\n * Returns the base 64 VLQ encoded value.\r\n */\r\nvar encode$5 = function base64VLQ_encode(aValue) {\r\n  var encoded = \"\";\r\n  var digit;\r\n\r\n  var vlq = toVLQSigned$1(aValue);\r\n\r\n  do {\r\n    digit = vlq & VLQ_BASE_MASK$1;\r\n    vlq >>>= VLQ_BASE_SHIFT$1;\r\n    if (vlq > 0) {\r\n      // There are still more digits in this value, so we must make sure the\r\n      // continuation bit is marked.\r\n      digit |= VLQ_CONTINUATION_BIT$1;\r\n    }\r\n    encoded += base64$1.encode(digit);\r\n  } while (vlq > 0);\r\n\r\n  return encoded;\r\n};\r\n\r\n/**\r\n * Decodes the next base 64 VLQ value from the given string and returns the\r\n * value and the rest of the string via the out parameter.\r\n */\r\nvar decode$3 = function base64VLQ_decode(aStr, aIndex, aOutParam) {\r\n  var strLen = aStr.length;\r\n  var result = 0;\r\n  var shift = 0;\r\n  var continuation, digit;\r\n\r\n  do {\r\n    if (aIndex >= strLen) {\r\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\r\n    }\r\n\r\n    digit = base64$1.decode(aStr.charCodeAt(aIndex++));\r\n    if (digit === -1) {\r\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\r\n    }\r\n\r\n    continuation = !!(digit & VLQ_CONTINUATION_BIT$1);\r\n    digit &= VLQ_BASE_MASK$1;\r\n    result = result + (digit << shift);\r\n    shift += VLQ_BASE_SHIFT$1;\r\n  } while (continuation);\r\n\r\n  aOutParam.value = fromVLQSigned$1(result);\r\n  aOutParam.rest = aIndex;\r\n};\r\n\r\nvar base64Vlq$1 = {\r\n\tencode: encode$5,\r\n\tdecode: decode$3\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\nvar util$1 = createCommonjsModule(function (module, exports) {\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n/**\r\n * This is a helper function for getting values from parameter/options\r\n * objects.\r\n *\r\n * @param args The object we are extracting values from\r\n * @param name The name of the property we are getting.\r\n * @param defaultValue An optional value to return if the property is missing\r\n * from the object. If this is not specified and the property is missing, an\r\n * error will be thrown.\r\n */\r\nfunction getArg(aArgs, aName, aDefaultValue) {\r\n  if (aName in aArgs) {\r\n    return aArgs[aName];\r\n  } else if (arguments.length === 3) {\r\n    return aDefaultValue;\r\n  } else {\r\n    throw new Error('\"' + aName + '\" is a required argument.');\r\n  }\r\n}\r\nexports.getArg = getArg;\r\n\r\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\r\nvar dataUrlRegexp = /^data:.+\\,.+$/;\r\n\r\nfunction urlParse(aUrl) {\r\n  var match = aUrl.match(urlRegexp);\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  return {\r\n    scheme: match[1],\r\n    auth: match[2],\r\n    host: match[3],\r\n    port: match[4],\r\n    path: match[5]\r\n  };\r\n}\r\nexports.urlParse = urlParse;\r\n\r\nfunction urlGenerate(aParsedUrl) {\r\n  var url = '';\r\n  if (aParsedUrl.scheme) {\r\n    url += aParsedUrl.scheme + ':';\r\n  }\r\n  url += '//';\r\n  if (aParsedUrl.auth) {\r\n    url += aParsedUrl.auth + '@';\r\n  }\r\n  if (aParsedUrl.host) {\r\n    url += aParsedUrl.host;\r\n  }\r\n  if (aParsedUrl.port) {\r\n    url += \":\" + aParsedUrl.port;\r\n  }\r\n  if (aParsedUrl.path) {\r\n    url += aParsedUrl.path;\r\n  }\r\n  return url;\r\n}\r\nexports.urlGenerate = urlGenerate;\r\n\r\nvar MAX_CACHED_INPUTS = 32;\r\n\r\n/**\r\n * Takes some function `f(input) -> result` and returns a memoized version of\r\n * `f`.\r\n *\r\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\r\n * memoization is a dumb-simple, linear least-recently-used cache.\r\n */\r\nfunction lruMemoize(f) {\r\n  var cache = [];\r\n\r\n  return function(input) {\r\n    for (var i = 0; i < cache.length; i++) {\r\n      if (cache[i].input === input) {\r\n        var temp = cache[0];\r\n        cache[0] = cache[i];\r\n        cache[i] = temp;\r\n        return cache[0].result;\r\n      }\r\n    }\r\n\r\n    var result = f(input);\r\n\r\n    cache.unshift({\r\n      input,\r\n      result,\r\n    });\r\n\r\n    if (cache.length > MAX_CACHED_INPUTS) {\r\n      cache.pop();\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Normalizes a path, or the path portion of a URL:\r\n *\r\n * - Replaces consecutive slashes with one slash.\r\n * - Removes unnecessary '.' parts.\r\n * - Removes unnecessary '<dir>/..' parts.\r\n *\r\n * Based on code in the Node.js 'path' core module.\r\n *\r\n * @param aPath The path or url to normalize.\r\n */\r\nvar normalize = lruMemoize(function normalize(aPath) {\r\n  var path = aPath;\r\n  var url = urlParse(aPath);\r\n  if (url) {\r\n    if (!url.path) {\r\n      return aPath;\r\n    }\r\n    path = url.path;\r\n  }\r\n  var isAbsolute = exports.isAbsolute(path);\r\n  // Split the path into parts between `/` characters. This is much faster than\r\n  // using `.split(/\\/+/g)`.\r\n  var parts = [];\r\n  var start = 0;\r\n  var i = 0;\r\n  while (true) {\r\n    start = i;\r\n    i = path.indexOf(\"/\", start);\r\n    if (i === -1) {\r\n      parts.push(path.slice(start));\r\n      break;\r\n    } else {\r\n      parts.push(path.slice(start, i));\r\n      while (i < path.length && path[i] === \"/\") {\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n\r\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\r\n    part = parts[i];\r\n    if (part === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (part === '..') {\r\n      up++;\r\n    } else if (up > 0) {\r\n      if (part === '') {\r\n        // The first part is blank if the path is absolute. Trying to go\r\n        // above the root is a no-op. Therefore we can remove all '..' parts\r\n        // directly after the root.\r\n        parts.splice(i + 1, up);\r\n        up = 0;\r\n      } else {\r\n        parts.splice(i, 2);\r\n        up--;\r\n      }\r\n    }\r\n  }\r\n  path = parts.join('/');\r\n\r\n  if (path === '') {\r\n    path = isAbsolute ? '/' : '.';\r\n  }\r\n\r\n  if (url) {\r\n    url.path = path;\r\n    return urlGenerate(url);\r\n  }\r\n  return path;\r\n});\r\nexports.normalize = normalize;\r\n\r\n/**\r\n * Joins two paths/URLs.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be joined with the root.\r\n *\r\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\r\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\r\n *   first.\r\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\r\n *   is updated with the result and aRoot is returned. Otherwise the result\r\n *   is returned.\r\n *   - If aPath is absolute, the result is aPath.\r\n *   - Otherwise the two paths are joined with a slash.\r\n * - Joining for example 'http://' and 'www.example.com' is also supported.\r\n */\r\nfunction join(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n  if (aPath === \"\") {\r\n    aPath = \".\";\r\n  }\r\n  var aPathUrl = urlParse(aPath);\r\n  var aRootUrl = urlParse(aRoot);\r\n  if (aRootUrl) {\r\n    aRoot = aRootUrl.path || '/';\r\n  }\r\n\r\n  // `join(foo, '//www.example.org')`\r\n  if (aPathUrl && !aPathUrl.scheme) {\r\n    if (aRootUrl) {\r\n      aPathUrl.scheme = aRootUrl.scheme;\r\n    }\r\n    return urlGenerate(aPathUrl);\r\n  }\r\n\r\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\r\n    return aPath;\r\n  }\r\n\r\n  // `join('http://', 'www.example.com')`\r\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\r\n    aRootUrl.host = aPath;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n\r\n  var joined = aPath.charAt(0) === '/'\r\n    ? aPath\r\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\r\n\r\n  if (aRootUrl) {\r\n    aRootUrl.path = joined;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n  return joined;\r\n}\r\nexports.join = join;\r\n\r\nexports.isAbsolute = function (aPath) {\r\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\r\n};\r\n\r\n/**\r\n * Make a path relative to a URL or another path.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be made relative to aRoot.\r\n */\r\nfunction relative(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n\r\n  aRoot = aRoot.replace(/\\/$/, '');\r\n\r\n  // It is possible for the path to be above the root. In this case, simply\r\n  // checking whether the root is a prefix of the path won't work. Instead, we\r\n  // need to remove components from the root one by one, until either we find\r\n  // a prefix that fits, or we run out of components to remove.\r\n  var level = 0;\r\n  while (aPath.indexOf(aRoot + '/') !== 0) {\r\n    var index = aRoot.lastIndexOf(\"/\");\r\n    if (index < 0) {\r\n      return aPath;\r\n    }\r\n\r\n    // If the only part of the root that is left is the scheme (i.e. http://,\r\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\r\n    // have exhausted all components, so the path is not relative to the root.\r\n    aRoot = aRoot.slice(0, index);\r\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\r\n      return aPath;\r\n    }\r\n\r\n    ++level;\r\n  }\r\n\r\n  // Make sure we add a \"../\" for each component we removed from the root.\r\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\r\n}\r\nexports.relative = relative;\r\n\r\nvar supportsNullProto = (function () {\r\n  var obj = Object.create(null);\r\n  return !('__proto__' in obj);\r\n}());\r\n\r\nfunction identity (s) {\r\n  return s;\r\n}\r\n\r\n/**\r\n * Because behavior goes wacky when you set `__proto__` on objects, we\r\n * have to prefix all the strings in our set with an arbitrary character.\r\n *\r\n * See https://github.com/mozilla/source-map/pull/31 and\r\n * https://github.com/mozilla/source-map/issues/30\r\n *\r\n * @param String aStr\r\n */\r\nfunction toSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return '$' + aStr;\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.toSetString = supportsNullProto ? identity : toSetString;\r\n\r\nfunction fromSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return aStr.slice(1);\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\r\n\r\nfunction isProtoString(s) {\r\n  if (!s) {\r\n    return false;\r\n  }\r\n\r\n  var length = s.length;\r\n\r\n  if (length < 9 /* \"__proto__\".length */) {\r\n    return false;\r\n  }\r\n\r\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\r\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\r\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\r\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = length - 10; i >= 0; i--) {\r\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings where the original positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same original source/line/column, but different generated\r\n * line and column the same. Useful when searching for a mapping with a\r\n * stubbed out mapping.\r\n */\r\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\r\n  var cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0 || onlyCompareOriginal) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByOriginalPositions = compareByOriginalPositions;\r\n\r\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\r\n  var cmp;\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0 || onlyCompareOriginal) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\r\n\r\n/**\r\n * Comparator between two mappings with deflated source and name indices where\r\n * the generated positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same generated line and column, but different\r\n * source/name/original line and column the same. Useful when searching for a\r\n * mapping with a stubbed out mapping.\r\n */\r\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0 || onlyCompareGenerated) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\r\n\r\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\r\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0 || onlyCompareGenerated) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\r\n\r\nfunction strcmp(aStr1, aStr2) {\r\n  if (aStr1 === aStr2) {\r\n    return 0;\r\n  }\r\n\r\n  if (aStr1 === null) {\r\n    return 1; // aStr2 !== null\r\n  }\r\n\r\n  if (aStr2 === null) {\r\n    return -1; // aStr1 !== null\r\n  }\r\n\r\n  if (aStr1 > aStr2) {\r\n    return 1;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings with inflated source and name strings where\r\n * the generated positions are compared.\r\n */\r\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\r\n\r\n/**\r\n * Strip any JSON XSSI avoidance prefix from the string (as documented\r\n * in the source maps specification), and then parse the string as\r\n * JSON.\r\n */\r\nfunction parseSourceMapInput(str) {\r\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\r\n}\r\nexports.parseSourceMapInput = parseSourceMapInput;\r\n\r\n/**\r\n * Compute the URL of a source given the the source root, the source's\r\n * URL, and the source map's URL.\r\n */\r\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\r\n  sourceURL = sourceURL || '';\r\n\r\n  if (sourceRoot) {\r\n    // This follows what Chrome does.\r\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\r\n      sourceRoot += '/';\r\n    }\r\n    // The spec says:\r\n    //   Line 4: An optional source root, useful for relocating source\r\n    //   files on a server or removing repeated values in the\r\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\r\n    //   entries in the \u201Csource\u201D field.\r\n    sourceURL = sourceRoot + sourceURL;\r\n  }\r\n\r\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\r\n  // a parameter.  This mode is still somewhat supported, which is why\r\n  // this code block is conditional.  However, it's preferable to pass\r\n  // the source map URL to SourceMapConsumer, so that this function\r\n  // can implement the source URL resolution algorithm as outlined in\r\n  // the spec.  This block is basically the equivalent of:\r\n  //    new URL(sourceURL, sourceMapURL).toString()\r\n  // ... except it avoids using URL, which wasn't available in the\r\n  // older releases of node still supported by this library.\r\n  //\r\n  // The spec says:\r\n  //   If the sources are not absolute URLs after prepending of the\r\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\r\n  //   SourceMap (like resolving script src in a html document).\r\n  if (sourceMapURL) {\r\n    var parsed = urlParse(sourceMapURL);\r\n    if (!parsed) {\r\n      throw new Error(\"sourceMapURL could not be parsed\");\r\n    }\r\n    if (parsed.path) {\r\n      // Strip the last path component, but keep the \"/\".\r\n      var index = parsed.path.lastIndexOf('/');\r\n      if (index >= 0) {\r\n        parsed.path = parsed.path.substring(0, index + 1);\r\n      }\r\n    }\r\n    sourceURL = join(urlGenerate(parsed), sourceURL);\r\n  }\r\n\r\n  return normalize(sourceURL);\r\n}\r\nexports.computeSourceURL = computeSourceURL;\r\n});\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\nvar has$1 = Object.prototype.hasOwnProperty;\r\nvar hasNativeMap$1 = typeof Map !== \"undefined\";\r\n\r\n/**\r\n * A data structure which is a combination of an array and a set. Adding a new\r\n * member is O(1), testing for membership is O(1), and finding the index of an\r\n * element is O(1). Removing elements from the set is not supported. Only\r\n * strings are supported for membership.\r\n */\r\nfunction ArraySet$3() {\r\n  this._array = [];\r\n  this._set = hasNativeMap$1 ? new Map() : Object.create(null);\r\n}\r\n\r\n/**\r\n * Static method for creating ArraySet instances from an existing array.\r\n */\r\nArraySet$3.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\r\n  var set = new ArraySet$3();\r\n  for (var i = 0, len = aArray.length; i < len; i++) {\r\n    set.add(aArray[i], aAllowDuplicates);\r\n  }\r\n  return set;\r\n};\r\n\r\n/**\r\n * Return how many unique items are in this ArraySet. If duplicates have been\r\n * added, than those do not count towards the size.\r\n *\r\n * @returns Number\r\n */\r\nArraySet$3.prototype.size = function ArraySet_size() {\r\n  return hasNativeMap$1 ? this._set.size : Object.getOwnPropertyNames(this._set).length;\r\n};\r\n\r\n/**\r\n * Add the given string to this set.\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$3.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\r\n  var sStr = hasNativeMap$1 ? aStr : util$1.toSetString(aStr);\r\n  var isDuplicate = hasNativeMap$1 ? this.has(aStr) : has$1.call(this._set, sStr);\r\n  var idx = this._array.length;\r\n  if (!isDuplicate || aAllowDuplicates) {\r\n    this._array.push(aStr);\r\n  }\r\n  if (!isDuplicate) {\r\n    if (hasNativeMap$1) {\r\n      this._set.set(aStr, idx);\r\n    } else {\r\n      this._set[sStr] = idx;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Is the given string a member of this set?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$3.prototype.has = function ArraySet_has(aStr) {\r\n  if (hasNativeMap$1) {\r\n    return this._set.has(aStr);\r\n  } else {\r\n    var sStr = util$1.toSetString(aStr);\r\n    return has$1.call(this._set, sStr);\r\n  }\r\n};\r\n\r\n/**\r\n * What is the index of the given string in the array?\r\n *\r\n * @param String aStr\r\n */\r\nArraySet$3.prototype.indexOf = function ArraySet_indexOf(aStr) {\r\n  if (hasNativeMap$1) {\r\n    var idx = this._set.get(aStr);\r\n    if (idx >= 0) {\r\n        return idx;\r\n    }\r\n  } else {\r\n    var sStr = util$1.toSetString(aStr);\r\n    if (has$1.call(this._set, sStr)) {\r\n      return this._set[sStr];\r\n    }\r\n  }\r\n\r\n  throw new Error('\"' + aStr + '\" is not in the set.');\r\n};\r\n\r\n/**\r\n * What is the element at the given index?\r\n *\r\n * @param Number aIdx\r\n */\r\nArraySet$3.prototype.at = function ArraySet_at(aIdx) {\r\n  if (aIdx >= 0 && aIdx < this._array.length) {\r\n    return this._array[aIdx];\r\n  }\r\n  throw new Error('No element indexed by ' + aIdx);\r\n};\r\n\r\n/**\r\n * Returns the array representation of this set (which has the proper indices\r\n * indicated by indexOf). Note that this is a copy of the internal array used\r\n * for storing the members so that no one can mess with internal state.\r\n */\r\nArraySet$3.prototype.toArray = function ArraySet_toArray() {\r\n  return this._array.slice();\r\n};\r\n\r\nvar ArraySet_1$1 = ArraySet$3;\r\n\r\nvar arraySet$1 = {\r\n\tArraySet: ArraySet_1$1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\n\r\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\r\nfunction generatedPositionAfter$1(mappingA, mappingB) {\r\n  // Optimized for most common case\r\n  var lineA = mappingA.generatedLine;\r\n  var lineB = mappingB.generatedLine;\r\n  var columnA = mappingA.generatedColumn;\r\n  var columnB = mappingB.generatedColumn;\r\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\r\n         util$1.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\r\n}\r\n\r\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\r\nfunction MappingList$2() {\r\n  this._array = [];\r\n  this._sorted = true;\r\n  // Serves as infimum\r\n  this._last = {generatedLine: -1, generatedColumn: 0};\r\n}\r\n\r\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\r\nMappingList$2.prototype.unsortedForEach =\r\n  function MappingList_forEach(aCallback, aThisArg) {\r\n    this._array.forEach(aCallback, aThisArg);\r\n  };\r\n\r\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\r\nMappingList$2.prototype.add = function MappingList_add(aMapping) {\r\n  if (generatedPositionAfter$1(this._last, aMapping)) {\r\n    this._last = aMapping;\r\n    this._array.push(aMapping);\r\n  } else {\r\n    this._sorted = false;\r\n    this._array.push(aMapping);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\r\nMappingList$2.prototype.toArray = function MappingList_toArray() {\r\n  if (!this._sorted) {\r\n    this._array.sort(util$1.compareByGeneratedPositionsInflated);\r\n    this._sorted = true;\r\n  }\r\n  return this._array;\r\n};\r\n\r\nvar MappingList_1$1 = MappingList$2;\r\n\r\nvar mappingList$1 = {\r\n\tMappingList: MappingList_1$1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\n\r\nvar ArraySet$4 = arraySet$1.ArraySet;\r\nvar MappingList$3 = mappingList$1.MappingList;\r\n\r\n/**\r\n * An instance of the SourceMapGenerator represents a source map which is\r\n * being built incrementally. You may pass an object with the following\r\n * properties:\r\n *\r\n *   - file: The filename of the generated source.\r\n *   - sourceRoot: A root for all relative URLs in this source map.\r\n */\r\nfunction SourceMapGenerator$3(aArgs) {\r\n  if (!aArgs) {\r\n    aArgs = {};\r\n  }\r\n  this._file = util$1.getArg(aArgs, 'file', null);\r\n  this._sourceRoot = util$1.getArg(aArgs, 'sourceRoot', null);\r\n  this._skipValidation = util$1.getArg(aArgs, 'skipValidation', false);\r\n  this._sources = new ArraySet$4();\r\n  this._names = new ArraySet$4();\r\n  this._mappings = new MappingList$3();\r\n  this._sourcesContents = null;\r\n}\r\n\r\nSourceMapGenerator$3.prototype._version = 3;\r\n\r\n/**\r\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\r\n *\r\n * @param aSourceMapConsumer The SourceMap.\r\n */\r\nSourceMapGenerator$3.fromSourceMap =\r\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\r\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\r\n    var generator = new SourceMapGenerator$3({\r\n      file: aSourceMapConsumer.file,\r\n      sourceRoot: sourceRoot\r\n    });\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      var newMapping = {\r\n        generated: {\r\n          line: mapping.generatedLine,\r\n          column: mapping.generatedColumn\r\n        }\r\n      };\r\n\r\n      if (mapping.source != null) {\r\n        newMapping.source = mapping.source;\r\n        if (sourceRoot != null) {\r\n          newMapping.source = util$1.relative(sourceRoot, newMapping.source);\r\n        }\r\n\r\n        newMapping.original = {\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        };\r\n\r\n        if (mapping.name != null) {\r\n          newMapping.name = mapping.name;\r\n        }\r\n      }\r\n\r\n      generator.addMapping(newMapping);\r\n    });\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var sourceRelative = sourceFile;\r\n      if (sourceRoot !== null) {\r\n        sourceRelative = util$1.relative(sourceRoot, sourceFile);\r\n      }\r\n\r\n      if (!generator._sources.has(sourceRelative)) {\r\n        generator._sources.add(sourceRelative);\r\n      }\r\n\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        generator.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n    return generator;\r\n  };\r\n\r\n/**\r\n * Add a single mapping from original source line and column to the generated\r\n * source's line and column for this source map being created. The mapping\r\n * object should have the following properties:\r\n *\r\n *   - generated: An object with the generated line and column positions.\r\n *   - original: An object with the original line and column positions.\r\n *   - source: The original source file (relative to the sourceRoot).\r\n *   - name: An optional original token name for this mapping.\r\n */\r\nSourceMapGenerator$3.prototype.addMapping =\r\n  function SourceMapGenerator_addMapping(aArgs) {\r\n    var generated = util$1.getArg(aArgs, 'generated');\r\n    var original = util$1.getArg(aArgs, 'original', null);\r\n    var source = util$1.getArg(aArgs, 'source', null);\r\n    var name = util$1.getArg(aArgs, 'name', null);\r\n\r\n    if (!this._skipValidation) {\r\n      this._validateMapping(generated, original, source, name);\r\n    }\r\n\r\n    if (source != null) {\r\n      source = String(source);\r\n      if (!this._sources.has(source)) {\r\n        this._sources.add(source);\r\n      }\r\n    }\r\n\r\n    if (name != null) {\r\n      name = String(name);\r\n      if (!this._names.has(name)) {\r\n        this._names.add(name);\r\n      }\r\n    }\r\n\r\n    this._mappings.add({\r\n      generatedLine: generated.line,\r\n      generatedColumn: generated.column,\r\n      originalLine: original != null && original.line,\r\n      originalColumn: original != null && original.column,\r\n      source: source,\r\n      name: name\r\n    });\r\n  };\r\n\r\n/**\r\n * Set the source content for a source file.\r\n */\r\nSourceMapGenerator$3.prototype.setSourceContent =\r\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\r\n    var source = aSourceFile;\r\n    if (this._sourceRoot != null) {\r\n      source = util$1.relative(this._sourceRoot, source);\r\n    }\r\n\r\n    if (aSourceContent != null) {\r\n      // Add the source content to the _sourcesContents map.\r\n      // Create a new _sourcesContents map if the property is null.\r\n      if (!this._sourcesContents) {\r\n        this._sourcesContents = Object.create(null);\r\n      }\r\n      this._sourcesContents[util$1.toSetString(source)] = aSourceContent;\r\n    } else if (this._sourcesContents) {\r\n      // Remove the source file from the _sourcesContents map.\r\n      // If the _sourcesContents map is empty, set the property to null.\r\n      delete this._sourcesContents[util$1.toSetString(source)];\r\n      if (Object.keys(this._sourcesContents).length === 0) {\r\n        this._sourcesContents = null;\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Applies the mappings of a sub-source-map for a specific source file to the\r\n * source map being generated. Each mapping to the supplied source file is\r\n * rewritten using the supplied source map. Note: The resolution for the\r\n * resulting mappings is the minimium of this map and the supplied map.\r\n *\r\n * @param aSourceMapConsumer The source map to be applied.\r\n * @param aSourceFile Optional. The filename of the source file.\r\n *        If omitted, SourceMapConsumer's file property will be used.\r\n * @param aSourceMapPath Optional. The dirname of the path to the source map\r\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\r\n *        This parameter is needed when the two source maps aren't in the same\r\n *        directory, and the source map to be applied contains relative source\r\n *        paths. If so, those relative source paths need to be rewritten\r\n *        relative to the SourceMapGenerator.\r\n */\r\nSourceMapGenerator$3.prototype.applySourceMap =\r\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\r\n    var sourceFile = aSourceFile;\r\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\r\n    if (aSourceFile == null) {\r\n      if (aSourceMapConsumer.file == null) {\r\n        throw new Error(\r\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\r\n          'or the source map\\'s \"file\" property. Both were omitted.'\r\n        );\r\n      }\r\n      sourceFile = aSourceMapConsumer.file;\r\n    }\r\n    var sourceRoot = this._sourceRoot;\r\n    // Make \"sourceFile\" relative if an absolute Url is passed.\r\n    if (sourceRoot != null) {\r\n      sourceFile = util$1.relative(sourceRoot, sourceFile);\r\n    }\r\n    // Applying the SourceMap can add and remove items from the sources and\r\n    // the names array.\r\n    var newSources = new ArraySet$4();\r\n    var newNames = new ArraySet$4();\r\n\r\n    // Find mappings for the \"sourceFile\"\r\n    this._mappings.unsortedForEach(function (mapping) {\r\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\r\n        // Check if it can be mapped by the source map, then update the mapping.\r\n        var original = aSourceMapConsumer.originalPositionFor({\r\n          line: mapping.originalLine,\r\n          column: mapping.originalColumn\r\n        });\r\n        if (original.source != null) {\r\n          // Copy mapping\r\n          mapping.source = original.source;\r\n          if (aSourceMapPath != null) {\r\n            mapping.source = util$1.join(aSourceMapPath, mapping.source);\r\n          }\r\n          if (sourceRoot != null) {\r\n            mapping.source = util$1.relative(sourceRoot, mapping.source);\r\n          }\r\n          mapping.originalLine = original.line;\r\n          mapping.originalColumn = original.column;\r\n          if (original.name != null) {\r\n            mapping.name = original.name;\r\n          }\r\n        }\r\n      }\r\n\r\n      var source = mapping.source;\r\n      if (source != null && !newSources.has(source)) {\r\n        newSources.add(source);\r\n      }\r\n\r\n      var name = mapping.name;\r\n      if (name != null && !newNames.has(name)) {\r\n        newNames.add(name);\r\n      }\r\n\r\n    }, this);\r\n    this._sources = newSources;\r\n    this._names = newNames;\r\n\r\n    // Copy sourcesContents of applied map.\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aSourceMapPath != null) {\r\n          sourceFile = util$1.join(aSourceMapPath, sourceFile);\r\n        }\r\n        if (sourceRoot != null) {\r\n          sourceFile = util$1.relative(sourceRoot, sourceFile);\r\n        }\r\n        this.setSourceContent(sourceFile, content);\r\n      }\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * A mapping can have one of the three levels of data:\r\n *\r\n *   1. Just the generated position.\r\n *   2. The Generated position, original position, and original source.\r\n *   3. Generated and original position, original source, as well as a name\r\n *      token.\r\n *\r\n * To maintain consistency, we validate that any new mapping being added falls\r\n * in to one of these categories.\r\n */\r\nSourceMapGenerator$3.prototype._validateMapping =\r\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\r\n                                              aName) {\r\n    // When aOriginal is truthy but has empty values for .line and .column,\r\n    // it is most likely a programmer error. In this case we throw a very\r\n    // specific error message to try to guide them the right way.\r\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\r\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\r\n        throw new Error(\r\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\r\n            'the original mapping entirely and only map the generated position. If so, pass ' +\r\n            'null for the original mapping instead of an object with empty or null values.'\r\n        );\r\n    }\r\n\r\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n        && aGenerated.line > 0 && aGenerated.column >= 0\r\n        && !aOriginal && !aSource && !aName) {\r\n      // Case 1.\r\n      return;\r\n    }\r\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\r\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\r\n             && aGenerated.line > 0 && aGenerated.column >= 0\r\n             && aOriginal.line > 0 && aOriginal.column >= 0\r\n             && aSource) {\r\n      // Cases 2 and 3.\r\n      return;\r\n    }\r\n    else {\r\n      throw new Error('Invalid mapping: ' + JSON.stringify({\r\n        generated: aGenerated,\r\n        source: aSource,\r\n        original: aOriginal,\r\n        name: aName\r\n      }));\r\n    }\r\n  };\r\n\r\n/**\r\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\r\n * specified by the source map format.\r\n */\r\nSourceMapGenerator$3.prototype._serializeMappings =\r\n  function SourceMapGenerator_serializeMappings() {\r\n    var previousGeneratedColumn = 0;\r\n    var previousGeneratedLine = 1;\r\n    var previousOriginalColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousName = 0;\r\n    var previousSource = 0;\r\n    var result = '';\r\n    var next;\r\n    var mapping;\r\n    var nameIdx;\r\n    var sourceIdx;\r\n\r\n    var mappings = this._mappings.toArray();\r\n    for (var i = 0, len = mappings.length; i < len; i++) {\r\n      mapping = mappings[i];\r\n      next = '';\r\n\r\n      if (mapping.generatedLine !== previousGeneratedLine) {\r\n        previousGeneratedColumn = 0;\r\n        while (mapping.generatedLine !== previousGeneratedLine) {\r\n          next += ';';\r\n          previousGeneratedLine++;\r\n        }\r\n      }\r\n      else {\r\n        if (i > 0) {\r\n          if (!util$1.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\r\n            continue;\r\n          }\r\n          next += ',';\r\n        }\r\n      }\r\n\r\n      next += base64Vlq$1.encode(mapping.generatedColumn\r\n                                 - previousGeneratedColumn);\r\n      previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n      if (mapping.source != null) {\r\n        sourceIdx = this._sources.indexOf(mapping.source);\r\n        next += base64Vlq$1.encode(sourceIdx - previousSource);\r\n        previousSource = sourceIdx;\r\n\r\n        // lines are stored 0-based in SourceMap spec version 3\r\n        next += base64Vlq$1.encode(mapping.originalLine - 1\r\n                                   - previousOriginalLine);\r\n        previousOriginalLine = mapping.originalLine - 1;\r\n\r\n        next += base64Vlq$1.encode(mapping.originalColumn\r\n                                   - previousOriginalColumn);\r\n        previousOriginalColumn = mapping.originalColumn;\r\n\r\n        if (mapping.name != null) {\r\n          nameIdx = this._names.indexOf(mapping.name);\r\n          next += base64Vlq$1.encode(nameIdx - previousName);\r\n          previousName = nameIdx;\r\n        }\r\n      }\r\n\r\n      result += next;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\nSourceMapGenerator$3.prototype._generateSourcesContent =\r\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\r\n    return aSources.map(function (source) {\r\n      if (!this._sourcesContents) {\r\n        return null;\r\n      }\r\n      if (aSourceRoot != null) {\r\n        source = util$1.relative(aSourceRoot, source);\r\n      }\r\n      var key = util$1.toSetString(source);\r\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\r\n        ? this._sourcesContents[key]\r\n        : null;\r\n    }, this);\r\n  };\r\n\r\n/**\r\n * Externalize the source map.\r\n */\r\nSourceMapGenerator$3.prototype.toJSON =\r\n  function SourceMapGenerator_toJSON() {\r\n    var map = {\r\n      version: this._version,\r\n      sources: this._sources.toArray(),\r\n      names: this._names.toArray(),\r\n      mappings: this._serializeMappings()\r\n    };\r\n    if (this._file != null) {\r\n      map.file = this._file;\r\n    }\r\n    if (this._sourceRoot != null) {\r\n      map.sourceRoot = this._sourceRoot;\r\n    }\r\n    if (this._sourcesContents) {\r\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\r\n    }\r\n\r\n    return map;\r\n  };\r\n\r\n/**\r\n * Render the source map being generated to a string.\r\n */\r\nSourceMapGenerator$3.prototype.toString =\r\n  function SourceMapGenerator_toString() {\r\n    return JSON.stringify(this.toJSON());\r\n  };\r\n\r\nvar SourceMapGenerator_1$1 = SourceMapGenerator$3;\r\n\r\nvar sourceMapGenerator$1 = {\r\n\tSourceMapGenerator: SourceMapGenerator_1$1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\nvar binarySearch$1 = createCommonjsModule(function (module, exports) {\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nexports.GREATEST_LOWER_BOUND = 1;\r\nexports.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Recursive implementation of binary search.\r\n *\r\n * @param aLow Indices here and lower do not contain the needle.\r\n * @param aHigh Indices here and higher do not contain the needle.\r\n * @param aNeedle The element being searched for.\r\n * @param aHaystack The non-empty array being searched.\r\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\r\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n */\r\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\r\n  // This function terminates when one of the following is true:\r\n  //\r\n  //   1. We find the exact element we are looking for.\r\n  //\r\n  //   2. We did not find the exact element, but we can return the index of\r\n  //      the next-closest element.\r\n  //\r\n  //   3. We did not find the exact element, and there is no next-closest\r\n  //      element than the one we are searching for, so we return -1.\r\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\r\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\r\n  if (cmp === 0) {\r\n    // Found the element we are looking for.\r\n    return mid;\r\n  }\r\n  else if (cmp > 0) {\r\n    // Our needle is greater than aHaystack[mid].\r\n    if (aHigh - mid > 1) {\r\n      // The element is in the upper half.\r\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\r\n    }\r\n\r\n    // The exact needle element was not found in this haystack. Determine if\r\n    // we are in termination case (3) or (2) and return the appropriate thing.\r\n    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n      return aHigh < aHaystack.length ? aHigh : -1;\r\n    } else {\r\n      return mid;\r\n    }\r\n  }\r\n  else {\r\n    // Our needle is less than aHaystack[mid].\r\n    if (mid - aLow > 1) {\r\n      // The element is in the lower half.\r\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\r\n    }\r\n\r\n    // we are in termination case (3) or (2) and return the appropriate thing.\r\n    if (aBias == exports.LEAST_UPPER_BOUND) {\r\n      return mid;\r\n    } else {\r\n      return aLow < 0 ? -1 : aLow;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This is an implementation of binary search which will always try and return\r\n * the index of the closest element if there is no exact hit. This is because\r\n * mappings between original and generated line/col pairs are single points,\r\n * and there is an implicit region between each of them, so a miss just means\r\n * that you aren't on the very start of a region.\r\n *\r\n * @param aNeedle The element you are looking for.\r\n * @param aHaystack The array that is being searched.\r\n * @param aCompare A function which takes the needle and an element in the\r\n *     array and returns -1, 0, or 1 depending on whether the needle is less\r\n *     than, equal to, or greater than the element, respectively.\r\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\r\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\r\n */\r\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\r\n  if (aHaystack.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\r\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\r\n  if (index < 0) {\r\n    return -1;\r\n  }\r\n\r\n  // We have found either the exact element, or the next-closest element than\r\n  // the one we are searching for. However, there may be more than one such\r\n  // element. Make sure we always return the smallest of these.\r\n  while (index - 1 >= 0) {\r\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\r\n      break;\r\n    }\r\n    --index;\r\n  }\r\n\r\n  return index;\r\n};\r\n});\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n// It turns out that some (most?) JavaScript engines don't self-host\r\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\r\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\r\n// custom comparator function, calling back and forth between the VM's C++ and\r\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\r\n// worse generated code for the comparator function than would be optimal. In\r\n// fact, when sorting with a comparator, these costs outweigh the benefits of\r\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\r\n// a ~3500ms mean speed-up in `bench/bench.html`.\r\n\r\nfunction SortTemplate(comparator) {\r\n\r\n/**\r\n * Swap the elements indexed by `x` and `y` in the array `ary`.\r\n *\r\n * @param {Array} ary\r\n *        The array.\r\n * @param {Number} x\r\n *        The index of the first item.\r\n * @param {Number} y\r\n *        The index of the second item.\r\n */\r\nfunction swap(ary, x, y) {\r\n  var temp = ary[x];\r\n  ary[x] = ary[y];\r\n  ary[y] = temp;\r\n}\r\n\r\n/**\r\n * Returns a random integer within the range `low .. high` inclusive.\r\n *\r\n * @param {Number} low\r\n *        The lower bound on the range.\r\n * @param {Number} high\r\n *        The upper bound on the range.\r\n */\r\nfunction randomIntInRange(low, high) {\r\n  return Math.round(low + (Math.random() * (high - low)));\r\n}\r\n\r\n/**\r\n * The Quick Sort algorithm.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n * @param {Number} p\r\n *        Start index of the array\r\n * @param {Number} r\r\n *        End index of the array\r\n */\r\nfunction doQuickSort(ary, comparator, p, r) {\r\n  // If our lower bound is less than our upper bound, we (1) partition the\r\n  // array into two pieces and (2) recurse on each half. If it is not, this is\r\n  // the empty array and our base case.\r\n\r\n  if (p < r) {\r\n    // (1) Partitioning.\r\n    //\r\n    // The partitioning chooses a pivot between `p` and `r` and moves all\r\n    // elements that are less than or equal to the pivot to the before it, and\r\n    // all the elements that are greater than it after it. The effect is that\r\n    // once partition is done, the pivot is in the exact place it will be when\r\n    // the array is put in sorted order, and it will not need to be moved\r\n    // again. This runs in O(n) time.\r\n\r\n    // Always choose a random pivot so that an input array which is reverse\r\n    // sorted does not cause O(n^2) running time.\r\n    var pivotIndex = randomIntInRange(p, r);\r\n    var i = p - 1;\r\n\r\n    swap(ary, pivotIndex, r);\r\n    var pivot = ary[r];\r\n\r\n    // Immediately after `j` is incremented in this loop, the following hold\r\n    // true:\r\n    //\r\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\r\n    //\r\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\r\n    for (var j = p; j < r; j++) {\r\n      if (comparator(ary[j], pivot, false) <= 0) {\r\n        i += 1;\r\n        swap(ary, i, j);\r\n      }\r\n    }\r\n\r\n    swap(ary, i + 1, j);\r\n    var q = i + 1;\r\n\r\n    // (2) Recurse on each half.\r\n\r\n    doQuickSort(ary, comparator, p, q - 1);\r\n    doQuickSort(ary, comparator, q + 1, r);\r\n  }\r\n}\r\n\r\n  return doQuickSort;\r\n}\r\n\r\nfunction cloneSort(comparator) {\r\n  let template = SortTemplate.toString();\r\n  let templateFn = new Function(`return ${template}`)();\r\n  return templateFn(comparator);\r\n}\r\n\r\n/**\r\n * Sort the given array in-place with the given comparator function.\r\n *\r\n * @param {Array} ary\r\n *        An array to sort.\r\n * @param {function} comparator\r\n *        Function to use to compare two items.\r\n */\r\n\r\nlet sortCache = new WeakMap();\r\nvar quickSort_1$1 = function (ary, comparator, start = 0) {\r\n  let doQuickSort = sortCache.get(comparator);\r\n  if (doQuickSort === void 0) {\r\n    doQuickSort = cloneSort(comparator);\r\n    sortCache.set(comparator, doQuickSort);\r\n  }\r\n  doQuickSort(ary, comparator, start, ary.length - 1);\r\n};\r\n\r\nvar quickSort$2 = {\r\n\tquickSort: quickSort_1$1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n\r\n\r\nvar ArraySet$5 = arraySet$1.ArraySet;\r\n\r\nvar quickSort$3 = quickSort$2.quickSort;\r\n\r\nfunction SourceMapConsumer$2(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  return sourceMap.sections != null\r\n    ? new IndexedSourceMapConsumer$1(sourceMap, aSourceMapURL)\r\n    : new BasicSourceMapConsumer$1(sourceMap, aSourceMapURL);\r\n}\r\n\r\nSourceMapConsumer$2.fromSourceMap = function(aSourceMap, aSourceMapURL) {\r\n  return BasicSourceMapConsumer$1.fromSourceMap(aSourceMap, aSourceMapURL);\r\n};\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nSourceMapConsumer$2.prototype._version = 3;\r\n\r\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\r\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\r\n// are lazily instantiated, accessed via the `_generatedMappings` and\r\n// `_originalMappings` getters respectively, and we only parse the mappings\r\n// and create these arrays once queried for a source location. We jump through\r\n// these hoops because there can be many thousands of mappings, and parsing\r\n// them is expensive, so we only want to do it if we must.\r\n//\r\n// Each object in the arrays is of the form:\r\n//\r\n//     {\r\n//       generatedLine: The line number in the generated code,\r\n//       generatedColumn: The column number in the generated code,\r\n//       source: The path to the original source file that generated this\r\n//               chunk of code,\r\n//       originalLine: The line number in the original source that\r\n//                     corresponds to this chunk of generated code,\r\n//       originalColumn: The column number in the original source that\r\n//                       corresponds to this chunk of generated code,\r\n//       name: The name of the original symbol which generated this chunk of\r\n//             code.\r\n//     }\r\n//\r\n// All properties except for `generatedLine` and `generatedColumn` can be\r\n// `null`.\r\n//\r\n// `_generatedMappings` is ordered by the generated positions.\r\n//\r\n// `_originalMappings` is ordered by the original positions.\r\n\r\nSourceMapConsumer$2.prototype.__generatedMappings = null;\r\nObject.defineProperty(SourceMapConsumer$2.prototype, '_generatedMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__generatedMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__generatedMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer$2.prototype.__originalMappings = null;\r\nObject.defineProperty(SourceMapConsumer$2.prototype, '_originalMappings', {\r\n  configurable: true,\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!this.__originalMappings) {\r\n      this._parseMappings(this._mappings, this.sourceRoot);\r\n    }\r\n\r\n    return this.__originalMappings;\r\n  }\r\n});\r\n\r\nSourceMapConsumer$2.prototype._charIsMappingSeparator =\r\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\r\n    var c = aStr.charAt(index);\r\n    return c === \";\" || c === \",\";\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nSourceMapConsumer$2.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    throw new Error(\"Subclasses must implement _parseMappings\");\r\n  };\r\n\r\nSourceMapConsumer$2.GENERATED_ORDER = 1;\r\nSourceMapConsumer$2.ORIGINAL_ORDER = 2;\r\n\r\nSourceMapConsumer$2.GREATEST_LOWER_BOUND = 1;\r\nSourceMapConsumer$2.LEAST_UPPER_BOUND = 2;\r\n\r\n/**\r\n * Iterate over each mapping between an original source/line/column and a\r\n * generated line/column in this source map.\r\n *\r\n * @param Function aCallback\r\n *        The function that is called with each mapping.\r\n * @param Object aContext\r\n *        Optional. If specified, this object will be the value of `this` every\r\n *        time that `aCallback` is called.\r\n * @param aOrder\r\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\r\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\r\n *        iterate over the mappings sorted by the generated file's line/column\r\n *        order or the original's source/line/column order, respectively. Defaults to\r\n *        `SourceMapConsumer.GENERATED_ORDER`.\r\n */\r\nSourceMapConsumer$2.prototype.eachMapping =\r\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\r\n    var context = aContext || null;\r\n    var order = aOrder || SourceMapConsumer$2.GENERATED_ORDER;\r\n\r\n    var mappings;\r\n    switch (order) {\r\n    case SourceMapConsumer$2.GENERATED_ORDER:\r\n      mappings = this._generatedMappings;\r\n      break;\r\n    case SourceMapConsumer$2.ORIGINAL_ORDER:\r\n      mappings = this._originalMappings;\r\n      break;\r\n    default:\r\n      throw new Error(\"Unknown order of iteration.\");\r\n    }\r\n\r\n    var sourceRoot = this.sourceRoot;\r\n    var boundCallback = aCallback.bind(context);\r\n    var names = this._names;\r\n    var sources = this._sources;\r\n    var sourceMapURL = this._sourceMapURL;\r\n\r\n    for (var i = 0, n = mappings.length; i < n; i++) {\r\n      var mapping = mappings[i];\r\n      var source = mapping.source === null ? null : sources.at(mapping.source);\r\n      source = util$1.computeSourceURL(sourceRoot, source, sourceMapURL);\r\n      boundCallback({\r\n        source: source,\r\n        generatedLine: mapping.generatedLine,\r\n        generatedColumn: mapping.generatedColumn,\r\n        originalLine: mapping.originalLine,\r\n        originalColumn: mapping.originalColumn,\r\n        name: mapping.name === null ? null : names.at(mapping.name)\r\n      });\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns all generated line and column information for the original source,\r\n * line, and column provided. If no column is provided, returns all mappings\r\n * corresponding to a either the line we are searching for or the next\r\n * closest line that has any mappings. Otherwise, returns all mappings\r\n * corresponding to the given line and either the column we are searching for\r\n * or the next closest column that has any offsets.\r\n *\r\n * The only argument is an object with the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number is 1-based.\r\n *   - column: Optional. the column number in the original source.\r\n *    The column number is 0-based.\r\n *\r\n * and an array of objects is returned, each with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *    line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *    The column number is 0-based.\r\n */\r\nSourceMapConsumer$2.prototype.allGeneratedPositionsFor =\r\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\r\n    var line = util$1.getArg(aArgs, 'line');\r\n\r\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\r\n    // returns the index of the closest mapping less than the needle. By\r\n    // setting needle.originalColumn to 0, we thus find the last mapping for\r\n    // the given line, provided such a mapping exists.\r\n    var needle = {\r\n      source: util$1.getArg(aArgs, 'source'),\r\n      originalLine: line,\r\n      originalColumn: util$1.getArg(aArgs, 'column', 0)\r\n    };\r\n\r\n    needle.source = this._findSourceIndex(needle.source);\r\n    if (needle.source < 0) {\r\n      return [];\r\n    }\r\n\r\n    var mappings = [];\r\n\r\n    var index = this._findMapping(needle,\r\n                                  this._originalMappings,\r\n                                  \"originalLine\",\r\n                                  \"originalColumn\",\r\n                                  util$1.compareByOriginalPositions,\r\n                                  binarySearch$1.LEAST_UPPER_BOUND);\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (aArgs.column === undefined) {\r\n        var originalLine = mapping.originalLine;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we found. Since\r\n        // mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we found.\r\n        while (mapping && mapping.originalLine === originalLine) {\r\n          mappings.push({\r\n            line: util$1.getArg(mapping, 'generatedLine', null),\r\n            column: util$1.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      } else {\r\n        var originalColumn = mapping.originalColumn;\r\n\r\n        // Iterate until either we run out of mappings, or we run into\r\n        // a mapping for a different line than the one we were searching for.\r\n        // Since mappings are sorted, this is guaranteed to find all mappings for\r\n        // the line we are searching for.\r\n        while (mapping &&\r\n               mapping.originalLine === line &&\r\n               mapping.originalColumn == originalColumn) {\r\n          mappings.push({\r\n            line: util$1.getArg(mapping, 'generatedLine', null),\r\n            column: util$1.getArg(mapping, 'generatedColumn', null),\r\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\r\n          });\r\n\r\n          mapping = this._originalMappings[++index];\r\n        }\r\n      }\r\n    }\r\n\r\n    return mappings;\r\n  };\r\n\r\nvar SourceMapConsumer_1$1 = SourceMapConsumer$2;\r\n\r\n/**\r\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\r\n * query for information about the original file positions by giving it a file\r\n * position in the generated source.\r\n *\r\n * The first parameter is the raw source map (either as a JSON string, or\r\n * already parsed to an object). According to the spec, source maps have the\r\n * following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - sources: An array of URLs to the original source files.\r\n *   - names: An array of identifiers which can be referrenced by individual mappings.\r\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\r\n *   - sourcesContent: Optional. An array of contents of the original source files.\r\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *\r\n * Here is an example source map, taken from the source map spec[0]:\r\n *\r\n *     {\r\n *       version : 3,\r\n *       file: \"out.js\",\r\n *       sourceRoot : \"\",\r\n *       sources: [\"foo.js\", \"bar.js\"],\r\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *       mappings: \"AA,AB;;ABCDE;\"\r\n *     }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\r\n */\r\nfunction BasicSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util$1.getArg(sourceMap, 'version');\r\n  var sources = util$1.getArg(sourceMap, 'sources');\r\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\r\n  // requires the array) to play nice here.\r\n  var names = util$1.getArg(sourceMap, 'names', []);\r\n  var sourceRoot = util$1.getArg(sourceMap, 'sourceRoot', null);\r\n  var sourcesContent = util$1.getArg(sourceMap, 'sourcesContent', null);\r\n  var mappings = util$1.getArg(sourceMap, 'mappings');\r\n  var file = util$1.getArg(sourceMap, 'file', null);\r\n\r\n  // Once again, Sass deviates from the spec and supplies the version as a\r\n  // string rather than a number, so we use loose equality checking here.\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  if (sourceRoot) {\r\n    sourceRoot = util$1.normalize(sourceRoot);\r\n  }\r\n\r\n  sources = sources\r\n    .map(String)\r\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\r\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\r\n    // See bugzil.la/1090768.\r\n    .map(util$1.normalize)\r\n    // Always ensure that absolute sources are internally stored relative to\r\n    // the source root, if the source root is absolute. Not doing this would\r\n    // be particularly problematic when the source root is a prefix of the\r\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\r\n    .map(function (source) {\r\n      return sourceRoot && util$1.isAbsolute(sourceRoot) && util$1.isAbsolute(source)\r\n        ? util$1.relative(sourceRoot, source)\r\n        : source;\r\n    });\r\n\r\n  // Pass `true` below to allow duplicate names and sources. While source maps\r\n  // are intended to be compressed and deduplicated, the TypeScript compiler\r\n  // sometimes generates source maps with duplicates in them. See Github issue\r\n  // #72 and bugzil.la/889492.\r\n  this._names = ArraySet$5.fromArray(names.map(String), true);\r\n  this._sources = ArraySet$5.fromArray(sources, true);\r\n\r\n  this._absoluteSources = this._sources.toArray().map(function (s) {\r\n    return util$1.computeSourceURL(sourceRoot, s, aSourceMapURL);\r\n  });\r\n\r\n  this.sourceRoot = sourceRoot;\r\n  this.sourcesContent = sourcesContent;\r\n  this._mappings = mappings;\r\n  this._sourceMapURL = aSourceMapURL;\r\n  this.file = file;\r\n}\r\n\r\nBasicSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$2.prototype);\r\nBasicSourceMapConsumer$1.prototype.consumer = SourceMapConsumer$2;\r\n\r\n/**\r\n * Utility function to find the index of a source.  Returns -1 if not\r\n * found.\r\n */\r\nBasicSourceMapConsumer$1.prototype._findSourceIndex = function(aSource) {\r\n  var relativeSource = aSource;\r\n  if (this.sourceRoot != null) {\r\n    relativeSource = util$1.relative(this.sourceRoot, relativeSource);\r\n  }\r\n\r\n  if (this._sources.has(relativeSource)) {\r\n    return this._sources.indexOf(relativeSource);\r\n  }\r\n\r\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\r\n  // this case we can't simply undo the transform.\r\n  var i;\r\n  for (i = 0; i < this._absoluteSources.length; ++i) {\r\n    if (this._absoluteSources[i] == aSource) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\r\n *\r\n * @param SourceMapGenerator aSourceMap\r\n *        The source map that will be consumed.\r\n * @param String aSourceMapURL\r\n *        The URL at which the source map can be found (optional)\r\n * @returns BasicSourceMapConsumer\r\n */\r\nBasicSourceMapConsumer$1.fromSourceMap =\r\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\r\n    var smc = Object.create(BasicSourceMapConsumer$1.prototype);\r\n\r\n    var names = smc._names = ArraySet$5.fromArray(aSourceMap._names.toArray(), true);\r\n    var sources = smc._sources = ArraySet$5.fromArray(aSourceMap._sources.toArray(), true);\r\n    smc.sourceRoot = aSourceMap._sourceRoot;\r\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\r\n                                                            smc.sourceRoot);\r\n    smc.file = aSourceMap._file;\r\n    smc._sourceMapURL = aSourceMapURL;\r\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\r\n      return util$1.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\r\n    });\r\n\r\n    // Because we are modifying the entries (by converting string sources and\r\n    // names to indices into the sources and names ArraySets), we have to make\r\n    // a copy of the entry or else bad things happen. Shared mutable state\r\n    // strikes again! See github issue #191.\r\n\r\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\r\n    var destGeneratedMappings = smc.__generatedMappings = [];\r\n    var destOriginalMappings = smc.__originalMappings = [];\r\n\r\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\r\n      var srcMapping = generatedMappings[i];\r\n      var destMapping = new Mapping$1;\r\n      destMapping.generatedLine = srcMapping.generatedLine;\r\n      destMapping.generatedColumn = srcMapping.generatedColumn;\r\n\r\n      if (srcMapping.source) {\r\n        destMapping.source = sources.indexOf(srcMapping.source);\r\n        destMapping.originalLine = srcMapping.originalLine;\r\n        destMapping.originalColumn = srcMapping.originalColumn;\r\n\r\n        if (srcMapping.name) {\r\n          destMapping.name = names.indexOf(srcMapping.name);\r\n        }\r\n\r\n        destOriginalMappings.push(destMapping);\r\n      }\r\n\r\n      destGeneratedMappings.push(destMapping);\r\n    }\r\n\r\n    quickSort$3(smc.__originalMappings, util$1.compareByOriginalPositions);\r\n\r\n    return smc;\r\n  };\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nBasicSourceMapConsumer$1.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(BasicSourceMapConsumer$1.prototype, 'sources', {\r\n  get: function () {\r\n    return this._absoluteSources.slice();\r\n  }\r\n});\r\n\r\n/**\r\n * Provide the JIT with a nice shape / hidden class.\r\n */\r\nfunction Mapping$1() {\r\n  this.generatedLine = 0;\r\n  this.generatedColumn = 0;\r\n  this.source = null;\r\n  this.originalLine = null;\r\n  this.originalColumn = null;\r\n  this.name = null;\r\n}\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\n\r\nconst compareGenerated = util$1.compareByGeneratedPositionsDeflatedNoLine;\r\nfunction sortGenerated(array, start) {\r\n  let l = array.length;\r\n  let n = array.length - start;\r\n  if (n <= 1) {\r\n    return;\r\n  } else if (n == 2) {\r\n    let a = array[start];\r\n    let b = array[start + 1];\r\n    if (compareGenerated(a, b) > 0) {\r\n      array[start] = b;\r\n      array[start + 1] = a;\r\n    }\r\n  } else if (n < 20) {\r\n    for (let i = start; i < l; i++) {\r\n      for (let j = i; j > start; j--) {\r\n        let a = array[j - 1];\r\n        let b = array[j];\r\n        if (compareGenerated(a, b) <= 0) {\r\n          break;\r\n        }\r\n        array[j - 1] = b;\r\n        array[j] = a;\r\n      }\r\n    }\r\n  } else {\r\n    quickSort$3(array, compareGenerated, start);\r\n  }\r\n}\r\nBasicSourceMapConsumer$1.prototype._parseMappings =\r\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    var generatedLine = 1;\r\n    var previousGeneratedColumn = 0;\r\n    var previousOriginalLine = 0;\r\n    var previousOriginalColumn = 0;\r\n    var previousSource = 0;\r\n    var previousName = 0;\r\n    var length = aStr.length;\r\n    var index = 0;\r\n    var temp = {};\r\n    var originalMappings = [];\r\n    var generatedMappings = [];\r\n    var mapping, segment, end, value;\r\n\r\n    let subarrayStart = 0;\r\n    while (index < length) {\r\n      if (aStr.charAt(index) === ';') {\r\n        generatedLine++;\r\n        index++;\r\n        previousGeneratedColumn = 0;\r\n\r\n        sortGenerated(generatedMappings, subarrayStart);\r\n        subarrayStart = generatedMappings.length;\r\n      }\r\n      else if (aStr.charAt(index) === ',') {\r\n        index++;\r\n      }\r\n      else {\r\n        mapping = new Mapping$1();\r\n        mapping.generatedLine = generatedLine;\r\n\r\n        for (end = index; end < length; end++) {\r\n          if (this._charIsMappingSeparator(aStr, end)) {\r\n            break;\r\n          }\r\n        }\r\n        aStr.slice(index, end);\r\n\r\n        segment = [];\r\n        while (index < end) {\r\n          base64Vlq$1.decode(aStr, index, temp);\r\n          value = temp.value;\r\n          index = temp.rest;\r\n          segment.push(value);\r\n        }\r\n\r\n        if (segment.length === 2) {\r\n          throw new Error('Found a source, but no line and column');\r\n        }\r\n\r\n        if (segment.length === 3) {\r\n          throw new Error('Found a source and line, but no column');\r\n        }\r\n\r\n        // Generated column.\r\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\r\n        previousGeneratedColumn = mapping.generatedColumn;\r\n\r\n        if (segment.length > 1) {\r\n          // Original source.\r\n          mapping.source = previousSource + segment[1];\r\n          previousSource += segment[1];\r\n\r\n          // Original line.\r\n          mapping.originalLine = previousOriginalLine + segment[2];\r\n          previousOriginalLine = mapping.originalLine;\r\n          // Lines are stored 0-based\r\n          mapping.originalLine += 1;\r\n\r\n          // Original column.\r\n          mapping.originalColumn = previousOriginalColumn + segment[3];\r\n          previousOriginalColumn = mapping.originalColumn;\r\n\r\n          if (segment.length > 4) {\r\n            // Original name.\r\n            mapping.name = previousName + segment[4];\r\n            previousName += segment[4];\r\n          }\r\n        }\r\n\r\n        generatedMappings.push(mapping);\r\n        if (typeof mapping.originalLine === 'number') {\r\n          let currentSource = mapping.source;\r\n          while (originalMappings.length <= currentSource) {\r\n            originalMappings.push(null);\r\n          }\r\n          if (originalMappings[currentSource] === null) {\r\n            originalMappings[currentSource] = [];\r\n          }\r\n          originalMappings[currentSource].push(mapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    sortGenerated(generatedMappings, subarrayStart);\r\n    this.__generatedMappings = generatedMappings;\r\n\r\n    for (var i = 0; i < originalMappings.length; i++) {\r\n      if (originalMappings[i] != null) {\r\n        quickSort$3(originalMappings[i], util$1.compareByOriginalPositionsNoSource);\r\n      }\r\n    }\r\n    this.__originalMappings = [].concat(...originalMappings);\r\n  };\r\n\r\n/**\r\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\r\n * we are searching for in the given \"haystack\" of mappings.\r\n */\r\nBasicSourceMapConsumer$1.prototype._findMapping =\r\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\r\n                                         aColumnName, aComparator, aBias) {\r\n    // To return the position we are searching for, we must first find the\r\n    // mapping for the given position and then return the opposite position it\r\n    // points to. Because the mappings are sorted, we can use binary search to\r\n    // find the best mapping.\r\n\r\n    if (aNeedle[aLineName] <= 0) {\r\n      throw new TypeError('Line must be greater than or equal to 1, got '\r\n                          + aNeedle[aLineName]);\r\n    }\r\n    if (aNeedle[aColumnName] < 0) {\r\n      throw new TypeError('Column must be greater than or equal to 0, got '\r\n                          + aNeedle[aColumnName]);\r\n    }\r\n\r\n    return binarySearch$1.search(aNeedle, aMappings, aComparator, aBias);\r\n  };\r\n\r\n/**\r\n * Compute the last column for each generated mapping. The last column is\r\n * inclusive.\r\n */\r\nBasicSourceMapConsumer$1.prototype.computeColumnSpans =\r\n  function SourceMapConsumer_computeColumnSpans() {\r\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      // Mappings do not contain a field for the last generated columnt. We\r\n      // can come up with an optimistic estimate, however, by assuming that\r\n      // mappings are contiguous (i.e. given two consecutive mappings, the\r\n      // first mapping ends where the second one starts).\r\n      if (index + 1 < this._generatedMappings.length) {\r\n        var nextMapping = this._generatedMappings[index + 1];\r\n\r\n        if (mapping.generatedLine === nextMapping.generatedLine) {\r\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // The last mapping for each line spans the entire line.\r\n      mapping.lastGeneratedColumn = Infinity;\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nBasicSourceMapConsumer$1.prototype.originalPositionFor =\r\n  function SourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util$1.getArg(aArgs, 'line'),\r\n      generatedColumn: util$1.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._generatedMappings,\r\n      \"generatedLine\",\r\n      \"generatedColumn\",\r\n      util$1.compareByGeneratedPositionsDeflated,\r\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$2.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._generatedMappings[index];\r\n\r\n      if (mapping.generatedLine === needle.generatedLine) {\r\n        var source = util$1.getArg(mapping, 'source', null);\r\n        if (source !== null) {\r\n          source = this._sources.at(source);\r\n          source = util$1.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\r\n        }\r\n        var name = util$1.getArg(mapping, 'name', null);\r\n        if (name !== null) {\r\n          name = this._names.at(name);\r\n        }\r\n        return {\r\n          source: source,\r\n          line: util$1.getArg(mapping, 'originalLine', null),\r\n          column: util$1.getArg(mapping, 'originalColumn', null),\r\n          name: name\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      source: null,\r\n      line: null,\r\n      column: null,\r\n      name: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nBasicSourceMapConsumer$1.prototype.hasContentsOfAllSources =\r\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\r\n    if (!this.sourcesContent) {\r\n      return false;\r\n    }\r\n    return this.sourcesContent.length >= this._sources.size() &&\r\n      !this.sourcesContent.some(function (sc) { return sc == null; });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nBasicSourceMapConsumer$1.prototype.sourceContentFor =\r\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    if (!this.sourcesContent) {\r\n      return null;\r\n    }\r\n\r\n    var index = this._findSourceIndex(aSource);\r\n    if (index >= 0) {\r\n      return this.sourcesContent[index];\r\n    }\r\n\r\n    var relativeSource = aSource;\r\n    if (this.sourceRoot != null) {\r\n      relativeSource = util$1.relative(this.sourceRoot, relativeSource);\r\n    }\r\n\r\n    var url;\r\n    if (this.sourceRoot != null\r\n        && (url = util$1.urlParse(this.sourceRoot))) {\r\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\r\n      // many users. We can help them out when they expect file:// URIs to\r\n      // behave like it would if they were running a local HTTP server. See\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\r\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\r\n      if (url.scheme == \"file\"\r\n          && this._sources.has(fileUriAbsPath)) {\r\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\r\n      }\r\n\r\n      if ((!url.path || url.path == \"/\")\r\n          && this._sources.has(\"/\" + relativeSource)) {\r\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\r\n      }\r\n    }\r\n\r\n    // This function is used recursively from\r\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\r\n    // don't want to throw if we can't find the source - we just want to\r\n    // return null, so we provide a flag to exit gracefully.\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\r\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\r\n *     closest element that is smaller than or greater than the one we are\r\n *     searching for, respectively, if the exact element cannot be found.\r\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nBasicSourceMapConsumer$1.prototype.generatedPositionFor =\r\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\r\n    var source = util$1.getArg(aArgs, 'source');\r\n    source = this._findSourceIndex(source);\r\n    if (source < 0) {\r\n      return {\r\n        line: null,\r\n        column: null,\r\n        lastColumn: null\r\n      };\r\n    }\r\n\r\n    var needle = {\r\n      source: source,\r\n      originalLine: util$1.getArg(aArgs, 'line'),\r\n      originalColumn: util$1.getArg(aArgs, 'column')\r\n    };\r\n\r\n    var index = this._findMapping(\r\n      needle,\r\n      this._originalMappings,\r\n      \"originalLine\",\r\n      \"originalColumn\",\r\n      util$1.compareByOriginalPositions,\r\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$2.GREATEST_LOWER_BOUND)\r\n    );\r\n\r\n    if (index >= 0) {\r\n      var mapping = this._originalMappings[index];\r\n\r\n      if (mapping.source === needle.source) {\r\n        return {\r\n          line: util$1.getArg(mapping, 'generatedLine', null),\r\n          column: util$1.getArg(mapping, 'generatedColumn', null),\r\n          lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null,\r\n      lastColumn: null\r\n    };\r\n  };\r\n\r\nvar BasicSourceMapConsumer_1$1 = BasicSourceMapConsumer$1;\r\n\r\n/**\r\n * An IndexedSourceMapConsumer instance represents a parsed source map which\r\n * we can query for information. It differs from BasicSourceMapConsumer in\r\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\r\n * input.\r\n *\r\n * The first parameter is a raw source map (either as a JSON string, or already\r\n * parsed to an object). According to the spec for indexed source maps, they\r\n * have the following attributes:\r\n *\r\n *   - version: Which version of the source map spec this map is following.\r\n *   - file: Optional. The generated file this source map is associated with.\r\n *   - sections: A list of section definitions.\r\n *\r\n * Each value under the \"sections\" field has two fields:\r\n *   - offset: The offset into the original specified at which this section\r\n *       begins to apply, defined as an object with a \"line\" and \"column\"\r\n *       field.\r\n *   - map: A source map definition. This source map could also be indexed,\r\n *       but doesn't have to be.\r\n *\r\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\r\n * specifying a URL to retrieve a source map from, but that's currently\r\n * unsupported.\r\n *\r\n * Here's an example source map, taken from the source map spec[0], but\r\n * modified to omit a section which uses the \"url\" field.\r\n *\r\n *  {\r\n *    version : 3,\r\n *    file: \"app.js\",\r\n *    sections: [{\r\n *      offset: {line:100, column:10},\r\n *      map: {\r\n *        version : 3,\r\n *        file: \"section.js\",\r\n *        sources: [\"foo.js\", \"bar.js\"],\r\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\r\n *        mappings: \"AAAA,E;;ABCDE;\"\r\n *      }\r\n *    }],\r\n *  }\r\n *\r\n * The second parameter, if given, is a string whose value is the URL\r\n * at which the source map was found.  This URL is used to compute the\r\n * sources array.\r\n *\r\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\r\n */\r\nfunction IndexedSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\r\n  var sourceMap = aSourceMap;\r\n  if (typeof aSourceMap === 'string') {\r\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\r\n  }\r\n\r\n  var version = util$1.getArg(sourceMap, 'version');\r\n  var sections = util$1.getArg(sourceMap, 'sections');\r\n\r\n  if (version != this._version) {\r\n    throw new Error('Unsupported version: ' + version);\r\n  }\r\n\r\n  this._sources = new ArraySet$5();\r\n  this._names = new ArraySet$5();\r\n\r\n  var lastOffset = {\r\n    line: -1,\r\n    column: 0\r\n  };\r\n  this._sections = sections.map(function (s) {\r\n    if (s.url) {\r\n      // The url field will require support for asynchronicity.\r\n      // See https://github.com/mozilla/source-map/issues/16\r\n      throw new Error('Support for url field in sections not implemented.');\r\n    }\r\n    var offset = util$1.getArg(s, 'offset');\r\n    var offsetLine = util$1.getArg(offset, 'line');\r\n    var offsetColumn = util$1.getArg(offset, 'column');\r\n\r\n    if (offsetLine < lastOffset.line ||\r\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\r\n      throw new Error('Section offsets must be ordered and non-overlapping.');\r\n    }\r\n    lastOffset = offset;\r\n\r\n    return {\r\n      generatedOffset: {\r\n        // The offset fields are 0-based, but we use 1-based indices when\r\n        // encoding/decoding from VLQ.\r\n        generatedLine: offsetLine + 1,\r\n        generatedColumn: offsetColumn + 1\r\n      },\r\n      consumer: new SourceMapConsumer$2(util$1.getArg(s, 'map'), aSourceMapURL)\r\n    }\r\n  });\r\n}\r\n\r\nIndexedSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$2.prototype);\r\nIndexedSourceMapConsumer$1.prototype.constructor = SourceMapConsumer$2;\r\n\r\n/**\r\n * The version of the source mapping spec that we are consuming.\r\n */\r\nIndexedSourceMapConsumer$1.prototype._version = 3;\r\n\r\n/**\r\n * The list of original sources.\r\n */\r\nObject.defineProperty(IndexedSourceMapConsumer$1.prototype, 'sources', {\r\n  get: function () {\r\n    var sources = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\r\n        sources.push(this._sections[i].consumer.sources[j]);\r\n      }\r\n    }\r\n    return sources;\r\n  }\r\n});\r\n\r\n/**\r\n * Returns the original source, line, and column information for the generated\r\n * source's line and column positions provided. The only argument is an object\r\n * with the following properties:\r\n *\r\n *   - line: The line number in the generated source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the generated source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - source: The original source file, or null.\r\n *   - line: The line number in the original source, or null.  The\r\n *     line number is 1-based.\r\n *   - column: The column number in the original source, or null.  The\r\n *     column number is 0-based.\r\n *   - name: The original identifier, or null.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.originalPositionFor =\r\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\r\n    var needle = {\r\n      generatedLine: util$1.getArg(aArgs, 'line'),\r\n      generatedColumn: util$1.getArg(aArgs, 'column')\r\n    };\r\n\r\n    // Find the section containing the generated position we're trying to map\r\n    // to an original position.\r\n    var sectionIndex = binarySearch$1.search(needle, this._sections,\r\n      function(needle, section) {\r\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\r\n        if (cmp) {\r\n          return cmp;\r\n        }\r\n\r\n        return (needle.generatedColumn -\r\n                section.generatedOffset.generatedColumn);\r\n      });\r\n    var section = this._sections[sectionIndex];\r\n\r\n    if (!section) {\r\n      return {\r\n        source: null,\r\n        line: null,\r\n        column: null,\r\n        name: null\r\n      };\r\n    }\r\n\r\n    return section.consumer.originalPositionFor({\r\n      line: needle.generatedLine -\r\n        (section.generatedOffset.generatedLine - 1),\r\n      column: needle.generatedColumn -\r\n        (section.generatedOffset.generatedLine === needle.generatedLine\r\n         ? section.generatedOffset.generatedColumn - 1\r\n         : 0),\r\n      bias: aArgs.bias\r\n    });\r\n  };\r\n\r\n/**\r\n * Return true if we have the source content for every source in the source\r\n * map, false otherwise.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.hasContentsOfAllSources =\r\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\r\n    return this._sections.every(function (s) {\r\n      return s.consumer.hasContentsOfAllSources();\r\n    });\r\n  };\r\n\r\n/**\r\n * Returns the original source content. The only argument is the url of the\r\n * original source file. Returns null if no original source content is\r\n * available.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.sourceContentFor =\r\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      var content = section.consumer.sourceContentFor(aSource, true);\r\n      if (content) {\r\n        return content;\r\n      }\r\n    }\r\n    if (nullOnMissing) {\r\n      return null;\r\n    }\r\n    else {\r\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\r\n    }\r\n  };\r\n\r\n/**\r\n * Returns the generated line and column information for the original source,\r\n * line, and column positions provided. The only argument is an object with\r\n * the following properties:\r\n *\r\n *   - source: The filename of the original source.\r\n *   - line: The line number in the original source.  The line number\r\n *     is 1-based.\r\n *   - column: The column number in the original source.  The column\r\n *     number is 0-based.\r\n *\r\n * and an object is returned with the following properties:\r\n *\r\n *   - line: The line number in the generated source, or null.  The\r\n *     line number is 1-based. \r\n *   - column: The column number in the generated source, or null.\r\n *     The column number is 0-based.\r\n */\r\nIndexedSourceMapConsumer$1.prototype.generatedPositionFor =\r\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n\r\n      // Only consider this section if the requested source is in the list of\r\n      // sources of the consumer.\r\n      if (section.consumer._findSourceIndex(util$1.getArg(aArgs, 'source')) === -1) {\r\n        continue;\r\n      }\r\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\r\n      if (generatedPosition) {\r\n        var ret = {\r\n          line: generatedPosition.line +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          column: generatedPosition.column +\r\n            (section.generatedOffset.generatedLine === generatedPosition.line\r\n             ? section.generatedOffset.generatedColumn - 1\r\n             : 0)\r\n        };\r\n        return ret;\r\n      }\r\n    }\r\n\r\n    return {\r\n      line: null,\r\n      column: null\r\n    };\r\n  };\r\n\r\n/**\r\n * Parse the mappings in a string in to a data structure which we can easily\r\n * query (the ordered arrays in the `this.__generatedMappings` and\r\n * `this.__originalMappings` properties).\r\n */\r\nIndexedSourceMapConsumer$1.prototype._parseMappings =\r\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n    this.__generatedMappings = [];\r\n    this.__originalMappings = [];\r\n    for (var i = 0; i < this._sections.length; i++) {\r\n      var section = this._sections[i];\r\n      var sectionMappings = section.consumer._generatedMappings;\r\n      for (var j = 0; j < sectionMappings.length; j++) {\r\n        var mapping = sectionMappings[j];\r\n\r\n        var source = section.consumer._sources.at(mapping.source);\r\n        source = util$1.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\r\n        this._sources.add(source);\r\n        source = this._sources.indexOf(source);\r\n\r\n        var name = null;\r\n        if (mapping.name) {\r\n          name = section.consumer._names.at(mapping.name);\r\n          this._names.add(name);\r\n          name = this._names.indexOf(name);\r\n        }\r\n\r\n        // The mappings coming from the consumer for the section have\r\n        // generated positions relative to the start of the section, so we\r\n        // need to offset them to be relative to the start of the concatenated\r\n        // generated file.\r\n        var adjustedMapping = {\r\n          source: source,\r\n          generatedLine: mapping.generatedLine +\r\n            (section.generatedOffset.generatedLine - 1),\r\n          generatedColumn: mapping.generatedColumn +\r\n            (section.generatedOffset.generatedLine === mapping.generatedLine\r\n            ? section.generatedOffset.generatedColumn - 1\r\n            : 0),\r\n          originalLine: mapping.originalLine,\r\n          originalColumn: mapping.originalColumn,\r\n          name: name\r\n        };\r\n\r\n        this.__generatedMappings.push(adjustedMapping);\r\n        if (typeof adjustedMapping.originalLine === 'number') {\r\n          this.__originalMappings.push(adjustedMapping);\r\n        }\r\n      }\r\n    }\r\n\r\n    quickSort$3(this.__generatedMappings, util$1.compareByGeneratedPositionsDeflated);\r\n    quickSort$3(this.__originalMappings, util$1.compareByOriginalPositions);\r\n  };\r\n\r\nvar IndexedSourceMapConsumer_1$1 = IndexedSourceMapConsumer$1;\r\n\r\nvar sourceMapConsumer$1 = {\r\n\tSourceMapConsumer: SourceMapConsumer_1$1,\r\n\tBasicSourceMapConsumer: BasicSourceMapConsumer_1$1,\r\n\tIndexedSourceMapConsumer: IndexedSourceMapConsumer_1$1\r\n};\r\n\r\n/* -*- Mode: js; js-indent-level: 2; -*- */\r\n\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar SourceMapGenerator$4 = sourceMapGenerator$1.SourceMapGenerator;\r\n\r\n\r\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\r\n// operating systems these days (capturing the result).\r\nvar REGEX_NEWLINE$1 = /(\\r?\\n)/;\r\n\r\n// Newline character code for charCodeAt() comparisons\r\nvar NEWLINE_CODE$1 = 10;\r\n\r\n// Private symbol for identifying `SourceNode`s when multiple versions of\r\n// the source-map library are loaded. This MUST NOT CHANGE across\r\n// versions!\r\nvar isSourceNode$1 = \"$$$isSourceNode$$$\";\r\n\r\n/**\r\n * SourceNodes provide a way to abstract over interpolating/concatenating\r\n * snippets of generated JavaScript source code while maintaining the line and\r\n * column information associated with the original source code.\r\n *\r\n * @param aLine The original line number.\r\n * @param aColumn The original column number.\r\n * @param aSource The original source's filename.\r\n * @param aChunks Optional. An array of strings which are snippets of\r\n *        generated JS, or other SourceNodes.\r\n * @param aName The original identifier.\r\n */\r\nfunction SourceNode$2(aLine, aColumn, aSource, aChunks, aName) {\r\n  this.children = [];\r\n  this.sourceContents = {};\r\n  this.line = aLine == null ? null : aLine;\r\n  this.column = aColumn == null ? null : aColumn;\r\n  this.source = aSource == null ? null : aSource;\r\n  this.name = aName == null ? null : aName;\r\n  this[isSourceNode$1] = true;\r\n  if (aChunks != null) this.add(aChunks);\r\n}\r\n\r\n/**\r\n * Creates a SourceNode from generated code and a SourceMapConsumer.\r\n *\r\n * @param aGeneratedCode The generated code\r\n * @param aSourceMapConsumer The SourceMap for the generated code\r\n * @param aRelativePath Optional. The path that relative sources in the\r\n *        SourceMapConsumer should be relative to.\r\n */\r\nSourceNode$2.fromStringWithSourceMap =\r\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\r\n    // The SourceNode we want to fill with the generated code\r\n    // and the SourceMap\r\n    var node = new SourceNode$2();\r\n\r\n    // All even indices of this array are one line of the generated code,\r\n    // while all odd indices are the newlines between two adjacent lines\r\n    // (since `REGEX_NEWLINE` captures its match).\r\n    // Processed fragments are accessed by calling `shiftNextLine`.\r\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE$1);\r\n    var remainingLinesIndex = 0;\r\n    var shiftNextLine = function() {\r\n      var lineContents = getNextLine();\r\n      // The last line of a file might not have a newline.\r\n      var newLine = getNextLine() || \"\";\r\n      return lineContents + newLine;\r\n\r\n      function getNextLine() {\r\n        return remainingLinesIndex < remainingLines.length ?\r\n            remainingLines[remainingLinesIndex++] : undefined;\r\n      }\r\n    };\r\n\r\n    // We need to remember the position of \"remainingLines\"\r\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\r\n\r\n    // The generate SourceNodes we need a code range.\r\n    // To extract it current and last mapping is used.\r\n    // Here we store the last mapping.\r\n    var lastMapping = null;\r\n\r\n    aSourceMapConsumer.eachMapping(function (mapping) {\r\n      if (lastMapping !== null) {\r\n        // We add the code from \"lastMapping\" to \"mapping\":\r\n        // First check if there is a new line in between.\r\n        if (lastGeneratedLine < mapping.generatedLine) {\r\n          // Associate first line with \"lastMapping\"\r\n          addMappingWithCode(lastMapping, shiftNextLine());\r\n          lastGeneratedLine++;\r\n          lastGeneratedColumn = 0;\r\n          // The remaining code is added without mapping\r\n        } else {\r\n          // There is no new line in between.\r\n          // Associate the code between \"lastGeneratedColumn\" and\r\n          // \"mapping.generatedColumn\" with \"lastMapping\"\r\n          var nextLine = remainingLines[remainingLinesIndex] || '';\r\n          var code = nextLine.substr(0, mapping.generatedColumn -\r\n                                        lastGeneratedColumn);\r\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\r\n                                              lastGeneratedColumn);\r\n          lastGeneratedColumn = mapping.generatedColumn;\r\n          addMappingWithCode(lastMapping, code);\r\n          // No more remaining code, continue\r\n          lastMapping = mapping;\r\n          return;\r\n        }\r\n      }\r\n      // We add the generated code until the first mapping\r\n      // to the SourceNode without any mapping.\r\n      // Each line is added as separate string.\r\n      while (lastGeneratedLine < mapping.generatedLine) {\r\n        node.add(shiftNextLine());\r\n        lastGeneratedLine++;\r\n      }\r\n      if (lastGeneratedColumn < mapping.generatedColumn) {\r\n        var nextLine = remainingLines[remainingLinesIndex] || '';\r\n        node.add(nextLine.substr(0, mapping.generatedColumn));\r\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\r\n        lastGeneratedColumn = mapping.generatedColumn;\r\n      }\r\n      lastMapping = mapping;\r\n    }, this);\r\n    // We have processed all mappings.\r\n    if (remainingLinesIndex < remainingLines.length) {\r\n      if (lastMapping) {\r\n        // Associate the remaining code in the current line with \"lastMapping\"\r\n        addMappingWithCode(lastMapping, shiftNextLine());\r\n      }\r\n      // and add the remaining lines without any mapping\r\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\r\n    }\r\n\r\n    // Copy sourcesContent into SourceNode\r\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\r\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n      if (content != null) {\r\n        if (aRelativePath != null) {\r\n          sourceFile = util$1.join(aRelativePath, sourceFile);\r\n        }\r\n        node.setSourceContent(sourceFile, content);\r\n      }\r\n    });\r\n\r\n    return node;\r\n\r\n    function addMappingWithCode(mapping, code) {\r\n      if (mapping === null || mapping.source === undefined) {\r\n        node.add(code);\r\n      } else {\r\n        var source = aRelativePath\r\n          ? util$1.join(aRelativePath, mapping.source)\r\n          : mapping.source;\r\n        node.add(new SourceNode$2(mapping.originalLine,\r\n                                mapping.originalColumn,\r\n                                source,\r\n                                code,\r\n                                mapping.name));\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Add a chunk of generated JS to this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode$2.prototype.add = function SourceNode_add(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    aChunk.forEach(function (chunk) {\r\n      this.add(chunk);\r\n    }, this);\r\n  }\r\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\r\n    if (aChunk) {\r\n      this.children.push(aChunk);\r\n    }\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Add a chunk of generated JS to the beginning of this source node.\r\n *\r\n * @param aChunk A string snippet of generated JS code, another instance of\r\n *        SourceNode, or an array where each member is one of those things.\r\n */\r\nSourceNode$2.prototype.prepend = function SourceNode_prepend(aChunk) {\r\n  if (Array.isArray(aChunk)) {\r\n    for (var i = aChunk.length-1; i >= 0; i--) {\r\n      this.prepend(aChunk[i]);\r\n    }\r\n  }\r\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\r\n    this.children.unshift(aChunk);\r\n  }\r\n  else {\r\n    throw new TypeError(\r\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\r\n    );\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Walk over the tree of JS snippets in this node and its children. The\r\n * walking function is called once for each snippet of JS and is passed that\r\n * snippet and the its original associated source's line/column location.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode$2.prototype.walk = function SourceNode_walk(aFn) {\r\n  var chunk;\r\n  for (var i = 0, len = this.children.length; i < len; i++) {\r\n    chunk = this.children[i];\r\n    if (chunk[isSourceNode$1]) {\r\n      chunk.walk(aFn);\r\n    }\r\n    else {\r\n      if (chunk !== '') {\r\n        aFn(chunk, { source: this.source,\r\n                     line: this.line,\r\n                     column: this.column,\r\n                     name: this.name });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\r\n * each of `this.children`.\r\n *\r\n * @param aSep The separator.\r\n */\r\nSourceNode$2.prototype.join = function SourceNode_join(aSep) {\r\n  var newChildren;\r\n  var i;\r\n  var len = this.children.length;\r\n  if (len > 0) {\r\n    newChildren = [];\r\n    for (i = 0; i < len-1; i++) {\r\n      newChildren.push(this.children[i]);\r\n      newChildren.push(aSep);\r\n    }\r\n    newChildren.push(this.children[i]);\r\n    this.children = newChildren;\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Call String.prototype.replace on the very right-most source snippet. Useful\r\n * for trimming whitespace from the end of a source node, etc.\r\n *\r\n * @param aPattern The pattern to replace.\r\n * @param aReplacement The thing to replace the pattern with.\r\n */\r\nSourceNode$2.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\r\n  var lastChild = this.children[this.children.length - 1];\r\n  if (lastChild[isSourceNode$1]) {\r\n    lastChild.replaceRight(aPattern, aReplacement);\r\n  }\r\n  else if (typeof lastChild === 'string') {\r\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\r\n  }\r\n  else {\r\n    this.children.push(''.replace(aPattern, aReplacement));\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the source content for a source file. This will be added to the SourceMapGenerator\r\n * in the sourcesContent field.\r\n *\r\n * @param aSourceFile The filename of the source file\r\n * @param aSourceContent The content of the source file\r\n */\r\nSourceNode$2.prototype.setSourceContent =\r\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\r\n    this.sourceContents[util$1.toSetString(aSourceFile)] = aSourceContent;\r\n  };\r\n\r\n/**\r\n * Walk over the tree of SourceNodes. The walking function is called for each\r\n * source file content and is passed the filename and source content.\r\n *\r\n * @param aFn The traversal function.\r\n */\r\nSourceNode$2.prototype.walkSourceContents =\r\n  function SourceNode_walkSourceContents(aFn) {\r\n    for (var i = 0, len = this.children.length; i < len; i++) {\r\n      if (this.children[i][isSourceNode$1]) {\r\n        this.children[i].walkSourceContents(aFn);\r\n      }\r\n    }\r\n\r\n    var sources = Object.keys(this.sourceContents);\r\n    for (var i = 0, len = sources.length; i < len; i++) {\r\n      aFn(util$1.fromSetString(sources[i]), this.sourceContents[sources[i]]);\r\n    }\r\n  };\r\n\r\n/**\r\n * Return the string representation of this source node. Walks over the tree\r\n * and concatenates all the various snippets together to one string.\r\n */\r\nSourceNode$2.prototype.toString = function SourceNode_toString() {\r\n  var str = \"\";\r\n  this.walk(function (chunk) {\r\n    str += chunk;\r\n  });\r\n  return str;\r\n};\r\n\r\n/**\r\n * Returns the string representation of this source node along with a source\r\n * map.\r\n */\r\nSourceNode$2.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\r\n  var generated = {\r\n    code: \"\",\r\n    line: 1,\r\n    column: 0\r\n  };\r\n  var map = new SourceMapGenerator$4(aArgs);\r\n  var sourceMappingActive = false;\r\n  var lastOriginalSource = null;\r\n  var lastOriginalLine = null;\r\n  var lastOriginalColumn = null;\r\n  var lastOriginalName = null;\r\n  this.walk(function (chunk, original) {\r\n    generated.code += chunk;\r\n    if (original.source !== null\r\n        && original.line !== null\r\n        && original.column !== null) {\r\n      if(lastOriginalSource !== original.source\r\n         || lastOriginalLine !== original.line\r\n         || lastOriginalColumn !== original.column\r\n         || lastOriginalName !== original.name) {\r\n        map.addMapping({\r\n          source: original.source,\r\n          original: {\r\n            line: original.line,\r\n            column: original.column\r\n          },\r\n          generated: {\r\n            line: generated.line,\r\n            column: generated.column\r\n          },\r\n          name: original.name\r\n        });\r\n      }\r\n      lastOriginalSource = original.source;\r\n      lastOriginalLine = original.line;\r\n      lastOriginalColumn = original.column;\r\n      lastOriginalName = original.name;\r\n      sourceMappingActive = true;\r\n    } else if (sourceMappingActive) {\r\n      map.addMapping({\r\n        generated: {\r\n          line: generated.line,\r\n          column: generated.column\r\n        }\r\n      });\r\n      lastOriginalSource = null;\r\n      sourceMappingActive = false;\r\n    }\r\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\r\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE$1) {\r\n        generated.line++;\r\n        generated.column = 0;\r\n        // Mappings end at eol\r\n        if (idx + 1 === length) {\r\n          lastOriginalSource = null;\r\n          sourceMappingActive = false;\r\n        } else if (sourceMappingActive) {\r\n          map.addMapping({\r\n            source: original.source,\r\n            original: {\r\n              line: original.line,\r\n              column: original.column\r\n            },\r\n            generated: {\r\n              line: generated.line,\r\n              column: generated.column\r\n            },\r\n            name: original.name\r\n          });\r\n        }\r\n      } else {\r\n        generated.column++;\r\n      }\r\n    }\r\n  });\r\n  this.walkSourceContents(function (sourceFile, sourceContent) {\r\n    map.setSourceContent(sourceFile, sourceContent);\r\n  });\r\n\r\n  return { code: generated.code, map: map };\r\n};\r\n\r\nvar SourceNode_1$1 = SourceNode$2;\r\n\r\nvar sourceNode$1 = {\r\n\tSourceNode: SourceNode_1$1\r\n};\r\n\r\n/*\r\n * Copyright 2009-2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE.txt or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar SourceMapGenerator$5 = sourceMapGenerator$1.SourceMapGenerator;\r\nvar SourceMapConsumer$3 = sourceMapConsumer$1.SourceMapConsumer;\r\nvar SourceNode$3 = sourceNode$1.SourceNode;\r\n\r\nvar sourceMap$1 = {\r\n\tSourceMapGenerator: SourceMapGenerator$5,\r\n\tSourceMapConsumer: SourceMapConsumer$3,\r\n\tSourceNode: SourceNode$3\r\n};\r\n\r\nlet urlAlphabet =\r\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\r\nlet customAlphabet = (alphabet, size) => {\r\n  return () => {\r\n    let id = '';\r\n    let i = size;\r\n    while (i--) {\r\n      id += alphabet[(Math.random() * alphabet.length) | 0];\r\n    }\r\n    return id\r\n  }\r\n};\r\nlet nanoid = (size = 21) => {\r\n  let id = '';\r\n  let i = size;\r\n  while (i--) {\r\n    id += urlAlphabet[(Math.random() * 64) | 0];\r\n  }\r\n  return id\r\n};\r\nvar nonSecure = { nanoid, customAlphabet };\r\n\r\nlet { SourceMapConsumer: SourceMapConsumer$4, SourceMapGenerator: SourceMapGenerator$6 } = sourceMap$1;\r\nlet { existsSync, readFileSync } = _fs;\r\nlet { dirname: dirname$1, join: join$1 } = _path;\r\n\r\nfunction fromBase64(str) {\r\n  if (Buffer) {\r\n    return Buffer.from(str, 'base64').toString()\r\n  } else {\r\n    /* c8 ignore next 2 */\r\n    return window.atob(str)\r\n  }\r\n}\r\n\r\nclass PreviousMap {\r\n  constructor(css, opts) {\r\n    if (opts.map === false) return\r\n    this.loadAnnotation(css);\r\n    this.inline = this.startWith(this.annotation, 'data:');\r\n\r\n    let prev = opts.map ? opts.map.prev : undefined;\r\n    let text = this.loadMap(opts.from, prev);\r\n    if (!this.mapFile && opts.from) {\r\n      this.mapFile = opts.from;\r\n    }\r\n    if (this.mapFile) this.root = dirname$1(this.mapFile);\r\n    if (text) this.text = text;\r\n  }\r\n\r\n  consumer() {\r\n    if (!this.consumerCache) {\r\n      this.consumerCache = new SourceMapConsumer$4(this.text);\r\n    }\r\n    return this.consumerCache\r\n  }\r\n\r\n  withContent() {\r\n    return !!(\r\n      this.consumer().sourcesContent &&\r\n      this.consumer().sourcesContent.length > 0\r\n    )\r\n  }\r\n\r\n  startWith(string, start) {\r\n    if (!string) return false\r\n    return string.substr(0, start.length) === start\r\n  }\r\n\r\n  getAnnotationURL(sourceMapString) {\r\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\r\n  }\r\n\r\n  loadAnnotation(css) {\r\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm);\r\n    if (!comments) return\r\n\r\n    // sourceMappingURLs from comments, strings, etc.\r\n    let start = css.lastIndexOf(comments.pop());\r\n    let end = css.indexOf('*/', start);\r\n\r\n    if (start > -1 && end > -1) {\r\n      // Locate the last sourceMappingURL to avoid pickin\r\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\r\n    }\r\n  }\r\n\r\n  decodeInline(text) {\r\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\r\n    let baseUri = /^data:application\\/json;base64,/;\r\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\r\n    let uri = /^data:application\\/json,/;\r\n\r\n    if (charsetUri.test(text) || uri.test(text)) {\r\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\r\n    }\r\n\r\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\r\n      return fromBase64(text.substr(RegExp.lastMatch.length))\r\n    }\r\n\r\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\r\n    throw new Error('Unsupported source map encoding ' + encoding)\r\n  }\r\n\r\n  loadFile(path) {\r\n    this.root = dirname$1(path);\r\n    if (existsSync(path)) {\r\n      this.mapFile = path;\r\n      return readFileSync(path, 'utf-8').toString().trim()\r\n    }\r\n  }\r\n\r\n  loadMap(file, prev) {\r\n    if (prev === false) return false\r\n\r\n    if (prev) {\r\n      if (typeof prev === 'string') {\r\n        return prev\r\n      } else if (typeof prev === 'function') {\r\n        let prevPath = prev(file);\r\n        if (prevPath) {\r\n          let map = this.loadFile(prevPath);\r\n          if (!map) {\r\n            throw new Error(\r\n              'Unable to load previous source map: ' + prevPath.toString()\r\n            )\r\n          }\r\n          return map\r\n        }\r\n      } else if (prev instanceof SourceMapConsumer$4) {\r\n        return SourceMapGenerator$6.fromSourceMap(prev).toString()\r\n      } else if (prev instanceof SourceMapGenerator$6) {\r\n        return prev.toString()\r\n      } else if (this.isMap(prev)) {\r\n        return JSON.stringify(prev)\r\n      } else {\r\n        throw new Error(\r\n          'Unsupported previous source map format: ' + prev.toString()\r\n        )\r\n      }\r\n    } else if (this.inline) {\r\n      return this.decodeInline(this.annotation)\r\n    } else if (this.annotation) {\r\n      let map = this.annotation;\r\n      if (file) map = join$1(dirname$1(file), map);\r\n      return this.loadFile(map)\r\n    }\r\n  }\r\n\r\n  isMap(map) {\r\n    if (typeof map !== 'object') return false\r\n    return (\r\n      typeof map.mappings === 'string' ||\r\n      typeof map._mappings === 'string' ||\r\n      Array.isArray(map.sections)\r\n    )\r\n  }\r\n}\r\n\r\nvar previousMap = PreviousMap;\r\nPreviousMap.default = PreviousMap;\r\n\r\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_url$1);\r\n\r\nlet { SourceMapConsumer: SourceMapConsumer$5, SourceMapGenerator: SourceMapGenerator$7 } = sourceMap$1;\r\nlet { fileURLToPath, pathToFileURL } = require$$2;\r\nlet { resolve: resolve$1, isAbsolute: isAbsolute$1 } = _path;\r\nlet { nanoid: nanoid$1 } = nonSecure;\r\n\r\n\r\n\r\n\r\n\r\nlet fromOffsetCache = Symbol('fromOffsetCache');\r\n\r\nlet sourceMapAvailable = Boolean(SourceMapConsumer$5 && SourceMapGenerator$7);\r\nlet pathAvailable = Boolean(resolve$1 && isAbsolute$1);\r\n\r\nclass Input$1 {\r\n  constructor(css, opts = {}) {\r\n    if (\r\n      css === null ||\r\n      typeof css === 'undefined' ||\r\n      (typeof css === 'object' && !css.toString)\r\n    ) {\r\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\r\n    }\r\n\r\n    this.css = css.toString();\r\n\r\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\r\n      this.hasBOM = true;\r\n      this.css = this.css.slice(1);\r\n    } else {\r\n      this.hasBOM = false;\r\n    }\r\n\r\n    if (opts.from) {\r\n      if (\r\n        !pathAvailable ||\r\n        /^\\w+:\\/\\//.test(opts.from) ||\r\n        isAbsolute$1(opts.from)\r\n      ) {\r\n        this.file = opts.from;\r\n      } else {\r\n        this.file = resolve$1(opts.from);\r\n      }\r\n    }\r\n\r\n    if (pathAvailable && sourceMapAvailable) {\r\n      let map = new previousMap(this.css, opts);\r\n      if (map.text) {\r\n        this.map = map;\r\n        let file = map.consumer().file;\r\n        if (!this.file && file) this.file = this.mapResolve(file);\r\n      }\r\n    }\r\n\r\n    if (!this.file) {\r\n      this.id = '<input css ' + nanoid$1(6) + '>';\r\n    }\r\n    if (this.map) this.map.file = this.from;\r\n  }\r\n\r\n  fromOffset(offset) {\r\n    let lastLine, lineToIndex;\r\n    if (!this[fromOffsetCache]) {\r\n      let lines = this.css.split('\\n');\r\n      lineToIndex = new Array(lines.length);\r\n      let prevIndex = 0;\r\n\r\n      for (let i = 0, l = lines.length; i < l; i++) {\r\n        lineToIndex[i] = prevIndex;\r\n        prevIndex += lines[i].length + 1;\r\n      }\r\n\r\n      this[fromOffsetCache] = lineToIndex;\r\n    } else {\r\n      lineToIndex = this[fromOffsetCache];\r\n    }\r\n    lastLine = lineToIndex[lineToIndex.length - 1];\r\n\r\n    let min = 0;\r\n    if (offset >= lastLine) {\r\n      min = lineToIndex.length - 1;\r\n    } else {\r\n      let max = lineToIndex.length - 2;\r\n      let mid;\r\n      while (min < max) {\r\n        mid = min + ((max - min) >> 1);\r\n        if (offset < lineToIndex[mid]) {\r\n          max = mid - 1;\r\n        } else if (offset >= lineToIndex[mid + 1]) {\r\n          min = mid + 1;\r\n        } else {\r\n          min = mid;\r\n          break\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      line: min + 1,\r\n      col: offset - lineToIndex[min] + 1\r\n    }\r\n  }\r\n\r\n  error(message, line, column, opts = {}) {\r\n    let result, endLine, endColumn;\r\n\r\n    if (line && typeof line === 'object') {\r\n      let start = line;\r\n      let end = column;\r\n      if (typeof line.offset === 'number') {\r\n        let pos = this.fromOffset(start.offset);\r\n        line = pos.line;\r\n        column = pos.col;\r\n      } else {\r\n        line = start.line;\r\n        column = start.column;\r\n      }\r\n      if (typeof end.offset === 'number') {\r\n        let pos = this.fromOffset(end.offset);\r\n        endLine = pos.line;\r\n        endColumn = pos.col;\r\n      } else {\r\n        endLine = end.line;\r\n        endColumn = end.column;\r\n      }\r\n    } else if (!column) {\r\n      let pos = this.fromOffset(line);\r\n      line = pos.line;\r\n      column = pos.col;\r\n    }\r\n\r\n    let origin = this.origin(line, column, endLine, endColumn);\r\n    if (origin) {\r\n      result = new cssSyntaxError(\r\n        message,\r\n        origin.endLine === undefined\r\n          ? origin.line\r\n          : { line: origin.line, column: origin.column },\r\n        origin.endLine === undefined\r\n          ? origin.column\r\n          : { line: origin.endLine, column: origin.endColumn },\r\n        origin.source,\r\n        origin.file,\r\n        opts.plugin\r\n      );\r\n    } else {\r\n      result = new cssSyntaxError(\r\n        message,\r\n        endLine === undefined ? line : { line, column },\r\n        endLine === undefined ? column : { line: endLine, column: endColumn },\r\n        this.css,\r\n        this.file,\r\n        opts.plugin\r\n      );\r\n    }\r\n\r\n    result.input = { line, column, endLine, endColumn, source: this.css };\r\n    if (this.file) {\r\n      if (pathToFileURL) {\r\n        result.input.url = pathToFileURL(this.file).toString();\r\n      }\r\n      result.input.file = this.file;\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  origin(line, column, endLine, endColumn) {\r\n    if (!this.map) return false\r\n    let consumer = this.map.consumer();\r\n\r\n    let from = consumer.originalPositionFor({ line, column });\r\n    if (!from.source) return false\r\n\r\n    let to;\r\n    if (typeof endLine === 'number') {\r\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn });\r\n    }\r\n\r\n    let fromUrl;\r\n\r\n    if (isAbsolute$1(from.source)) {\r\n      fromUrl = pathToFileURL(from.source);\r\n    } else {\r\n      fromUrl = new URL(\r\n        from.source,\r\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\r\n      );\r\n    }\r\n\r\n    let result = {\r\n      url: fromUrl.toString(),\r\n      line: from.line,\r\n      column: from.column,\r\n      endLine: to && to.line,\r\n      endColumn: to && to.column\r\n    };\r\n\r\n    if (fromUrl.protocol === 'file:') {\r\n      if (fileURLToPath) {\r\n        result.file = fileURLToPath(fromUrl);\r\n      } else {\r\n        /* c8 ignore next 2 */\r\n        throw new Error(`file: protocol is not available in this PostCSS build`)\r\n      }\r\n    }\r\n\r\n    let source = consumer.sourceContentFor(from.source);\r\n    if (source) result.source = source;\r\n\r\n    return result\r\n  }\r\n\r\n  mapResolve(file) {\r\n    if (/^\\w+:\\/\\//.test(file)) {\r\n      return file\r\n    }\r\n    return resolve$1(this.map.consumer().sourceRoot || this.map.root || '.', file)\r\n  }\r\n\r\n  get from() {\r\n    return this.file || this.id\r\n  }\r\n\r\n  toJSON() {\r\n    let json = {};\r\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\r\n      if (this[name] != null) {\r\n        json[name] = this[name];\r\n      }\r\n    }\r\n    if (this.map) {\r\n      json.map = { ...this.map };\r\n      if (json.map.consumerCache) {\r\n        json.map.consumerCache = undefined;\r\n      }\r\n    }\r\n    return json\r\n  }\r\n}\r\n\r\nvar input = Input$1;\r\nInput$1.default = Input$1;\r\n\r\nif (terminalHighlight_1 && terminalHighlight_1.registerInput) {\r\n  terminalHighlight_1.registerInput(Input$1);\r\n}\r\n\r\nlet { SourceMapConsumer: SourceMapConsumer$6, SourceMapGenerator: SourceMapGenerator$8 } = sourceMap$1;\r\nlet { dirname: dirname$2, resolve: resolve$2, relative: relative$1, sep: sep$1 } = _path;\r\nlet { pathToFileURL: pathToFileURL$1 } = require$$2;\r\n\r\n\r\n\r\nlet sourceMapAvailable$1 = Boolean(SourceMapConsumer$6 && SourceMapGenerator$8);\r\nlet pathAvailable$1 = Boolean(dirname$2 && resolve$2 && relative$1 && sep$1);\r\n\r\nclass MapGenerator {\r\n  constructor(stringify, root, opts, cssString) {\r\n    this.stringify = stringify;\r\n    this.mapOpts = opts.map || {};\r\n    this.root = root;\r\n    this.opts = opts;\r\n    this.css = cssString;\r\n  }\r\n\r\n  isMap() {\r\n    if (typeof this.opts.map !== 'undefined') {\r\n      return !!this.opts.map\r\n    }\r\n    return this.previous().length > 0\r\n  }\r\n\r\n  previous() {\r\n    if (!this.previousMaps) {\r\n      this.previousMaps = [];\r\n      if (this.root) {\r\n        this.root.walk(node => {\r\n          if (node.source && node.source.input.map) {\r\n            let map = node.source.input.map;\r\n            if (!this.previousMaps.includes(map)) {\r\n              this.previousMaps.push(map);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        let input$1 = new input(this.css, this.opts);\r\n        if (input$1.map) this.previousMaps.push(input$1.map);\r\n      }\r\n    }\r\n\r\n    return this.previousMaps\r\n  }\r\n\r\n  isInline() {\r\n    if (typeof this.mapOpts.inline !== 'undefined') {\r\n      return this.mapOpts.inline\r\n    }\r\n\r\n    let annotation = this.mapOpts.annotation;\r\n    if (typeof annotation !== 'undefined' && annotation !== true) {\r\n      return false\r\n    }\r\n\r\n    if (this.previous().length) {\r\n      return this.previous().some(i => i.inline)\r\n    }\r\n    return true\r\n  }\r\n\r\n  isSourcesContent() {\r\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\r\n      return this.mapOpts.sourcesContent\r\n    }\r\n    if (this.previous().length) {\r\n      return this.previous().some(i => i.withContent())\r\n    }\r\n    return true\r\n  }\r\n\r\n  clearAnnotation() {\r\n    if (this.mapOpts.annotation === false) return\r\n\r\n    if (this.root) {\r\n      let node;\r\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\r\n        node = this.root.nodes[i];\r\n        if (node.type !== 'comment') continue\r\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\r\n          this.root.removeChild(i);\r\n        }\r\n      }\r\n    } else if (this.css) {\r\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\r\n    }\r\n  }\r\n\r\n  setSourcesContent() {\r\n    let already = {};\r\n    if (this.root) {\r\n      this.root.walk(node => {\r\n        if (node.source) {\r\n          let from = node.source.input.from;\r\n          if (from && !already[from]) {\r\n            already[from] = true;\r\n            this.map.setSourceContent(\r\n              this.toUrl(this.path(from)),\r\n              node.source.input.css\r\n            );\r\n          }\r\n        }\r\n      });\r\n    } else if (this.css) {\r\n      let from = this.opts.from\r\n        ? this.toUrl(this.path(this.opts.from))\r\n        : '<no source>';\r\n      this.map.setSourceContent(from, this.css);\r\n    }\r\n  }\r\n\r\n  applyPrevMaps() {\r\n    for (let prev of this.previous()) {\r\n      let from = this.toUrl(this.path(prev.file));\r\n      let root = prev.root || dirname$2(prev.file);\r\n      let map;\r\n\r\n      if (this.mapOpts.sourcesContent === false) {\r\n        map = new SourceMapConsumer$6(prev.text);\r\n        if (map.sourcesContent) {\r\n          map.sourcesContent = map.sourcesContent.map(() => null);\r\n        }\r\n      } else {\r\n        map = prev.consumer();\r\n      }\r\n\r\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\r\n    }\r\n  }\r\n\r\n  isAnnotation() {\r\n    if (this.isInline()) {\r\n      return true\r\n    }\r\n    if (typeof this.mapOpts.annotation !== 'undefined') {\r\n      return this.mapOpts.annotation\r\n    }\r\n    if (this.previous().length) {\r\n      return this.previous().some(i => i.annotation)\r\n    }\r\n    return true\r\n  }\r\n\r\n  toBase64(str) {\r\n    if (Buffer) {\r\n      return Buffer.from(str).toString('base64')\r\n    } else {\r\n      return window.btoa(unescape(encodeURIComponent(str)))\r\n    }\r\n  }\r\n\r\n  addAnnotation() {\r\n    let content;\r\n\r\n    if (this.isInline()) {\r\n      content =\r\n        'data:application/json;base64,' + this.toBase64(this.map.toString());\r\n    } else if (typeof this.mapOpts.annotation === 'string') {\r\n      content = this.mapOpts.annotation;\r\n    } else if (typeof this.mapOpts.annotation === 'function') {\r\n      content = this.mapOpts.annotation(this.opts.to, this.root);\r\n    } else {\r\n      content = this.outputFile() + '.map';\r\n    }\r\n    let eol = '\\n';\r\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\r\n\r\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\r\n  }\r\n\r\n  outputFile() {\r\n    if (this.opts.to) {\r\n      return this.path(this.opts.to)\r\n    } else if (this.opts.from) {\r\n      return this.path(this.opts.from)\r\n    } else {\r\n      return 'to.css'\r\n    }\r\n  }\r\n\r\n  generateMap() {\r\n    if (this.root) {\r\n      this.generateString();\r\n    } else if (this.previous().length === 1) {\r\n      let prev = this.previous()[0].consumer();\r\n      prev.file = this.outputFile();\r\n      this.map = SourceMapGenerator$8.fromSourceMap(prev);\r\n    } else {\r\n      this.map = new SourceMapGenerator$8({ file: this.outputFile() });\r\n      this.map.addMapping({\r\n        source: this.opts.from\r\n          ? this.toUrl(this.path(this.opts.from))\r\n          : '<no source>',\r\n        generated: { line: 1, column: 0 },\r\n        original: { line: 1, column: 0 }\r\n      });\r\n    }\r\n\r\n    if (this.isSourcesContent()) this.setSourcesContent();\r\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\r\n    if (this.isAnnotation()) this.addAnnotation();\r\n\r\n    if (this.isInline()) {\r\n      return [this.css]\r\n    } else {\r\n      return [this.css, this.map]\r\n    }\r\n  }\r\n\r\n  path(file) {\r\n    if (file.indexOf('<') === 0) return file\r\n    if (/^\\w+:\\/\\//.test(file)) return file\r\n    if (this.mapOpts.absolute) return file\r\n\r\n    let from = this.opts.to ? dirname$2(this.opts.to) : '.';\r\n\r\n    if (typeof this.mapOpts.annotation === 'string') {\r\n      from = dirname$2(resolve$2(from, this.mapOpts.annotation));\r\n    }\r\n\r\n    file = relative$1(from, file);\r\n    return file\r\n  }\r\n\r\n  toUrl(path) {\r\n    if (sep$1 === '\\\\') {\r\n      path = path.replace(/\\\\/g, '/');\r\n    }\r\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\r\n  }\r\n\r\n  sourcePath(node) {\r\n    if (this.mapOpts.from) {\r\n      return this.toUrl(this.mapOpts.from)\r\n    } else if (this.mapOpts.absolute) {\r\n      if (pathToFileURL$1) {\r\n        return pathToFileURL$1(node.source.input.from).toString()\r\n      } else {\r\n        throw new Error(\r\n          '`map.absolute` option is not available in this PostCSS build'\r\n        )\r\n      }\r\n    } else {\r\n      return this.toUrl(this.path(node.source.input.from))\r\n    }\r\n  }\r\n\r\n  generateString() {\r\n    this.css = '';\r\n    this.map = new SourceMapGenerator$8({ file: this.outputFile() });\r\n\r\n    let line = 1;\r\n    let column = 1;\r\n\r\n    let noSource = '<no source>';\r\n    let mapping = {\r\n      source: '',\r\n      generated: { line: 0, column: 0 },\r\n      original: { line: 0, column: 0 }\r\n    };\r\n\r\n    let lines, last;\r\n    this.stringify(this.root, (str, node, type) => {\r\n      this.css += str;\r\n\r\n      if (node && type !== 'end') {\r\n        mapping.generated.line = line;\r\n        mapping.generated.column = column - 1;\r\n        if (node.source && node.source.start) {\r\n          mapping.source = this.sourcePath(node);\r\n          mapping.original.line = node.source.start.line;\r\n          mapping.original.column = node.source.start.column - 1;\r\n          this.map.addMapping(mapping);\r\n        } else {\r\n          mapping.source = noSource;\r\n          mapping.original.line = 1;\r\n          mapping.original.column = 0;\r\n          this.map.addMapping(mapping);\r\n        }\r\n      }\r\n\r\n      lines = str.match(/\\n/g);\r\n      if (lines) {\r\n        line += lines.length;\r\n        last = str.lastIndexOf('\\n');\r\n        column = str.length - last;\r\n      } else {\r\n        column += str.length;\r\n      }\r\n\r\n      if (node && type !== 'start') {\r\n        let p = node.parent || { raws: {} };\r\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\r\n          if (node.source && node.source.end) {\r\n            mapping.source = this.sourcePath(node);\r\n            mapping.original.line = node.source.end.line;\r\n            mapping.original.column = node.source.end.column - 1;\r\n            mapping.generated.line = line;\r\n            mapping.generated.column = column - 2;\r\n            this.map.addMapping(mapping);\r\n          } else {\r\n            mapping.source = noSource;\r\n            mapping.original.line = 1;\r\n            mapping.original.column = 0;\r\n            mapping.generated.line = line;\r\n            mapping.generated.column = column - 1;\r\n            this.map.addMapping(mapping);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  generate() {\r\n    this.clearAnnotation();\r\n    if (pathAvailable$1 && sourceMapAvailable$1 && this.isMap()) {\r\n      return this.generateMap()\r\n    } else {\r\n      let result = '';\r\n      this.stringify(this.root, i => {\r\n        result += i;\r\n      });\r\n      return [result]\r\n    }\r\n  }\r\n}\r\n\r\nvar mapGenerator = MapGenerator;\r\n\r\nclass Comment extends node_1 {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'comment';\r\n  }\r\n}\r\n\r\nvar comment = Comment;\r\nComment.default = Comment;\r\n\r\nlet { isClean: isClean$2, my: my$2 } = symbols;\r\n\r\n\r\n\r\n\r\nlet parse$5, Rule, AtRule;\r\n\r\nfunction cleanSource(nodes) {\r\n  return nodes.map(i => {\r\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\r\n    delete i.source;\r\n    return i\r\n  })\r\n}\r\n\r\nfunction markDirtyUp(node) {\r\n  node[isClean$2] = false;\r\n  if (node.proxyOf.nodes) {\r\n    for (let i of node.proxyOf.nodes) {\r\n      markDirtyUp(i);\r\n    }\r\n  }\r\n}\r\n\r\nclass Container extends node_1 {\r\n  push(child) {\r\n    child.parent = this;\r\n    this.proxyOf.nodes.push(child);\r\n    return this\r\n  }\r\n\r\n  each(callback) {\r\n    if (!this.proxyOf.nodes) return undefined\r\n    let iterator = this.getIterator();\r\n\r\n    let index, result;\r\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\r\n      index = this.indexes[iterator];\r\n      result = callback(this.proxyOf.nodes[index], index);\r\n      if (result === false) break\r\n\r\n      this.indexes[iterator] += 1;\r\n    }\r\n\r\n    delete this.indexes[iterator];\r\n    return result\r\n  }\r\n\r\n  walk(callback) {\r\n    return this.each((child, i) => {\r\n      let result;\r\n      try {\r\n        result = callback(child, i);\r\n      } catch (e) {\r\n        throw child.addToError(e)\r\n      }\r\n      if (result !== false && child.walk) {\r\n        result = child.walk(callback);\r\n      }\r\n\r\n      return result\r\n    })\r\n  }\r\n\r\n  walkDecls(prop, callback) {\r\n    if (!callback) {\r\n      callback = prop;\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'decl') {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    if (prop instanceof RegExp) {\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'decl' && prop.test(child.prop)) {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'decl' && child.prop === prop) {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  walkRules(selector, callback) {\r\n    if (!callback) {\r\n      callback = selector;\r\n\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'rule') {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    if (selector instanceof RegExp) {\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'rule' && selector.test(child.selector)) {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'rule' && child.selector === selector) {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  walkAtRules(name, callback) {\r\n    if (!callback) {\r\n      callback = name;\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'atrule') {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    if (name instanceof RegExp) {\r\n      return this.walk((child, i) => {\r\n        if (child.type === 'atrule' && name.test(child.name)) {\r\n          return callback(child, i)\r\n        }\r\n      })\r\n    }\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'atrule' && child.name === name) {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  walkComments(callback) {\r\n    return this.walk((child, i) => {\r\n      if (child.type === 'comment') {\r\n        return callback(child, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  append(...children) {\r\n    for (let child of children) {\r\n      let nodes = this.normalize(child, this.last);\r\n      for (let node of nodes) this.proxyOf.nodes.push(node);\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  prepend(...children) {\r\n    children = children.reverse();\r\n    for (let child of children) {\r\n      let nodes = this.normalize(child, this.first, 'prepend').reverse();\r\n      for (let node of nodes) this.proxyOf.nodes.unshift(node);\r\n      for (let id in this.indexes) {\r\n        this.indexes[id] = this.indexes[id] + nodes.length;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  cleanRaws(keepBetween) {\r\n    super.cleanRaws(keepBetween);\r\n    if (this.nodes) {\r\n      for (let node of this.nodes) node.cleanRaws(keepBetween);\r\n    }\r\n  }\r\n\r\n  insertBefore(exist, add) {\r\n    exist = this.index(exist);\r\n\r\n    let type = exist === 0 ? 'prepend' : false;\r\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse();\r\n    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node);\r\n\r\n    let index;\r\n    for (let id in this.indexes) {\r\n      index = this.indexes[id];\r\n      if (exist <= index) {\r\n        this.indexes[id] = index + nodes.length;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  insertAfter(exist, add) {\r\n    exist = this.index(exist);\r\n\r\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse();\r\n    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node);\r\n\r\n    let index;\r\n    for (let id in this.indexes) {\r\n      index = this.indexes[id];\r\n      if (exist < index) {\r\n        this.indexes[id] = index + nodes.length;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  removeChild(child) {\r\n    child = this.index(child);\r\n    this.proxyOf.nodes[child].parent = undefined;\r\n    this.proxyOf.nodes.splice(child, 1);\r\n\r\n    let index;\r\n    for (let id in this.indexes) {\r\n      index = this.indexes[id];\r\n      if (index >= child) {\r\n        this.indexes[id] = index - 1;\r\n      }\r\n    }\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  removeAll() {\r\n    for (let node of this.proxyOf.nodes) node.parent = undefined;\r\n    this.proxyOf.nodes = [];\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  replaceValues(pattern, opts, callback) {\r\n    if (!callback) {\r\n      callback = opts;\r\n      opts = {};\r\n    }\r\n\r\n    this.walkDecls(decl => {\r\n      if (opts.props && !opts.props.includes(decl.prop)) return\r\n      if (opts.fast && !decl.value.includes(opts.fast)) return\r\n\r\n      decl.value = decl.value.replace(pattern, callback);\r\n    });\r\n\r\n    this.markDirty();\r\n\r\n    return this\r\n  }\r\n\r\n  every(condition) {\r\n    return this.nodes.every(condition)\r\n  }\r\n\r\n  some(condition) {\r\n    return this.nodes.some(condition)\r\n  }\r\n\r\n  index(child) {\r\n    if (typeof child === 'number') return child\r\n    if (child.proxyOf) child = child.proxyOf;\r\n    return this.proxyOf.nodes.indexOf(child)\r\n  }\r\n\r\n  get first() {\r\n    if (!this.proxyOf.nodes) return undefined\r\n    return this.proxyOf.nodes[0]\r\n  }\r\n\r\n  get last() {\r\n    if (!this.proxyOf.nodes) return undefined\r\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\r\n  }\r\n\r\n  normalize(nodes, sample) {\r\n    if (typeof nodes === 'string') {\r\n      nodes = cleanSource(parse$5(nodes).nodes);\r\n    } else if (Array.isArray(nodes)) {\r\n      nodes = nodes.slice(0);\r\n      for (let i of nodes) {\r\n        if (i.parent) i.parent.removeChild(i, 'ignore');\r\n      }\r\n    } else if (nodes.type === 'root' && this.type !== 'document') {\r\n      nodes = nodes.nodes.slice(0);\r\n      for (let i of nodes) {\r\n        if (i.parent) i.parent.removeChild(i, 'ignore');\r\n      }\r\n    } else if (nodes.type) {\r\n      nodes = [nodes];\r\n    } else if (nodes.prop) {\r\n      if (typeof nodes.value === 'undefined') {\r\n        throw new Error('Value field is missed in node creation')\r\n      } else if (typeof nodes.value !== 'string') {\r\n        nodes.value = String(nodes.value);\r\n      }\r\n      nodes = [new declaration(nodes)];\r\n    } else if (nodes.selector) {\r\n      nodes = [new Rule(nodes)];\r\n    } else if (nodes.name) {\r\n      nodes = [new AtRule(nodes)];\r\n    } else if (nodes.text) {\r\n      nodes = [new comment(nodes)];\r\n    } else {\r\n      throw new Error('Unknown node type in node creation')\r\n    }\r\n\r\n    let processed = nodes.map(i => {\r\n      /* c8 ignore next */\r\n      if (!i[my$2]) Container.rebuild(i);\r\n      i = i.proxyOf;\r\n      if (i.parent) i.parent.removeChild(i);\r\n      if (i[isClean$2]) markDirtyUp(i);\r\n      if (typeof i.raws.before === 'undefined') {\r\n        if (sample && typeof sample.raws.before !== 'undefined') {\r\n          i.raws.before = sample.raws.before.replace(/\\S/g, '');\r\n        }\r\n      }\r\n      i.parent = this;\r\n      return i\r\n    });\r\n\r\n    return processed\r\n  }\r\n\r\n  getProxyProcessor() {\r\n    return {\r\n      set(node, prop, value) {\r\n        if (node[prop] === value) return true\r\n        node[prop] = value;\r\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\r\n          node.markDirty();\r\n        }\r\n        return true\r\n      },\r\n\r\n      get(node, prop) {\r\n        if (prop === 'proxyOf') {\r\n          return node\r\n        } else if (!node[prop]) {\r\n          return node[prop]\r\n        } else if (\r\n          prop === 'each' ||\r\n          (typeof prop === 'string' && prop.startsWith('walk'))\r\n        ) {\r\n          return (...args) => {\r\n            return node[prop](\r\n              ...args.map(i => {\r\n                if (typeof i === 'function') {\r\n                  return (child, index) => i(child.toProxy(), index)\r\n                } else {\r\n                  return i\r\n                }\r\n              })\r\n            )\r\n          }\r\n        } else if (prop === 'every' || prop === 'some') {\r\n          return cb => {\r\n            return node[prop]((child, ...other) =>\r\n              cb(child.toProxy(), ...other)\r\n            )\r\n          }\r\n        } else if (prop === 'root') {\r\n          return () => node.root().toProxy()\r\n        } else if (prop === 'nodes') {\r\n          return node.nodes.map(i => i.toProxy())\r\n        } else if (prop === 'first' || prop === 'last') {\r\n          return node[prop].toProxy()\r\n        } else {\r\n          return node[prop]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getIterator() {\r\n    if (!this.lastEach) this.lastEach = 0;\r\n    if (!this.indexes) this.indexes = {};\r\n\r\n    this.lastEach += 1;\r\n    let iterator = this.lastEach;\r\n    this.indexes[iterator] = 0;\r\n\r\n    return iterator\r\n  }\r\n}\r\n\r\nContainer.registerParse = dependant => {\r\n  parse$5 = dependant;\r\n};\r\n\r\nContainer.registerRule = dependant => {\r\n  Rule = dependant;\r\n};\r\n\r\nContainer.registerAtRule = dependant => {\r\n  AtRule = dependant;\r\n};\r\n\r\nvar container = Container;\r\nContainer.default = Container;\r\n\r\n/* c8 ignore start */\r\nContainer.rebuild = node => {\r\n  if (node.type === 'atrule') {\r\n    Object.setPrototypeOf(node, AtRule.prototype);\r\n  } else if (node.type === 'rule') {\r\n    Object.setPrototypeOf(node, Rule.prototype);\r\n  } else if (node.type === 'decl') {\r\n    Object.setPrototypeOf(node, declaration.prototype);\r\n  } else if (node.type === 'comment') {\r\n    Object.setPrototypeOf(node, comment.prototype);\r\n  }\r\n\r\n  node[my$2] = true;\r\n\r\n  if (node.nodes) {\r\n    node.nodes.forEach(child => {\r\n      Container.rebuild(child);\r\n    });\r\n  }\r\n};\r\n\r\nlet LazyResult, Processor;\r\n\r\nclass Document extends container {\r\n  constructor(defaults) {\r\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\r\n    super({ type: 'document', ...defaults });\r\n\r\n    if (!this.nodes) {\r\n      this.nodes = [];\r\n    }\r\n  }\r\n\r\n  toResult(opts = {}) {\r\n    let lazy = new LazyResult(new Processor(), this, opts);\r\n\r\n    return lazy.stringify()\r\n  }\r\n}\r\n\r\nDocument.registerLazyResult = dependant => {\r\n  LazyResult = dependant;\r\n};\r\n\r\nDocument.registerProcessor = dependant => {\r\n  Processor = dependant;\r\n};\r\n\r\nvar document = Document;\r\nDocument.default = Document;\r\n\r\n/* eslint-disable no-console */\r\n\r\nlet printed = {};\r\n\r\nvar warnOnce$2 = function warnOnce(message) {\r\n  if (printed[message]) return\r\n  printed[message] = true;\r\n\r\n  if (typeof console !== 'undefined' && console.warn) {\r\n    console.warn(message);\r\n  }\r\n};\r\n\r\nclass Warning {\r\n  constructor(text, opts = {}) {\r\n    this.type = 'warning';\r\n    this.text = text;\r\n\r\n    if (opts.node && opts.node.source) {\r\n      let range = opts.node.rangeBy(opts);\r\n      this.line = range.start.line;\r\n      this.column = range.start.column;\r\n      this.endLine = range.end.line;\r\n      this.endColumn = range.end.column;\r\n    }\r\n\r\n    for (let opt in opts) this[opt] = opts[opt];\r\n  }\r\n\r\n  toString() {\r\n    if (this.node) {\r\n      return this.node.error(this.text, {\r\n        plugin: this.plugin,\r\n        index: this.index,\r\n        word: this.word\r\n      }).message\r\n    }\r\n\r\n    if (this.plugin) {\r\n      return this.plugin + ': ' + this.text\r\n    }\r\n\r\n    return this.text\r\n  }\r\n}\r\n\r\nvar warning = Warning;\r\nWarning.default = Warning;\r\n\r\nclass Result {\r\n  constructor(processor, root, opts) {\r\n    this.processor = processor;\r\n    this.messages = [];\r\n    this.root = root;\r\n    this.opts = opts;\r\n    this.css = undefined;\r\n    this.map = undefined;\r\n  }\r\n\r\n  toString() {\r\n    return this.css\r\n  }\r\n\r\n  warn(text, opts = {}) {\r\n    if (!opts.plugin) {\r\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\r\n        opts.plugin = this.lastPlugin.postcssPlugin;\r\n      }\r\n    }\r\n\r\n    let warning$1 = new warning(text, opts);\r\n    this.messages.push(warning$1);\r\n\r\n    return warning$1\r\n  }\r\n\r\n  warnings() {\r\n    return this.messages.filter(i => i.type === 'warning')\r\n  }\r\n\r\n  get content() {\r\n    return this.css\r\n  }\r\n}\r\n\r\nvar result = Result;\r\nResult.default = Result;\r\n\r\nclass AtRule$1 extends container {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'atrule';\r\n  }\r\n\r\n  append(...children) {\r\n    if (!this.proxyOf.nodes) this.nodes = [];\r\n    return super.append(...children)\r\n  }\r\n\r\n  prepend(...children) {\r\n    if (!this.proxyOf.nodes) this.nodes = [];\r\n    return super.prepend(...children)\r\n  }\r\n}\r\n\r\nvar atRule = AtRule$1;\r\nAtRule$1.default = AtRule$1;\r\n\r\ncontainer.registerAtRule(AtRule$1);\r\n\r\nlet LazyResult$1, Processor$1;\r\n\r\nclass Root extends container {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'root';\r\n    if (!this.nodes) this.nodes = [];\r\n  }\r\n\r\n  removeChild(child, ignore) {\r\n    let index = this.index(child);\r\n\r\n    if (!ignore && index === 0 && this.nodes.length > 1) {\r\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\r\n    }\r\n\r\n    return super.removeChild(child)\r\n  }\r\n\r\n  normalize(child, sample, type) {\r\n    let nodes = super.normalize(child);\r\n\r\n    if (sample) {\r\n      if (type === 'prepend') {\r\n        if (this.nodes.length > 1) {\r\n          sample.raws.before = this.nodes[1].raws.before;\r\n        } else {\r\n          delete sample.raws.before;\r\n        }\r\n      } else if (this.first !== sample) {\r\n        for (let node of nodes) {\r\n          node.raws.before = sample.raws.before;\r\n        }\r\n      }\r\n    }\r\n\r\n    return nodes\r\n  }\r\n\r\n  toResult(opts = {}) {\r\n    let lazy = new LazyResult$1(new Processor$1(), this, opts);\r\n    return lazy.stringify()\r\n  }\r\n}\r\n\r\nRoot.registerLazyResult = dependant => {\r\n  LazyResult$1 = dependant;\r\n};\r\n\r\nRoot.registerProcessor = dependant => {\r\n  Processor$1 = dependant;\r\n};\r\n\r\nvar root = Root;\r\nRoot.default = Root;\r\n\r\nlet list = {\r\n  split(string, separators, last) {\r\n    let array = [];\r\n    let current = '';\r\n    let split = false;\r\n\r\n    let func = 0;\r\n    let quote = false;\r\n    let escape = false;\r\n\r\n    for (let letter of string) {\r\n      if (escape) {\r\n        escape = false;\r\n      } else if (letter === '\\\\') {\r\n        escape = true;\r\n      } else if (quote) {\r\n        if (letter === quote) {\r\n          quote = false;\r\n        }\r\n      } else if (letter === '\"' || letter === \"'\") {\r\n        quote = letter;\r\n      } else if (letter === '(') {\r\n        func += 1;\r\n      } else if (letter === ')') {\r\n        if (func > 0) func -= 1;\r\n      } else if (func === 0) {\r\n        if (separators.includes(letter)) split = true;\r\n      }\r\n\r\n      if (split) {\r\n        if (current !== '') array.push(current.trim());\r\n        current = '';\r\n        split = false;\r\n      } else {\r\n        current += letter;\r\n      }\r\n    }\r\n\r\n    if (last || current !== '') array.push(current.trim());\r\n    return array\r\n  },\r\n\r\n  space(string) {\r\n    let spaces = [' ', '\\n', '\\t'];\r\n    return list.split(string, spaces)\r\n  },\r\n\r\n  comma(string) {\r\n    return list.split(string, [','], true)\r\n  }\r\n};\r\n\r\nvar list_1 = list;\r\nlist.default = list;\r\n\r\nclass Rule$1 extends container {\r\n  constructor(defaults) {\r\n    super(defaults);\r\n    this.type = 'rule';\r\n    if (!this.nodes) this.nodes = [];\r\n  }\r\n\r\n  get selectors() {\r\n    return list_1.comma(this.selector)\r\n  }\r\n\r\n  set selectors(values) {\r\n    let match = this.selector ? this.selector.match(/,\\s*/) : null;\r\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\r\n    this.selector = values.join(sep);\r\n  }\r\n}\r\n\r\nvar rule = Rule$1;\r\nRule$1.default = Rule$1;\r\n\r\ncontainer.registerRule(Rule$1);\r\n\r\nclass Parser$1 {\r\n  constructor(input) {\r\n    this.input = input;\r\n\r\n    this.root = new root();\r\n    this.current = this.root;\r\n    this.spaces = '';\r\n    this.semicolon = false;\r\n    this.customProperty = false;\r\n\r\n    this.createTokenizer();\r\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } };\r\n  }\r\n\r\n  createTokenizer() {\r\n    this.tokenizer = tokenize(this.input);\r\n  }\r\n\r\n  parse() {\r\n    let token;\r\n    while (!this.tokenizer.endOfFile()) {\r\n      token = this.tokenizer.nextToken();\r\n\r\n      switch (token[0]) {\r\n        case 'space':\r\n          this.spaces += token[1];\r\n          break\r\n\r\n        case ';':\r\n          this.freeSemicolon(token);\r\n          break\r\n\r\n        case '}':\r\n          this.end(token);\r\n          break\r\n\r\n        case 'comment':\r\n          this.comment(token);\r\n          break\r\n\r\n        case 'at-word':\r\n          this.atrule(token);\r\n          break\r\n\r\n        case '{':\r\n          this.emptyRule(token);\r\n          break\r\n\r\n        default:\r\n          this.other(token);\r\n          break\r\n      }\r\n    }\r\n    this.endFile();\r\n  }\r\n\r\n  comment(token) {\r\n    let node = new comment();\r\n    this.init(node, token[2]);\r\n    node.source.end = this.getPosition(token[3] || token[2]);\r\n\r\n    let text = token[1].slice(2, -2);\r\n    if (/^\\s*$/.test(text)) {\r\n      node.text = '';\r\n      node.raws.left = text;\r\n      node.raws.right = '';\r\n    } else {\r\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\r\n      node.text = match[2];\r\n      node.raws.left = match[1];\r\n      node.raws.right = match[3];\r\n    }\r\n  }\r\n\r\n  emptyRule(token) {\r\n    let node = new rule();\r\n    this.init(node, token[2]);\r\n    node.selector = '';\r\n    node.raws.between = '';\r\n    this.current = node;\r\n  }\r\n\r\n  other(start) {\r\n    let end = false;\r\n    let type = null;\r\n    let colon = false;\r\n    let bracket = null;\r\n    let brackets = [];\r\n    let customProperty = start[1].startsWith('--');\r\n\r\n    let tokens = [];\r\n    let token = start;\r\n    while (token) {\r\n      type = token[0];\r\n      tokens.push(token);\r\n\r\n      if (type === '(' || type === '[') {\r\n        if (!bracket) bracket = token;\r\n        brackets.push(type === '(' ? ')' : ']');\r\n      } else if (customProperty && colon && type === '{') {\r\n        if (!bracket) bracket = token;\r\n        brackets.push('}');\r\n      } else if (brackets.length === 0) {\r\n        if (type === ';') {\r\n          if (colon) {\r\n            this.decl(tokens, customProperty);\r\n            return\r\n          } else {\r\n            break\r\n          }\r\n        } else if (type === '{') {\r\n          this.rule(tokens);\r\n          return\r\n        } else if (type === '}') {\r\n          this.tokenizer.back(tokens.pop());\r\n          end = true;\r\n          break\r\n        } else if (type === ':') {\r\n          colon = true;\r\n        }\r\n      } else if (type === brackets[brackets.length - 1]) {\r\n        brackets.pop();\r\n        if (brackets.length === 0) bracket = null;\r\n      }\r\n\r\n      token = this.tokenizer.nextToken();\r\n    }\r\n\r\n    if (this.tokenizer.endOfFile()) end = true;\r\n    if (brackets.length > 0) this.unclosedBracket(bracket);\r\n\r\n    if (end && colon) {\r\n      while (tokens.length) {\r\n        token = tokens[tokens.length - 1][0];\r\n        if (token !== 'space' && token !== 'comment') break\r\n        this.tokenizer.back(tokens.pop());\r\n      }\r\n      this.decl(tokens, customProperty);\r\n    } else {\r\n      this.unknownWord(tokens);\r\n    }\r\n  }\r\n\r\n  rule(tokens) {\r\n    tokens.pop();\r\n\r\n    let node = new rule();\r\n    this.init(node, tokens[0][2]);\r\n\r\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\r\n    this.raw(node, 'selector', tokens);\r\n    this.current = node;\r\n  }\r\n\r\n  decl(tokens, customProperty) {\r\n    let node = new declaration();\r\n    this.init(node, tokens[0][2]);\r\n\r\n    let last = tokens[tokens.length - 1];\r\n    if (last[0] === ';') {\r\n      this.semicolon = true;\r\n      tokens.pop();\r\n    }\r\n    node.source.end = this.getPosition(last[3] || last[2]);\r\n\r\n    while (tokens[0][0] !== 'word') {\r\n      if (tokens.length === 1) this.unknownWord(tokens);\r\n      node.raws.before += tokens.shift()[1];\r\n    }\r\n    node.source.start = this.getPosition(tokens[0][2]);\r\n\r\n    node.prop = '';\r\n    while (tokens.length) {\r\n      let type = tokens[0][0];\r\n      if (type === ':' || type === 'space' || type === 'comment') {\r\n        break\r\n      }\r\n      node.prop += tokens.shift()[1];\r\n    }\r\n\r\n    node.raws.between = '';\r\n\r\n    let token;\r\n    while (tokens.length) {\r\n      token = tokens.shift();\r\n\r\n      if (token[0] === ':') {\r\n        node.raws.between += token[1];\r\n        break\r\n      } else {\r\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\r\n          this.unknownWord([token]);\r\n        }\r\n        node.raws.between += token[1];\r\n      }\r\n    }\r\n\r\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\r\n      node.raws.before += node.prop[0];\r\n      node.prop = node.prop.slice(1);\r\n    }\r\n    let firstSpaces = this.spacesAndCommentsFromStart(tokens);\r\n    this.precheckMissedSemicolon(tokens);\r\n\r\n    for (let i = tokens.length - 1; i >= 0; i--) {\r\n      token = tokens[i];\r\n      if (token[1].toLowerCase() === '!important') {\r\n        node.important = true;\r\n        let string = this.stringFrom(tokens, i);\r\n        string = this.spacesFromEnd(tokens) + string;\r\n        if (string !== ' !important') node.raws.important = string;\r\n        break\r\n      } else if (token[1].toLowerCase() === 'important') {\r\n        let cache = tokens.slice(0);\r\n        let str = '';\r\n        for (let j = i; j > 0; j--) {\r\n          let type = cache[j][0];\r\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\r\n            break\r\n          }\r\n          str = cache.pop()[1] + str;\r\n        }\r\n        if (str.trim().indexOf('!') === 0) {\r\n          node.important = true;\r\n          node.raws.important = str;\r\n          tokens = cache;\r\n        }\r\n      }\r\n\r\n      if (token[0] !== 'space' && token[0] !== 'comment') {\r\n        break\r\n      }\r\n    }\r\n\r\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');\r\n    this.raw(node, 'value', tokens);\r\n    if (hasWord) {\r\n      node.raws.between += firstSpaces;\r\n    } else {\r\n      node.value = firstSpaces + node.value;\r\n    }\r\n\r\n    if (node.value.includes(':') && !customProperty) {\r\n      this.checkMissedSemicolon(tokens);\r\n    }\r\n  }\r\n\r\n  atrule(token) {\r\n    let node = new atRule();\r\n    node.name = token[1].slice(1);\r\n    if (node.name === '') {\r\n      this.unnamedAtrule(node, token);\r\n    }\r\n    this.init(node, token[2]);\r\n\r\n    let type;\r\n    let prev;\r\n    let shift;\r\n    let last = false;\r\n    let open = false;\r\n    let params = [];\r\n    let brackets = [];\r\n\r\n    while (!this.tokenizer.endOfFile()) {\r\n      token = this.tokenizer.nextToken();\r\n      type = token[0];\r\n\r\n      if (type === '(' || type === '[') {\r\n        brackets.push(type === '(' ? ')' : ']');\r\n      } else if (type === '{' && brackets.length > 0) {\r\n        brackets.push('}');\r\n      } else if (type === brackets[brackets.length - 1]) {\r\n        brackets.pop();\r\n      }\r\n\r\n      if (brackets.length === 0) {\r\n        if (type === ';') {\r\n          node.source.end = this.getPosition(token[2]);\r\n          this.semicolon = true;\r\n          break\r\n        } else if (type === '{') {\r\n          open = true;\r\n          break\r\n        } else if (type === '}') {\r\n          if (params.length > 0) {\r\n            shift = params.length - 1;\r\n            prev = params[shift];\r\n            while (prev && prev[0] === 'space') {\r\n              prev = params[--shift];\r\n            }\r\n            if (prev) {\r\n              node.source.end = this.getPosition(prev[3] || prev[2]);\r\n            }\r\n          }\r\n          this.end(token);\r\n          break\r\n        } else {\r\n          params.push(token);\r\n        }\r\n      } else {\r\n        params.push(token);\r\n      }\r\n\r\n      if (this.tokenizer.endOfFile()) {\r\n        last = true;\r\n        break\r\n      }\r\n    }\r\n\r\n    node.raws.between = this.spacesAndCommentsFromEnd(params);\r\n    if (params.length) {\r\n      node.raws.afterName = this.spacesAndCommentsFromStart(params);\r\n      this.raw(node, 'params', params);\r\n      if (last) {\r\n        token = params[params.length - 1];\r\n        node.source.end = this.getPosition(token[3] || token[2]);\r\n        this.spaces = node.raws.between;\r\n        node.raws.between = '';\r\n      }\r\n    } else {\r\n      node.raws.afterName = '';\r\n      node.params = '';\r\n    }\r\n\r\n    if (open) {\r\n      node.nodes = [];\r\n      this.current = node;\r\n    }\r\n  }\r\n\r\n  end(token) {\r\n    if (this.current.nodes && this.current.nodes.length) {\r\n      this.current.raws.semicolon = this.semicolon;\r\n    }\r\n    this.semicolon = false;\r\n\r\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\r\n    this.spaces = '';\r\n\r\n    if (this.current.parent) {\r\n      this.current.source.end = this.getPosition(token[2]);\r\n      this.current = this.current.parent;\r\n    } else {\r\n      this.unexpectedClose(token);\r\n    }\r\n  }\r\n\r\n  endFile() {\r\n    if (this.current.parent) this.unclosedBlock();\r\n    if (this.current.nodes && this.current.nodes.length) {\r\n      this.current.raws.semicolon = this.semicolon;\r\n    }\r\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\r\n  }\r\n\r\n  freeSemicolon(token) {\r\n    this.spaces += token[1];\r\n    if (this.current.nodes) {\r\n      let prev = this.current.nodes[this.current.nodes.length - 1];\r\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\r\n        prev.raws.ownSemicolon = this.spaces;\r\n        this.spaces = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Helpers\r\n\r\n  getPosition(offset) {\r\n    let pos = this.input.fromOffset(offset);\r\n    return {\r\n      offset,\r\n      line: pos.line,\r\n      column: pos.col\r\n    }\r\n  }\r\n\r\n  init(node, offset) {\r\n    this.current.push(node);\r\n    node.source = {\r\n      start: this.getPosition(offset),\r\n      input: this.input\r\n    };\r\n    node.raws.before = this.spaces;\r\n    this.spaces = '';\r\n    if (node.type !== 'comment') this.semicolon = false;\r\n  }\r\n\r\n  raw(node, prop, tokens) {\r\n    let token, type;\r\n    let length = tokens.length;\r\n    let value = '';\r\n    let clean = true;\r\n    let next, prev;\r\n    let pattern = /^([#.|])?(\\w)+/i;\r\n\r\n    for (let i = 0; i < length; i += 1) {\r\n      token = tokens[i];\r\n      type = token[0];\r\n\r\n      if (type === 'comment' && node.type === 'rule') {\r\n        prev = tokens[i - 1];\r\n        next = tokens[i + 1];\r\n\r\n        if (\r\n          prev[0] !== 'space' &&\r\n          next[0] !== 'space' &&\r\n          pattern.test(prev[1]) &&\r\n          pattern.test(next[1])\r\n        ) {\r\n          value += token[1];\r\n        } else {\r\n          clean = false;\r\n        }\r\n\r\n        continue\r\n      }\r\n\r\n      if (type === 'comment' || (type === 'space' && i === length - 1)) {\r\n        clean = false;\r\n      } else {\r\n        value += token[1];\r\n      }\r\n    }\r\n    if (!clean) {\r\n      let raw = tokens.reduce((all, i) => all + i[1], '');\r\n      node.raws[prop] = { value, raw };\r\n    }\r\n    node[prop] = value;\r\n  }\r\n\r\n  spacesAndCommentsFromEnd(tokens) {\r\n    let lastTokenType;\r\n    let spaces = '';\r\n    while (tokens.length) {\r\n      lastTokenType = tokens[tokens.length - 1][0];\r\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\r\n      spaces = tokens.pop()[1] + spaces;\r\n    }\r\n    return spaces\r\n  }\r\n\r\n  spacesAndCommentsFromStart(tokens) {\r\n    let next;\r\n    let spaces = '';\r\n    while (tokens.length) {\r\n      next = tokens[0][0];\r\n      if (next !== 'space' && next !== 'comment') break\r\n      spaces += tokens.shift()[1];\r\n    }\r\n    return spaces\r\n  }\r\n\r\n  spacesFromEnd(tokens) {\r\n    let lastTokenType;\r\n    let spaces = '';\r\n    while (tokens.length) {\r\n      lastTokenType = tokens[tokens.length - 1][0];\r\n      if (lastTokenType !== 'space') break\r\n      spaces = tokens.pop()[1] + spaces;\r\n    }\r\n    return spaces\r\n  }\r\n\r\n  stringFrom(tokens, from) {\r\n    let result = '';\r\n    for (let i = from; i < tokens.length; i++) {\r\n      result += tokens[i][1];\r\n    }\r\n    tokens.splice(from, tokens.length - from);\r\n    return result\r\n  }\r\n\r\n  colon(tokens) {\r\n    let brackets = 0;\r\n    let token, type, prev;\r\n    for (let [i, element] of tokens.entries()) {\r\n      token = element;\r\n      type = token[0];\r\n\r\n      if (type === '(') {\r\n        brackets += 1;\r\n      }\r\n      if (type === ')') {\r\n        brackets -= 1;\r\n      }\r\n      if (brackets === 0 && type === ':') {\r\n        if (!prev) {\r\n          this.doubleColon(token);\r\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\r\n          continue\r\n        } else {\r\n          return i\r\n        }\r\n      }\r\n\r\n      prev = token;\r\n    }\r\n    return false\r\n  }\r\n\r\n  // Errors\r\n\r\n  unclosedBracket(bracket) {\r\n    throw this.input.error(\r\n      'Unclosed bracket',\r\n      { offset: bracket[2] },\r\n      { offset: bracket[2] + 1 }\r\n    )\r\n  }\r\n\r\n  unknownWord(tokens) {\r\n    throw this.input.error(\r\n      'Unknown word',\r\n      { offset: tokens[0][2] },\r\n      { offset: tokens[0][2] + tokens[0][1].length }\r\n    )\r\n  }\r\n\r\n  unexpectedClose(token) {\r\n    throw this.input.error(\r\n      'Unexpected }',\r\n      { offset: token[2] },\r\n      { offset: token[2] + 1 }\r\n    )\r\n  }\r\n\r\n  unclosedBlock() {\r\n    let pos = this.current.source.start;\r\n    throw this.input.error('Unclosed block', pos.line, pos.column)\r\n  }\r\n\r\n  doubleColon(token) {\r\n    throw this.input.error(\r\n      'Double colon',\r\n      { offset: token[2] },\r\n      { offset: token[2] + token[1].length }\r\n    )\r\n  }\r\n\r\n  unnamedAtrule(node, token) {\r\n    throw this.input.error(\r\n      'At-rule without name',\r\n      { offset: token[2] },\r\n      { offset: token[2] + token[1].length }\r\n    )\r\n  }\r\n\r\n  precheckMissedSemicolon(/* tokens */) {\r\n    // Hook for Safe Parser\r\n  }\r\n\r\n  checkMissedSemicolon(tokens) {\r\n    let colon = this.colon(tokens);\r\n    if (colon === false) return\r\n\r\n    let founded = 0;\r\n    let token;\r\n    for (let j = colon - 1; j >= 0; j--) {\r\n      token = tokens[j];\r\n      if (token[0] !== 'space') {\r\n        founded += 1;\r\n        if (founded === 2) break\r\n      }\r\n    }\r\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\r\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\r\n    // And because we need it after that one we do +1 to get the next one.\r\n    throw this.input.error(\r\n      'Missed semicolon',\r\n      token[0] === 'word' ? token[3] + 1 : token[2]\r\n    )\r\n  }\r\n}\r\n\r\nvar parser = Parser$1;\r\n\r\nfunction parse$6(css, opts) {\r\n  let input$1 = new input(css, opts);\r\n  let parser$1 = new parser(input$1);\r\n  try {\r\n    parser$1.parse();\r\n  } catch (e) {\r\n    {\r\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\r\n        if (/\\.scss$/i.test(opts.from)) {\r\n          e.message +=\r\n            '\\nYou tried to parse SCSS with ' +\r\n            'the standard CSS parser; ' +\r\n            'try again with the postcss-scss parser';\r\n        } else if (/\\.sass/i.test(opts.from)) {\r\n          e.message +=\r\n            '\\nYou tried to parse Sass with ' +\r\n            'the standard CSS parser; ' +\r\n            'try again with the postcss-sass parser';\r\n        } else if (/\\.less$/i.test(opts.from)) {\r\n          e.message +=\r\n            '\\nYou tried to parse Less with ' +\r\n            'the standard CSS parser; ' +\r\n            'try again with the postcss-less parser';\r\n        }\r\n      }\r\n    }\r\n    throw e\r\n  }\r\n\r\n  return parser$1.root\r\n}\r\n\r\nvar parse_1$1 = parse$6;\r\nparse$6.default = parse$6;\r\n\r\ncontainer.registerParse(parse$6);\r\n\r\nlet { isClean: isClean$3, my: my$3 } = symbols;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst TYPE_TO_CLASS_NAME = {\r\n  document: 'Document',\r\n  root: 'Root',\r\n  atrule: 'AtRule',\r\n  rule: 'Rule',\r\n  decl: 'Declaration',\r\n  comment: 'Comment'\r\n};\r\n\r\nconst PLUGIN_PROPS = {\r\n  postcssPlugin: true,\r\n  prepare: true,\r\n  Once: true,\r\n  Document: true,\r\n  Root: true,\r\n  Declaration: true,\r\n  Rule: true,\r\n  AtRule: true,\r\n  Comment: true,\r\n  DeclarationExit: true,\r\n  RuleExit: true,\r\n  AtRuleExit: true,\r\n  CommentExit: true,\r\n  RootExit: true,\r\n  DocumentExit: true,\r\n  OnceExit: true\r\n};\r\n\r\nconst NOT_VISITORS = {\r\n  postcssPlugin: true,\r\n  prepare: true,\r\n  Once: true\r\n};\r\n\r\nconst CHILDREN = 0;\r\n\r\nfunction isPromise(obj) {\r\n  return typeof obj === 'object' && typeof obj.then === 'function'\r\n}\r\n\r\nfunction getEvents(node) {\r\n  let key = false;\r\n  let type = TYPE_TO_CLASS_NAME[node.type];\r\n  if (node.type === 'decl') {\r\n    key = node.prop.toLowerCase();\r\n  } else if (node.type === 'atrule') {\r\n    key = node.name.toLowerCase();\r\n  }\r\n\r\n  if (key && node.append) {\r\n    return [\r\n      type,\r\n      type + '-' + key,\r\n      CHILDREN,\r\n      type + 'Exit',\r\n      type + 'Exit-' + key\r\n    ]\r\n  } else if (key) {\r\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\r\n  } else if (node.append) {\r\n    return [type, CHILDREN, type + 'Exit']\r\n  } else {\r\n    return [type, type + 'Exit']\r\n  }\r\n}\r\n\r\nfunction toStack(node) {\r\n  let events;\r\n  if (node.type === 'document') {\r\n    events = ['Document', CHILDREN, 'DocumentExit'];\r\n  } else if (node.type === 'root') {\r\n    events = ['Root', CHILDREN, 'RootExit'];\r\n  } else {\r\n    events = getEvents(node);\r\n  }\r\n\r\n  return {\r\n    node,\r\n    events,\r\n    eventIndex: 0,\r\n    visitors: [],\r\n    visitorIndex: 0,\r\n    iterator: 0\r\n  }\r\n}\r\n\r\nfunction cleanMarks(node) {\r\n  node[isClean$3] = false;\r\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\r\n  return node\r\n}\r\n\r\nlet postcss = {};\r\n\r\nclass LazyResult$2 {\r\n  constructor(processor, css, opts) {\r\n    this.stringified = false;\r\n    this.processed = false;\r\n\r\n    let root;\r\n    if (\r\n      typeof css === 'object' &&\r\n      css !== null &&\r\n      (css.type === 'root' || css.type === 'document')\r\n    ) {\r\n      root = cleanMarks(css);\r\n    } else if (css instanceof LazyResult$2 || css instanceof result) {\r\n      root = cleanMarks(css.root);\r\n      if (css.map) {\r\n        if (typeof opts.map === 'undefined') opts.map = {};\r\n        if (!opts.map.inline) opts.map.inline = false;\r\n        opts.map.prev = css.map;\r\n      }\r\n    } else {\r\n      let parser = parse_1$1;\r\n      if (opts.syntax) parser = opts.syntax.parse;\r\n      if (opts.parser) parser = opts.parser;\r\n      if (parser.parse) parser = parser.parse;\r\n\r\n      try {\r\n        root = parser(css, opts);\r\n      } catch (error) {\r\n        this.processed = true;\r\n        this.error = error;\r\n      }\r\n\r\n      if (root && !root[my$3]) {\r\n        /* c8 ignore next 2 */\r\n        container.rebuild(root);\r\n      }\r\n    }\r\n\r\n    this.result = new result(processor, root, opts);\r\n    this.helpers = { ...postcss, result: this.result, postcss };\r\n    this.plugins = this.processor.plugins.map(plugin => {\r\n      if (typeof plugin === 'object' && plugin.prepare) {\r\n        return { ...plugin, ...plugin.prepare(this.result) }\r\n      } else {\r\n        return plugin\r\n      }\r\n    });\r\n  }\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return 'LazyResult'\r\n  }\r\n\r\n  get processor() {\r\n    return this.result.processor\r\n  }\r\n\r\n  get opts() {\r\n    return this.result.opts\r\n  }\r\n\r\n  get css() {\r\n    return this.stringify().css\r\n  }\r\n\r\n  get content() {\r\n    return this.stringify().content\r\n  }\r\n\r\n  get map() {\r\n    return this.stringify().map\r\n  }\r\n\r\n  get root() {\r\n    return this.sync().root\r\n  }\r\n\r\n  get messages() {\r\n    return this.sync().messages\r\n  }\r\n\r\n  warnings() {\r\n    return this.sync().warnings()\r\n  }\r\n\r\n  toString() {\r\n    return this.css\r\n  }\r\n\r\n  then(onFulfilled, onRejected) {\r\n    {\r\n      if (!('from' in this.opts)) {\r\n        warnOnce$2(\r\n          'Without `from` option PostCSS could generate wrong source map ' +\r\n            'and will not find Browserslist config. Set it to CSS file path ' +\r\n            'or to `undefined` to prevent this warning.'\r\n        );\r\n      }\r\n    }\r\n    return this.async().then(onFulfilled, onRejected)\r\n  }\r\n\r\n  catch(onRejected) {\r\n    return this.async().catch(onRejected)\r\n  }\r\n\r\n  finally(onFinally) {\r\n    return this.async().then(onFinally, onFinally)\r\n  }\r\n\r\n  async() {\r\n    if (this.error) return Promise.reject(this.error)\r\n    if (this.processed) return Promise.resolve(this.result)\r\n    if (!this.processing) {\r\n      this.processing = this.runAsync();\r\n    }\r\n    return this.processing\r\n  }\r\n\r\n  sync() {\r\n    if (this.error) throw this.error\r\n    if (this.processed) return this.result\r\n    this.processed = true;\r\n\r\n    if (this.processing) {\r\n      throw this.getAsyncError()\r\n    }\r\n\r\n    for (let plugin of this.plugins) {\r\n      let promise = this.runOnRoot(plugin);\r\n      if (isPromise(promise)) {\r\n        throw this.getAsyncError()\r\n      }\r\n    }\r\n\r\n    this.prepareVisitors();\r\n    if (this.hasListener) {\r\n      let root = this.result.root;\r\n      while (!root[isClean$3]) {\r\n        root[isClean$3] = true;\r\n        this.walkSync(root);\r\n      }\r\n      if (this.listeners.OnceExit) {\r\n        if (root.type === 'document') {\r\n          for (let subRoot of root.nodes) {\r\n            this.visitSync(this.listeners.OnceExit, subRoot);\r\n          }\r\n        } else {\r\n          this.visitSync(this.listeners.OnceExit, root);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.result\r\n  }\r\n\r\n  stringify() {\r\n    if (this.error) throw this.error\r\n    if (this.stringified) return this.result\r\n    this.stringified = true;\r\n\r\n    this.sync();\r\n\r\n    let opts = this.result.opts;\r\n    let str = stringify_1;\r\n    if (opts.syntax) str = opts.syntax.stringify;\r\n    if (opts.stringifier) str = opts.stringifier;\r\n    if (str.stringify) str = str.stringify;\r\n\r\n    let map = new mapGenerator(str, this.result.root, this.result.opts);\r\n    let data = map.generate();\r\n    this.result.css = data[0];\r\n    this.result.map = data[1];\r\n\r\n    return this.result\r\n  }\r\n\r\n  walkSync(node) {\r\n    node[isClean$3] = true;\r\n    let events = getEvents(node);\r\n    for (let event of events) {\r\n      if (event === CHILDREN) {\r\n        if (node.nodes) {\r\n          node.each(child => {\r\n            if (!child[isClean$3]) this.walkSync(child);\r\n          });\r\n        }\r\n      } else {\r\n        let visitors = this.listeners[event];\r\n        if (visitors) {\r\n          if (this.visitSync(visitors, node.toProxy())) return\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  visitSync(visitors, node) {\r\n    for (let [plugin, visitor] of visitors) {\r\n      this.result.lastPlugin = plugin;\r\n      let promise;\r\n      try {\r\n        promise = visitor(node, this.helpers);\r\n      } catch (e) {\r\n        throw this.handleError(e, node.proxyOf)\r\n      }\r\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\r\n        return true\r\n      }\r\n      if (isPromise(promise)) {\r\n        throw this.getAsyncError()\r\n      }\r\n    }\r\n  }\r\n\r\n  runOnRoot(plugin) {\r\n    this.result.lastPlugin = plugin;\r\n    try {\r\n      if (typeof plugin === 'object' && plugin.Once) {\r\n        if (this.result.root.type === 'document') {\r\n          let roots = this.result.root.nodes.map(root =>\r\n            plugin.Once(root, this.helpers)\r\n          );\r\n\r\n          if (isPromise(roots[0])) {\r\n            return Promise.all(roots)\r\n          }\r\n\r\n          return roots\r\n        }\r\n\r\n        return plugin.Once(this.result.root, this.helpers)\r\n      } else if (typeof plugin === 'function') {\r\n        return plugin(this.result.root, this.result)\r\n      }\r\n    } catch (error) {\r\n      throw this.handleError(error)\r\n    }\r\n  }\r\n\r\n  getAsyncError() {\r\n    throw new Error('Use process(css).then(cb) to work with async plugins')\r\n  }\r\n\r\n  handleError(error, node) {\r\n    let plugin = this.result.lastPlugin;\r\n    try {\r\n      if (node) node.addToError(error);\r\n      this.error = error;\r\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\r\n        error.plugin = plugin.postcssPlugin;\r\n        error.setMessage();\r\n      } else if (plugin.postcssVersion) {\r\n        if (({}).NODE_ENV !== 'production') {\r\n          let pluginName = plugin.postcssPlugin;\r\n          let pluginVer = plugin.postcssVersion;\r\n          let runtimeVer = this.result.processor.version;\r\n          let a = pluginVer.split('.');\r\n          let b = runtimeVer.split('.');\r\n\r\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(\r\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\r\n                'version is ' +\r\n                runtimeVer +\r\n                ', but ' +\r\n                pluginName +\r\n                ' uses ' +\r\n                pluginVer +\r\n                '. Perhaps this is the source of the error below.'\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      /* c8 ignore next 3 */\r\n      // eslint-disable-next-line no-console\r\n      if (console && console.error) console.error(err);\r\n    }\r\n    return error\r\n  }\r\n\r\n  async runAsync() {\r\n    this.plugin = 0;\r\n    for (let i = 0; i < this.plugins.length; i++) {\r\n      let plugin = this.plugins[i];\r\n      let promise = this.runOnRoot(plugin);\r\n      if (isPromise(promise)) {\r\n        try {\r\n          await promise;\r\n        } catch (error) {\r\n          throw this.handleError(error)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.prepareVisitors();\r\n    if (this.hasListener) {\r\n      let root = this.result.root;\r\n      while (!root[isClean$3]) {\r\n        root[isClean$3] = true;\r\n        let stack = [toStack(root)];\r\n        while (stack.length > 0) {\r\n          let promise = this.visitTick(stack);\r\n          if (isPromise(promise)) {\r\n            try {\r\n              await promise;\r\n            } catch (e) {\r\n              let node = stack[stack.length - 1].node;\r\n              throw this.handleError(e, node)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.listeners.OnceExit) {\r\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\r\n          this.result.lastPlugin = plugin;\r\n          try {\r\n            if (root.type === 'document') {\r\n              let roots = root.nodes.map(subRoot =>\r\n                visitor(subRoot, this.helpers)\r\n              );\r\n\r\n              await Promise.all(roots);\r\n            } else {\r\n              await visitor(root, this.helpers);\r\n            }\r\n          } catch (e) {\r\n            throw this.handleError(e)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.processed = true;\r\n    return this.stringify()\r\n  }\r\n\r\n  prepareVisitors() {\r\n    this.listeners = {};\r\n    let add = (plugin, type, cb) => {\r\n      if (!this.listeners[type]) this.listeners[type] = [];\r\n      this.listeners[type].push([plugin, cb]);\r\n    };\r\n    for (let plugin of this.plugins) {\r\n      if (typeof plugin === 'object') {\r\n        for (let event in plugin) {\r\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\r\n            throw new Error(\r\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\r\n                `Try to update PostCSS (${this.processor.version} now).`\r\n            )\r\n          }\r\n          if (!NOT_VISITORS[event]) {\r\n            if (typeof plugin[event] === 'object') {\r\n              for (let filter in plugin[event]) {\r\n                if (filter === '*') {\r\n                  add(plugin, event, plugin[event][filter]);\r\n                } else {\r\n                  add(\r\n                    plugin,\r\n                    event + '-' + filter.toLowerCase(),\r\n                    plugin[event][filter]\r\n                  );\r\n                }\r\n              }\r\n            } else if (typeof plugin[event] === 'function') {\r\n              add(plugin, event, plugin[event]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.hasListener = Object.keys(this.listeners).length > 0;\r\n  }\r\n\r\n  visitTick(stack) {\r\n    let visit = stack[stack.length - 1];\r\n    let { node, visitors } = visit;\r\n\r\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\r\n      stack.pop();\r\n      return\r\n    }\r\n\r\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\r\n      let [plugin, visitor] = visitors[visit.visitorIndex];\r\n      visit.visitorIndex += 1;\r\n      if (visit.visitorIndex === visitors.length) {\r\n        visit.visitors = [];\r\n        visit.visitorIndex = 0;\r\n      }\r\n      this.result.lastPlugin = plugin;\r\n      try {\r\n        return visitor(node.toProxy(), this.helpers)\r\n      } catch (e) {\r\n        throw this.handleError(e, node)\r\n      }\r\n    }\r\n\r\n    if (visit.iterator !== 0) {\r\n      let iterator = visit.iterator;\r\n      let child;\r\n      while ((child = node.nodes[node.indexes[iterator]])) {\r\n        node.indexes[iterator] += 1;\r\n        if (!child[isClean$3]) {\r\n          child[isClean$3] = true;\r\n          stack.push(toStack(child));\r\n          return\r\n        }\r\n      }\r\n      visit.iterator = 0;\r\n      delete node.indexes[iterator];\r\n    }\r\n\r\n    let events = visit.events;\r\n    while (visit.eventIndex < events.length) {\r\n      let event = events[visit.eventIndex];\r\n      visit.eventIndex += 1;\r\n      if (event === CHILDREN) {\r\n        if (node.nodes && node.nodes.length) {\r\n          node[isClean$3] = true;\r\n          visit.iterator = node.getIterator();\r\n        }\r\n        return\r\n      } else if (this.listeners[event]) {\r\n        visit.visitors = this.listeners[event];\r\n        return\r\n      }\r\n    }\r\n    stack.pop();\r\n  }\r\n}\r\n\r\nLazyResult$2.registerPostcss = dependant => {\r\n  postcss = dependant;\r\n};\r\n\r\nvar lazyResult = LazyResult$2;\r\nLazyResult$2.default = LazyResult$2;\r\n\r\nroot.registerLazyResult(LazyResult$2);\r\ndocument.registerLazyResult(LazyResult$2);\r\n\r\nclass NoWorkResult {\r\n  constructor(processor, css, opts) {\r\n    css = css.toString();\r\n    this.stringified = false;\r\n\r\n    this._processor = processor;\r\n    this._css = css;\r\n    this._opts = opts;\r\n    this._map = undefined;\r\n    let root;\r\n\r\n    let str = stringify_1;\r\n    this.result = new result(this._processor, root, this._opts);\r\n    this.result.css = css;\r\n\r\n    let self = this;\r\n    Object.defineProperty(this.result, 'root', {\r\n      get() {\r\n        return self.root\r\n      }\r\n    });\r\n\r\n    let map = new mapGenerator(str, root, this._opts, css);\r\n    if (map.isMap()) {\r\n      let [generatedCSS, generatedMap] = map.generate();\r\n      if (generatedCSS) {\r\n        this.result.css = generatedCSS;\r\n      }\r\n      if (generatedMap) {\r\n        this.result.map = generatedMap;\r\n      }\r\n    }\r\n  }\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return 'NoWorkResult'\r\n  }\r\n\r\n  get processor() {\r\n    return this.result.processor\r\n  }\r\n\r\n  get opts() {\r\n    return this.result.opts\r\n  }\r\n\r\n  get css() {\r\n    return this.result.css\r\n  }\r\n\r\n  get content() {\r\n    return this.result.css\r\n  }\r\n\r\n  get map() {\r\n    return this.result.map\r\n  }\r\n\r\n  get root() {\r\n    if (this._root) {\r\n      return this._root\r\n    }\r\n\r\n    let root;\r\n    let parser = parse_1$1;\r\n\r\n    try {\r\n      root = parser(this._css, this._opts);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n\r\n    this._root = root;\r\n\r\n    return root\r\n  }\r\n\r\n  get messages() {\r\n    return []\r\n  }\r\n\r\n  warnings() {\r\n    return []\r\n  }\r\n\r\n  toString() {\r\n    return this._css\r\n  }\r\n\r\n  then(onFulfilled, onRejected) {\r\n    {\r\n      if (!('from' in this._opts)) {\r\n        warnOnce$2(\r\n          'Without `from` option PostCSS could generate wrong source map ' +\r\n            'and will not find Browserslist config. Set it to CSS file path ' +\r\n            'or to `undefined` to prevent this warning.'\r\n        );\r\n      }\r\n    }\r\n\r\n    return this.async().then(onFulfilled, onRejected)\r\n  }\r\n\r\n  catch(onRejected) {\r\n    return this.async().catch(onRejected)\r\n  }\r\n\r\n  finally(onFinally) {\r\n    return this.async().then(onFinally, onFinally)\r\n  }\r\n\r\n  async() {\r\n    if (this.error) return Promise.reject(this.error)\r\n    return Promise.resolve(this.result)\r\n  }\r\n\r\n  sync() {\r\n    if (this.error) throw this.error\r\n    return this.result\r\n  }\r\n}\r\n\r\nvar noWorkResult = NoWorkResult;\r\nNoWorkResult.default = NoWorkResult;\r\n\r\nclass Processor$2 {\r\n  constructor(plugins = []) {\r\n    this.version = '8.4.4';\r\n    this.plugins = this.normalize(plugins);\r\n  }\r\n\r\n  use(plugin) {\r\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\r\n    return this\r\n  }\r\n\r\n  process(css, opts = {}) {\r\n    if (\r\n      this.plugins.length === 0 &&\r\n      typeof opts.parser === 'undefined' &&\r\n      typeof opts.stringifier === 'undefined' &&\r\n      typeof opts.syntax === 'undefined'\r\n    ) {\r\n      return new noWorkResult(this, css, opts)\r\n    } else {\r\n      return new lazyResult(this, css, opts)\r\n    }\r\n  }\r\n\r\n  normalize(plugins) {\r\n    let normalized = [];\r\n    for (let i of plugins) {\r\n      if (i.postcss === true) {\r\n        i = i();\r\n      } else if (i.postcss) {\r\n        i = i.postcss;\r\n      }\r\n\r\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\r\n        normalized = normalized.concat(i.plugins);\r\n      } else if (typeof i === 'object' && i.postcssPlugin) {\r\n        normalized.push(i);\r\n      } else if (typeof i === 'function') {\r\n        normalized.push(i);\r\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\r\n        {\r\n          throw new Error(\r\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\r\n              'one of the syntax/parser/stringifier options as outlined ' +\r\n              'in your PostCSS runner documentation.'\r\n          )\r\n        }\r\n      } else {\r\n        throw new Error(i + ' is not a PostCSS plugin')\r\n      }\r\n    }\r\n    return normalized\r\n  }\r\n}\r\n\r\nvar processor = Processor$2;\r\nProcessor$2.default = Processor$2;\r\n\r\nroot.registerProcessor(Processor$2);\r\ndocument.registerProcessor(Processor$2);\r\n\r\nfunction fromJSON(json, inputs) {\r\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\r\n\r\n  let { inputs: ownInputs, ...defaults } = json;\r\n  if (ownInputs) {\r\n    inputs = [];\r\n    for (let input$1 of ownInputs) {\r\n      let inputHydrated = { ...input$1, __proto__: input.prototype };\r\n      if (inputHydrated.map) {\r\n        inputHydrated.map = {\r\n          ...inputHydrated.map,\r\n          __proto__: previousMap.prototype\r\n        };\r\n      }\r\n      inputs.push(inputHydrated);\r\n    }\r\n  }\r\n  if (defaults.nodes) {\r\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs));\r\n  }\r\n  if (defaults.source) {\r\n    let { inputId, ...source } = defaults.source;\r\n    defaults.source = source;\r\n    if (inputId != null) {\r\n      defaults.source.input = inputs[inputId];\r\n    }\r\n  }\r\n  if (defaults.type === 'root') {\r\n    return new root(defaults)\r\n  } else if (defaults.type === 'decl') {\r\n    return new declaration(defaults)\r\n  } else if (defaults.type === 'rule') {\r\n    return new rule(defaults)\r\n  } else if (defaults.type === 'comment') {\r\n    return new comment(defaults)\r\n  } else if (defaults.type === 'atrule') {\r\n    return new atRule(defaults)\r\n  } else {\r\n    throw new Error('Unknown node type: ' + json.type)\r\n  }\r\n}\r\n\r\nvar fromJSON_1 = fromJSON;\r\nfromJSON.default = fromJSON;\r\n\r\nfunction postcss$1(...plugins) {\r\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\r\n    plugins = plugins[0];\r\n  }\r\n  return new processor(plugins)\r\n}\r\n\r\npostcss$1.plugin = function plugin(name, initializer) {\r\n  // eslint-disable-next-line no-console\r\n  if (console && console.warn) {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(\r\n      name +\r\n        ': postcss.plugin was deprecated. Migration guide:\\n' +\r\n        'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\r\n    );\r\n  }\r\n  function creator(...args) {\r\n    let transformer = initializer(...args);\r\n    transformer.postcssPlugin = name;\r\n    transformer.postcssVersion = new processor().version;\r\n    return transformer\r\n  }\r\n\r\n  let cache;\r\n  Object.defineProperty(creator, 'postcss', {\r\n    get() {\r\n      if (!cache) cache = creator();\r\n      return cache\r\n    }\r\n  });\r\n\r\n  creator.process = function (css, processOpts, pluginOpts) {\r\n    return postcss$1([creator(pluginOpts)]).process(css, processOpts)\r\n  };\r\n\r\n  return creator\r\n};\r\n\r\npostcss$1.stringify = stringify_1;\r\npostcss$1.parse = parse_1$1;\r\npostcss$1.fromJSON = fromJSON_1;\r\npostcss$1.list = list_1;\r\n\r\npostcss$1.comment = defaults => new comment(defaults);\r\npostcss$1.atRule = defaults => new atRule(defaults);\r\npostcss$1.decl = defaults => new declaration(defaults);\r\npostcss$1.rule = defaults => new rule(defaults);\r\npostcss$1.root = defaults => new root(defaults);\r\npostcss$1.document = defaults => new document(defaults);\r\n\r\npostcss$1.CssSyntaxError = cssSyntaxError;\r\npostcss$1.Declaration = declaration;\r\npostcss$1.Container = container;\r\npostcss$1.Processor = processor;\r\npostcss$1.Document = document;\r\npostcss$1.Comment = comment;\r\npostcss$1.Warning = warning;\r\npostcss$1.AtRule = atRule;\r\npostcss$1.Result = result;\r\npostcss$1.Input = input;\r\npostcss$1.Rule = rule;\r\npostcss$1.Root = root;\r\npostcss$1.Node = node_1;\r\n\r\nlazyResult.registerPostcss(postcss$1);\r\n\r\nvar postcss_1 = postcss$1;\r\npostcss$1.default = postcss$1;\r\n\r\nconst trimPlugin = () => {\r\n    return {\r\n        postcssPlugin: 'vue-sfc-trim',\r\n        Once(root) {\r\n            root.walk(({ type, raws }) => {\r\n                if (type === 'rule' || type === 'atrule') {\r\n                    if (raws.before)\r\n                        raws.before = '\\n';\r\n                    if ('after' in raws && raws.after)\r\n                        raws.after = '\\n';\r\n                }\r\n            });\r\n        }\r\n    };\r\n};\r\ntrimPlugin.postcss = true;\r\n\r\nvar unesc_1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = unesc;\r\n\r\n// Many thanks for this post which made this migration much easier.\r\n// https://mathiasbynens.be/notes/css-escapes\r\n\r\n/**\r\n * \r\n * @param {string} str \r\n * @returns {[string, number]|undefined}\r\n */\r\nfunction gobbleHex(str) {\r\n  var lower = str.toLowerCase();\r\n  var hex = '';\r\n  var spaceTerminated = false;\r\n\r\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\r\n    var code = lower.charCodeAt(i); // check to see if we are dealing with a valid hex char [a-f|0-9]\r\n\r\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57; // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\r\n\r\n    spaceTerminated = code === 32;\r\n\r\n    if (!valid) {\r\n      break;\r\n    }\r\n\r\n    hex += lower[i];\r\n  }\r\n\r\n  if (hex.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  var codePoint = parseInt(hex, 16);\r\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF; // Add special case for\r\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\r\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\r\n\r\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\r\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\r\n  }\r\n\r\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\r\n}\r\n\r\nvar CONTAINS_ESCAPE = /\\\\/;\r\n\r\nfunction unesc(str) {\r\n  var needToProcess = CONTAINS_ESCAPE.test(str);\r\n\r\n  if (!needToProcess) {\r\n    return str;\r\n  }\r\n\r\n  var ret = \"\";\r\n\r\n  for (var i = 0; i < str.length; i++) {\r\n    if (str[i] === \"\\\\\") {\r\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\r\n\r\n      if (gobbled !== undefined) {\r\n        ret += gobbled[0];\r\n        i += gobbled[1];\r\n        continue;\r\n      } // Retain a pair of \\\\ if double escaped `\\\\\\\\`\r\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\r\n\r\n\r\n      if (str[i + 1] === \"\\\\\") {\r\n        ret += \"\\\\\";\r\n        i++;\r\n        continue;\r\n      } // if \\\\ is at the end of the string retain it\r\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\r\n\r\n\r\n      if (str.length === i + 1) {\r\n        ret += str[i];\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    ret += str[i];\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar getProp_1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = getProp;\r\n\r\nfunction getProp(obj) {\r\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    props[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  while (props.length > 0) {\r\n    var prop = props.shift();\r\n\r\n    if (!obj[prop]) {\r\n      return undefined;\r\n    }\r\n\r\n    obj = obj[prop];\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar ensureObject_1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = ensureObject;\r\n\r\nfunction ensureObject(obj) {\r\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    props[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  while (props.length > 0) {\r\n    var prop = props.shift();\r\n\r\n    if (!obj[prop]) {\r\n      obj[prop] = {};\r\n    }\r\n\r\n    obj = obj[prop];\r\n  }\r\n}\r\n\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar stripComments_1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = stripComments;\r\n\r\nfunction stripComments(str) {\r\n  var s = \"\";\r\n  var commentStart = str.indexOf(\"/*\");\r\n  var lastEnd = 0;\r\n\r\n  while (commentStart >= 0) {\r\n    s = s + str.slice(lastEnd, commentStart);\r\n    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\r\n\r\n    if (commentEnd < 0) {\r\n      return s;\r\n    }\r\n\r\n    lastEnd = commentEnd + 2;\r\n    commentStart = str.indexOf(\"/*\", lastEnd);\r\n  }\r\n\r\n  s = s + str.slice(lastEnd);\r\n  return s;\r\n}\r\n\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar util$2 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports.stripComments = exports.ensureObject = exports.getProp = exports.unesc = void 0;\r\n\r\nvar _unesc = _interopRequireDefault(unesc_1);\r\n\r\nexports.unesc = _unesc[\"default\"];\r\n\r\nvar _getProp = _interopRequireDefault(getProp_1);\r\n\r\nexports.getProp = _getProp[\"default\"];\r\n\r\nvar _ensureObject = _interopRequireDefault(ensureObject_1);\r\n\r\nexports.ensureObject = _ensureObject[\"default\"];\r\n\r\nvar _stripComments = _interopRequireDefault(stripComments_1);\r\n\r\nexports.stripComments = _stripComments[\"default\"];\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n});\r\n\r\nvar node = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\n\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nvar cloneNode = function cloneNode(obj, parent) {\r\n  if (typeof obj !== 'object' || obj === null) {\r\n    return obj;\r\n  }\r\n\r\n  var cloned = new obj.constructor();\r\n\r\n  for (var i in obj) {\r\n    if (!obj.hasOwnProperty(i)) {\r\n      continue;\r\n    }\r\n\r\n    var value = obj[i];\r\n    var type = typeof value;\r\n\r\n    if (i === 'parent' && type === 'object') {\r\n      if (parent) {\r\n        cloned[i] = parent;\r\n      }\r\n    } else if (value instanceof Array) {\r\n      cloned[i] = value.map(function (j) {\r\n        return cloneNode(j, cloned);\r\n      });\r\n    } else {\r\n      cloned[i] = cloneNode(value, cloned);\r\n    }\r\n  }\r\n\r\n  return cloned;\r\n};\r\n\r\nvar Node = /*#__PURE__*/function () {\r\n  function Node(opts) {\r\n    if (opts === void 0) {\r\n      opts = {};\r\n    }\r\n\r\n    Object.assign(this, opts);\r\n    this.spaces = this.spaces || {};\r\n    this.spaces.before = this.spaces.before || '';\r\n    this.spaces.after = this.spaces.after || '';\r\n  }\r\n\r\n  var _proto = Node.prototype;\r\n\r\n  _proto.remove = function remove() {\r\n    if (this.parent) {\r\n      this.parent.removeChild(this);\r\n    }\r\n\r\n    this.parent = undefined;\r\n    return this;\r\n  };\r\n\r\n  _proto.replaceWith = function replaceWith() {\r\n    if (this.parent) {\r\n      for (var index in arguments) {\r\n        this.parent.insertBefore(this, arguments[index]);\r\n      }\r\n\r\n      this.remove();\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto.next = function next() {\r\n    return this.parent.at(this.parent.index(this) + 1);\r\n  };\r\n\r\n  _proto.prev = function prev() {\r\n    return this.parent.at(this.parent.index(this) - 1);\r\n  };\r\n\r\n  _proto.clone = function clone(overrides) {\r\n    if (overrides === void 0) {\r\n      overrides = {};\r\n    }\r\n\r\n    var cloned = cloneNode(this);\r\n\r\n    for (var name in overrides) {\r\n      cloned[name] = overrides[name];\r\n    }\r\n\r\n    return cloned;\r\n  }\r\n  /**\r\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\r\n   * This allows non standard syntax to be appended to an existing property\r\n   * by specifying the escaped value. By specifying the escaped value,\r\n   * illegal characters are allowed to be directly inserted into css output.\r\n   * @param {string} name the property to set\r\n   * @param {any} value the unescaped value of the property\r\n   * @param {string} valueEscaped optional. the escaped value of the property.\r\n   */\r\n  ;\r\n\r\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\r\n    if (!this.raws) {\r\n      this.raws = {};\r\n    }\r\n\r\n    var originalValue = this[name];\r\n    var originalEscaped = this.raws[name];\r\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\r\n\r\n    if (originalEscaped || valueEscaped !== value) {\r\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\r\n    } else {\r\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\r\n    }\r\n  }\r\n  /**\r\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\r\n   * This allows the escaped value to be specified directly, allowing illegal\r\n   * characters to be directly inserted into css output.\r\n   * @param {string} name the property to set\r\n   * @param {any} value the unescaped value of the property\r\n   * @param {string} valueEscaped the escaped value of the property.\r\n   */\r\n  ;\r\n\r\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\r\n    if (!this.raws) {\r\n      this.raws = {};\r\n    }\r\n\r\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\r\n\r\n    this.raws[name] = valueEscaped;\r\n  }\r\n  /**\r\n   * When you want a value to passed through to CSS directly. This method\r\n   * deletes the corresponding raw value causing the stringifier to fallback\r\n   * to the unescaped value.\r\n   * @param {string} name the property to set.\r\n   * @param {any} value The value that is both escaped and unescaped.\r\n   */\r\n  ;\r\n\r\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\r\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\r\n\r\n    if (this.raws) {\r\n      delete this.raws[name];\r\n    }\r\n  }\r\n  /**\r\n   *\r\n   * @param {number} line The number (starting with 1)\r\n   * @param {number} column The column number (starting with 1)\r\n   */\r\n  ;\r\n\r\n  _proto.isAtPosition = function isAtPosition(line, column) {\r\n    if (this.source && this.source.start && this.source.end) {\r\n      if (this.source.start.line > line) {\r\n        return false;\r\n      }\r\n\r\n      if (this.source.end.line < line) {\r\n        return false;\r\n      }\r\n\r\n      if (this.source.start.line === line && this.source.start.column > column) {\r\n        return false;\r\n      }\r\n\r\n      if (this.source.end.line === line && this.source.end.column < column) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  _proto.stringifyProperty = function stringifyProperty(name) {\r\n    return this.raws && this.raws[name] || this[name];\r\n  };\r\n\r\n  _proto.valueToString = function valueToString() {\r\n    return String(this.stringifyProperty(\"value\"));\r\n  };\r\n\r\n  _proto.toString = function toString() {\r\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\r\n  };\r\n\r\n  _createClass(Node, [{\r\n    key: \"rawSpaceBefore\",\r\n    get: function get() {\r\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\r\n\r\n      if (rawSpace === undefined) {\r\n        rawSpace = this.spaces && this.spaces.before;\r\n      }\r\n\r\n      return rawSpace || \"\";\r\n    },\r\n    set: function set(raw) {\r\n      (0, util$2.ensureObject)(this, \"raws\", \"spaces\");\r\n      this.raws.spaces.before = raw;\r\n    }\r\n  }, {\r\n    key: \"rawSpaceAfter\",\r\n    get: function get() {\r\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\r\n\r\n      if (rawSpace === undefined) {\r\n        rawSpace = this.spaces.after;\r\n      }\r\n\r\n      return rawSpace || \"\";\r\n    },\r\n    set: function set(raw) {\r\n      (0, util$2.ensureObject)(this, \"raws\", \"spaces\");\r\n      this.raws.spaces.after = raw;\r\n    }\r\n  }]);\r\n\r\n  return Node;\r\n}();\r\n\r\nexports[\"default\"] = Node;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar types$1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports.UNIVERSAL = exports.ATTRIBUTE = exports.CLASS = exports.COMBINATOR = exports.COMMENT = exports.ID = exports.NESTING = exports.PSEUDO = exports.ROOT = exports.SELECTOR = exports.STRING = exports.TAG = void 0;\r\nvar TAG = 'tag';\r\nexports.TAG = TAG;\r\nvar STRING = 'string';\r\nexports.STRING = STRING;\r\nvar SELECTOR = 'selector';\r\nexports.SELECTOR = SELECTOR;\r\nvar ROOT = 'root';\r\nexports.ROOT = ROOT;\r\nvar PSEUDO = 'pseudo';\r\nexports.PSEUDO = PSEUDO;\r\nvar NESTING = 'nesting';\r\nexports.NESTING = NESTING;\r\nvar ID = 'id';\r\nexports.ID = ID;\r\nvar COMMENT = 'comment';\r\nexports.COMMENT = COMMENT;\r\nvar COMBINATOR = 'combinator';\r\nexports.COMBINATOR = COMBINATOR;\r\nvar CLASS = 'class';\r\nexports.CLASS = CLASS;\r\nvar ATTRIBUTE = 'attribute';\r\nexports.ATTRIBUTE = ATTRIBUTE;\r\nvar UNIVERSAL = 'universal';\r\nexports.UNIVERSAL = UNIVERSAL;\r\n});\r\n\r\nvar container$1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\nvar types = _interopRequireWildcard(types$1);\r\n\r\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Container = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(Container, _Node);\r\n\r\n  function Container(opts) {\r\n    var _this;\r\n\r\n    _this = _Node.call(this, opts) || this;\r\n\r\n    if (!_this.nodes) {\r\n      _this.nodes = [];\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = Container.prototype;\r\n\r\n  _proto.append = function append(selector) {\r\n    selector.parent = this;\r\n    this.nodes.push(selector);\r\n    return this;\r\n  };\r\n\r\n  _proto.prepend = function prepend(selector) {\r\n    selector.parent = this;\r\n    this.nodes.unshift(selector);\r\n    return this;\r\n  };\r\n\r\n  _proto.at = function at(index) {\r\n    return this.nodes[index];\r\n  };\r\n\r\n  _proto.index = function index(child) {\r\n    if (typeof child === 'number') {\r\n      return child;\r\n    }\r\n\r\n    return this.nodes.indexOf(child);\r\n  };\r\n\r\n  _proto.removeChild = function removeChild(child) {\r\n    child = this.index(child);\r\n    this.at(child).parent = undefined;\r\n    this.nodes.splice(child, 1);\r\n    var index;\r\n\r\n    for (var id in this.indexes) {\r\n      index = this.indexes[id];\r\n\r\n      if (index >= child) {\r\n        this.indexes[id] = index - 1;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto.removeAll = function removeAll() {\r\n    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\r\n      var node = _step.value;\r\n      node.parent = undefined;\r\n    }\r\n\r\n    this.nodes = [];\r\n    return this;\r\n  };\r\n\r\n  _proto.empty = function empty() {\r\n    return this.removeAll();\r\n  };\r\n\r\n  _proto.insertAfter = function insertAfter(oldNode, newNode) {\r\n    newNode.parent = this;\r\n    var oldIndex = this.index(oldNode);\r\n    this.nodes.splice(oldIndex + 1, 0, newNode);\r\n    newNode.parent = this;\r\n    var index;\r\n\r\n    for (var id in this.indexes) {\r\n      index = this.indexes[id];\r\n\r\n      if (oldIndex <= index) {\r\n        this.indexes[id] = index + 1;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto.insertBefore = function insertBefore(oldNode, newNode) {\r\n    newNode.parent = this;\r\n    var oldIndex = this.index(oldNode);\r\n    this.nodes.splice(oldIndex, 0, newNode);\r\n    newNode.parent = this;\r\n    var index;\r\n\r\n    for (var id in this.indexes) {\r\n      index = this.indexes[id];\r\n\r\n      if (index <= oldIndex) {\r\n        this.indexes[id] = index + 1;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\r\n    var found = undefined;\r\n    this.each(function (node) {\r\n      if (node.atPosition) {\r\n        var foundChild = node.atPosition(line, col);\r\n\r\n        if (foundChild) {\r\n          found = foundChild;\r\n          return false;\r\n        }\r\n      } else if (node.isAtPosition(line, col)) {\r\n        found = node;\r\n        return false;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n  /**\r\n   * Return the most specific node at the line and column number given.\r\n   * The source location is based on the original parsed location, locations aren't\r\n   * updated as selector nodes are mutated.\r\n   * \r\n   * Note that this location is relative to the location of the first character\r\n   * of the selector, and not the location of the selector in the overall document\r\n   * when used in conjunction with postcss.\r\n   *\r\n   * If not found, returns undefined.\r\n   * @param {number} line The line number of the node to find. (1-based index)\r\n   * @param {number} col  The column number of the node to find. (1-based index)\r\n   */\r\n  ;\r\n\r\n  _proto.atPosition = function atPosition(line, col) {\r\n    if (this.isAtPosition(line, col)) {\r\n      return this._findChildAtPosition(line, col) || this;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  _proto._inferEndPosition = function _inferEndPosition() {\r\n    if (this.last && this.last.source && this.last.source.end) {\r\n      this.source = this.source || {};\r\n      this.source.end = this.source.end || {};\r\n      Object.assign(this.source.end, this.last.source.end);\r\n    }\r\n  };\r\n\r\n  _proto.each = function each(callback) {\r\n    if (!this.lastEach) {\r\n      this.lastEach = 0;\r\n    }\r\n\r\n    if (!this.indexes) {\r\n      this.indexes = {};\r\n    }\r\n\r\n    this.lastEach++;\r\n    var id = this.lastEach;\r\n    this.indexes[id] = 0;\r\n\r\n    if (!this.length) {\r\n      return undefined;\r\n    }\r\n\r\n    var index, result;\r\n\r\n    while (this.indexes[id] < this.length) {\r\n      index = this.indexes[id];\r\n      result = callback(this.at(index), index);\r\n\r\n      if (result === false) {\r\n        break;\r\n      }\r\n\r\n      this.indexes[id] += 1;\r\n    }\r\n\r\n    delete this.indexes[id];\r\n\r\n    if (result === false) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  _proto.walk = function walk(callback) {\r\n    return this.each(function (node, i) {\r\n      var result = callback(node, i);\r\n\r\n      if (result !== false && node.length) {\r\n        result = node.walk(callback);\r\n      }\r\n\r\n      if (result === false) {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkAttributes = function walkAttributes(callback) {\r\n    var _this2 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.ATTRIBUTE) {\r\n        return callback.call(_this2, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkClasses = function walkClasses(callback) {\r\n    var _this3 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.CLASS) {\r\n        return callback.call(_this3, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkCombinators = function walkCombinators(callback) {\r\n    var _this4 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.COMBINATOR) {\r\n        return callback.call(_this4, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkComments = function walkComments(callback) {\r\n    var _this5 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.COMMENT) {\r\n        return callback.call(_this5, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkIds = function walkIds(callback) {\r\n    var _this6 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.ID) {\r\n        return callback.call(_this6, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkNesting = function walkNesting(callback) {\r\n    var _this7 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.NESTING) {\r\n        return callback.call(_this7, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkPseudos = function walkPseudos(callback) {\r\n    var _this8 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.PSEUDO) {\r\n        return callback.call(_this8, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkTags = function walkTags(callback) {\r\n    var _this9 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.TAG) {\r\n        return callback.call(_this9, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.walkUniversals = function walkUniversals(callback) {\r\n    var _this10 = this;\r\n\r\n    return this.walk(function (selector) {\r\n      if (selector.type === types.UNIVERSAL) {\r\n        return callback.call(_this10, selector);\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.split = function split(callback) {\r\n    var _this11 = this;\r\n\r\n    var current = [];\r\n    return this.reduce(function (memo, node, index) {\r\n      var split = callback.call(_this11, node);\r\n      current.push(node);\r\n\r\n      if (split) {\r\n        memo.push(current);\r\n        current = [];\r\n      } else if (index === _this11.length - 1) {\r\n        memo.push(current);\r\n      }\r\n\r\n      return memo;\r\n    }, []);\r\n  };\r\n\r\n  _proto.map = function map(callback) {\r\n    return this.nodes.map(callback);\r\n  };\r\n\r\n  _proto.reduce = function reduce(callback, memo) {\r\n    return this.nodes.reduce(callback, memo);\r\n  };\r\n\r\n  _proto.every = function every(callback) {\r\n    return this.nodes.every(callback);\r\n  };\r\n\r\n  _proto.some = function some(callback) {\r\n    return this.nodes.some(callback);\r\n  };\r\n\r\n  _proto.filter = function filter(callback) {\r\n    return this.nodes.filter(callback);\r\n  };\r\n\r\n  _proto.sort = function sort(callback) {\r\n    return this.nodes.sort(callback);\r\n  };\r\n\r\n  _proto.toString = function toString() {\r\n    return this.map(String).join('');\r\n  };\r\n\r\n  _createClass(Container, [{\r\n    key: \"first\",\r\n    get: function get() {\r\n      return this.at(0);\r\n    }\r\n  }, {\r\n    key: \"last\",\r\n    get: function get() {\r\n      return this.at(this.length - 1);\r\n    }\r\n  }, {\r\n    key: \"length\",\r\n    get: function get() {\r\n      return this.nodes.length;\r\n    }\r\n  }]);\r\n\r\n  return Container;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = Container;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar root$1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _container = _interopRequireDefault(container$1);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Root = /*#__PURE__*/function (_Container) {\r\n  _inheritsLoose(Root, _Container);\r\n\r\n  function Root(opts) {\r\n    var _this;\r\n\r\n    _this = _Container.call(this, opts) || this;\r\n    _this.type = types$1.ROOT;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = Root.prototype;\r\n\r\n  _proto.toString = function toString() {\r\n    var str = this.reduce(function (memo, selector) {\r\n      memo.push(String(selector));\r\n      return memo;\r\n    }, []).join(',');\r\n    return this.trailingComma ? str + ',' : str;\r\n  };\r\n\r\n  _proto.error = function error(message, options) {\r\n    if (this._error) {\r\n      return this._error(message, options);\r\n    } else {\r\n      return new Error(message);\r\n    }\r\n  };\r\n\r\n  _createClass(Root, [{\r\n    key: \"errorGenerator\",\r\n    set: function set(handler) {\r\n      this._error = handler;\r\n    }\r\n  }]);\r\n\r\n  return Root;\r\n}(_container[\"default\"]);\r\n\r\nexports[\"default\"] = Root;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar selector = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _container = _interopRequireDefault(container$1);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Selector = /*#__PURE__*/function (_Container) {\r\n  _inheritsLoose(Selector, _Container);\r\n\r\n  function Selector(opts) {\r\n    var _this;\r\n\r\n    _this = _Container.call(this, opts) || this;\r\n    _this.type = types$1.SELECTOR;\r\n    return _this;\r\n  }\r\n\r\n  return Selector;\r\n}(_container[\"default\"]);\r\n\r\nexports[\"default\"] = Selector;\r\nmodule.exports = exports.default;\r\n});\r\n\r\n/*! https://mths.be/cssesc v3.0.0 by @mathias */\r\n\r\nvar object = {};\r\nvar hasOwnProperty$3 = object.hasOwnProperty;\r\nvar merge = function merge(options, defaults) {\r\n\tif (!options) {\r\n\t\treturn defaults;\r\n\t}\r\n\tvar result = {};\r\n\tfor (var key in defaults) {\r\n\t\t// `if (defaults.hasOwnProperty(key) { \u2026 }` is not needed here, since\r\n\t\t// only recognized option names are used.\r\n\t\tresult[key] = hasOwnProperty$3.call(options, key) ? options[key] : defaults[key];\r\n\t}\r\n\treturn result;\r\n};\r\n\r\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\r\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\r\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\r\n\r\n// https://mathiasbynens.be/notes/css-escapes#css\r\nvar cssesc = function cssesc(string, options) {\r\n\toptions = merge(options, cssesc.options);\r\n\tif (options.quotes != 'single' && options.quotes != 'double') {\r\n\t\toptions.quotes = 'single';\r\n\t}\r\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\r\n\tvar isIdentifier = options.isIdentifier;\r\n\r\n\tvar firstChar = string.charAt(0);\r\n\tvar output = '';\r\n\tvar counter = 0;\r\n\tvar length = string.length;\r\n\twhile (counter < length) {\r\n\t\tvar character = string.charAt(counter++);\r\n\t\tvar codePoint = character.charCodeAt();\r\n\t\tvar value = void 0;\r\n\t\t// If it\u2019s not a printable ASCII character\u2026\r\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\r\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\r\n\t\t\t\t// It\u2019s a high surrogate, and there is a next character.\r\n\t\t\t\tvar extra = string.charCodeAt(counter++);\r\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\r\n\t\t\t\t\t// next character is low surrogate\r\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// It\u2019s an unmatched surrogate; only append this code unit, in case\r\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\r\n\t\t\t\t\tcounter--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\r\n\t\t} else {\r\n\t\t\tif (options.escapeEverything) {\r\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\r\n\t\t\t\t\tvalue = '\\\\' + character;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\r\n\t\t\t\t}\r\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\r\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\r\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\r\n\t\t\t\tvalue = '\\\\' + character;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = character;\r\n\t\t\t}\r\n\t\t}\r\n\t\toutput += value;\r\n\t}\r\n\r\n\tif (isIdentifier) {\r\n\t\tif (/^-[-\\d]/.test(output)) {\r\n\t\t\toutput = '\\\\-' + output.slice(1);\r\n\t\t} else if (/\\d/.test(firstChar)) {\r\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\r\n\t// since they\u2019re redundant. Note that this is only possible if the escape\r\n\t// sequence isn\u2019t preceded by an odd number of backslashes.\r\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\r\n\t\tif ($1 && $1.length % 2) {\r\n\t\t\t// It\u2019s not safe to remove the space, so don\u2019t.\r\n\t\t\treturn $0;\r\n\t\t}\r\n\t\t// Strip the space.\r\n\t\treturn ($1 || '') + $2;\r\n\t});\r\n\r\n\tif (!isIdentifier && options.wrap) {\r\n\t\treturn quote + output + quote;\r\n\t}\r\n\treturn output;\r\n};\r\n\r\n// Expose default options (so they can be overridden globally).\r\ncssesc.options = {\r\n\t'escapeEverything': false,\r\n\t'isIdentifier': false,\r\n\t'quotes': 'single',\r\n\t'wrap': false\r\n};\r\n\r\ncssesc.version = '3.0.0';\r\n\r\nvar cssesc_1 = cssesc;\r\n\r\nvar className = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _cssesc = _interopRequireDefault(cssesc_1);\r\n\r\n\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar ClassName = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(ClassName, _Node);\r\n\r\n  function ClassName(opts) {\r\n    var _this;\r\n\r\n    _this = _Node.call(this, opts) || this;\r\n    _this.type = types$1.CLASS;\r\n    _this._constructed = true;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = ClassName.prototype;\r\n\r\n  _proto.valueToString = function valueToString() {\r\n    return '.' + _Node.prototype.valueToString.call(this);\r\n  };\r\n\r\n  _createClass(ClassName, [{\r\n    key: \"value\",\r\n    get: function get() {\r\n      return this._value;\r\n    },\r\n    set: function set(v) {\r\n      if (this._constructed) {\r\n        var escaped = (0, _cssesc[\"default\"])(v, {\r\n          isIdentifier: true\r\n        });\r\n\r\n        if (escaped !== v) {\r\n          (0, util$2.ensureObject)(this, \"raws\");\r\n          this.raws.value = escaped;\r\n        } else if (this.raws) {\r\n          delete this.raws.value;\r\n        }\r\n      }\r\n\r\n      this._value = v;\r\n    }\r\n  }]);\r\n\r\n  return ClassName;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = ClassName;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar comment$1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Comment = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(Comment, _Node);\r\n\r\n  function Comment(opts) {\r\n    var _this;\r\n\r\n    _this = _Node.call(this, opts) || this;\r\n    _this.type = types$1.COMMENT;\r\n    return _this;\r\n  }\r\n\r\n  return Comment;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = Comment;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar id = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar ID = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(ID, _Node);\r\n\r\n  function ID(opts) {\r\n    var _this;\r\n\r\n    _this = _Node.call(this, opts) || this;\r\n    _this.type = types$1.ID;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = ID.prototype;\r\n\r\n  _proto.valueToString = function valueToString() {\r\n    return '#' + _Node.prototype.valueToString.call(this);\r\n  };\r\n\r\n  return ID;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = ID;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar namespace = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _cssesc = _interopRequireDefault(cssesc_1);\r\n\r\n\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Namespace = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(Namespace, _Node);\r\n\r\n  function Namespace() {\r\n    return _Node.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Namespace.prototype;\r\n\r\n  _proto.qualifiedName = function qualifiedName(value) {\r\n    if (this.namespace) {\r\n      return this.namespaceString + \"|\" + value;\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  _proto.valueToString = function valueToString() {\r\n    return this.qualifiedName(_Node.prototype.valueToString.call(this));\r\n  };\r\n\r\n  _createClass(Namespace, [{\r\n    key: \"namespace\",\r\n    get: function get() {\r\n      return this._namespace;\r\n    },\r\n    set: function set(namespace) {\r\n      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\r\n        this._namespace = namespace;\r\n\r\n        if (this.raws) {\r\n          delete this.raws.namespace;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      var escaped = (0, _cssesc[\"default\"])(namespace, {\r\n        isIdentifier: true\r\n      });\r\n      this._namespace = namespace;\r\n\r\n      if (escaped !== namespace) {\r\n        (0, util$2.ensureObject)(this, \"raws\");\r\n        this.raws.namespace = escaped;\r\n      } else if (this.raws) {\r\n        delete this.raws.namespace;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"ns\",\r\n    get: function get() {\r\n      return this._namespace;\r\n    },\r\n    set: function set(namespace) {\r\n      this.namespace = namespace;\r\n    }\r\n  }, {\r\n    key: \"namespaceString\",\r\n    get: function get() {\r\n      if (this.namespace) {\r\n        var ns = this.stringifyProperty(\"namespace\");\r\n\r\n        if (ns === true) {\r\n          return '';\r\n        } else {\r\n          return ns;\r\n        }\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n  }]);\r\n\r\n  return Namespace;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = Namespace;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar tag = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _namespace = _interopRequireDefault(namespace);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Tag = /*#__PURE__*/function (_Namespace) {\r\n  _inheritsLoose(Tag, _Namespace);\r\n\r\n  function Tag(opts) {\r\n    var _this;\r\n\r\n    _this = _Namespace.call(this, opts) || this;\r\n    _this.type = types$1.TAG;\r\n    return _this;\r\n  }\r\n\r\n  return Tag;\r\n}(_namespace[\"default\"]);\r\n\r\nexports[\"default\"] = Tag;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar string = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar String = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(String, _Node);\r\n\r\n  function String(opts) {\r\n    var _this;\r\n\r\n    _this = _Node.call(this, opts) || this;\r\n    _this.type = types$1.STRING;\r\n    return _this;\r\n  }\r\n\r\n  return String;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = String;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar pseudo = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _container = _interopRequireDefault(container$1);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Pseudo = /*#__PURE__*/function (_Container) {\r\n  _inheritsLoose(Pseudo, _Container);\r\n\r\n  function Pseudo(opts) {\r\n    var _this;\r\n\r\n    _this = _Container.call(this, opts) || this;\r\n    _this.type = types$1.PSEUDO;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = Pseudo.prototype;\r\n\r\n  _proto.toString = function toString() {\r\n    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\r\n    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\r\n  };\r\n\r\n  return Pseudo;\r\n}(_container[\"default\"]);\r\n\r\nexports[\"default\"] = Pseudo;\r\nmodule.exports = exports.default;\r\n});\r\n\r\n/**\r\n * For Node.js, simply re-export the core `util.deprecate` function.\r\n */\r\n\r\nvar node$1 = require$$0.deprecate;\r\n\r\nvar attribute = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports.unescapeValue = unescapeValue;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _cssesc = _interopRequireDefault(cssesc_1);\r\n\r\nvar _unesc = _interopRequireDefault(unesc_1);\r\n\r\nvar _namespace = _interopRequireDefault(namespace);\r\n\r\n\r\n\r\nvar _CSSESC_QUOTE_OPTIONS;\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\n\r\n\r\nvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\r\nvar warnOfDeprecatedValueAssignment = node$1(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\r\nvar warnOfDeprecatedQuotedAssignment = node$1(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\r\nvar warnOfDeprecatedConstructor = node$1(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\r\n\r\nfunction unescapeValue(value) {\r\n  var deprecatedUsage = false;\r\n  var quoteMark = null;\r\n  var unescaped = value;\r\n  var m = unescaped.match(WRAPPED_IN_QUOTES);\r\n\r\n  if (m) {\r\n    quoteMark = m[1];\r\n    unescaped = m[2];\r\n  }\r\n\r\n  unescaped = (0, _unesc[\"default\"])(unescaped);\r\n\r\n  if (unescaped !== value) {\r\n    deprecatedUsage = true;\r\n  }\r\n\r\n  return {\r\n    deprecatedUsage: deprecatedUsage,\r\n    unescaped: unescaped,\r\n    quoteMark: quoteMark\r\n  };\r\n}\r\n\r\nfunction handleDeprecatedContructorOpts(opts) {\r\n  if (opts.quoteMark !== undefined) {\r\n    return opts;\r\n  }\r\n\r\n  if (opts.value === undefined) {\r\n    return opts;\r\n  }\r\n\r\n  warnOfDeprecatedConstructor();\r\n\r\n  var _unescapeValue = unescapeValue(opts.value),\r\n      quoteMark = _unescapeValue.quoteMark,\r\n      unescaped = _unescapeValue.unescaped;\r\n\r\n  if (!opts.raws) {\r\n    opts.raws = {};\r\n  }\r\n\r\n  if (opts.raws.value === undefined) {\r\n    opts.raws.value = opts.value;\r\n  }\r\n\r\n  opts.value = unescaped;\r\n  opts.quoteMark = quoteMark;\r\n  return opts;\r\n}\r\n\r\nvar Attribute = /*#__PURE__*/function (_Namespace) {\r\n  _inheritsLoose(Attribute, _Namespace);\r\n\r\n  function Attribute(opts) {\r\n    var _this;\r\n\r\n    if (opts === void 0) {\r\n      opts = {};\r\n    }\r\n\r\n    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\r\n    _this.type = types$1.ATTRIBUTE;\r\n    _this.raws = _this.raws || {};\r\n    Object.defineProperty(_this.raws, 'unquoted', {\r\n      get: node$1(function () {\r\n        return _this.value;\r\n      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\r\n      set: node$1(function () {\r\n        return _this.value;\r\n      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\r\n    });\r\n    _this._constructed = true;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Returns the Attribute's value quoted such that it would be legal to use\r\n   * in the value of a css file. The original value's quotation setting\r\n   * used for stringification is left unchanged. See `setValue(value, options)`\r\n   * if you want to control the quote settings of a new value for the attribute.\r\n   *\r\n   * You can also change the quotation used for the current value by setting quoteMark.\r\n   *\r\n   * Options:\r\n   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\r\n   *     option is not set, the original value for quoteMark will be used. If\r\n   *     indeterminate, a double quote is used. The legal values are:\r\n   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\r\n   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\r\n   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\r\n   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\r\n   *     over the quoteMark option value.\r\n   *   * smart {boolean} - if true, will select a quote mark based on the value\r\n   *     and the other options specified here. See the `smartQuoteMark()`\r\n   *     method.\r\n   **/\r\n\r\n\r\n  var _proto = Attribute.prototype;\r\n\r\n  _proto.getQuotedValue = function getQuotedValue(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var quoteMark = this._determineQuoteMark(options);\r\n\r\n    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\r\n    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\r\n    return escaped;\r\n  };\r\n\r\n  _proto._determineQuoteMark = function _determineQuoteMark(options) {\r\n    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\r\n  }\r\n  /**\r\n   * Set the unescaped value with the specified quotation options. The value\r\n   * provided must not include any wrapping quote marks -- those quotes will\r\n   * be interpreted as part of the value and escaped accordingly.\r\n   */\r\n  ;\r\n\r\n  _proto.setValue = function setValue(value, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this._value = value;\r\n    this._quoteMark = this._determineQuoteMark(options);\r\n\r\n    this._syncRawValue();\r\n  }\r\n  /**\r\n   * Intelligently select a quoteMark value based on the value's contents. If\r\n   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\r\n   * mark will be picked that minimizes the number of escapes.\r\n   *\r\n   * If there's no clear winner, the quote mark from these options is used,\r\n   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\r\n   * true). If the quoteMark is unspecified, a double quote is used.\r\n   *\r\n   * @param options This takes the quoteMark and preferCurrentQuoteMark options\r\n   * from the quoteValue method.\r\n   */\r\n  ;\r\n\r\n  _proto.smartQuoteMark = function smartQuoteMark(options) {\r\n    var v = this.value;\r\n    var numSingleQuotes = v.replace(/[^']/g, '').length;\r\n    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\r\n\r\n    if (numSingleQuotes + numDoubleQuotes === 0) {\r\n      var escaped = (0, _cssesc[\"default\"])(v, {\r\n        isIdentifier: true\r\n      });\r\n\r\n      if (escaped === v) {\r\n        return Attribute.NO_QUOTE;\r\n      } else {\r\n        var pref = this.preferredQuoteMark(options);\r\n\r\n        if (pref === Attribute.NO_QUOTE) {\r\n          // pick a quote mark that isn't none and see if it's smaller\r\n          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\r\n          var opts = CSSESC_QUOTE_OPTIONS[quote];\r\n          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\r\n\r\n          if (quoteValue.length < escaped.length) {\r\n            return quote;\r\n          }\r\n        }\r\n\r\n        return pref;\r\n      }\r\n    } else if (numDoubleQuotes === numSingleQuotes) {\r\n      return this.preferredQuoteMark(options);\r\n    } else if (numDoubleQuotes < numSingleQuotes) {\r\n      return Attribute.DOUBLE_QUOTE;\r\n    } else {\r\n      return Attribute.SINGLE_QUOTE;\r\n    }\r\n  }\r\n  /**\r\n   * Selects the preferred quote mark based on the options and the current quote mark value.\r\n   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\r\n   * instead.\r\n   */\r\n  ;\r\n\r\n  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\r\n    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\r\n\r\n    if (quoteMark === undefined) {\r\n      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\r\n    }\r\n\r\n    if (quoteMark === undefined) {\r\n      quoteMark = Attribute.DOUBLE_QUOTE;\r\n    }\r\n\r\n    return quoteMark;\r\n  };\r\n\r\n  _proto._syncRawValue = function _syncRawValue() {\r\n    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\r\n\r\n    if (rawValue === this._value) {\r\n      if (this.raws) {\r\n        delete this.raws.value;\r\n      }\r\n    } else {\r\n      this.raws.value = rawValue;\r\n    }\r\n  };\r\n\r\n  _proto._handleEscapes = function _handleEscapes(prop, value) {\r\n    if (this._constructed) {\r\n      var escaped = (0, _cssesc[\"default\"])(value, {\r\n        isIdentifier: true\r\n      });\r\n\r\n      if (escaped !== value) {\r\n        this.raws[prop] = escaped;\r\n      } else {\r\n        delete this.raws[prop];\r\n      }\r\n    }\r\n  };\r\n\r\n  _proto._spacesFor = function _spacesFor(name) {\r\n    var attrSpaces = {\r\n      before: '',\r\n      after: ''\r\n    };\r\n    var spaces = this.spaces[name] || {};\r\n    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\r\n    return Object.assign(attrSpaces, spaces, rawSpaces);\r\n  };\r\n\r\n  _proto._stringFor = function _stringFor(name, spaceName, concat) {\r\n    if (spaceName === void 0) {\r\n      spaceName = name;\r\n    }\r\n\r\n    if (concat === void 0) {\r\n      concat = defaultAttrConcat;\r\n    }\r\n\r\n    var attrSpaces = this._spacesFor(spaceName);\r\n\r\n    return concat(this.stringifyProperty(name), attrSpaces);\r\n  }\r\n  /**\r\n   * returns the offset of the attribute part specified relative to the\r\n   * start of the node of the output string.\r\n   *\r\n   * * \"ns\" - alias for \"namespace\"\r\n   * * \"namespace\" - the namespace if it exists.\r\n   * * \"attribute\" - the attribute name\r\n   * * \"attributeNS\" - the start of the attribute or its namespace\r\n   * * \"operator\" - the match operator of the attribute\r\n   * * \"value\" - The value (string or identifier)\r\n   * * \"insensitive\" - the case insensitivity flag;\r\n   * @param part One of the possible values inside an attribute.\r\n   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\r\n   */\r\n  ;\r\n\r\n  _proto.offsetOf = function offsetOf(name) {\r\n    var count = 1;\r\n\r\n    var attributeSpaces = this._spacesFor(\"attribute\");\r\n\r\n    count += attributeSpaces.before.length;\r\n\r\n    if (name === \"namespace\" || name === \"ns\") {\r\n      return this.namespace ? count : -1;\r\n    }\r\n\r\n    if (name === \"attributeNS\") {\r\n      return count;\r\n    }\r\n\r\n    count += this.namespaceString.length;\r\n\r\n    if (this.namespace) {\r\n      count += 1;\r\n    }\r\n\r\n    if (name === \"attribute\") {\r\n      return count;\r\n    }\r\n\r\n    count += this.stringifyProperty(\"attribute\").length;\r\n    count += attributeSpaces.after.length;\r\n\r\n    var operatorSpaces = this._spacesFor(\"operator\");\r\n\r\n    count += operatorSpaces.before.length;\r\n    var operator = this.stringifyProperty(\"operator\");\r\n\r\n    if (name === \"operator\") {\r\n      return operator ? count : -1;\r\n    }\r\n\r\n    count += operator.length;\r\n    count += operatorSpaces.after.length;\r\n\r\n    var valueSpaces = this._spacesFor(\"value\");\r\n\r\n    count += valueSpaces.before.length;\r\n    var value = this.stringifyProperty(\"value\");\r\n\r\n    if (name === \"value\") {\r\n      return value ? count : -1;\r\n    }\r\n\r\n    count += value.length;\r\n    count += valueSpaces.after.length;\r\n\r\n    var insensitiveSpaces = this._spacesFor(\"insensitive\");\r\n\r\n    count += insensitiveSpaces.before.length;\r\n\r\n    if (name === \"insensitive\") {\r\n      return this.insensitive ? count : -1;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  _proto.toString = function toString() {\r\n    var _this2 = this;\r\n\r\n    var selector = [this.rawSpaceBefore, '['];\r\n    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\r\n\r\n    if (this.operator && (this.value || this.value === '')) {\r\n      selector.push(this._stringFor('operator'));\r\n      selector.push(this._stringFor('value'));\r\n      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\r\n        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\r\n          attrSpaces.before = \" \";\r\n        }\r\n\r\n        return defaultAttrConcat(attrValue, attrSpaces);\r\n      }));\r\n    }\r\n\r\n    selector.push(']');\r\n    selector.push(this.rawSpaceAfter);\r\n    return selector.join('');\r\n  };\r\n\r\n  _createClass(Attribute, [{\r\n    key: \"quoted\",\r\n    get: function get() {\r\n      var qm = this.quoteMark;\r\n      return qm === \"'\" || qm === '\"';\r\n    },\r\n    set: function set(value) {\r\n      warnOfDeprecatedQuotedAssignment();\r\n    }\r\n    /**\r\n     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\r\n     * returns `null` if the value is not quoted.\r\n     * returns `undefined` if the quotation state is unknown (this can happen when\r\n     * the attribute is constructed without specifying a quote mark.)\r\n     */\r\n\r\n  }, {\r\n    key: \"quoteMark\",\r\n    get: function get() {\r\n      return this._quoteMark;\r\n    }\r\n    /**\r\n     * Set the quote mark to be used by this attribute's value.\r\n     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\r\n     * value is updated accordingly.\r\n     *\r\n     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\r\n     */\r\n    ,\r\n    set: function set(quoteMark) {\r\n      if (!this._constructed) {\r\n        this._quoteMark = quoteMark;\r\n        return;\r\n      }\r\n\r\n      if (this._quoteMark !== quoteMark) {\r\n        this._quoteMark = quoteMark;\r\n\r\n        this._syncRawValue();\r\n      }\r\n    }\r\n  }, {\r\n    key: \"qualifiedAttribute\",\r\n    get: function get() {\r\n      return this.qualifiedName(this.raws.attribute || this.attribute);\r\n    }\r\n  }, {\r\n    key: \"insensitiveFlag\",\r\n    get: function get() {\r\n      return this.insensitive ? 'i' : '';\r\n    }\r\n  }, {\r\n    key: \"value\",\r\n    get: function get() {\r\n      return this._value;\r\n    }\r\n    /**\r\n     * Before 3.0, the value had to be set to an escaped value including any wrapped\r\n     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\r\n     * is unescaped during parsing and any quote marks are removed.\r\n     *\r\n     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\r\n     * a deprecation warning is raised when the new value contains any characters that would\r\n     * require escaping (including if it contains wrapped quotes).\r\n     *\r\n     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\r\n     * how the new value is quoted.\r\n     */\r\n    ,\r\n    set: function set(v) {\r\n      if (this._constructed) {\r\n        var _unescapeValue2 = unescapeValue(v),\r\n            deprecatedUsage = _unescapeValue2.deprecatedUsage,\r\n            unescaped = _unescapeValue2.unescaped,\r\n            quoteMark = _unescapeValue2.quoteMark;\r\n\r\n        if (deprecatedUsage) {\r\n          warnOfDeprecatedValueAssignment();\r\n        }\r\n\r\n        if (unescaped === this._value && quoteMark === this._quoteMark) {\r\n          return;\r\n        }\r\n\r\n        this._value = unescaped;\r\n        this._quoteMark = quoteMark;\r\n\r\n        this._syncRawValue();\r\n      } else {\r\n        this._value = v;\r\n      }\r\n    }\r\n  }, {\r\n    key: \"attribute\",\r\n    get: function get() {\r\n      return this._attribute;\r\n    },\r\n    set: function set(name) {\r\n      this._handleEscapes(\"attribute\", name);\r\n\r\n      this._attribute = name;\r\n    }\r\n  }]);\r\n\r\n  return Attribute;\r\n}(_namespace[\"default\"]);\r\n\r\nexports[\"default\"] = Attribute;\r\nAttribute.NO_QUOTE = null;\r\nAttribute.SINGLE_QUOTE = \"'\";\r\nAttribute.DOUBLE_QUOTE = '\"';\r\nvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\r\n  \"'\": {\r\n    quotes: 'single',\r\n    wrap: true\r\n  },\r\n  '\"': {\r\n    quotes: 'double',\r\n    wrap: true\r\n  }\r\n}, _CSSESC_QUOTE_OPTIONS[null] = {\r\n  isIdentifier: true\r\n}, _CSSESC_QUOTE_OPTIONS);\r\n\r\nfunction defaultAttrConcat(attrValue, attrSpaces) {\r\n  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\r\n}\r\n});\r\n\r\nvar universal = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _namespace = _interopRequireDefault(namespace);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Universal = /*#__PURE__*/function (_Namespace) {\r\n  _inheritsLoose(Universal, _Namespace);\r\n\r\n  function Universal(opts) {\r\n    var _this;\r\n\r\n    _this = _Namespace.call(this, opts) || this;\r\n    _this.type = types$1.UNIVERSAL;\r\n    _this.value = '*';\r\n    return _this;\r\n  }\r\n\r\n  return Universal;\r\n}(_namespace[\"default\"]);\r\n\r\nexports[\"default\"] = Universal;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar combinator = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Combinator = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(Combinator, _Node);\r\n\r\n  function Combinator(opts) {\r\n    var _this;\r\n\r\n    _this = _Node.call(this, opts) || this;\r\n    _this.type = types$1.COMBINATOR;\r\n    return _this;\r\n  }\r\n\r\n  return Combinator;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = Combinator;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar nesting = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _node = _interopRequireDefault(node);\r\n\r\n\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nvar Nesting = /*#__PURE__*/function (_Node) {\r\n  _inheritsLoose(Nesting, _Node);\r\n\r\n  function Nesting(opts) {\r\n    var _this;\r\n\r\n    _this = _Node.call(this, opts) || this;\r\n    _this.type = types$1.NESTING;\r\n    _this.value = '&';\r\n    return _this;\r\n  }\r\n\r\n  return Nesting;\r\n}(_node[\"default\"]);\r\n\r\nexports[\"default\"] = Nesting;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar sortAscending_1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = sortAscending;\r\n\r\nfunction sortAscending(list) {\r\n  return list.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n}\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar tokenTypes$1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports.combinator = exports.word = exports.comment = exports.str = exports.tab = exports.newline = exports.feed = exports.cr = exports.backslash = exports.bang = exports.slash = exports.doubleQuote = exports.singleQuote = exports.space = exports.greaterThan = exports.pipe = exports.equals = exports.plus = exports.caret = exports.tilde = exports.dollar = exports.closeSquare = exports.openSquare = exports.closeParenthesis = exports.openParenthesis = exports.semicolon = exports.colon = exports.comma = exports.at = exports.asterisk = exports.ampersand = void 0;\r\nvar ampersand = 38; // `&`.charCodeAt(0);\r\n\r\nexports.ampersand = ampersand;\r\nvar asterisk = 42; // `*`.charCodeAt(0);\r\n\r\nexports.asterisk = asterisk;\r\nvar at = 64; // `@`.charCodeAt(0);\r\n\r\nexports.at = at;\r\nvar comma = 44; // `,`.charCodeAt(0);\r\n\r\nexports.comma = comma;\r\nvar colon = 58; // `:`.charCodeAt(0);\r\n\r\nexports.colon = colon;\r\nvar semicolon = 59; // `;`.charCodeAt(0);\r\n\r\nexports.semicolon = semicolon;\r\nvar openParenthesis = 40; // `(`.charCodeAt(0);\r\n\r\nexports.openParenthesis = openParenthesis;\r\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\r\n\r\nexports.closeParenthesis = closeParenthesis;\r\nvar openSquare = 91; // `[`.charCodeAt(0);\r\n\r\nexports.openSquare = openSquare;\r\nvar closeSquare = 93; // `]`.charCodeAt(0);\r\n\r\nexports.closeSquare = closeSquare;\r\nvar dollar = 36; // `$`.charCodeAt(0);\r\n\r\nexports.dollar = dollar;\r\nvar tilde = 126; // `~`.charCodeAt(0);\r\n\r\nexports.tilde = tilde;\r\nvar caret = 94; // `^`.charCodeAt(0);\r\n\r\nexports.caret = caret;\r\nvar plus = 43; // `+`.charCodeAt(0);\r\n\r\nexports.plus = plus;\r\nvar equals = 61; // `=`.charCodeAt(0);\r\n\r\nexports.equals = equals;\r\nvar pipe = 124; // `|`.charCodeAt(0);\r\n\r\nexports.pipe = pipe;\r\nvar greaterThan = 62; // `>`.charCodeAt(0);\r\n\r\nexports.greaterThan = greaterThan;\r\nvar space = 32; // ` `.charCodeAt(0);\r\n\r\nexports.space = space;\r\nvar singleQuote = 39; // `'`.charCodeAt(0);\r\n\r\nexports.singleQuote = singleQuote;\r\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\r\n\r\nexports.doubleQuote = doubleQuote;\r\nvar slash = 47; // `/`.charCodeAt(0);\r\n\r\nexports.slash = slash;\r\nvar bang = 33; // `!`.charCodeAt(0);\r\n\r\nexports.bang = bang;\r\nvar backslash = 92; // '\\\\'.charCodeAt(0);\r\n\r\nexports.backslash = backslash;\r\nvar cr = 13; // '\\r'.charCodeAt(0);\r\n\r\nexports.cr = cr;\r\nvar feed = 12; // '\\f'.charCodeAt(0);\r\n\r\nexports.feed = feed;\r\nvar newline = 10; // '\\n'.charCodeAt(0);\r\n\r\nexports.newline = newline;\r\nvar tab = 9; // '\\t'.charCodeAt(0);\r\n// Expose aliases primarily for readability.\r\n\r\nexports.tab = tab;\r\nvar str = singleQuote; // No good single character representation!\r\n\r\nexports.str = str;\r\nvar comment = -1;\r\nexports.comment = comment;\r\nvar word = -2;\r\nexports.word = word;\r\nvar combinator = -3;\r\nexports.combinator = combinator;\r\n});\r\n\r\nvar tokenize_1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = tokenize;\r\nexports.FIELDS = void 0;\r\n\r\nvar t = _interopRequireWildcard(tokenTypes$1);\r\n\r\nvar _unescapable, _wordDelimiters;\r\n\r\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\nvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\r\nvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\r\nvar hex = {};\r\nvar hexChars = \"0123456789abcdefABCDEF\";\r\n\r\nfor (var i = 0; i < hexChars.length; i++) {\r\n  hex[hexChars.charCodeAt(i)] = true;\r\n}\r\n/**\r\n *  Returns the last index of the bar css word\r\n * @param {string} css The string in which the word begins\r\n * @param {number} start The index into the string where word's first letter occurs\r\n */\r\n\r\n\r\nfunction consumeWord(css, start) {\r\n  var next = start;\r\n  var code;\r\n\r\n  do {\r\n    code = css.charCodeAt(next);\r\n\r\n    if (wordDelimiters[code]) {\r\n      return next - 1;\r\n    } else if (code === t.backslash) {\r\n      next = consumeEscape(css, next) + 1;\r\n    } else {\r\n      // All other characters are part of the word\r\n      next++;\r\n    }\r\n  } while (next < css.length);\r\n\r\n  return next - 1;\r\n}\r\n/**\r\n *  Returns the last index of the escape sequence\r\n * @param {string} css The string in which the sequence begins\r\n * @param {number} start The index into the string where escape character (`\\`) occurs.\r\n */\r\n\r\n\r\nfunction consumeEscape(css, start) {\r\n  var next = start;\r\n  var code = css.charCodeAt(next + 1);\r\n\r\n  if (unescapable[code]) ; else if (hex[code]) {\r\n    var hexDigits = 0; // consume up to 6 hex chars\r\n\r\n    do {\r\n      next++;\r\n      hexDigits++;\r\n      code = css.charCodeAt(next + 1);\r\n    } while (hex[code] && hexDigits < 6); // if fewer than 6 hex chars, a trailing space ends the escape\r\n\r\n\r\n    if (hexDigits < 6 && code === t.space) {\r\n      next++;\r\n    }\r\n  } else {\r\n    // the next char is part of the current word\r\n    next++;\r\n  }\r\n\r\n  return next;\r\n}\r\n\r\nvar FIELDS = {\r\n  TYPE: 0,\r\n  START_LINE: 1,\r\n  START_COL: 2,\r\n  END_LINE: 3,\r\n  END_COL: 4,\r\n  START_POS: 5,\r\n  END_POS: 6\r\n};\r\nexports.FIELDS = FIELDS;\r\n\r\nfunction tokenize(input) {\r\n  var tokens = [];\r\n  var css = input.css.valueOf();\r\n  var _css = css,\r\n      length = _css.length;\r\n  var offset = -1;\r\n  var line = 1;\r\n  var start = 0;\r\n  var end = 0;\r\n  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\r\n\r\n  function unclosed(what, fix) {\r\n    if (input.safe) {\r\n      // fyi: this is never set to true.\r\n      css += fix;\r\n      next = css.length - 1;\r\n    } else {\r\n      throw input.error('Unclosed ' + what, line, start - offset, start);\r\n    }\r\n  }\r\n\r\n  while (start < length) {\r\n    code = css.charCodeAt(start);\r\n\r\n    if (code === t.newline) {\r\n      offset = start;\r\n      line += 1;\r\n    }\r\n\r\n    switch (code) {\r\n      case t.space:\r\n      case t.tab:\r\n      case t.newline:\r\n      case t.cr:\r\n      case t.feed:\r\n        next = start;\r\n\r\n        do {\r\n          next += 1;\r\n          code = css.charCodeAt(next);\r\n\r\n          if (code === t.newline) {\r\n            offset = next;\r\n            line += 1;\r\n          }\r\n        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\r\n\r\n        tokenType = t.space;\r\n        endLine = line;\r\n        endColumn = next - offset - 1;\r\n        end = next;\r\n        break;\r\n\r\n      case t.plus:\r\n      case t.greaterThan:\r\n      case t.tilde:\r\n      case t.pipe:\r\n        next = start;\r\n\r\n        do {\r\n          next += 1;\r\n          code = css.charCodeAt(next);\r\n        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\r\n\r\n        tokenType = t.combinator;\r\n        endLine = line;\r\n        endColumn = start - offset;\r\n        end = next;\r\n        break;\r\n      // Consume these characters as single tokens.\r\n\r\n      case t.asterisk:\r\n      case t.ampersand:\r\n      case t.bang:\r\n      case t.comma:\r\n      case t.equals:\r\n      case t.dollar:\r\n      case t.caret:\r\n      case t.openSquare:\r\n      case t.closeSquare:\r\n      case t.colon:\r\n      case t.semicolon:\r\n      case t.openParenthesis:\r\n      case t.closeParenthesis:\r\n        next = start;\r\n        tokenType = code;\r\n        endLine = line;\r\n        endColumn = start - offset;\r\n        end = next + 1;\r\n        break;\r\n\r\n      case t.singleQuote:\r\n      case t.doubleQuote:\r\n        quote = code === t.singleQuote ? \"'\" : '\"';\r\n        next = start;\r\n\r\n        do {\r\n          escaped = false;\r\n          next = css.indexOf(quote, next + 1);\r\n\r\n          if (next === -1) {\r\n            unclosed('quote', quote);\r\n          }\r\n\r\n          escapePos = next;\r\n\r\n          while (css.charCodeAt(escapePos - 1) === t.backslash) {\r\n            escapePos -= 1;\r\n            escaped = !escaped;\r\n          }\r\n        } while (escaped);\r\n\r\n        tokenType = t.str;\r\n        endLine = line;\r\n        endColumn = start - offset;\r\n        end = next + 1;\r\n        break;\r\n\r\n      default:\r\n        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\r\n          next = css.indexOf('*/', start + 2) + 1;\r\n\r\n          if (next === 0) {\r\n            unclosed('comment', '*/');\r\n          }\r\n\r\n          content = css.slice(start, next + 1);\r\n          lines = content.split('\\n');\r\n          last = lines.length - 1;\r\n\r\n          if (last > 0) {\r\n            nextLine = line + last;\r\n            nextOffset = next - lines[last].length;\r\n          } else {\r\n            nextLine = line;\r\n            nextOffset = offset;\r\n          }\r\n\r\n          tokenType = t.comment;\r\n          line = nextLine;\r\n          endLine = nextLine;\r\n          endColumn = next - nextOffset;\r\n        } else if (code === t.slash) {\r\n          next = start;\r\n          tokenType = code;\r\n          endLine = line;\r\n          endColumn = start - offset;\r\n          end = next + 1;\r\n        } else {\r\n          next = consumeWord(css, start);\r\n          tokenType = t.word;\r\n          endLine = line;\r\n          endColumn = next - offset;\r\n        }\r\n\r\n        end = next + 1;\r\n        break;\r\n    } // Ensure that the token structure remains consistent\r\n\r\n\r\n    tokens.push([tokenType, // [0] Token type\r\n    line, // [1] Starting line\r\n    start - offset, // [2] Starting column\r\n    endLine, // [3] Ending line\r\n    endColumn, // [4] Ending column\r\n    start, // [5] Start position / Source index\r\n    end // [6] End position\r\n    ]); // Reset offset for the next token\r\n\r\n    if (nextOffset) {\r\n      offset = nextOffset;\r\n      nextOffset = null;\r\n    }\r\n\r\n    start = end;\r\n  }\r\n\r\n  return tokens;\r\n}\r\n});\r\n\r\nvar parser$1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _root = _interopRequireDefault(root$1);\r\n\r\nvar _selector = _interopRequireDefault(selector);\r\n\r\nvar _className = _interopRequireDefault(className);\r\n\r\nvar _comment = _interopRequireDefault(comment$1);\r\n\r\nvar _id = _interopRequireDefault(id);\r\n\r\nvar _tag = _interopRequireDefault(tag);\r\n\r\nvar _string = _interopRequireDefault(string);\r\n\r\nvar _pseudo = _interopRequireDefault(pseudo);\r\n\r\nvar _attribute = _interopRequireWildcard(attribute);\r\n\r\nvar _universal = _interopRequireDefault(universal);\r\n\r\nvar _combinator = _interopRequireDefault(combinator);\r\n\r\nvar _nesting = _interopRequireDefault(nesting);\r\n\r\nvar _sortAscending = _interopRequireDefault(sortAscending_1);\r\n\r\nvar _tokenize = _interopRequireWildcard(tokenize_1);\r\n\r\nvar tokens = _interopRequireWildcard(tokenTypes$1);\r\n\r\nvar types = _interopRequireWildcard(types$1);\r\n\r\n\r\n\r\nvar _WHITESPACE_TOKENS, _Object$assign;\r\n\r\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\r\nvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\r\n\r\nfunction tokenStart(token) {\r\n  return {\r\n    line: token[_tokenize.FIELDS.START_LINE],\r\n    column: token[_tokenize.FIELDS.START_COL]\r\n  };\r\n}\r\n\r\nfunction tokenEnd(token) {\r\n  return {\r\n    line: token[_tokenize.FIELDS.END_LINE],\r\n    column: token[_tokenize.FIELDS.END_COL]\r\n  };\r\n}\r\n\r\nfunction getSource(startLine, startColumn, endLine, endColumn) {\r\n  return {\r\n    start: {\r\n      line: startLine,\r\n      column: startColumn\r\n    },\r\n    end: {\r\n      line: endLine,\r\n      column: endColumn\r\n    }\r\n  };\r\n}\r\n\r\nfunction getTokenSource(token) {\r\n  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\r\n}\r\n\r\nfunction getTokenSourceSpan(startToken, endToken) {\r\n  if (!startToken) {\r\n    return undefined;\r\n  }\r\n\r\n  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\r\n}\r\n\r\nfunction unescapeProp(node, prop) {\r\n  var value = node[prop];\r\n\r\n  if (typeof value !== \"string\") {\r\n    return;\r\n  }\r\n\r\n  if (value.indexOf(\"\\\\\") !== -1) {\r\n    (0, util$2.ensureObject)(node, 'raws');\r\n    node[prop] = (0, util$2.unesc)(value);\r\n\r\n    if (node.raws[prop] === undefined) {\r\n      node.raws[prop] = value;\r\n    }\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\nfunction indexesOf(array, item) {\r\n  var i = -1;\r\n  var indexes = [];\r\n\r\n  while ((i = array.indexOf(item, i + 1)) !== -1) {\r\n    indexes.push(i);\r\n  }\r\n\r\n  return indexes;\r\n}\r\n\r\nfunction uniqs() {\r\n  var list = Array.prototype.concat.apply([], arguments);\r\n  return list.filter(function (item, i) {\r\n    return i === list.indexOf(item);\r\n  });\r\n}\r\n\r\nvar Parser = /*#__PURE__*/function () {\r\n  function Parser(rule, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.rule = rule;\r\n    this.options = Object.assign({\r\n      lossy: false,\r\n      safe: false\r\n    }, options);\r\n    this.position = 0;\r\n    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\r\n    this.tokens = (0, _tokenize[\"default\"])({\r\n      css: this.css,\r\n      error: this._errorGenerator(),\r\n      safe: this.options.safe\r\n    });\r\n    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\r\n    this.root = new _root[\"default\"]({\r\n      source: rootSource\r\n    });\r\n    this.root.errorGenerator = this._errorGenerator();\r\n    var selector = new _selector[\"default\"]({\r\n      source: {\r\n        start: {\r\n          line: 1,\r\n          column: 1\r\n        }\r\n      }\r\n    });\r\n    this.root.append(selector);\r\n    this.current = selector;\r\n    this.loop();\r\n  }\r\n\r\n  var _proto = Parser.prototype;\r\n\r\n  _proto._errorGenerator = function _errorGenerator() {\r\n    var _this = this;\r\n\r\n    return function (message, errorOptions) {\r\n      if (typeof _this.rule === 'string') {\r\n        return new Error(message);\r\n      }\r\n\r\n      return _this.rule.error(message, errorOptions);\r\n    };\r\n  };\r\n\r\n  _proto.attribute = function attribute() {\r\n    var attr = [];\r\n    var startingToken = this.currToken;\r\n    this.position++;\r\n\r\n    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\r\n      attr.push(this.currToken);\r\n      this.position++;\r\n    }\r\n\r\n    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\r\n      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\r\n    }\r\n\r\n    var len = attr.length;\r\n    var node = {\r\n      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\r\n      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\r\n    };\r\n\r\n    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\r\n      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\r\n    }\r\n\r\n    var pos = 0;\r\n    var spaceBefore = '';\r\n    var commentBefore = '';\r\n    var lastAdded = null;\r\n    var spaceAfterMeaningfulToken = false;\r\n\r\n    while (pos < len) {\r\n      var token = attr[pos];\r\n      var content = this.content(token);\r\n      var next = attr[pos + 1];\r\n\r\n      switch (token[_tokenize.FIELDS.TYPE]) {\r\n        case tokens.space:\r\n          // if (\r\n          //     len === 1 ||\r\n          //     pos === 0 && this.content(next) === '|'\r\n          // ) {\r\n          //     return this.expected('attribute', token[TOKEN.START_POS], content);\r\n          // }\r\n          spaceAfterMeaningfulToken = true;\r\n\r\n          if (this.options.lossy) {\r\n            break;\r\n          }\r\n\r\n          if (lastAdded) {\r\n            (0, util$2.ensureObject)(node, 'spaces', lastAdded);\r\n            var prevContent = node.spaces[lastAdded].after || '';\r\n            node.spaces[lastAdded].after = prevContent + content;\r\n            var existingComment = (0, util$2.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\r\n\r\n            if (existingComment) {\r\n              node.raws.spaces[lastAdded].after = existingComment + content;\r\n            }\r\n          } else {\r\n            spaceBefore = spaceBefore + content;\r\n            commentBefore = commentBefore + content;\r\n          }\r\n\r\n          break;\r\n\r\n        case tokens.asterisk:\r\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n            node.operator = content;\r\n            lastAdded = 'operator';\r\n          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\r\n            if (spaceBefore) {\r\n              (0, util$2.ensureObject)(node, 'spaces', 'attribute');\r\n              node.spaces.attribute.before = spaceBefore;\r\n              spaceBefore = '';\r\n            }\r\n\r\n            if (commentBefore) {\r\n              (0, util$2.ensureObject)(node, 'raws', 'spaces', 'attribute');\r\n              node.raws.spaces.attribute.before = spaceBefore;\r\n              commentBefore = '';\r\n            }\r\n\r\n            node.namespace = (node.namespace || \"\") + content;\r\n            var rawValue = (0, util$2.getProp)(node, 'raws', 'namespace') || null;\r\n\r\n            if (rawValue) {\r\n              node.raws.namespace += content;\r\n            }\r\n\r\n            lastAdded = 'namespace';\r\n          }\r\n\r\n          spaceAfterMeaningfulToken = false;\r\n          break;\r\n\r\n        case tokens.dollar:\r\n          if (lastAdded === \"value\") {\r\n            var oldRawValue = (0, util$2.getProp)(node, 'raws', 'value');\r\n            node.value += \"$\";\r\n\r\n            if (oldRawValue) {\r\n              node.raws.value = oldRawValue + \"$\";\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        // Falls through\r\n\r\n        case tokens.caret:\r\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n            node.operator = content;\r\n            lastAdded = 'operator';\r\n          }\r\n\r\n          spaceAfterMeaningfulToken = false;\r\n          break;\r\n\r\n        case tokens.combinator:\r\n          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n            node.operator = content;\r\n            lastAdded = 'operator';\r\n          }\r\n\r\n          if (content !== '|') {\r\n            spaceAfterMeaningfulToken = false;\r\n            break;\r\n          }\r\n\r\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\r\n            node.operator = content;\r\n            lastAdded = 'operator';\r\n          } else if (!node.namespace && !node.attribute) {\r\n            node.namespace = true;\r\n          }\r\n\r\n          spaceAfterMeaningfulToken = false;\r\n          break;\r\n\r\n        case tokens.word:\r\n          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.\r\n          !node.operator && !node.namespace) {\r\n            node.namespace = content;\r\n            lastAdded = 'namespace';\r\n          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\r\n            if (spaceBefore) {\r\n              (0, util$2.ensureObject)(node, 'spaces', 'attribute');\r\n              node.spaces.attribute.before = spaceBefore;\r\n              spaceBefore = '';\r\n            }\r\n\r\n            if (commentBefore) {\r\n              (0, util$2.ensureObject)(node, 'raws', 'spaces', 'attribute');\r\n              node.raws.spaces.attribute.before = commentBefore;\r\n              commentBefore = '';\r\n            }\r\n\r\n            node.attribute = (node.attribute || \"\") + content;\r\n\r\n            var _rawValue = (0, util$2.getProp)(node, 'raws', 'attribute') || null;\r\n\r\n            if (_rawValue) {\r\n              node.raws.attribute += content;\r\n            }\r\n\r\n            lastAdded = 'attribute';\r\n          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !spaceAfterMeaningfulToken) {\r\n            var _unescaped = (0, util$2.unesc)(content);\r\n\r\n            var _oldRawValue = (0, util$2.getProp)(node, 'raws', 'value') || '';\r\n\r\n            var oldValue = node.value || '';\r\n            node.value = oldValue + _unescaped;\r\n            node.quoteMark = null;\r\n\r\n            if (_unescaped !== content || _oldRawValue) {\r\n              (0, util$2.ensureObject)(node, 'raws');\r\n              node.raws.value = (_oldRawValue || oldValue) + content;\r\n            }\r\n\r\n            lastAdded = 'value';\r\n          } else {\r\n            var insensitive = content === 'i' || content === \"I\";\r\n\r\n            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\r\n              node.insensitive = insensitive;\r\n\r\n              if (!insensitive || content === \"I\") {\r\n                (0, util$2.ensureObject)(node, 'raws');\r\n                node.raws.insensitiveFlag = content;\r\n              }\r\n\r\n              lastAdded = 'insensitive';\r\n\r\n              if (spaceBefore) {\r\n                (0, util$2.ensureObject)(node, 'spaces', 'insensitive');\r\n                node.spaces.insensitive.before = spaceBefore;\r\n                spaceBefore = '';\r\n              }\r\n\r\n              if (commentBefore) {\r\n                (0, util$2.ensureObject)(node, 'raws', 'spaces', 'insensitive');\r\n                node.raws.spaces.insensitive.before = commentBefore;\r\n                commentBefore = '';\r\n              }\r\n            } else if (node.value || node.value === '') {\r\n              lastAdded = 'value';\r\n              node.value += content;\r\n\r\n              if (node.raws.value) {\r\n                node.raws.value += content;\r\n              }\r\n            }\r\n          }\r\n\r\n          spaceAfterMeaningfulToken = false;\r\n          break;\r\n\r\n        case tokens.str:\r\n          if (!node.attribute || !node.operator) {\r\n            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\r\n              index: token[_tokenize.FIELDS.START_POS]\r\n            });\r\n          }\r\n\r\n          var _unescapeValue = (0, _attribute.unescapeValue)(content),\r\n              unescaped = _unescapeValue.unescaped,\r\n              quoteMark = _unescapeValue.quoteMark;\r\n\r\n          node.value = unescaped;\r\n          node.quoteMark = quoteMark;\r\n          lastAdded = 'value';\r\n          (0, util$2.ensureObject)(node, 'raws');\r\n          node.raws.value = content;\r\n          spaceAfterMeaningfulToken = false;\r\n          break;\r\n\r\n        case tokens.equals:\r\n          if (!node.attribute) {\r\n            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\r\n          }\r\n\r\n          if (node.value) {\r\n            return this.error('Unexpected \"=\" found; an operator was already defined.', {\r\n              index: token[_tokenize.FIELDS.START_POS]\r\n            });\r\n          }\r\n\r\n          node.operator = node.operator ? node.operator + content : content;\r\n          lastAdded = 'operator';\r\n          spaceAfterMeaningfulToken = false;\r\n          break;\r\n\r\n        case tokens.comment:\r\n          if (lastAdded) {\r\n            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\r\n              var lastComment = (0, util$2.getProp)(node, 'spaces', lastAdded, 'after') || '';\r\n              var rawLastComment = (0, util$2.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\r\n              (0, util$2.ensureObject)(node, 'raws', 'spaces', lastAdded);\r\n              node.raws.spaces[lastAdded].after = rawLastComment + content;\r\n            } else {\r\n              var lastValue = node[lastAdded] || '';\r\n              var rawLastValue = (0, util$2.getProp)(node, 'raws', lastAdded) || lastValue;\r\n              (0, util$2.ensureObject)(node, 'raws');\r\n              node.raws[lastAdded] = rawLastValue + content;\r\n            }\r\n          } else {\r\n            commentBefore = commentBefore + content;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\r\n            index: token[_tokenize.FIELDS.START_POS]\r\n          });\r\n      }\r\n\r\n      pos++;\r\n    }\r\n\r\n    unescapeProp(node, \"attribute\");\r\n    unescapeProp(node, \"namespace\");\r\n    this.newNode(new _attribute[\"default\"](node));\r\n    this.position++;\r\n  }\r\n  /**\r\n   * return a node containing meaningless garbage up to (but not including) the specified token position.\r\n   * if the token position is negative, all remaining tokens are consumed.\r\n   *\r\n   * This returns an array containing a single string node if all whitespace,\r\n   * otherwise an array of comment nodes with space before and after.\r\n   *\r\n   * These tokens are not added to the current selector, the caller can add them or use them to amend\r\n   * a previous node's space metadata.\r\n   *\r\n   * In lossy mode, this returns only comments.\r\n   */\r\n  ;\r\n\r\n  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\r\n    if (stopPosition < 0) {\r\n      stopPosition = this.tokens.length;\r\n    }\r\n\r\n    var startPosition = this.position;\r\n    var nodes = [];\r\n    var space = \"\";\r\n    var lastComment = undefined;\r\n\r\n    do {\r\n      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\r\n        if (!this.options.lossy) {\r\n          space += this.content();\r\n        }\r\n      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\r\n        var spaces = {};\r\n\r\n        if (space) {\r\n          spaces.before = space;\r\n          space = \"\";\r\n        }\r\n\r\n        lastComment = new _comment[\"default\"]({\r\n          value: this.content(),\r\n          source: getTokenSource(this.currToken),\r\n          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\r\n          spaces: spaces\r\n        });\r\n        nodes.push(lastComment);\r\n      }\r\n    } while (++this.position < stopPosition);\r\n\r\n    if (space) {\r\n      if (lastComment) {\r\n        lastComment.spaces.after = space;\r\n      } else if (!this.options.lossy) {\r\n        var firstToken = this.tokens[startPosition];\r\n        var lastToken = this.tokens[this.position - 1];\r\n        nodes.push(new _string[\"default\"]({\r\n          value: '',\r\n          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\r\n          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\r\n          spaces: {\r\n            before: space,\r\n            after: ''\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    return nodes;\r\n  }\r\n  /**\r\n   * \r\n   * @param {*} nodes \r\n   */\r\n  ;\r\n\r\n  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\r\n    var _this2 = this;\r\n\r\n    if (requiredSpace === void 0) {\r\n      requiredSpace = false;\r\n    }\r\n\r\n    var space = \"\";\r\n    var rawSpace = \"\";\r\n    nodes.forEach(function (n) {\r\n      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\r\n\r\n      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\r\n\r\n      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\r\n      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\r\n    });\r\n\r\n    if (rawSpace === space) {\r\n      rawSpace = undefined;\r\n    }\r\n\r\n    var result = {\r\n      space: space,\r\n      rawSpace: rawSpace\r\n    };\r\n    return result;\r\n  };\r\n\r\n  _proto.isNamedCombinator = function isNamedCombinator(position) {\r\n    if (position === void 0) {\r\n      position = this.position;\r\n    }\r\n\r\n    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\r\n  };\r\n\r\n  _proto.namedCombinator = function namedCombinator() {\r\n    if (this.isNamedCombinator()) {\r\n      var nameRaw = this.content(this.tokens[this.position + 1]);\r\n      var name = (0, util$2.unesc)(nameRaw).toLowerCase();\r\n      var raws = {};\r\n\r\n      if (name !== nameRaw) {\r\n        raws.value = \"/\" + nameRaw + \"/\";\r\n      }\r\n\r\n      var node = new _combinator[\"default\"]({\r\n        value: \"/\" + name + \"/\",\r\n        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\r\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\r\n        raws: raws\r\n      });\r\n      this.position = this.position + 3;\r\n      return node;\r\n    } else {\r\n      this.unexpected();\r\n    }\r\n  };\r\n\r\n  _proto.combinator = function combinator() {\r\n    var _this3 = this;\r\n\r\n    if (this.content() === '|') {\r\n      return this.namespace();\r\n    } // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\r\n\r\n\r\n    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\r\n\r\n    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\r\n      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\r\n\r\n      if (nodes.length > 0) {\r\n        var last = this.current.last;\r\n\r\n        if (last) {\r\n          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\r\n              space = _this$convertWhitespa.space,\r\n              rawSpace = _this$convertWhitespa.rawSpace;\r\n\r\n          if (rawSpace !== undefined) {\r\n            last.rawSpaceAfter += rawSpace;\r\n          }\r\n\r\n          last.spaces.after += space;\r\n        } else {\r\n          nodes.forEach(function (n) {\r\n            return _this3.newNode(n);\r\n          });\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var firstToken = this.currToken;\r\n    var spaceOrDescendantSelectorNodes = undefined;\r\n\r\n    if (nextSigTokenPos > this.position) {\r\n      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\r\n    }\r\n\r\n    var node;\r\n\r\n    if (this.isNamedCombinator()) {\r\n      node = this.namedCombinator();\r\n    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\r\n      node = new _combinator[\"default\"]({\r\n        value: this.content(),\r\n        source: getTokenSource(this.currToken),\r\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\r\n      });\r\n      this.position++;\r\n    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) ; else if (!spaceOrDescendantSelectorNodes) {\r\n      this.unexpected();\r\n    }\r\n\r\n    if (node) {\r\n      if (spaceOrDescendantSelectorNodes) {\r\n        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\r\n            _space = _this$convertWhitespa2.space,\r\n            _rawSpace = _this$convertWhitespa2.rawSpace;\r\n\r\n        node.spaces.before = _space;\r\n        node.rawSpaceBefore = _rawSpace;\r\n      }\r\n    } else {\r\n      // descendant combinator\r\n      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\r\n          _space2 = _this$convertWhitespa3.space,\r\n          _rawSpace2 = _this$convertWhitespa3.rawSpace;\r\n\r\n      if (!_rawSpace2) {\r\n        _rawSpace2 = _space2;\r\n      }\r\n\r\n      var spaces = {};\r\n      var raws = {\r\n        spaces: {}\r\n      };\r\n\r\n      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\r\n        spaces.before = _space2.slice(0, _space2.length - 1);\r\n        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\r\n      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\r\n        spaces.after = _space2.slice(1);\r\n        raws.spaces.after = _rawSpace2.slice(1);\r\n      } else {\r\n        raws.value = _rawSpace2;\r\n      }\r\n\r\n      node = new _combinator[\"default\"]({\r\n        value: ' ',\r\n        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\r\n        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\r\n        spaces: spaces,\r\n        raws: raws\r\n      });\r\n    }\r\n\r\n    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\r\n      node.spaces.after = this.optionalSpace(this.content());\r\n      this.position++;\r\n    }\r\n\r\n    return this.newNode(node);\r\n  };\r\n\r\n  _proto.comma = function comma() {\r\n    if (this.position === this.tokens.length - 1) {\r\n      this.root.trailingComma = true;\r\n      this.position++;\r\n      return;\r\n    }\r\n\r\n    this.current._inferEndPosition();\r\n\r\n    var selector = new _selector[\"default\"]({\r\n      source: {\r\n        start: tokenStart(this.tokens[this.position + 1])\r\n      }\r\n    });\r\n    this.current.parent.append(selector);\r\n    this.current = selector;\r\n    this.position++;\r\n  };\r\n\r\n  _proto.comment = function comment() {\r\n    var current = this.currToken;\r\n    this.newNode(new _comment[\"default\"]({\r\n      value: this.content(),\r\n      source: getTokenSource(current),\r\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n    }));\r\n    this.position++;\r\n  };\r\n\r\n  _proto.error = function error(message, opts) {\r\n    throw this.root.error(message, opts);\r\n  };\r\n\r\n  _proto.missingBackslash = function missingBackslash() {\r\n    return this.error('Expected a backslash preceding the semicolon.', {\r\n      index: this.currToken[_tokenize.FIELDS.START_POS]\r\n    });\r\n  };\r\n\r\n  _proto.missingParenthesis = function missingParenthesis() {\r\n    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\r\n  };\r\n\r\n  _proto.missingSquareBracket = function missingSquareBracket() {\r\n    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\r\n  };\r\n\r\n  _proto.unexpected = function unexpected() {\r\n    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\r\n  };\r\n\r\n  _proto.namespace = function namespace() {\r\n    var before = this.prevToken && this.content(this.prevToken) || true;\r\n\r\n    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\r\n      this.position++;\r\n      return this.word(before);\r\n    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\r\n      this.position++;\r\n      return this.universal(before);\r\n    }\r\n  };\r\n\r\n  _proto.nesting = function nesting() {\r\n    if (this.nextToken) {\r\n      var nextContent = this.content(this.nextToken);\r\n\r\n      if (nextContent === \"|\") {\r\n        this.position++;\r\n        return;\r\n      }\r\n    }\r\n\r\n    var current = this.currToken;\r\n    this.newNode(new _nesting[\"default\"]({\r\n      value: this.content(),\r\n      source: getTokenSource(current),\r\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n    }));\r\n    this.position++;\r\n  };\r\n\r\n  _proto.parentheses = function parentheses() {\r\n    var last = this.current.last;\r\n    var unbalanced = 1;\r\n    this.position++;\r\n\r\n    if (last && last.type === types.PSEUDO) {\r\n      var selector = new _selector[\"default\"]({\r\n        source: {\r\n          start: tokenStart(this.tokens[this.position - 1])\r\n        }\r\n      });\r\n      var cache = this.current;\r\n      last.append(selector);\r\n      this.current = selector;\r\n\r\n      while (this.position < this.tokens.length && unbalanced) {\r\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\r\n          unbalanced++;\r\n        }\r\n\r\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\r\n          unbalanced--;\r\n        }\r\n\r\n        if (unbalanced) {\r\n          this.parse();\r\n        } else {\r\n          this.current.source.end = tokenEnd(this.currToken);\r\n          this.current.parent.source.end = tokenEnd(this.currToken);\r\n          this.position++;\r\n        }\r\n      }\r\n\r\n      this.current = cache;\r\n    } else {\r\n      // I think this case should be an error. It's used to implement a basic parse of media queries\r\n      // but I don't think it's a good idea.\r\n      var parenStart = this.currToken;\r\n      var parenValue = \"(\";\r\n      var parenEnd;\r\n\r\n      while (this.position < this.tokens.length && unbalanced) {\r\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\r\n          unbalanced++;\r\n        }\r\n\r\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\r\n          unbalanced--;\r\n        }\r\n\r\n        parenEnd = this.currToken;\r\n        parenValue += this.parseParenthesisToken(this.currToken);\r\n        this.position++;\r\n      }\r\n\r\n      if (last) {\r\n        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\r\n      } else {\r\n        this.newNode(new _string[\"default\"]({\r\n          value: parenValue,\r\n          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\r\n          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (unbalanced) {\r\n      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\r\n    }\r\n  };\r\n\r\n  _proto.pseudo = function pseudo() {\r\n    var _this4 = this;\r\n\r\n    var pseudoStr = '';\r\n    var startingToken = this.currToken;\r\n\r\n    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\r\n      pseudoStr += this.content();\r\n      this.position++;\r\n    }\r\n\r\n    if (!this.currToken) {\r\n      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\r\n    }\r\n\r\n    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\r\n      this.splitWord(false, function (first, length) {\r\n        pseudoStr += first;\r\n\r\n        _this4.newNode(new _pseudo[\"default\"]({\r\n          value: pseudoStr,\r\n          source: getTokenSourceSpan(startingToken, _this4.currToken),\r\n          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\r\n        }));\r\n\r\n        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\r\n          _this4.error('Misplaced parenthesis.', {\r\n            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\r\n    }\r\n  };\r\n\r\n  _proto.space = function space() {\r\n    var content = this.content(); // Handle space before and after the selector\r\n\r\n    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\r\n      return node.type === 'comment';\r\n    })) {\r\n      this.spaces = this.optionalSpace(content);\r\n      this.position++;\r\n    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\r\n      this.current.last.spaces.after = this.optionalSpace(content);\r\n      this.position++;\r\n    } else {\r\n      this.combinator();\r\n    }\r\n  };\r\n\r\n  _proto.string = function string() {\r\n    var current = this.currToken;\r\n    this.newNode(new _string[\"default\"]({\r\n      value: this.content(),\r\n      source: getTokenSource(current),\r\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n    }));\r\n    this.position++;\r\n  };\r\n\r\n  _proto.universal = function universal(namespace) {\r\n    var nextToken = this.nextToken;\r\n\r\n    if (nextToken && this.content(nextToken) === '|') {\r\n      this.position++;\r\n      return this.namespace();\r\n    }\r\n\r\n    var current = this.currToken;\r\n    this.newNode(new _universal[\"default\"]({\r\n      value: this.content(),\r\n      source: getTokenSource(current),\r\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\r\n    }), namespace);\r\n    this.position++;\r\n  };\r\n\r\n  _proto.splitWord = function splitWord(namespace, firstCallback) {\r\n    var _this5 = this;\r\n\r\n    var nextToken = this.nextToken;\r\n    var word = this.content();\r\n\r\n    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\r\n      this.position++;\r\n      var current = this.content();\r\n      word += current;\r\n\r\n      if (current.lastIndexOf('\\\\') === current.length - 1) {\r\n        var next = this.nextToken;\r\n\r\n        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\r\n          word += this.requiredSpace(this.content(next));\r\n          this.position++;\r\n        }\r\n      }\r\n\r\n      nextToken = this.nextToken;\r\n    }\r\n\r\n    var hasClass = indexesOf(word, '.').filter(function (i) {\r\n      // Allow escaped dot within class name\r\n      var escapedDot = word[i - 1] === '\\\\'; // Allow decimal numbers percent in @keyframes\r\n\r\n      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\r\n      return !escapedDot && !isKeyframesPercent;\r\n    });\r\n    var hasId = indexesOf(word, '#').filter(function (i) {\r\n      return word[i - 1] !== '\\\\';\r\n    }); // Eliminate Sass interpolations from the list of id indexes\r\n\r\n    var interpolations = indexesOf(word, '#{');\r\n\r\n    if (interpolations.length) {\r\n      hasId = hasId.filter(function (hashIndex) {\r\n        return !~interpolations.indexOf(hashIndex);\r\n      });\r\n    }\r\n\r\n    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\r\n    indices.forEach(function (ind, i) {\r\n      var index = indices[i + 1] || word.length;\r\n      var value = word.slice(ind, index);\r\n\r\n      if (i === 0 && firstCallback) {\r\n        return firstCallback.call(_this5, value, indices.length);\r\n      }\r\n\r\n      var node;\r\n      var current = _this5.currToken;\r\n      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\r\n      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\r\n\r\n      if (~hasClass.indexOf(ind)) {\r\n        var classNameOpts = {\r\n          value: value.slice(1),\r\n          source: source,\r\n          sourceIndex: sourceIndex\r\n        };\r\n        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\r\n      } else if (~hasId.indexOf(ind)) {\r\n        var idOpts = {\r\n          value: value.slice(1),\r\n          source: source,\r\n          sourceIndex: sourceIndex\r\n        };\r\n        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\r\n      } else {\r\n        var tagOpts = {\r\n          value: value,\r\n          source: source,\r\n          sourceIndex: sourceIndex\r\n        };\r\n        unescapeProp(tagOpts, \"value\");\r\n        node = new _tag[\"default\"](tagOpts);\r\n      }\r\n\r\n      _this5.newNode(node, namespace); // Ensure that the namespace is used only once\r\n\r\n\r\n      namespace = null;\r\n    });\r\n    this.position++;\r\n  };\r\n\r\n  _proto.word = function word(namespace) {\r\n    var nextToken = this.nextToken;\r\n\r\n    if (nextToken && this.content(nextToken) === '|') {\r\n      this.position++;\r\n      return this.namespace();\r\n    }\r\n\r\n    return this.splitWord(namespace);\r\n  };\r\n\r\n  _proto.loop = function loop() {\r\n    while (this.position < this.tokens.length) {\r\n      this.parse(true);\r\n    }\r\n\r\n    this.current._inferEndPosition();\r\n\r\n    return this.root;\r\n  };\r\n\r\n  _proto.parse = function parse(throwOnParenthesis) {\r\n    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\r\n      case tokens.space:\r\n        this.space();\r\n        break;\r\n\r\n      case tokens.comment:\r\n        this.comment();\r\n        break;\r\n\r\n      case tokens.openParenthesis:\r\n        this.parentheses();\r\n        break;\r\n\r\n      case tokens.closeParenthesis:\r\n        if (throwOnParenthesis) {\r\n          this.missingParenthesis();\r\n        }\r\n\r\n        break;\r\n\r\n      case tokens.openSquare:\r\n        this.attribute();\r\n        break;\r\n\r\n      case tokens.dollar:\r\n      case tokens.caret:\r\n      case tokens.equals:\r\n      case tokens.word:\r\n        this.word();\r\n        break;\r\n\r\n      case tokens.colon:\r\n        this.pseudo();\r\n        break;\r\n\r\n      case tokens.comma:\r\n        this.comma();\r\n        break;\r\n\r\n      case tokens.asterisk:\r\n        this.universal();\r\n        break;\r\n\r\n      case tokens.ampersand:\r\n        this.nesting();\r\n        break;\r\n\r\n      case tokens.slash:\r\n      case tokens.combinator:\r\n        this.combinator();\r\n        break;\r\n\r\n      case tokens.str:\r\n        this.string();\r\n        break;\r\n      // These cases throw; no break needed.\r\n\r\n      case tokens.closeSquare:\r\n        this.missingSquareBracket();\r\n\r\n      case tokens.semicolon:\r\n        this.missingBackslash();\r\n\r\n      default:\r\n        this.unexpected();\r\n    }\r\n  }\r\n  /**\r\n   * Helpers\r\n   */\r\n  ;\r\n\r\n  _proto.expected = function expected(description, index, found) {\r\n    if (Array.isArray(description)) {\r\n      var last = description.pop();\r\n      description = description.join(', ') + \" or \" + last;\r\n    }\r\n\r\n    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\r\n\r\n    if (!found) {\r\n      return this.error(\"Expected \" + an + \" \" + description + \".\", {\r\n        index: index\r\n      });\r\n    }\r\n\r\n    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\r\n      index: index\r\n    });\r\n  };\r\n\r\n  _proto.requiredSpace = function requiredSpace(space) {\r\n    return this.options.lossy ? ' ' : space;\r\n  };\r\n\r\n  _proto.optionalSpace = function optionalSpace(space) {\r\n    return this.options.lossy ? '' : space;\r\n  };\r\n\r\n  _proto.lossySpace = function lossySpace(space, required) {\r\n    if (this.options.lossy) {\r\n      return required ? ' ' : '';\r\n    } else {\r\n      return space;\r\n    }\r\n  };\r\n\r\n  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\r\n    var content = this.content(token);\r\n\r\n    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\r\n      return this.requiredSpace(content);\r\n    } else {\r\n      return content;\r\n    }\r\n  };\r\n\r\n  _proto.newNode = function newNode(node, namespace) {\r\n    if (namespace) {\r\n      if (/^ +$/.test(namespace)) {\r\n        if (!this.options.lossy) {\r\n          this.spaces = (this.spaces || '') + namespace;\r\n        }\r\n\r\n        namespace = true;\r\n      }\r\n\r\n      node.namespace = namespace;\r\n      unescapeProp(node, \"namespace\");\r\n    }\r\n\r\n    if (this.spaces) {\r\n      node.spaces.before = this.spaces;\r\n      this.spaces = '';\r\n    }\r\n\r\n    return this.current.append(node);\r\n  };\r\n\r\n  _proto.content = function content(token) {\r\n    if (token === void 0) {\r\n      token = this.currToken;\r\n    }\r\n\r\n    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\r\n  };\r\n\r\n  /**\r\n   * returns the index of the next non-whitespace, non-comment token.\r\n   * returns -1 if no meaningful token is found.\r\n   */\r\n  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\r\n    if (startPosition === void 0) {\r\n      startPosition = this.position + 1;\r\n    }\r\n\r\n    var searchPosition = startPosition;\r\n\r\n    while (searchPosition < this.tokens.length) {\r\n      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\r\n        searchPosition++;\r\n        continue;\r\n      } else {\r\n        return searchPosition;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  _createClass(Parser, [{\r\n    key: \"currToken\",\r\n    get: function get() {\r\n      return this.tokens[this.position];\r\n    }\r\n  }, {\r\n    key: \"nextToken\",\r\n    get: function get() {\r\n      return this.tokens[this.position + 1];\r\n    }\r\n  }, {\r\n    key: \"prevToken\",\r\n    get: function get() {\r\n      return this.tokens[this.position - 1];\r\n    }\r\n  }]);\r\n\r\n  return Parser;\r\n}();\r\n\r\nexports[\"default\"] = Parser;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar processor$1 = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _parser = _interopRequireDefault(parser$1);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nvar Processor = /*#__PURE__*/function () {\r\n  function Processor(func, options) {\r\n    this.func = func || function noop() {};\r\n\r\n    this.funcRes = null;\r\n    this.options = options;\r\n  }\r\n\r\n  var _proto = Processor.prototype;\r\n\r\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var merged = Object.assign({}, this.options, options);\r\n\r\n    if (merged.updateSelector === false) {\r\n      return false;\r\n    } else {\r\n      return typeof rule !== \"string\";\r\n    }\r\n  };\r\n\r\n  _proto._isLossy = function _isLossy(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var merged = Object.assign({}, this.options, options);\r\n\r\n    if (merged.lossless === false) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  _proto._root = function _root(rule, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\r\n    return parser.root;\r\n  };\r\n\r\n  _proto._parseOptions = function _parseOptions(options) {\r\n    return {\r\n      lossy: this._isLossy(options)\r\n    };\r\n  };\r\n\r\n  _proto._run = function _run(rule, options) {\r\n    var _this = this;\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      try {\r\n        var root = _this._root(rule, options);\r\n\r\n        Promise.resolve(_this.func(root)).then(function (transform) {\r\n          var string = undefined;\r\n\r\n          if (_this._shouldUpdateSelector(rule, options)) {\r\n            string = root.toString();\r\n            rule.selector = string;\r\n          }\r\n\r\n          return {\r\n            transform: transform,\r\n            root: root,\r\n            string: string\r\n          };\r\n        }).then(resolve, reject);\r\n      } catch (e) {\r\n        reject(e);\r\n        return;\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto._runSync = function _runSync(rule, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    var root = this._root(rule, options);\r\n\r\n    var transform = this.func(root);\r\n\r\n    if (transform && typeof transform.then === \"function\") {\r\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\r\n    }\r\n\r\n    var string = undefined;\r\n\r\n    if (options.updateSelector && typeof rule !== \"string\") {\r\n      string = root.toString();\r\n      rule.selector = string;\r\n    }\r\n\r\n    return {\r\n      transform: transform,\r\n      root: root,\r\n      string: string\r\n    };\r\n  }\r\n  /**\r\n   * Process rule into a selector AST.\r\n   *\r\n   * @param rule {postcss.Rule | string} The css selector to be processed\r\n   * @param options The options for processing\r\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\r\n   */\r\n  ;\r\n\r\n  _proto.ast = function ast(rule, options) {\r\n    return this._run(rule, options).then(function (result) {\r\n      return result.root;\r\n    });\r\n  }\r\n  /**\r\n   * Process rule into a selector AST synchronously.\r\n   *\r\n   * @param rule {postcss.Rule | string} The css selector to be processed\r\n   * @param options The options for processing\r\n   * @returns {parser.Root} The AST of the selector after processing it.\r\n   */\r\n  ;\r\n\r\n  _proto.astSync = function astSync(rule, options) {\r\n    return this._runSync(rule, options).root;\r\n  }\r\n  /**\r\n   * Process a selector into a transformed value asynchronously\r\n   *\r\n   * @param rule {postcss.Rule | string} The css selector to be processed\r\n   * @param options The options for processing\r\n   * @returns {Promise<any>} The value returned by the processor.\r\n   */\r\n  ;\r\n\r\n  _proto.transform = function transform(rule, options) {\r\n    return this._run(rule, options).then(function (result) {\r\n      return result.transform;\r\n    });\r\n  }\r\n  /**\r\n   * Process a selector into a transformed value synchronously.\r\n   *\r\n   * @param rule {postcss.Rule | string} The css selector to be processed\r\n   * @param options The options for processing\r\n   * @returns {any} The value returned by the processor.\r\n   */\r\n  ;\r\n\r\n  _proto.transformSync = function transformSync(rule, options) {\r\n    return this._runSync(rule, options).transform;\r\n  }\r\n  /**\r\n   * Process a selector into a new selector string asynchronously.\r\n   *\r\n   * @param rule {postcss.Rule | string} The css selector to be processed\r\n   * @param options The options for processing\r\n   * @returns {string} the selector after processing.\r\n   */\r\n  ;\r\n\r\n  _proto.process = function process(rule, options) {\r\n    return this._run(rule, options).then(function (result) {\r\n      return result.string || result.root.toString();\r\n    });\r\n  }\r\n  /**\r\n   * Process a selector into a new selector string synchronously.\r\n   *\r\n   * @param rule {postcss.Rule | string} The css selector to be processed\r\n   * @param options The options for processing\r\n   * @returns {string} the selector after processing.\r\n   */\r\n  ;\r\n\r\n  _proto.processSync = function processSync(rule, options) {\r\n    var result = this._runSync(rule, options);\r\n\r\n    return result.string || result.root.toString();\r\n  };\r\n\r\n  return Processor;\r\n}();\r\n\r\nexports[\"default\"] = Processor;\r\nmodule.exports = exports.default;\r\n});\r\n\r\n/*@__PURE__*/getDefaultExportFromCjs(processor$1);\r\n\r\nvar constructors = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;\r\n\r\nvar _attribute = _interopRequireDefault(attribute);\r\n\r\nvar _className = _interopRequireDefault(className);\r\n\r\nvar _combinator = _interopRequireDefault(combinator);\r\n\r\nvar _comment = _interopRequireDefault(comment$1);\r\n\r\nvar _id = _interopRequireDefault(id);\r\n\r\nvar _nesting = _interopRequireDefault(nesting);\r\n\r\nvar _pseudo = _interopRequireDefault(pseudo);\r\n\r\nvar _root = _interopRequireDefault(root$1);\r\n\r\nvar _selector = _interopRequireDefault(selector);\r\n\r\nvar _string = _interopRequireDefault(string);\r\n\r\nvar _tag = _interopRequireDefault(tag);\r\n\r\nvar _universal = _interopRequireDefault(universal);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nvar attribute$1 = function attribute(opts) {\r\n  return new _attribute[\"default\"](opts);\r\n};\r\n\r\nexports.attribute = attribute$1;\r\n\r\nvar className$1 = function className(opts) {\r\n  return new _className[\"default\"](opts);\r\n};\r\n\r\nexports.className = className$1;\r\n\r\nvar combinator$1 = function combinator(opts) {\r\n  return new _combinator[\"default\"](opts);\r\n};\r\n\r\nexports.combinator = combinator$1;\r\n\r\nvar comment = function comment(opts) {\r\n  return new _comment[\"default\"](opts);\r\n};\r\n\r\nexports.comment = comment;\r\n\r\nvar id$1 = function id(opts) {\r\n  return new _id[\"default\"](opts);\r\n};\r\n\r\nexports.id = id$1;\r\n\r\nvar nesting$1 = function nesting(opts) {\r\n  return new _nesting[\"default\"](opts);\r\n};\r\n\r\nexports.nesting = nesting$1;\r\n\r\nvar pseudo$1 = function pseudo(opts) {\r\n  return new _pseudo[\"default\"](opts);\r\n};\r\n\r\nexports.pseudo = pseudo$1;\r\n\r\nvar root = function root(opts) {\r\n  return new _root[\"default\"](opts);\r\n};\r\n\r\nexports.root = root;\r\n\r\nvar selector$1 = function selector(opts) {\r\n  return new _selector[\"default\"](opts);\r\n};\r\n\r\nexports.selector = selector$1;\r\n\r\nvar string$1 = function string(opts) {\r\n  return new _string[\"default\"](opts);\r\n};\r\n\r\nexports.string = string$1;\r\n\r\nvar tag$1 = function tag(opts) {\r\n  return new _tag[\"default\"](opts);\r\n};\r\n\r\nexports.tag = tag$1;\r\n\r\nvar universal$1 = function universal(opts) {\r\n  return new _universal[\"default\"](opts);\r\n};\r\n\r\nexports.universal = universal$1;\r\n});\r\n\r\nvar guards = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports.isNode = isNode;\r\nexports.isPseudoElement = isPseudoElement;\r\nexports.isPseudoClass = isPseudoClass;\r\nexports.isContainer = isContainer;\r\nexports.isNamespace = isNamespace;\r\nexports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = exports.isPseudo = exports.isNesting = exports.isIdentifier = exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;\r\n\r\n\r\n\r\nvar _IS_TYPE;\r\n\r\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[types$1.ATTRIBUTE] = true, _IS_TYPE[types$1.CLASS] = true, _IS_TYPE[types$1.COMBINATOR] = true, _IS_TYPE[types$1.COMMENT] = true, _IS_TYPE[types$1.ID] = true, _IS_TYPE[types$1.NESTING] = true, _IS_TYPE[types$1.PSEUDO] = true, _IS_TYPE[types$1.ROOT] = true, _IS_TYPE[types$1.SELECTOR] = true, _IS_TYPE[types$1.STRING] = true, _IS_TYPE[types$1.TAG] = true, _IS_TYPE[types$1.UNIVERSAL] = true, _IS_TYPE);\r\n\r\nfunction isNode(node) {\r\n  return typeof node === \"object\" && IS_TYPE[node.type];\r\n}\r\n\r\nfunction isNodeType(type, node) {\r\n  return isNode(node) && node.type === type;\r\n}\r\n\r\nvar isAttribute = isNodeType.bind(null, types$1.ATTRIBUTE);\r\nexports.isAttribute = isAttribute;\r\nvar isClassName = isNodeType.bind(null, types$1.CLASS);\r\nexports.isClassName = isClassName;\r\nvar isCombinator = isNodeType.bind(null, types$1.COMBINATOR);\r\nexports.isCombinator = isCombinator;\r\nvar isComment = isNodeType.bind(null, types$1.COMMENT);\r\nexports.isComment = isComment;\r\nvar isIdentifier = isNodeType.bind(null, types$1.ID);\r\nexports.isIdentifier = isIdentifier;\r\nvar isNesting = isNodeType.bind(null, types$1.NESTING);\r\nexports.isNesting = isNesting;\r\nvar isPseudo = isNodeType.bind(null, types$1.PSEUDO);\r\nexports.isPseudo = isPseudo;\r\nvar isRoot = isNodeType.bind(null, types$1.ROOT);\r\nexports.isRoot = isRoot;\r\nvar isSelector = isNodeType.bind(null, types$1.SELECTOR);\r\nexports.isSelector = isSelector;\r\nvar isString = isNodeType.bind(null, types$1.STRING);\r\nexports.isString = isString;\r\nvar isTag = isNodeType.bind(null, types$1.TAG);\r\nexports.isTag = isTag;\r\nvar isUniversal = isNodeType.bind(null, types$1.UNIVERSAL);\r\nexports.isUniversal = isUniversal;\r\n\r\nfunction isPseudoElement(node) {\r\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\");\r\n}\r\n\r\nfunction isPseudoClass(node) {\r\n  return isPseudo(node) && !isPseudoElement(node);\r\n}\r\n\r\nfunction isContainer(node) {\r\n  return !!(isNode(node) && node.walk);\r\n}\r\n\r\nfunction isNamespace(node) {\r\n  return isAttribute(node) || isTag(node);\r\n}\r\n});\r\n\r\nvar selectors = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\n\r\n\r\n\r\nObject.keys(types$1).forEach(function (key) {\r\n  if (key === \"default\" || key === \"__esModule\") return;\r\n  if (key in exports && exports[key] === types$1[key]) return;\r\n  exports[key] = types$1[key];\r\n});\r\n\r\n\r\n\r\nObject.keys(constructors).forEach(function (key) {\r\n  if (key === \"default\" || key === \"__esModule\") return;\r\n  if (key in exports && exports[key] === constructors[key]) return;\r\n  exports[key] = constructors[key];\r\n});\r\n\r\n\r\n\r\nObject.keys(guards).forEach(function (key) {\r\n  if (key === \"default\" || key === \"__esModule\") return;\r\n  if (key in exports && exports[key] === guards[key]) return;\r\n  exports[key] = guards[key];\r\n});\r\n});\r\n\r\nvar dist = createCommonjsModule(function (module, exports) {\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\n\r\nvar _processor = _interopRequireDefault(processor$1);\r\n\r\nvar selectors$1 = _interopRequireWildcard(selectors);\r\n\r\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\r\n\r\nvar parser = function parser(processor) {\r\n  return new _processor[\"default\"](processor);\r\n};\r\n\r\nObject.assign(parser, selectors$1);\r\ndelete parser.__esModule;\r\nvar _default = parser;\r\nexports[\"default\"] = _default;\r\nmodule.exports = exports.default;\r\n});\r\n\r\nvar selectorParser = /*@__PURE__*/getDefaultExportFromCjs(dist);\r\n\r\nconst animationNameRE = /^(-\\w+-)?animation-name$/;\r\nconst animationRE = /^(-\\w+-)?animation$/;\r\nconst scopedPlugin = (id = '') => {\r\n    const keyframes = Object.create(null);\r\n    const shortId = id.replace(/^data-v-/, '');\r\n    return {\r\n        postcssPlugin: 'vue-sfc-scoped',\r\n        Rule(rule) {\r\n            processRule(id, rule);\r\n        },\r\n        AtRule(node) {\r\n            if (/-?keyframes$/.test(node.name) &&\r\n                !node.params.endsWith(`-${shortId}`)) {\r\n                // register keyframes\r\n                keyframes[node.params] = node.params = node.params + '-' + shortId;\r\n            }\r\n        },\r\n        OnceExit(root) {\r\n            if (Object.keys(keyframes).length) {\r\n                // If keyframes are found in this <style>, find and rewrite animation names\r\n                // in declarations.\r\n                // Caveat: this only works for keyframes and animation rules in the same\r\n                // <style> element.\r\n                // individual animation-name declaration\r\n                root.walkDecls(decl => {\r\n                    if (animationNameRE.test(decl.prop)) {\r\n                        decl.value = decl.value\r\n                            .split(',')\r\n                            .map(v => keyframes[v.trim()] || v.trim())\r\n                            .join(',');\r\n                    }\r\n                    // shorthand\r\n                    if (animationRE.test(decl.prop)) {\r\n                        decl.value = decl.value\r\n                            .split(',')\r\n                            .map(v => {\r\n                            const vals = v.trim().split(/\\s+/);\r\n                            const i = vals.findIndex(val => keyframes[val]);\r\n                            if (i !== -1) {\r\n                                vals.splice(i, 1, keyframes[vals[i]]);\r\n                                return vals.join(' ');\r\n                            }\r\n                            else {\r\n                                return v;\r\n                            }\r\n                        })\r\n                            .join(',');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n};\r\nconst processedRules = new WeakSet();\r\nfunction processRule(id, rule) {\r\n    if (processedRules.has(rule) ||\r\n        (rule.parent &&\r\n            rule.parent.type === 'atrule' &&\r\n            /-?keyframes$/.test(rule.parent.name))) {\r\n        return;\r\n    }\r\n    processedRules.add(rule);\r\n    rule.selector = selectorParser(selectorRoot => {\r\n        selectorRoot.each(selector => {\r\n            rewriteSelector(id, selector, selectorRoot);\r\n        });\r\n    }).processSync(rule.selector);\r\n}\r\nfunction rewriteSelector(id, selector, selectorRoot, slotted = false) {\r\n    let node = null;\r\n    let shouldInject = true;\r\n    // find the last child node to insert attribute selector\r\n    selector.each(n => {\r\n        // DEPRECATED \">>>\" and \"/deep/\" combinator\r\n        if (n.type === 'combinator' &&\r\n            (n.value === '>>>' || n.value === '/deep/')) {\r\n            n.value = ' ';\r\n            n.spaces.before = n.spaces.after = '';\r\n            warn(`the >>> and /deep/ combinators have been deprecated. ` +\r\n                `Use :deep() instead.`);\r\n            return false;\r\n        }\r\n        if (n.type === 'pseudo') {\r\n            const { value } = n;\r\n            // deep: inject [id] attribute at the node before the ::v-deep\r\n            // combinator.\r\n            if (value === ':deep' || value === '::v-deep') {\r\n                if (n.nodes.length) {\r\n                    // .foo ::v-deep(.bar) -> .foo[xxxxxxx] .bar\r\n                    // replace the current node with ::v-deep's inner selector\r\n                    let last = n;\r\n                    n.nodes[0].each(ss => {\r\n                        selector.insertAfter(last, ss);\r\n                        last = ss;\r\n                    });\r\n                    // insert a space combinator before if it doesn't already have one\r\n                    const prev = selector.at(selector.index(n) - 1);\r\n                    if (!prev || !isSpaceCombinator(prev)) {\r\n                        selector.insertAfter(n, selectorParser.combinator({\r\n                            value: ' '\r\n                        }));\r\n                    }\r\n                    selector.removeChild(n);\r\n                }\r\n                else {\r\n                    // DEPRECATED usage\r\n                    // .foo ::v-deep .bar -> .foo[xxxxxxx] .bar\r\n                    warn(`::v-deep usage as a combinator has ` +\r\n                        `been deprecated. Use :deep(<inner-selector>) instead.`);\r\n                    const prev = selector.at(selector.index(n) - 1);\r\n                    if (prev && isSpaceCombinator(prev)) {\r\n                        selector.removeChild(prev);\r\n                    }\r\n                    selector.removeChild(n);\r\n                }\r\n                return false;\r\n            }\r\n            // slot: use selector inside `::v-slotted` and inject [id + '-s']\r\n            // instead.\r\n            // ::v-slotted(.foo) -> .foo[xxxxxxx-s]\r\n            if (value === ':slotted' || value === '::v-slotted') {\r\n                rewriteSelector(id, n.nodes[0], selectorRoot, true /* slotted */);\r\n                let last = n;\r\n                n.nodes[0].each(ss => {\r\n                    selector.insertAfter(last, ss);\r\n                    last = ss;\r\n                });\r\n                // selector.insertAfter(n, n.nodes[0])\r\n                selector.removeChild(n);\r\n                // since slotted attribute already scopes the selector there's no\r\n                // need for the non-slot attribute.\r\n                shouldInject = false;\r\n                return false;\r\n            }\r\n            // global: replace with inner selector and do not inject [id].\r\n            // ::v-global(.foo) -> .foo\r\n            if (value === ':global' || value === '::v-global') {\r\n                selectorRoot.insertAfter(selector, n.nodes[0]);\r\n                selectorRoot.removeChild(selector);\r\n                return false;\r\n            }\r\n        }\r\n        if (n.type !== 'pseudo' && n.type !== 'combinator') {\r\n            node = n;\r\n        }\r\n    });\r\n    if (node) {\r\n        node.spaces.after = '';\r\n    }\r\n    else {\r\n        // For deep selectors & standalone pseudo selectors,\r\n        // the attribute selectors are prepended rather than appended.\r\n        // So all leading spaces must be eliminated to avoid problems.\r\n        selector.first.spaces.before = '';\r\n    }\r\n    if (shouldInject) {\r\n        const idToAdd = slotted ? id + '-s' : id;\r\n        selector.insertAfter(\r\n        // If node is null it means we need to inject [id] at the start\r\n        // insertAfter can handle `null` here\r\n        node, selectorParser.attribute({\r\n            attribute: idToAdd,\r\n            value: idToAdd,\r\n            raws: {},\r\n            quoteMark: `\"`\r\n        }));\r\n    }\r\n}\r\nfunction isSpaceCombinator(node) {\r\n    return node.type === 'combinator' && /^\\s+$/.test(node.value);\r\n}\r\nscopedPlugin.postcss = true;\r\n\r\nvar SourceMapConsumer$7 = sourceMap.SourceMapConsumer;\r\nvar SourceMapGenerator$9 = sourceMap.SourceMapGenerator;\r\n\r\nvar mergeSourceMap = merge$1;\r\n\r\n/**\r\n * Merge old source map and new source map and return merged.\r\n * If old or new source map value is falsy, return another one as it is.\r\n *\r\n * @param {object|string} [oldMap] old source map object\r\n * @param {object|string} [newmap] new source map object\r\n * @return {object|undefined} merged source map object, or undefined when both old and new source map are undefined\r\n */\r\nfunction merge$1(oldMap, newMap) {\r\n  if (!oldMap) return newMap\r\n  if (!newMap) return oldMap\r\n\r\n  var oldMapConsumer = new SourceMapConsumer$7(oldMap);\r\n  var newMapConsumer = new SourceMapConsumer$7(newMap);\r\n  var mergedMapGenerator = new SourceMapGenerator$9();\r\n\r\n  // iterate on new map and overwrite original position of new map with one of old map\r\n  newMapConsumer.eachMapping(function(m) {\r\n    // pass when `originalLine` is null.\r\n    // It occurs in case that the node does not have origin in original code.\r\n    if (m.originalLine == null) return\r\n\r\n    var origPosInOldMap = oldMapConsumer.originalPositionFor({\r\n      line: m.originalLine,\r\n      column: m.originalColumn\r\n    });\r\n\r\n    if (origPosInOldMap.source == null) return\r\n\r\n    mergedMapGenerator.addMapping({\r\n      original: {\r\n        line: origPosInOldMap.line,\r\n        column: origPosInOldMap.column\r\n      },\r\n      generated: {\r\n        line: m.generatedLine,\r\n        column: m.generatedColumn\r\n      },\r\n      source: origPosInOldMap.source,\r\n      name: origPosInOldMap.name\r\n    });\r\n  });\r\n\r\n  var consumers = [oldMapConsumer, newMapConsumer];\r\n  consumers.forEach(function(consumer) {\r\n    consumer.sources.forEach(function(sourceFile) {\r\n      mergedMapGenerator._sources.add(sourceFile);\r\n      var sourceContent = consumer.sourceContentFor(sourceFile);\r\n      if (sourceContent != null) {\r\n        mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\r\n      }\r\n    });\r\n  });\r\n\r\n  mergedMapGenerator._sourceRoot = oldMap.sourceRoot;\r\n  mergedMapGenerator._file = oldMap.file;\r\n\r\n  return JSON.parse(mergedMapGenerator.toString())\r\n}\r\n\r\n// .scss/.sass processor\r\nconst scss = (source, map, options, load = require) => {\r\n    const nodeSass = load('sass');\r\n    const finalOptions = Object.assign(Object.assign({}, options), { data: getSource(source, options.filename, options.additionalData), file: options.filename, outFile: options.filename, sourceMap: !!map });\r\n    try {\r\n        const result = nodeSass.renderSync(finalOptions);\r\n        const dependencies = result.stats.includedFiles;\r\n        if (map) {\r\n            return {\r\n                code: result.css.toString(),\r\n                map: mergeSourceMap(map, JSON.parse(result.map.toString())),\r\n                errors: [],\r\n                dependencies\r\n            };\r\n        }\r\n        return { code: result.css.toString(), errors: [], dependencies };\r\n    }\r\n    catch (e) {\r\n        return { code: '', errors: [e], dependencies: [] };\r\n    }\r\n};\r\nconst sass = (source, map, options, load) => scss(source, map, Object.assign(Object.assign({}, options), { indentedSyntax: true }), load);\r\n// .less\r\nconst less = (source, map, options, load = require) => {\r\n    const nodeLess = load('less');\r\n    let result;\r\n    let error = null;\r\n    nodeLess.render(getSource(source, options.filename, options.additionalData), Object.assign(Object.assign({}, options), { syncImport: true }), (err, output) => {\r\n        error = err;\r\n        result = output;\r\n    });\r\n    if (error)\r\n        return { code: '', errors: [error], dependencies: [] };\r\n    const dependencies = result.imports;\r\n    if (map) {\r\n        return {\r\n            code: result.css.toString(),\r\n            map: mergeSourceMap(map, result.map),\r\n            errors: [],\r\n            dependencies: dependencies\r\n        };\r\n    }\r\n    return {\r\n        code: result.css.toString(),\r\n        errors: [],\r\n        dependencies: dependencies\r\n    };\r\n};\r\n// .styl\r\nconst styl = (source, map, options, load = require) => {\r\n    const nodeStylus = load('stylus');\r\n    try {\r\n        const ref = nodeStylus(source);\r\n        Object.keys(options).forEach(key => ref.set(key, options[key]));\r\n        if (map)\r\n            ref.set('sourcemap', { inline: false, comment: false });\r\n        const result = ref.render();\r\n        const dependencies = ref.deps();\r\n        if (map) {\r\n            return {\r\n                code: result,\r\n                map: mergeSourceMap(map, ref.sourcemap),\r\n                errors: [],\r\n                dependencies\r\n            };\r\n        }\r\n        return { code: result, errors: [], dependencies };\r\n    }\r\n    catch (e) {\r\n        return { code: '', errors: [e], dependencies: [] };\r\n    }\r\n};\r\nfunction getSource(source, filename, additionalData) {\r\n    if (!additionalData)\r\n        return source;\r\n    if (isFunction(additionalData)) {\r\n        return additionalData(source, filename);\r\n    }\r\n    return additionalData + source;\r\n}\r\nconst processors = {\r\n    less,\r\n    sass,\r\n    scss,\r\n    styl,\r\n    stylus: styl\r\n};\r\n\r\nfunction compileStyle(options) {\r\n    return doCompileStyle(Object.assign(Object.assign({}, options), { isAsync: false }));\r\n}\r\nfunction compileStyleAsync(options) {\r\n    return doCompileStyle(Object.assign(Object.assign({}, options), { isAsync: true }));\r\n}\r\nfunction doCompileStyle(options) {\r\n    const { filename, id, scoped = false, trim = true, isProd = false, modules = false, modulesOptions = {}, preprocessLang, postcssOptions, postcssPlugins } = options;\r\n    const preprocessor = preprocessLang && processors[preprocessLang];\r\n    const preProcessedSource = preprocessor && preprocess$1(options, preprocessor);\r\n    const map = preProcessedSource\r\n        ? preProcessedSource.map\r\n        : options.inMap || options.map;\r\n    const source = preProcessedSource ? preProcessedSource.code : options.source;\r\n    const shortId = id.replace(/^data-v-/, '');\r\n    const longId = `data-v-${shortId}`;\r\n    const plugins = (postcssPlugins || []).slice();\r\n    plugins.unshift(cssVarsPlugin({ id: shortId, isProd }));\r\n    if (trim) {\r\n        plugins.push(trimPlugin());\r\n    }\r\n    if (scoped) {\r\n        plugins.push(scopedPlugin(longId));\r\n    }\r\n    let cssModules;\r\n    if (modules) {\r\n        {\r\n            throw new Error('[@vue/compiler-sfc] `modules` option is not supported in the browser build.');\r\n        }\r\n    }\r\n    const postCSSOptions = Object.assign(Object.assign({}, postcssOptions), { to: filename, from: filename });\r\n    if (map) {\r\n        postCSSOptions.map = {\r\n            inline: false,\r\n            annotation: false,\r\n            prev: map\r\n        };\r\n    }\r\n    let result;\r\n    let code;\r\n    let outMap;\r\n    // stylus output include plain css. so need remove the repeat item\r\n    const dependencies = new Set(preProcessedSource ? preProcessedSource.dependencies : []);\r\n    // sass has filename self when provided filename option\r\n    dependencies.delete(filename);\r\n    const errors = [];\r\n    if (preProcessedSource && preProcessedSource.errors.length) {\r\n        errors.push(...preProcessedSource.errors);\r\n    }\r\n    const recordPlainCssDependencies = (messages) => {\r\n        messages.forEach(msg => {\r\n            if (msg.type === 'dependency') {\r\n                // postcss output path is absolute position path\r\n                dependencies.add(msg.file);\r\n            }\r\n        });\r\n        return dependencies;\r\n    };\r\n    try {\r\n        result = postcss_1(plugins).process(source, postCSSOptions);\r\n        // In async mode, return a promise.\r\n        if (options.isAsync) {\r\n            return result\r\n                .then(result => ({\r\n                code: result.css || '',\r\n                map: result.map && result.map.toJSON(),\r\n                errors,\r\n                modules: cssModules,\r\n                rawResult: result,\r\n                dependencies: recordPlainCssDependencies(result.messages)\r\n            }))\r\n                .catch(error => ({\r\n                code: '',\r\n                map: undefined,\r\n                errors: [...errors, error],\r\n                rawResult: undefined,\r\n                dependencies\r\n            }));\r\n        }\r\n        recordPlainCssDependencies(result.messages);\r\n        // force synchronous transform (we know we only have sync plugins)\r\n        code = result.css;\r\n        outMap = result.map;\r\n    }\r\n    catch (e) {\r\n        errors.push(e);\r\n    }\r\n    return {\r\n        code: code || ``,\r\n        map: outMap && outMap.toJSON(),\r\n        errors,\r\n        rawResult: result,\r\n        dependencies\r\n    };\r\n}\r\nfunction preprocess$1(options, preprocessor) {\r\n    if (!options.preprocessCustomRequire) {\r\n        throw new Error(`[@vue/compiler-sfc] Style preprocessing in the browser build must ` +\r\n            `provide the \\`preprocessCustomRequire\\` option to return the in-browser ` +\r\n            `version of the preprocessor.`);\r\n    }\r\n    return preprocessor(options.source, options.inMap || options.map, Object.assign({ filename: options.filename }, options.preprocessOptions), options.preprocessCustomRequire);\r\n}\r\n\r\n// API\r\nconst walk$2 = walk$1;\r\n\r\nexport { MagicString, parse_1 as babelParse, compileScript, compileStyle, compileStyleAsync, compileTemplate, extractIdentifiers, generateCodeFrame, isInDestructureAssignment, isStaticProperty, parse$4 as parse, rewriteDefault, shouldTransform as shouldTransformRef, transform$1 as transformRef, transformAST as transformRefAST, walk$2 as walk, walkIdentifiers };\r\n", "export * from '@vue/compiler-sfc'", "var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __defProps = Object.defineProperties;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp.call(b, prop))\r\n      __defNormalProp(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols)\r\n    for (var prop of __getOwnPropSymbols(b)) {\r\n      if (__propIsEnum.call(b, prop))\r\n        __defNormalProp(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\r\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\r\nvar __commonJS = (cb, mod) => function __require() {\r\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\r\n};\r\nvar __export = (target, all) => {\r\n  __markAsModule(target);\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __reExport = (target, module2, desc) => {\r\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\r\n    for (let key of __getOwnPropNames(module2))\r\n      if (!__hasOwnProp.call(target, key) && key !== \"default\")\r\n        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });\r\n  }\r\n  return target;\r\n};\r\nvar __toModule = (module2) => {\r\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);\r\n};\r\n\r\n// ../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/constants.js\r\nvar require_constants = __commonJS({\r\n  \"../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/constants.js\"(exports, module2) {\r\n    \"use strict\";\r\n    var path4 = require(\"path\");\r\n    var WIN_SLASH = \"\\\\\\\\/\";\r\n    var WIN_NO_SLASH = `[^${WIN_SLASH}]`;\r\n    var DOT_LITERAL = \"\\\\.\";\r\n    var PLUS_LITERAL = \"\\\\+\";\r\n    var QMARK_LITERAL = \"\\\\?\";\r\n    var SLASH_LITERAL = \"\\\\/\";\r\n    var ONE_CHAR = \"(?=.)\";\r\n    var QMARK = \"[^/]\";\r\n    var END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\r\n    var START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\r\n    var DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\r\n    var NO_DOT = `(?!${DOT_LITERAL})`;\r\n    var NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\r\n    var NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\r\n    var NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\r\n    var QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\r\n    var STAR = `${QMARK}*?`;\r\n    var POSIX_CHARS = {\r\n      DOT_LITERAL,\r\n      PLUS_LITERAL,\r\n      QMARK_LITERAL,\r\n      SLASH_LITERAL,\r\n      ONE_CHAR,\r\n      QMARK,\r\n      END_ANCHOR,\r\n      DOTS_SLASH,\r\n      NO_DOT,\r\n      NO_DOTS,\r\n      NO_DOT_SLASH,\r\n      NO_DOTS_SLASH,\r\n      QMARK_NO_DOT,\r\n      STAR,\r\n      START_ANCHOR\r\n    };\r\n    var WINDOWS_CHARS = __spreadProps(__spreadValues({}, POSIX_CHARS), {\r\n      SLASH_LITERAL: `[${WIN_SLASH}]`,\r\n      QMARK: WIN_NO_SLASH,\r\n      STAR: `${WIN_NO_SLASH}*?`,\r\n      DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\r\n      NO_DOT: `(?!${DOT_LITERAL})`,\r\n      NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\r\n      NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\r\n      NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\r\n      QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\r\n      START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\r\n      END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\r\n    });\r\n    var POSIX_REGEX_SOURCE = {\r\n      alnum: \"a-zA-Z0-9\",\r\n      alpha: \"a-zA-Z\",\r\n      ascii: \"\\\\x00-\\\\x7F\",\r\n      blank: \" \\\\t\",\r\n      cntrl: \"\\\\x00-\\\\x1F\\\\x7F\",\r\n      digit: \"0-9\",\r\n      graph: \"\\\\x21-\\\\x7E\",\r\n      lower: \"a-z\",\r\n      print: \"\\\\x20-\\\\x7E \",\r\n      punct: \"\\\\-!\\\"#$%&'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~\",\r\n      space: \" \\\\t\\\\r\\\\n\\\\v\\\\f\",\r\n      upper: \"A-Z\",\r\n      word: \"A-Za-z0-9_\",\r\n      xdigit: \"A-Fa-f0-9\"\r\n    };\r\n    module2.exports = {\r\n      MAX_LENGTH: 1024 * 64,\r\n      POSIX_REGEX_SOURCE,\r\n      REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\r\n      REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\r\n      REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\r\n      REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\r\n      REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\r\n      REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\r\n      REPLACEMENTS: {\r\n        \"***\": \"*\",\r\n        \"**/**\": \"**\",\r\n        \"**/**/**\": \"**\"\r\n      },\r\n      CHAR_0: 48,\r\n      CHAR_9: 57,\r\n      CHAR_UPPERCASE_A: 65,\r\n      CHAR_LOWERCASE_A: 97,\r\n      CHAR_UPPERCASE_Z: 90,\r\n      CHAR_LOWERCASE_Z: 122,\r\n      CHAR_LEFT_PARENTHESES: 40,\r\n      CHAR_RIGHT_PARENTHESES: 41,\r\n      CHAR_ASTERISK: 42,\r\n      CHAR_AMPERSAND: 38,\r\n      CHAR_AT: 64,\r\n      CHAR_BACKWARD_SLASH: 92,\r\n      CHAR_CARRIAGE_RETURN: 13,\r\n      CHAR_CIRCUMFLEX_ACCENT: 94,\r\n      CHAR_COLON: 58,\r\n      CHAR_COMMA: 44,\r\n      CHAR_DOT: 46,\r\n      CHAR_DOUBLE_QUOTE: 34,\r\n      CHAR_EQUAL: 61,\r\n      CHAR_EXCLAMATION_MARK: 33,\r\n      CHAR_FORM_FEED: 12,\r\n      CHAR_FORWARD_SLASH: 47,\r\n      CHAR_GRAVE_ACCENT: 96,\r\n      CHAR_HASH: 35,\r\n      CHAR_HYPHEN_MINUS: 45,\r\n      CHAR_LEFT_ANGLE_BRACKET: 60,\r\n      CHAR_LEFT_CURLY_BRACE: 123,\r\n      CHAR_LEFT_SQUARE_BRACKET: 91,\r\n      CHAR_LINE_FEED: 10,\r\n      CHAR_NO_BREAK_SPACE: 160,\r\n      CHAR_PERCENT: 37,\r\n      CHAR_PLUS: 43,\r\n      CHAR_QUESTION_MARK: 63,\r\n      CHAR_RIGHT_ANGLE_BRACKET: 62,\r\n      CHAR_RIGHT_CURLY_BRACE: 125,\r\n      CHAR_RIGHT_SQUARE_BRACKET: 93,\r\n      CHAR_SEMICOLON: 59,\r\n      CHAR_SINGLE_QUOTE: 39,\r\n      CHAR_SPACE: 32,\r\n      CHAR_TAB: 9,\r\n      CHAR_UNDERSCORE: 95,\r\n      CHAR_VERTICAL_LINE: 124,\r\n      CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,\r\n      SEP: path4.sep,\r\n      extglobChars(chars) {\r\n        return {\r\n          \"!\": { type: \"negate\", open: \"(?:(?!(?:\", close: `))${chars.STAR})` },\r\n          \"?\": { type: \"qmark\", open: \"(?:\", close: \")?\" },\r\n          \"+\": { type: \"plus\", open: \"(?:\", close: \")+\" },\r\n          \"*\": { type: \"star\", open: \"(?:\", close: \")*\" },\r\n          \"@\": { type: \"at\", open: \"(?:\", close: \")\" }\r\n        };\r\n      },\r\n      globChars(win322) {\r\n        return win322 === true ? WINDOWS_CHARS : POSIX_CHARS;\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/utils.js\r\nvar require_utils = __commonJS({\r\n  \"../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/utils.js\"(exports) {\r\n    \"use strict\";\r\n    var path4 = require(\"path\");\r\n    var win322 = process.platform === \"win32\";\r\n    var {\r\n      REGEX_BACKSLASH,\r\n      REGEX_REMOVE_BACKSLASH,\r\n      REGEX_SPECIAL_CHARS,\r\n      REGEX_SPECIAL_CHARS_GLOBAL\r\n    } = require_constants();\r\n    exports.isObject = (val) => val !== null && typeof val === \"object\" && !Array.isArray(val);\r\n    exports.hasRegexChars = (str) => REGEX_SPECIAL_CHARS.test(str);\r\n    exports.isRegexChar = (str) => str.length === 1 && exports.hasRegexChars(str);\r\n    exports.escapeRegex = (str) => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, \"\\\\$1\");\r\n    exports.toPosixSlashes = (str) => str.replace(REGEX_BACKSLASH, \"/\");\r\n    exports.removeBackslashes = (str) => {\r\n      return str.replace(REGEX_REMOVE_BACKSLASH, (match) => {\r\n        return match === \"\\\\\" ? \"\" : match;\r\n      });\r\n    };\r\n    exports.supportsLookbehinds = () => {\r\n      const segs = process.version.slice(1).split(\".\").map(Number);\r\n      if (segs.length === 3 && segs[0] >= 9 || segs[0] === 8 && segs[1] >= 10) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    exports.isWindows = (options) => {\r\n      if (options && typeof options.windows === \"boolean\") {\r\n        return options.windows;\r\n      }\r\n      return win322 === true || path4.sep === \"\\\\\";\r\n    };\r\n    exports.escapeLast = (input, char, lastIdx) => {\r\n      const idx = input.lastIndexOf(char, lastIdx);\r\n      if (idx === -1)\r\n        return input;\r\n      if (input[idx - 1] === \"\\\\\")\r\n        return exports.escapeLast(input, char, idx - 1);\r\n      return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\r\n    };\r\n    exports.removePrefix = (input, state = {}) => {\r\n      let output = input;\r\n      if (output.startsWith(\"./\")) {\r\n        output = output.slice(2);\r\n        state.prefix = \"./\";\r\n      }\r\n      return output;\r\n    };\r\n    exports.wrapOutput = (input, state = {}, options = {}) => {\r\n      const prepend = options.contains ? \"\" : \"^\";\r\n      const append = options.contains ? \"\" : \"$\";\r\n      let output = `${prepend}(?:${input})${append}`;\r\n      if (state.negated === true) {\r\n        output = `(?:^(?!${output}).*$)`;\r\n      }\r\n      return output;\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/scan.js\r\nvar require_scan = __commonJS({\r\n  \"../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/scan.js\"(exports, module2) {\r\n    \"use strict\";\r\n    var utils = require_utils();\r\n    var {\r\n      CHAR_ASTERISK,\r\n      CHAR_AT,\r\n      CHAR_BACKWARD_SLASH,\r\n      CHAR_COMMA,\r\n      CHAR_DOT,\r\n      CHAR_EXCLAMATION_MARK,\r\n      CHAR_FORWARD_SLASH,\r\n      CHAR_LEFT_CURLY_BRACE,\r\n      CHAR_LEFT_PARENTHESES,\r\n      CHAR_LEFT_SQUARE_BRACKET,\r\n      CHAR_PLUS,\r\n      CHAR_QUESTION_MARK,\r\n      CHAR_RIGHT_CURLY_BRACE,\r\n      CHAR_RIGHT_PARENTHESES,\r\n      CHAR_RIGHT_SQUARE_BRACKET\r\n    } = require_constants();\r\n    var isPathSeparator = (code) => {\r\n      return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\r\n    };\r\n    var depth = (token) => {\r\n      if (token.isPrefix !== true) {\r\n        token.depth = token.isGlobstar ? Infinity : 1;\r\n      }\r\n    };\r\n    var scan = (input, options) => {\r\n      const opts = options || {};\r\n      const length = input.length - 1;\r\n      const scanToEnd = opts.parts === true || opts.scanToEnd === true;\r\n      const slashes = [];\r\n      const tokens = [];\r\n      const parts = [];\r\n      let str = input;\r\n      let index = -1;\r\n      let start = 0;\r\n      let lastIndex = 0;\r\n      let isBrace = false;\r\n      let isBracket = false;\r\n      let isGlob = false;\r\n      let isExtglob = false;\r\n      let isGlobstar = false;\r\n      let braceEscaped = false;\r\n      let backslashes = false;\r\n      let negated = false;\r\n      let negatedExtglob = false;\r\n      let finished = false;\r\n      let braces = 0;\r\n      let prev;\r\n      let code;\r\n      let token = { value: \"\", depth: 0, isGlob: false };\r\n      const eos = () => index >= length;\r\n      const peek = () => str.charCodeAt(index + 1);\r\n      const advance = () => {\r\n        prev = code;\r\n        return str.charCodeAt(++index);\r\n      };\r\n      while (index < length) {\r\n        code = advance();\r\n        let next;\r\n        if (code === CHAR_BACKWARD_SLASH) {\r\n          backslashes = token.backslashes = true;\r\n          code = advance();\r\n          if (code === CHAR_LEFT_CURLY_BRACE) {\r\n            braceEscaped = true;\r\n          }\r\n          continue;\r\n        }\r\n        if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\r\n          braces++;\r\n          while (eos() !== true && (code = advance())) {\r\n            if (code === CHAR_BACKWARD_SLASH) {\r\n              backslashes = token.backslashes = true;\r\n              advance();\r\n              continue;\r\n            }\r\n            if (code === CHAR_LEFT_CURLY_BRACE) {\r\n              braces++;\r\n              continue;\r\n            }\r\n            if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\r\n              isBrace = token.isBrace = true;\r\n              isGlob = token.isGlob = true;\r\n              finished = true;\r\n              if (scanToEnd === true) {\r\n                continue;\r\n              }\r\n              break;\r\n            }\r\n            if (braceEscaped !== true && code === CHAR_COMMA) {\r\n              isBrace = token.isBrace = true;\r\n              isGlob = token.isGlob = true;\r\n              finished = true;\r\n              if (scanToEnd === true) {\r\n                continue;\r\n              }\r\n              break;\r\n            }\r\n            if (code === CHAR_RIGHT_CURLY_BRACE) {\r\n              braces--;\r\n              if (braces === 0) {\r\n                braceEscaped = false;\r\n                isBrace = token.isBrace = true;\r\n                finished = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (scanToEnd === true) {\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n        if (code === CHAR_FORWARD_SLASH) {\r\n          slashes.push(index);\r\n          tokens.push(token);\r\n          token = { value: \"\", depth: 0, isGlob: false };\r\n          if (finished === true)\r\n            continue;\r\n          if (prev === CHAR_DOT && index === start + 1) {\r\n            start += 2;\r\n            continue;\r\n          }\r\n          lastIndex = index + 1;\r\n          continue;\r\n        }\r\n        if (opts.noext !== true) {\r\n          const isExtglobChar = code === CHAR_PLUS || code === CHAR_AT || code === CHAR_ASTERISK || code === CHAR_QUESTION_MARK || code === CHAR_EXCLAMATION_MARK;\r\n          if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\r\n            isGlob = token.isGlob = true;\r\n            isExtglob = token.isExtglob = true;\r\n            finished = true;\r\n            if (code === CHAR_EXCLAMATION_MARK && index === start) {\r\n              negatedExtglob = true;\r\n            }\r\n            if (scanToEnd === true) {\r\n              while (eos() !== true && (code = advance())) {\r\n                if (code === CHAR_BACKWARD_SLASH) {\r\n                  backslashes = token.backslashes = true;\r\n                  code = advance();\r\n                  continue;\r\n                }\r\n                if (code === CHAR_RIGHT_PARENTHESES) {\r\n                  isGlob = token.isGlob = true;\r\n                  finished = true;\r\n                  break;\r\n                }\r\n              }\r\n              continue;\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        if (code === CHAR_ASTERISK) {\r\n          if (prev === CHAR_ASTERISK)\r\n            isGlobstar = token.isGlobstar = true;\r\n          isGlob = token.isGlob = true;\r\n          finished = true;\r\n          if (scanToEnd === true) {\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n        if (code === CHAR_QUESTION_MARK) {\r\n          isGlob = token.isGlob = true;\r\n          finished = true;\r\n          if (scanToEnd === true) {\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n        if (code === CHAR_LEFT_SQUARE_BRACKET) {\r\n          while (eos() !== true && (next = advance())) {\r\n            if (next === CHAR_BACKWARD_SLASH) {\r\n              backslashes = token.backslashes = true;\r\n              advance();\r\n              continue;\r\n            }\r\n            if (next === CHAR_RIGHT_SQUARE_BRACKET) {\r\n              isBracket = token.isBracket = true;\r\n              isGlob = token.isGlob = true;\r\n              finished = true;\r\n              break;\r\n            }\r\n          }\r\n          if (scanToEnd === true) {\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n        if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\r\n          negated = token.negated = true;\r\n          start++;\r\n          continue;\r\n        }\r\n        if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\r\n          isGlob = token.isGlob = true;\r\n          if (scanToEnd === true) {\r\n            while (eos() !== true && (code = advance())) {\r\n              if (code === CHAR_LEFT_PARENTHESES) {\r\n                backslashes = token.backslashes = true;\r\n                code = advance();\r\n                continue;\r\n              }\r\n              if (code === CHAR_RIGHT_PARENTHESES) {\r\n                finished = true;\r\n                break;\r\n              }\r\n            }\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n        if (isGlob === true) {\r\n          finished = true;\r\n          if (scanToEnd === true) {\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      if (opts.noext === true) {\r\n        isExtglob = false;\r\n        isGlob = false;\r\n      }\r\n      let base = str;\r\n      let prefix = \"\";\r\n      let glob = \"\";\r\n      if (start > 0) {\r\n        prefix = str.slice(0, start);\r\n        str = str.slice(start);\r\n        lastIndex -= start;\r\n      }\r\n      if (base && isGlob === true && lastIndex > 0) {\r\n        base = str.slice(0, lastIndex);\r\n        glob = str.slice(lastIndex);\r\n      } else if (isGlob === true) {\r\n        base = \"\";\r\n        glob = str;\r\n      } else {\r\n        base = str;\r\n      }\r\n      if (base && base !== \"\" && base !== \"/\" && base !== str) {\r\n        if (isPathSeparator(base.charCodeAt(base.length - 1))) {\r\n          base = base.slice(0, -1);\r\n        }\r\n      }\r\n      if (opts.unescape === true) {\r\n        if (glob)\r\n          glob = utils.removeBackslashes(glob);\r\n        if (base && backslashes === true) {\r\n          base = utils.removeBackslashes(base);\r\n        }\r\n      }\r\n      const state = {\r\n        prefix,\r\n        input,\r\n        start,\r\n        base,\r\n        glob,\r\n        isBrace,\r\n        isBracket,\r\n        isGlob,\r\n        isExtglob,\r\n        isGlobstar,\r\n        negated,\r\n        negatedExtglob\r\n      };\r\n      if (opts.tokens === true) {\r\n        state.maxDepth = 0;\r\n        if (!isPathSeparator(code)) {\r\n          tokens.push(token);\r\n        }\r\n        state.tokens = tokens;\r\n      }\r\n      if (opts.parts === true || opts.tokens === true) {\r\n        let prevIndex;\r\n        for (let idx = 0; idx < slashes.length; idx++) {\r\n          const n = prevIndex ? prevIndex + 1 : start;\r\n          const i = slashes[idx];\r\n          const value = input.slice(n, i);\r\n          if (opts.tokens) {\r\n            if (idx === 0 && start !== 0) {\r\n              tokens[idx].isPrefix = true;\r\n              tokens[idx].value = prefix;\r\n            } else {\r\n              tokens[idx].value = value;\r\n            }\r\n            depth(tokens[idx]);\r\n            state.maxDepth += tokens[idx].depth;\r\n          }\r\n          if (idx !== 0 || value !== \"\") {\r\n            parts.push(value);\r\n          }\r\n          prevIndex = i;\r\n        }\r\n        if (prevIndex && prevIndex + 1 < input.length) {\r\n          const value = input.slice(prevIndex + 1);\r\n          parts.push(value);\r\n          if (opts.tokens) {\r\n            tokens[tokens.length - 1].value = value;\r\n            depth(tokens[tokens.length - 1]);\r\n            state.maxDepth += tokens[tokens.length - 1].depth;\r\n          }\r\n        }\r\n        state.slashes = slashes;\r\n        state.parts = parts;\r\n      }\r\n      return state;\r\n    };\r\n    module2.exports = scan;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/parse.js\r\nvar require_parse = __commonJS({\r\n  \"../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/parse.js\"(exports, module2) {\r\n    \"use strict\";\r\n    var constants = require_constants();\r\n    var utils = require_utils();\r\n    var {\r\n      MAX_LENGTH,\r\n      POSIX_REGEX_SOURCE,\r\n      REGEX_NON_SPECIAL_CHARS,\r\n      REGEX_SPECIAL_CHARS_BACKREF,\r\n      REPLACEMENTS\r\n    } = constants;\r\n    var expandRange = (args, options) => {\r\n      if (typeof options.expandRange === \"function\") {\r\n        return options.expandRange(...args, options);\r\n      }\r\n      args.sort();\r\n      const value = `[${args.join(\"-\")}]`;\r\n      try {\r\n        new RegExp(value);\r\n      } catch (ex) {\r\n        return args.map((v) => utils.escapeRegex(v)).join(\"..\");\r\n      }\r\n      return value;\r\n    };\r\n    var syntaxError = (type, char) => {\r\n      return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\r\n    };\r\n    var parse = (input, options) => {\r\n      if (typeof input !== \"string\") {\r\n        throw new TypeError(\"Expected a string\");\r\n      }\r\n      input = REPLACEMENTS[input] || input;\r\n      const opts = __spreadValues({}, options);\r\n      const max = typeof opts.maxLength === \"number\" ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n      let len = input.length;\r\n      if (len > max) {\r\n        throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\r\n      }\r\n      const bos = { type: \"bos\", value: \"\", output: opts.prepend || \"\" };\r\n      const tokens = [bos];\r\n      const capture = opts.capture ? \"\" : \"?:\";\r\n      const win322 = utils.isWindows(options);\r\n      const PLATFORM_CHARS = constants.globChars(win322);\r\n      const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\r\n      const {\r\n        DOT_LITERAL,\r\n        PLUS_LITERAL,\r\n        SLASH_LITERAL,\r\n        ONE_CHAR,\r\n        DOTS_SLASH,\r\n        NO_DOT,\r\n        NO_DOT_SLASH,\r\n        NO_DOTS_SLASH,\r\n        QMARK,\r\n        QMARK_NO_DOT,\r\n        STAR,\r\n        START_ANCHOR\r\n      } = PLATFORM_CHARS;\r\n      const globstar = (opts2) => {\r\n        return `(${capture}(?:(?!${START_ANCHOR}${opts2.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\r\n      };\r\n      const nodot = opts.dot ? \"\" : NO_DOT;\r\n      const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\r\n      let star = opts.bash === true ? globstar(opts) : STAR;\r\n      if (opts.capture) {\r\n        star = `(${star})`;\r\n      }\r\n      if (typeof opts.noext === \"boolean\") {\r\n        opts.noextglob = opts.noext;\r\n      }\r\n      const state = {\r\n        input,\r\n        index: -1,\r\n        start: 0,\r\n        dot: opts.dot === true,\r\n        consumed: \"\",\r\n        output: \"\",\r\n        prefix: \"\",\r\n        backtrack: false,\r\n        negated: false,\r\n        brackets: 0,\r\n        braces: 0,\r\n        parens: 0,\r\n        quotes: 0,\r\n        globstar: false,\r\n        tokens\r\n      };\r\n      input = utils.removePrefix(input, state);\r\n      len = input.length;\r\n      const extglobs = [];\r\n      const braces = [];\r\n      const stack = [];\r\n      let prev = bos;\r\n      let value;\r\n      const eos = () => state.index === len - 1;\r\n      const peek = state.peek = (n = 1) => input[state.index + n];\r\n      const advance = state.advance = () => input[++state.index] || \"\";\r\n      const remaining = () => input.slice(state.index + 1);\r\n      const consume = (value2 = \"\", num = 0) => {\r\n        state.consumed += value2;\r\n        state.index += num;\r\n      };\r\n      const append = (token) => {\r\n        state.output += token.output != null ? token.output : token.value;\r\n        consume(token.value);\r\n      };\r\n      const negate = () => {\r\n        let count = 1;\r\n        while (peek() === \"!\" && (peek(2) !== \"(\" || peek(3) === \"?\")) {\r\n          advance();\r\n          state.start++;\r\n          count++;\r\n        }\r\n        if (count % 2 === 0) {\r\n          return false;\r\n        }\r\n        state.negated = true;\r\n        state.start++;\r\n        return true;\r\n      };\r\n      const increment = (type) => {\r\n        state[type]++;\r\n        stack.push(type);\r\n      };\r\n      const decrement = (type) => {\r\n        state[type]--;\r\n        stack.pop();\r\n      };\r\n      const push = (tok) => {\r\n        if (prev.type === \"globstar\") {\r\n          const isBrace = state.braces > 0 && (tok.type === \"comma\" || tok.type === \"brace\");\r\n          const isExtglob = tok.extglob === true || extglobs.length && (tok.type === \"pipe\" || tok.type === \"paren\");\r\n          if (tok.type !== \"slash\" && tok.type !== \"paren\" && !isBrace && !isExtglob) {\r\n            state.output = state.output.slice(0, -prev.output.length);\r\n            prev.type = \"star\";\r\n            prev.value = \"*\";\r\n            prev.output = star;\r\n            state.output += prev.output;\r\n          }\r\n        }\r\n        if (extglobs.length && tok.type !== \"paren\") {\r\n          extglobs[extglobs.length - 1].inner += tok.value;\r\n        }\r\n        if (tok.value || tok.output)\r\n          append(tok);\r\n        if (prev && prev.type === \"text\" && tok.type === \"text\") {\r\n          prev.value += tok.value;\r\n          prev.output = (prev.output || \"\") + tok.value;\r\n          return;\r\n        }\r\n        tok.prev = prev;\r\n        tokens.push(tok);\r\n        prev = tok;\r\n      };\r\n      const extglobOpen = (type, value2) => {\r\n        const token = __spreadProps(__spreadValues({}, EXTGLOB_CHARS[value2]), { conditions: 1, inner: \"\" });\r\n        token.prev = prev;\r\n        token.parens = state.parens;\r\n        token.output = state.output;\r\n        const output = (opts.capture ? \"(\" : \"\") + token.open;\r\n        increment(\"parens\");\r\n        push({ type, value: value2, output: state.output ? \"\" : ONE_CHAR });\r\n        push({ type: \"paren\", extglob: true, value: advance(), output });\r\n        extglobs.push(token);\r\n      };\r\n      const extglobClose = (token) => {\r\n        let output = token.close + (opts.capture ? \")\" : \"\");\r\n        let rest;\r\n        if (token.type === \"negate\") {\r\n          let extglobStar = star;\r\n          if (token.inner && token.inner.length > 1 && token.inner.includes(\"/\")) {\r\n            extglobStar = globstar(opts);\r\n          }\r\n          if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\r\n            output = token.close = `)$))${extglobStar}`;\r\n          }\r\n          if (token.inner.includes(\"*\") && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\r\n            output = token.close = `)${rest})${extglobStar})`;\r\n          }\r\n          if (token.prev.type === \"bos\") {\r\n            state.negatedExtglob = true;\r\n          }\r\n        }\r\n        push({ type: \"paren\", extglob: true, value, output });\r\n        decrement(\"parens\");\r\n      };\r\n      if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\r\n        let backslashes = false;\r\n        let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\r\n          if (first === \"\\\\\") {\r\n            backslashes = true;\r\n            return m;\r\n          }\r\n          if (first === \"?\") {\r\n            if (esc) {\r\n              return esc + first + (rest ? QMARK.repeat(rest.length) : \"\");\r\n            }\r\n            if (index === 0) {\r\n              return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : \"\");\r\n            }\r\n            return QMARK.repeat(chars.length);\r\n          }\r\n          if (first === \".\") {\r\n            return DOT_LITERAL.repeat(chars.length);\r\n          }\r\n          if (first === \"*\") {\r\n            if (esc) {\r\n              return esc + first + (rest ? star : \"\");\r\n            }\r\n            return star;\r\n          }\r\n          return esc ? m : `\\\\${m}`;\r\n        });\r\n        if (backslashes === true) {\r\n          if (opts.unescape === true) {\r\n            output = output.replace(/\\\\/g, \"\");\r\n          } else {\r\n            output = output.replace(/\\\\+/g, (m) => {\r\n              return m.length % 2 === 0 ? \"\\\\\\\\\" : m ? \"\\\\\" : \"\";\r\n            });\r\n          }\r\n        }\r\n        if (output === input && opts.contains === true) {\r\n          state.output = input;\r\n          return state;\r\n        }\r\n        state.output = utils.wrapOutput(output, state, options);\r\n        return state;\r\n      }\r\n      while (!eos()) {\r\n        value = advance();\r\n        if (value === \"\\0\") {\r\n          continue;\r\n        }\r\n        if (value === \"\\\\\") {\r\n          const next = peek();\r\n          if (next === \"/\" && opts.bash !== true) {\r\n            continue;\r\n          }\r\n          if (next === \".\" || next === \";\") {\r\n            continue;\r\n          }\r\n          if (!next) {\r\n            value += \"\\\\\";\r\n            push({ type: \"text\", value });\r\n            continue;\r\n          }\r\n          const match = /^\\\\+/.exec(remaining());\r\n          let slashes = 0;\r\n          if (match && match[0].length > 2) {\r\n            slashes = match[0].length;\r\n            state.index += slashes;\r\n            if (slashes % 2 !== 0) {\r\n              value += \"\\\\\";\r\n            }\r\n          }\r\n          if (opts.unescape === true) {\r\n            value = advance();\r\n          } else {\r\n            value += advance();\r\n          }\r\n          if (state.brackets === 0) {\r\n            push({ type: \"text\", value });\r\n            continue;\r\n          }\r\n        }\r\n        if (state.brackets > 0 && (value !== \"]\" || prev.value === \"[\" || prev.value === \"[^\")) {\r\n          if (opts.posix !== false && value === \":\") {\r\n            const inner = prev.value.slice(1);\r\n            if (inner.includes(\"[\")) {\r\n              prev.posix = true;\r\n              if (inner.includes(\":\")) {\r\n                const idx = prev.value.lastIndexOf(\"[\");\r\n                const pre = prev.value.slice(0, idx);\r\n                const rest2 = prev.value.slice(idx + 2);\r\n                const posix2 = POSIX_REGEX_SOURCE[rest2];\r\n                if (posix2) {\r\n                  prev.value = pre + posix2;\r\n                  state.backtrack = true;\r\n                  advance();\r\n                  if (!bos.output && tokens.indexOf(prev) === 1) {\r\n                    bos.output = ONE_CHAR;\r\n                  }\r\n                  continue;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (value === \"[\" && peek() !== \":\" || value === \"-\" && peek() === \"]\") {\r\n            value = `\\\\${value}`;\r\n          }\r\n          if (value === \"]\" && (prev.value === \"[\" || prev.value === \"[^\")) {\r\n            value = `\\\\${value}`;\r\n          }\r\n          if (opts.posix === true && value === \"!\" && prev.value === \"[\") {\r\n            value = \"^\";\r\n          }\r\n          prev.value += value;\r\n          append({ value });\r\n          continue;\r\n        }\r\n        if (state.quotes === 1 && value !== '\"') {\r\n          value = utils.escapeRegex(value);\r\n          prev.value += value;\r\n          append({ value });\r\n          continue;\r\n        }\r\n        if (value === '\"') {\r\n          state.quotes = state.quotes === 1 ? 0 : 1;\r\n          if (opts.keepQuotes === true) {\r\n            push({ type: \"text\", value });\r\n          }\r\n          continue;\r\n        }\r\n        if (value === \"(\") {\r\n          increment(\"parens\");\r\n          push({ type: \"paren\", value });\r\n          continue;\r\n        }\r\n        if (value === \")\") {\r\n          if (state.parens === 0 && opts.strictBrackets === true) {\r\n            throw new SyntaxError(syntaxError(\"opening\", \"(\"));\r\n          }\r\n          const extglob = extglobs[extglobs.length - 1];\r\n          if (extglob && state.parens === extglob.parens + 1) {\r\n            extglobClose(extglobs.pop());\r\n            continue;\r\n          }\r\n          push({ type: \"paren\", value, output: state.parens ? \")\" : \"\\\\)\" });\r\n          decrement(\"parens\");\r\n          continue;\r\n        }\r\n        if (value === \"[\") {\r\n          if (opts.nobracket === true || !remaining().includes(\"]\")) {\r\n            if (opts.nobracket !== true && opts.strictBrackets === true) {\r\n              throw new SyntaxError(syntaxError(\"closing\", \"]\"));\r\n            }\r\n            value = `\\\\${value}`;\r\n          } else {\r\n            increment(\"brackets\");\r\n          }\r\n          push({ type: \"bracket\", value });\r\n          continue;\r\n        }\r\n        if (value === \"]\") {\r\n          if (opts.nobracket === true || prev && prev.type === \"bracket\" && prev.value.length === 1) {\r\n            push({ type: \"text\", value, output: `\\\\${value}` });\r\n            continue;\r\n          }\r\n          if (state.brackets === 0) {\r\n            if (opts.strictBrackets === true) {\r\n              throw new SyntaxError(syntaxError(\"opening\", \"[\"));\r\n            }\r\n            push({ type: \"text\", value, output: `\\\\${value}` });\r\n            continue;\r\n          }\r\n          decrement(\"brackets\");\r\n          const prevValue = prev.value.slice(1);\r\n          if (prev.posix !== true && prevValue[0] === \"^\" && !prevValue.includes(\"/\")) {\r\n            value = `/${value}`;\r\n          }\r\n          prev.value += value;\r\n          append({ value });\r\n          if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\r\n            continue;\r\n          }\r\n          const escaped = utils.escapeRegex(prev.value);\r\n          state.output = state.output.slice(0, -prev.value.length);\r\n          if (opts.literalBrackets === true) {\r\n            state.output += escaped;\r\n            prev.value = escaped;\r\n            continue;\r\n          }\r\n          prev.value = `(${capture}${escaped}|${prev.value})`;\r\n          state.output += prev.value;\r\n          continue;\r\n        }\r\n        if (value === \"{\" && opts.nobrace !== true) {\r\n          increment(\"braces\");\r\n          const open = {\r\n            type: \"brace\",\r\n            value,\r\n            output: \"(\",\r\n            outputIndex: state.output.length,\r\n            tokensIndex: state.tokens.length\r\n          };\r\n          braces.push(open);\r\n          push(open);\r\n          continue;\r\n        }\r\n        if (value === \"}\") {\r\n          const brace = braces[braces.length - 1];\r\n          if (opts.nobrace === true || !brace) {\r\n            push({ type: \"text\", value, output: value });\r\n            continue;\r\n          }\r\n          let output = \")\";\r\n          if (brace.dots === true) {\r\n            const arr = tokens.slice();\r\n            const range = [];\r\n            for (let i = arr.length - 1; i >= 0; i--) {\r\n              tokens.pop();\r\n              if (arr[i].type === \"brace\") {\r\n                break;\r\n              }\r\n              if (arr[i].type !== \"dots\") {\r\n                range.unshift(arr[i].value);\r\n              }\r\n            }\r\n            output = expandRange(range, opts);\r\n            state.backtrack = true;\r\n          }\r\n          if (brace.comma !== true && brace.dots !== true) {\r\n            const out = state.output.slice(0, brace.outputIndex);\r\n            const toks = state.tokens.slice(brace.tokensIndex);\r\n            brace.value = brace.output = \"\\\\{\";\r\n            value = output = \"\\\\}\";\r\n            state.output = out;\r\n            for (const t of toks) {\r\n              state.output += t.output || t.value;\r\n            }\r\n          }\r\n          push({ type: \"brace\", value, output });\r\n          decrement(\"braces\");\r\n          braces.pop();\r\n          continue;\r\n        }\r\n        if (value === \"|\") {\r\n          if (extglobs.length > 0) {\r\n            extglobs[extglobs.length - 1].conditions++;\r\n          }\r\n          push({ type: \"text\", value });\r\n          continue;\r\n        }\r\n        if (value === \",\") {\r\n          let output = value;\r\n          const brace = braces[braces.length - 1];\r\n          if (brace && stack[stack.length - 1] === \"braces\") {\r\n            brace.comma = true;\r\n            output = \"|\";\r\n          }\r\n          push({ type: \"comma\", value, output });\r\n          continue;\r\n        }\r\n        if (value === \"/\") {\r\n          if (prev.type === \"dot\" && state.index === state.start + 1) {\r\n            state.start = state.index + 1;\r\n            state.consumed = \"\";\r\n            state.output = \"\";\r\n            tokens.pop();\r\n            prev = bos;\r\n            continue;\r\n          }\r\n          push({ type: \"slash\", value, output: SLASH_LITERAL });\r\n          continue;\r\n        }\r\n        if (value === \".\") {\r\n          if (state.braces > 0 && prev.type === \"dot\") {\r\n            if (prev.value === \".\")\r\n              prev.output = DOT_LITERAL;\r\n            const brace = braces[braces.length - 1];\r\n            prev.type = \"dots\";\r\n            prev.output += value;\r\n            prev.value += value;\r\n            brace.dots = true;\r\n            continue;\r\n          }\r\n          if (state.braces + state.parens === 0 && prev.type !== \"bos\" && prev.type !== \"slash\") {\r\n            push({ type: \"text\", value, output: DOT_LITERAL });\r\n            continue;\r\n          }\r\n          push({ type: \"dot\", value, output: DOT_LITERAL });\r\n          continue;\r\n        }\r\n        if (value === \"?\") {\r\n          const isGroup = prev && prev.value === \"(\";\r\n          if (!isGroup && opts.noextglob !== true && peek() === \"(\" && peek(2) !== \"?\") {\r\n            extglobOpen(\"qmark\", value);\r\n            continue;\r\n          }\r\n          if (prev && prev.type === \"paren\") {\r\n            const next = peek();\r\n            let output = value;\r\n            if (next === \"<\" && !utils.supportsLookbehinds()) {\r\n              throw new Error(\"Node.js v10 or higher is required for regex lookbehinds\");\r\n            }\r\n            if (prev.value === \"(\" && !/[!=<:]/.test(next) || next === \"<\" && !/<([!=]|\\w+>)/.test(remaining())) {\r\n              output = `\\\\${value}`;\r\n            }\r\n            push({ type: \"text\", value, output });\r\n            continue;\r\n          }\r\n          if (opts.dot !== true && (prev.type === \"slash\" || prev.type === \"bos\")) {\r\n            push({ type: \"qmark\", value, output: QMARK_NO_DOT });\r\n            continue;\r\n          }\r\n          push({ type: \"qmark\", value, output: QMARK });\r\n          continue;\r\n        }\r\n        if (value === \"!\") {\r\n          if (opts.noextglob !== true && peek() === \"(\") {\r\n            if (peek(2) !== \"?\" || !/[!=<:]/.test(peek(3))) {\r\n              extglobOpen(\"negate\", value);\r\n              continue;\r\n            }\r\n          }\r\n          if (opts.nonegate !== true && state.index === 0) {\r\n            negate();\r\n            continue;\r\n          }\r\n        }\r\n        if (value === \"+\") {\r\n          if (opts.noextglob !== true && peek() === \"(\" && peek(2) !== \"?\") {\r\n            extglobOpen(\"plus\", value);\r\n            continue;\r\n          }\r\n          if (prev && prev.value === \"(\" || opts.regex === false) {\r\n            push({ type: \"plus\", value, output: PLUS_LITERAL });\r\n            continue;\r\n          }\r\n          if (prev && (prev.type === \"bracket\" || prev.type === \"paren\" || prev.type === \"brace\") || state.parens > 0) {\r\n            push({ type: \"plus\", value });\r\n            continue;\r\n          }\r\n          push({ type: \"plus\", value: PLUS_LITERAL });\r\n          continue;\r\n        }\r\n        if (value === \"@\") {\r\n          if (opts.noextglob !== true && peek() === \"(\" && peek(2) !== \"?\") {\r\n            push({ type: \"at\", extglob: true, value, output: \"\" });\r\n            continue;\r\n          }\r\n          push({ type: \"text\", value });\r\n          continue;\r\n        }\r\n        if (value !== \"*\") {\r\n          if (value === \"$\" || value === \"^\") {\r\n            value = `\\\\${value}`;\r\n          }\r\n          const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\r\n          if (match) {\r\n            value += match[0];\r\n            state.index += match[0].length;\r\n          }\r\n          push({ type: \"text\", value });\r\n          continue;\r\n        }\r\n        if (prev && (prev.type === \"globstar\" || prev.star === true)) {\r\n          prev.type = \"star\";\r\n          prev.star = true;\r\n          prev.value += value;\r\n          prev.output = star;\r\n          state.backtrack = true;\r\n          state.globstar = true;\r\n          consume(value);\r\n          continue;\r\n        }\r\n        let rest = remaining();\r\n        if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\r\n          extglobOpen(\"star\", value);\r\n          continue;\r\n        }\r\n        if (prev.type === \"star\") {\r\n          if (opts.noglobstar === true) {\r\n            consume(value);\r\n            continue;\r\n          }\r\n          const prior = prev.prev;\r\n          const before = prior.prev;\r\n          const isStart = prior.type === \"slash\" || prior.type === \"bos\";\r\n          const afterStar = before && (before.type === \"star\" || before.type === \"globstar\");\r\n          if (opts.bash === true && (!isStart || rest[0] && rest[0] !== \"/\")) {\r\n            push({ type: \"star\", value, output: \"\" });\r\n            continue;\r\n          }\r\n          const isBrace = state.braces > 0 && (prior.type === \"comma\" || prior.type === \"brace\");\r\n          const isExtglob = extglobs.length && (prior.type === \"pipe\" || prior.type === \"paren\");\r\n          if (!isStart && prior.type !== \"paren\" && !isBrace && !isExtglob) {\r\n            push({ type: \"star\", value, output: \"\" });\r\n            continue;\r\n          }\r\n          while (rest.slice(0, 3) === \"/**\") {\r\n            const after = input[state.index + 4];\r\n            if (after && after !== \"/\") {\r\n              break;\r\n            }\r\n            rest = rest.slice(3);\r\n            consume(\"/**\", 3);\r\n          }\r\n          if (prior.type === \"bos\" && eos()) {\r\n            prev.type = \"globstar\";\r\n            prev.value += value;\r\n            prev.output = globstar(opts);\r\n            state.output = prev.output;\r\n            state.globstar = true;\r\n            consume(value);\r\n            continue;\r\n          }\r\n          if (prior.type === \"slash\" && prior.prev.type !== \"bos\" && !afterStar && eos()) {\r\n            state.output = state.output.slice(0, -(prior.output + prev.output).length);\r\n            prior.output = `(?:${prior.output}`;\r\n            prev.type = \"globstar\";\r\n            prev.output = globstar(opts) + (opts.strictSlashes ? \")\" : \"|$)\");\r\n            prev.value += value;\r\n            state.globstar = true;\r\n            state.output += prior.output + prev.output;\r\n            consume(value);\r\n            continue;\r\n          }\r\n          if (prior.type === \"slash\" && prior.prev.type !== \"bos\" && rest[0] === \"/\") {\r\n            const end = rest[1] !== void 0 ? \"|$\" : \"\";\r\n            state.output = state.output.slice(0, -(prior.output + prev.output).length);\r\n            prior.output = `(?:${prior.output}`;\r\n            prev.type = \"globstar\";\r\n            prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\r\n            prev.value += value;\r\n            state.output += prior.output + prev.output;\r\n            state.globstar = true;\r\n            consume(value + advance());\r\n            push({ type: \"slash\", value: \"/\", output: \"\" });\r\n            continue;\r\n          }\r\n          if (prior.type === \"bos\" && rest[0] === \"/\") {\r\n            prev.type = \"globstar\";\r\n            prev.value += value;\r\n            prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\r\n            state.output = prev.output;\r\n            state.globstar = true;\r\n            consume(value + advance());\r\n            push({ type: \"slash\", value: \"/\", output: \"\" });\r\n            continue;\r\n          }\r\n          state.output = state.output.slice(0, -prev.output.length);\r\n          prev.type = \"globstar\";\r\n          prev.output = globstar(opts);\r\n          prev.value += value;\r\n          state.output += prev.output;\r\n          state.globstar = true;\r\n          consume(value);\r\n          continue;\r\n        }\r\n        const token = { type: \"star\", value, output: star };\r\n        if (opts.bash === true) {\r\n          token.output = \".*?\";\r\n          if (prev.type === \"bos\" || prev.type === \"slash\") {\r\n            token.output = nodot + token.output;\r\n          }\r\n          push(token);\r\n          continue;\r\n        }\r\n        if (prev && (prev.type === \"bracket\" || prev.type === \"paren\") && opts.regex === true) {\r\n          token.output = value;\r\n          push(token);\r\n          continue;\r\n        }\r\n        if (state.index === state.start || prev.type === \"slash\" || prev.type === \"dot\") {\r\n          if (prev.type === \"dot\") {\r\n            state.output += NO_DOT_SLASH;\r\n            prev.output += NO_DOT_SLASH;\r\n          } else if (opts.dot === true) {\r\n            state.output += NO_DOTS_SLASH;\r\n            prev.output += NO_DOTS_SLASH;\r\n          } else {\r\n            state.output += nodot;\r\n            prev.output += nodot;\r\n          }\r\n          if (peek() !== \"*\") {\r\n            state.output += ONE_CHAR;\r\n            prev.output += ONE_CHAR;\r\n          }\r\n        }\r\n        push(token);\r\n      }\r\n      while (state.brackets > 0) {\r\n        if (opts.strictBrackets === true)\r\n          throw new SyntaxError(syntaxError(\"closing\", \"]\"));\r\n        state.output = utils.escapeLast(state.output, \"[\");\r\n        decrement(\"brackets\");\r\n      }\r\n      while (state.parens > 0) {\r\n        if (opts.strictBrackets === true)\r\n          throw new SyntaxError(syntaxError(\"closing\", \")\"));\r\n        state.output = utils.escapeLast(state.output, \"(\");\r\n        decrement(\"parens\");\r\n      }\r\n      while (state.braces > 0) {\r\n        if (opts.strictBrackets === true)\r\n          throw new SyntaxError(syntaxError(\"closing\", \"}\"));\r\n        state.output = utils.escapeLast(state.output, \"{\");\r\n        decrement(\"braces\");\r\n      }\r\n      if (opts.strictSlashes !== true && (prev.type === \"star\" || prev.type === \"bracket\")) {\r\n        push({ type: \"maybe_slash\", value: \"\", output: `${SLASH_LITERAL}?` });\r\n      }\r\n      if (state.backtrack === true) {\r\n        state.output = \"\";\r\n        for (const token of state.tokens) {\r\n          state.output += token.output != null ? token.output : token.value;\r\n          if (token.suffix) {\r\n            state.output += token.suffix;\r\n          }\r\n        }\r\n      }\r\n      return state;\r\n    };\r\n    parse.fastpaths = (input, options) => {\r\n      const opts = __spreadValues({}, options);\r\n      const max = typeof opts.maxLength === \"number\" ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n      const len = input.length;\r\n      if (len > max) {\r\n        throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\r\n      }\r\n      input = REPLACEMENTS[input] || input;\r\n      const win322 = utils.isWindows(options);\r\n      const {\r\n        DOT_LITERAL,\r\n        SLASH_LITERAL,\r\n        ONE_CHAR,\r\n        DOTS_SLASH,\r\n        NO_DOT,\r\n        NO_DOTS,\r\n        NO_DOTS_SLASH,\r\n        STAR,\r\n        START_ANCHOR\r\n      } = constants.globChars(win322);\r\n      const nodot = opts.dot ? NO_DOTS : NO_DOT;\r\n      const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\r\n      const capture = opts.capture ? \"\" : \"?:\";\r\n      const state = { negated: false, prefix: \"\" };\r\n      let star = opts.bash === true ? \".*?\" : STAR;\r\n      if (opts.capture) {\r\n        star = `(${star})`;\r\n      }\r\n      const globstar = (opts2) => {\r\n        if (opts2.noglobstar === true)\r\n          return star;\r\n        return `(${capture}(?:(?!${START_ANCHOR}${opts2.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\r\n      };\r\n      const create = (str) => {\r\n        switch (str) {\r\n          case \"*\":\r\n            return `${nodot}${ONE_CHAR}${star}`;\r\n          case \".*\":\r\n            return `${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n          case \"*.*\":\r\n            return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n          case \"*/*\":\r\n            return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\r\n          case \"**\":\r\n            return nodot + globstar(opts);\r\n          case \"**/*\":\r\n            return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\r\n          case \"**/*.*\":\r\n            return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n          case \"**/.*\":\r\n            return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n          default: {\r\n            const match = /^(.*?)\\.(\\w+)$/.exec(str);\r\n            if (!match)\r\n              return;\r\n            const source2 = create(match[1]);\r\n            if (!source2)\r\n              return;\r\n            return source2 + DOT_LITERAL + match[2];\r\n          }\r\n        }\r\n      };\r\n      const output = utils.removePrefix(input, state);\r\n      let source = create(output);\r\n      if (source && opts.strictSlashes !== true) {\r\n        source += `${SLASH_LITERAL}?`;\r\n      }\r\n      return source;\r\n    };\r\n    module2.exports = parse;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/picomatch.js\r\nvar require_picomatch = __commonJS({\r\n  \"../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/picomatch.js\"(exports, module2) {\r\n    \"use strict\";\r\n    var path4 = require(\"path\");\r\n    var scan = require_scan();\r\n    var parse = require_parse();\r\n    var utils = require_utils();\r\n    var constants = require_constants();\r\n    var isObject = (val) => val && typeof val === \"object\" && !Array.isArray(val);\r\n    var picomatch = (glob, options, returnState = false) => {\r\n      if (Array.isArray(glob)) {\r\n        const fns = glob.map((input) => picomatch(input, options, returnState));\r\n        const arrayMatcher = (str) => {\r\n          for (const isMatch of fns) {\r\n            const state2 = isMatch(str);\r\n            if (state2)\r\n              return state2;\r\n          }\r\n          return false;\r\n        };\r\n        return arrayMatcher;\r\n      }\r\n      const isState = isObject(glob) && glob.tokens && glob.input;\r\n      if (glob === \"\" || typeof glob !== \"string\" && !isState) {\r\n        throw new TypeError(\"Expected pattern to be a non-empty string\");\r\n      }\r\n      const opts = options || {};\r\n      const posix2 = utils.isWindows(options);\r\n      const regex = isState ? picomatch.compileRe(glob, options) : picomatch.makeRe(glob, options, false, true);\r\n      const state = regex.state;\r\n      delete regex.state;\r\n      let isIgnored = () => false;\r\n      if (opts.ignore) {\r\n        const ignoreOpts = __spreadProps(__spreadValues({}, options), { ignore: null, onMatch: null, onResult: null });\r\n        isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\r\n      }\r\n      const matcher = (input, returnObject = false) => {\r\n        const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix: posix2 });\r\n        const result = { glob, state, regex, posix: posix2, input, output, match, isMatch };\r\n        if (typeof opts.onResult === \"function\") {\r\n          opts.onResult(result);\r\n        }\r\n        if (isMatch === false) {\r\n          result.isMatch = false;\r\n          return returnObject ? result : false;\r\n        }\r\n        if (isIgnored(input)) {\r\n          if (typeof opts.onIgnore === \"function\") {\r\n            opts.onIgnore(result);\r\n          }\r\n          result.isMatch = false;\r\n          return returnObject ? result : false;\r\n        }\r\n        if (typeof opts.onMatch === \"function\") {\r\n          opts.onMatch(result);\r\n        }\r\n        return returnObject ? result : true;\r\n      };\r\n      if (returnState) {\r\n        matcher.state = state;\r\n      }\r\n      return matcher;\r\n    };\r\n    picomatch.test = (input, regex, options, { glob, posix: posix2 } = {}) => {\r\n      if (typeof input !== \"string\") {\r\n        throw new TypeError(\"Expected input to be a string\");\r\n      }\r\n      if (input === \"\") {\r\n        return { isMatch: false, output: \"\" };\r\n      }\r\n      const opts = options || {};\r\n      const format = opts.format || (posix2 ? utils.toPosixSlashes : null);\r\n      let match = input === glob;\r\n      let output = match && format ? format(input) : input;\r\n      if (match === false) {\r\n        output = format ? format(input) : input;\r\n        match = output === glob;\r\n      }\r\n      if (match === false || opts.capture === true) {\r\n        if (opts.matchBase === true || opts.basename === true) {\r\n          match = picomatch.matchBase(input, regex, options, posix2);\r\n        } else {\r\n          match = regex.exec(output);\r\n        }\r\n      }\r\n      return { isMatch: Boolean(match), match, output };\r\n    };\r\n    picomatch.matchBase = (input, glob, options, posix2 = utils.isWindows(options)) => {\r\n      const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\r\n      return regex.test(path4.basename(input));\r\n    };\r\n    picomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\r\n    picomatch.parse = (pattern, options) => {\r\n      if (Array.isArray(pattern))\r\n        return pattern.map((p) => picomatch.parse(p, options));\r\n      return parse(pattern, __spreadProps(__spreadValues({}, options), { fastpaths: false }));\r\n    };\r\n    picomatch.scan = (input, options) => scan(input, options);\r\n    picomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\r\n      if (returnOutput === true) {\r\n        return state.output;\r\n      }\r\n      const opts = options || {};\r\n      const prepend = opts.contains ? \"\" : \"^\";\r\n      const append = opts.contains ? \"\" : \"$\";\r\n      let source = `${prepend}(?:${state.output})${append}`;\r\n      if (state && state.negated === true) {\r\n        source = `^(?!${source}).*$`;\r\n      }\r\n      const regex = picomatch.toRegex(source, options);\r\n      if (returnState === true) {\r\n        regex.state = state;\r\n      }\r\n      return regex;\r\n    };\r\n    picomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\r\n      if (!input || typeof input !== \"string\") {\r\n        throw new TypeError(\"Expected a non-empty string\");\r\n      }\r\n      let parsed = { negated: false, fastpaths: true };\r\n      if (options.fastpaths !== false && (input[0] === \".\" || input[0] === \"*\")) {\r\n        parsed.output = parse.fastpaths(input, options);\r\n      }\r\n      if (!parsed.output) {\r\n        parsed = parse(input, options);\r\n      }\r\n      return picomatch.compileRe(parsed, options, returnOutput, returnState);\r\n    };\r\n    picomatch.toRegex = (source, options) => {\r\n      try {\r\n        const opts = options || {};\r\n        return new RegExp(source, opts.flags || (opts.nocase ? \"i\" : \"\"));\r\n      } catch (err) {\r\n        if (options && options.debug === true)\r\n          throw err;\r\n        return /$^/;\r\n      }\r\n    };\r\n    picomatch.constants = constants;\r\n    module2.exports = picomatch;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/index.js\r\nvar require_picomatch2 = __commonJS({\r\n  \"../../node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/index.js\"(exports, module2) {\r\n    \"use strict\";\r\n    module2.exports = require_picomatch();\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/hash-sum@2.0.0/node_modules/hash-sum/hash-sum.js\r\nvar require_hash_sum = __commonJS({\r\n  \"../../node_modules/.pnpm/hash-sum@2.0.0/node_modules/hash-sum/hash-sum.js\"(exports, module2) {\r\n    \"use strict\";\r\n    function pad(hash2, len) {\r\n      while (hash2.length < len) {\r\n        hash2 = \"0\" + hash2;\r\n      }\r\n      return hash2;\r\n    }\r\n    function fold(hash2, text) {\r\n      var i;\r\n      var chr;\r\n      var len;\r\n      if (text.length === 0) {\r\n        return hash2;\r\n      }\r\n      for (i = 0, len = text.length; i < len; i++) {\r\n        chr = text.charCodeAt(i);\r\n        hash2 = (hash2 << 5) - hash2 + chr;\r\n        hash2 |= 0;\r\n      }\r\n      return hash2 < 0 ? hash2 * -2 : hash2;\r\n    }\r\n    function foldObject(hash2, o, seen) {\r\n      return Object.keys(o).sort().reduce(foldKey, hash2);\r\n      function foldKey(hash3, key) {\r\n        return foldValue(hash3, o[key], key, seen);\r\n      }\r\n    }\r\n    function foldValue(input, value, key, seen) {\r\n      var hash2 = fold(fold(fold(input, key), toString(value)), typeof value);\r\n      if (value === null) {\r\n        return fold(hash2, \"null\");\r\n      }\r\n      if (value === void 0) {\r\n        return fold(hash2, \"undefined\");\r\n      }\r\n      if (typeof value === \"object\" || typeof value === \"function\") {\r\n        if (seen.indexOf(value) !== -1) {\r\n          return fold(hash2, \"[Circular]\" + key);\r\n        }\r\n        seen.push(value);\r\n        var objHash = foldObject(hash2, value, seen);\r\n        if (!(\"valueOf\" in value) || typeof value.valueOf !== \"function\") {\r\n          return objHash;\r\n        }\r\n        try {\r\n          return fold(objHash, String(value.valueOf()));\r\n        } catch (err) {\r\n          return fold(objHash, \"[valueOf exception]\" + (err.stack || err.message));\r\n        }\r\n      }\r\n      return fold(hash2, value.toString());\r\n    }\r\n    function toString(o) {\r\n      return Object.prototype.toString.call(o);\r\n    }\r\n    function sum(o) {\r\n      return pad(foldValue(0, o, \"\", []).toString(16), 8);\r\n    }\r\n    module2.exports = sum;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js\r\nvar require_ms = __commonJS({\r\n  \"../../node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js\"(exports, module2) {\r\n    var s = 1e3;\r\n    var m = s * 60;\r\n    var h = m * 60;\r\n    var d = h * 24;\r\n    var w = d * 7;\r\n    var y = d * 365.25;\r\n    module2.exports = function(val, options) {\r\n      options = options || {};\r\n      var type = typeof val;\r\n      if (type === \"string\" && val.length > 0) {\r\n        return parse(val);\r\n      } else if (type === \"number\" && isFinite(val)) {\r\n        return options.long ? fmtLong(val) : fmtShort(val);\r\n      }\r\n      throw new Error(\"val is not a non-empty string or a valid number. val=\" + JSON.stringify(val));\r\n    };\r\n    function parse(str) {\r\n      str = String(str);\r\n      if (str.length > 100) {\r\n        return;\r\n      }\r\n      var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\r\n      if (!match) {\r\n        return;\r\n      }\r\n      var n = parseFloat(match[1]);\r\n      var type = (match[2] || \"ms\").toLowerCase();\r\n      switch (type) {\r\n        case \"years\":\r\n        case \"year\":\r\n        case \"yrs\":\r\n        case \"yr\":\r\n        case \"y\":\r\n          return n * y;\r\n        case \"weeks\":\r\n        case \"week\":\r\n        case \"w\":\r\n          return n * w;\r\n        case \"days\":\r\n        case \"day\":\r\n        case \"d\":\r\n          return n * d;\r\n        case \"hours\":\r\n        case \"hour\":\r\n        case \"hrs\":\r\n        case \"hr\":\r\n        case \"h\":\r\n          return n * h;\r\n        case \"minutes\":\r\n        case \"minute\":\r\n        case \"mins\":\r\n        case \"min\":\r\n        case \"m\":\r\n          return n * m;\r\n        case \"seconds\":\r\n        case \"second\":\r\n        case \"secs\":\r\n        case \"sec\":\r\n        case \"s\":\r\n          return n * s;\r\n        case \"milliseconds\":\r\n        case \"millisecond\":\r\n        case \"msecs\":\r\n        case \"msec\":\r\n        case \"ms\":\r\n          return n;\r\n        default:\r\n          return void 0;\r\n      }\r\n    }\r\n    function fmtShort(ms) {\r\n      var msAbs = Math.abs(ms);\r\n      if (msAbs >= d) {\r\n        return Math.round(ms / d) + \"d\";\r\n      }\r\n      if (msAbs >= h) {\r\n        return Math.round(ms / h) + \"h\";\r\n      }\r\n      if (msAbs >= m) {\r\n        return Math.round(ms / m) + \"m\";\r\n      }\r\n      if (msAbs >= s) {\r\n        return Math.round(ms / s) + \"s\";\r\n      }\r\n      return ms + \"ms\";\r\n    }\r\n    function fmtLong(ms) {\r\n      var msAbs = Math.abs(ms);\r\n      if (msAbs >= d) {\r\n        return plural(ms, msAbs, d, \"day\");\r\n      }\r\n      if (msAbs >= h) {\r\n        return plural(ms, msAbs, h, \"hour\");\r\n      }\r\n      if (msAbs >= m) {\r\n        return plural(ms, msAbs, m, \"minute\");\r\n      }\r\n      if (msAbs >= s) {\r\n        return plural(ms, msAbs, s, \"second\");\r\n      }\r\n      return ms + \" ms\";\r\n    }\r\n    function plural(ms, msAbs, n, name) {\r\n      var isPlural = msAbs >= n * 1.5;\r\n      return Math.round(ms / n) + \" \" + name + (isPlural ? \"s\" : \"\");\r\n    }\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/common.js\r\nvar require_common = __commonJS({\r\n  \"../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/common.js\"(exports, module2) {\r\n    function setup(env) {\r\n      createDebug.debug = createDebug;\r\n      createDebug.default = createDebug;\r\n      createDebug.coerce = coerce;\r\n      createDebug.disable = disable;\r\n      createDebug.enable = enable;\r\n      createDebug.enabled = enabled;\r\n      createDebug.humanize = require_ms();\r\n      createDebug.destroy = destroy;\r\n      Object.keys(env).forEach((key) => {\r\n        createDebug[key] = env[key];\r\n      });\r\n      createDebug.names = [];\r\n      createDebug.skips = [];\r\n      createDebug.formatters = {};\r\n      function selectColor(namespace) {\r\n        let hash2 = 0;\r\n        for (let i = 0; i < namespace.length; i++) {\r\n          hash2 = (hash2 << 5) - hash2 + namespace.charCodeAt(i);\r\n          hash2 |= 0;\r\n        }\r\n        return createDebug.colors[Math.abs(hash2) % createDebug.colors.length];\r\n      }\r\n      createDebug.selectColor = selectColor;\r\n      function createDebug(namespace) {\r\n        let prevTime;\r\n        let enableOverride = null;\r\n        let namespacesCache;\r\n        let enabledCache;\r\n        function debug2(...args) {\r\n          if (!debug2.enabled) {\r\n            return;\r\n          }\r\n          const self = debug2;\r\n          const curr = Number(new Date());\r\n          const ms = curr - (prevTime || curr);\r\n          self.diff = ms;\r\n          self.prev = prevTime;\r\n          self.curr = curr;\r\n          prevTime = curr;\r\n          args[0] = createDebug.coerce(args[0]);\r\n          if (typeof args[0] !== \"string\") {\r\n            args.unshift(\"%O\");\r\n          }\r\n          let index = 0;\r\n          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\r\n            if (match === \"%%\") {\r\n              return \"%\";\r\n            }\r\n            index++;\r\n            const formatter = createDebug.formatters[format];\r\n            if (typeof formatter === \"function\") {\r\n              const val = args[index];\r\n              match = formatter.call(self, val);\r\n              args.splice(index, 1);\r\n              index--;\r\n            }\r\n            return match;\r\n          });\r\n          createDebug.formatArgs.call(self, args);\r\n          const logFn = self.log || createDebug.log;\r\n          logFn.apply(self, args);\r\n        }\r\n        debug2.namespace = namespace;\r\n        debug2.useColors = createDebug.useColors();\r\n        debug2.color = createDebug.selectColor(namespace);\r\n        debug2.extend = extend;\r\n        debug2.destroy = createDebug.destroy;\r\n        Object.defineProperty(debug2, \"enabled\", {\r\n          enumerable: true,\r\n          configurable: false,\r\n          get: () => {\r\n            if (enableOverride !== null) {\r\n              return enableOverride;\r\n            }\r\n            if (namespacesCache !== createDebug.namespaces) {\r\n              namespacesCache = createDebug.namespaces;\r\n              enabledCache = createDebug.enabled(namespace);\r\n            }\r\n            return enabledCache;\r\n          },\r\n          set: (v) => {\r\n            enableOverride = v;\r\n          }\r\n        });\r\n        if (typeof createDebug.init === \"function\") {\r\n          createDebug.init(debug2);\r\n        }\r\n        return debug2;\r\n      }\r\n      function extend(namespace, delimiter) {\r\n        const newDebug = createDebug(this.namespace + (typeof delimiter === \"undefined\" ? \":\" : delimiter) + namespace);\r\n        newDebug.log = this.log;\r\n        return newDebug;\r\n      }\r\n      function enable(namespaces) {\r\n        createDebug.save(namespaces);\r\n        createDebug.namespaces = namespaces;\r\n        createDebug.names = [];\r\n        createDebug.skips = [];\r\n        let i;\r\n        const split = (typeof namespaces === \"string\" ? namespaces : \"\").split(/[\\s,]+/);\r\n        const len = split.length;\r\n        for (i = 0; i < len; i++) {\r\n          if (!split[i]) {\r\n            continue;\r\n          }\r\n          namespaces = split[i].replace(/\\*/g, \".*?\");\r\n          if (namespaces[0] === \"-\") {\r\n            createDebug.skips.push(new RegExp(\"^\" + namespaces.substr(1) + \"$\"));\r\n          } else {\r\n            createDebug.names.push(new RegExp(\"^\" + namespaces + \"$\"));\r\n          }\r\n        }\r\n      }\r\n      function disable() {\r\n        const namespaces = [\r\n          ...createDebug.names.map(toNamespace),\r\n          ...createDebug.skips.map(toNamespace).map((namespace) => \"-\" + namespace)\r\n        ].join(\",\");\r\n        createDebug.enable(\"\");\r\n        return namespaces;\r\n      }\r\n      function enabled(name) {\r\n        if (name[name.length - 1] === \"*\") {\r\n          return true;\r\n        }\r\n        let i;\r\n        let len;\r\n        for (i = 0, len = createDebug.skips.length; i < len; i++) {\r\n          if (createDebug.skips[i].test(name)) {\r\n            return false;\r\n          }\r\n        }\r\n        for (i = 0, len = createDebug.names.length; i < len; i++) {\r\n          if (createDebug.names[i].test(name)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n      function toNamespace(regexp) {\r\n        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, \"*\");\r\n      }\r\n      function coerce(val) {\r\n        if (val instanceof Error) {\r\n          return val.stack || val.message;\r\n        }\r\n        return val;\r\n      }\r\n      function destroy() {\r\n        console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\r\n      }\r\n      createDebug.enable(createDebug.load());\r\n      return createDebug;\r\n    }\r\n    module2.exports = setup;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/browser.js\r\nvar require_browser = __commonJS({\r\n  \"../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/browser.js\"(exports, module2) {\r\n    exports.formatArgs = formatArgs;\r\n    exports.save = save;\r\n    exports.load = load;\r\n    exports.useColors = useColors;\r\n    exports.storage = localstorage();\r\n    exports.destroy = (() => {\r\n      let warned = false;\r\n      return () => {\r\n        if (!warned) {\r\n          warned = true;\r\n          console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\r\n        }\r\n      };\r\n    })();\r\n    exports.colors = [\r\n      \"#0000CC\",\r\n      \"#0000FF\",\r\n      \"#0033CC\",\r\n      \"#0033FF\",\r\n      \"#0066CC\",\r\n      \"#0066FF\",\r\n      \"#0099CC\",\r\n      \"#0099FF\",\r\n      \"#00CC00\",\r\n      \"#00CC33\",\r\n      \"#00CC66\",\r\n      \"#00CC99\",\r\n      \"#00CCCC\",\r\n      \"#00CCFF\",\r\n      \"#3300CC\",\r\n      \"#3300FF\",\r\n      \"#3333CC\",\r\n      \"#3333FF\",\r\n      \"#3366CC\",\r\n      \"#3366FF\",\r\n      \"#3399CC\",\r\n      \"#3399FF\",\r\n      \"#33CC00\",\r\n      \"#33CC33\",\r\n      \"#33CC66\",\r\n      \"#33CC99\",\r\n      \"#33CCCC\",\r\n      \"#33CCFF\",\r\n      \"#6600CC\",\r\n      \"#6600FF\",\r\n      \"#6633CC\",\r\n      \"#6633FF\",\r\n      \"#66CC00\",\r\n      \"#66CC33\",\r\n      \"#9900CC\",\r\n      \"#9900FF\",\r\n      \"#9933CC\",\r\n      \"#9933FF\",\r\n      \"#99CC00\",\r\n      \"#99CC33\",\r\n      \"#CC0000\",\r\n      \"#CC0033\",\r\n      \"#CC0066\",\r\n      \"#CC0099\",\r\n      \"#CC00CC\",\r\n      \"#CC00FF\",\r\n      \"#CC3300\",\r\n      \"#CC3333\",\r\n      \"#CC3366\",\r\n      \"#CC3399\",\r\n      \"#CC33CC\",\r\n      \"#CC33FF\",\r\n      \"#CC6600\",\r\n      \"#CC6633\",\r\n      \"#CC9900\",\r\n      \"#CC9933\",\r\n      \"#CCCC00\",\r\n      \"#CCCC33\",\r\n      \"#FF0000\",\r\n      \"#FF0033\",\r\n      \"#FF0066\",\r\n      \"#FF0099\",\r\n      \"#FF00CC\",\r\n      \"#FF00FF\",\r\n      \"#FF3300\",\r\n      \"#FF3333\",\r\n      \"#FF3366\",\r\n      \"#FF3399\",\r\n      \"#FF33CC\",\r\n      \"#FF33FF\",\r\n      \"#FF6600\",\r\n      \"#FF6633\",\r\n      \"#FF9900\",\r\n      \"#FF9933\",\r\n      \"#FFCC00\",\r\n      \"#FFCC33\"\r\n    ];\r\n    function useColors() {\r\n      if (typeof window !== \"undefined\" && window.process && (window.process.type === \"renderer\" || window.process.__nwjs)) {\r\n        return true;\r\n      }\r\n      if (typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n        return false;\r\n      }\r\n      return typeof document !== \"undefined\" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== \"undefined\" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\r\n    }\r\n    function formatArgs(args) {\r\n      args[0] = (this.useColors ? \"%c\" : \"\") + this.namespace + (this.useColors ? \" %c\" : \" \") + args[0] + (this.useColors ? \"%c \" : \" \") + \"+\" + module2.exports.humanize(this.diff);\r\n      if (!this.useColors) {\r\n        return;\r\n      }\r\n      const c = \"color: \" + this.color;\r\n      args.splice(1, 0, c, \"color: inherit\");\r\n      let index = 0;\r\n      let lastC = 0;\r\n      args[0].replace(/%[a-zA-Z%]/g, (match) => {\r\n        if (match === \"%%\") {\r\n          return;\r\n        }\r\n        index++;\r\n        if (match === \"%c\") {\r\n          lastC = index;\r\n        }\r\n      });\r\n      args.splice(lastC, 0, c);\r\n    }\r\n    exports.log = console.debug || console.log || (() => {\r\n    });\r\n    function save(namespaces) {\r\n      try {\r\n        if (namespaces) {\r\n          exports.storage.setItem(\"debug\", namespaces);\r\n        } else {\r\n          exports.storage.removeItem(\"debug\");\r\n        }\r\n      } catch (error) {\r\n      }\r\n    }\r\n    function load() {\r\n      let r;\r\n      try {\r\n        r = exports.storage.getItem(\"debug\");\r\n      } catch (error) {\r\n      }\r\n      if (!r && typeof process !== \"undefined\" && \"env\" in process) {\r\n        r = process.env.DEBUG;\r\n      }\r\n      return r;\r\n    }\r\n    function localstorage() {\r\n      try {\r\n        return localStorage;\r\n      } catch (error) {\r\n      }\r\n    }\r\n    module2.exports = require_common()(exports);\r\n    var { formatters } = module2.exports;\r\n    formatters.j = function(v) {\r\n      try {\r\n        return JSON.stringify(v);\r\n      } catch (error) {\r\n        return \"[UnexpectedJSONParseError]: \" + error.message;\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js\r\nvar require_has_flag = __commonJS({\r\n  \"../../node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js\"(exports, module2) {\r\n    \"use strict\";\r\n    module2.exports = (flag, argv = process.argv) => {\r\n      const prefix = flag.startsWith(\"-\") ? \"\" : flag.length === 1 ? \"-\" : \"--\";\r\n      const position = argv.indexOf(prefix + flag);\r\n      const terminatorPosition = argv.indexOf(\"--\");\r\n      return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js\r\nvar require_supports_color = __commonJS({\r\n  \"../../node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js\"(exports, module2) {\r\n    \"use strict\";\r\n    var os = require(\"os\");\r\n    var tty = require(\"tty\");\r\n    var hasFlag = require_has_flag();\r\n    var { env } = process;\r\n    var forceColor;\r\n    if (hasFlag(\"no-color\") || hasFlag(\"no-colors\") || hasFlag(\"color=false\") || hasFlag(\"color=never\")) {\r\n      forceColor = 0;\r\n    } else if (hasFlag(\"color\") || hasFlag(\"colors\") || hasFlag(\"color=true\") || hasFlag(\"color=always\")) {\r\n      forceColor = 1;\r\n    }\r\n    if (\"FORCE_COLOR\" in env) {\r\n      if (env.FORCE_COLOR === \"true\") {\r\n        forceColor = 1;\r\n      } else if (env.FORCE_COLOR === \"false\") {\r\n        forceColor = 0;\r\n      } else {\r\n        forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\r\n      }\r\n    }\r\n    function translateLevel(level) {\r\n      if (level === 0) {\r\n        return false;\r\n      }\r\n      return {\r\n        level,\r\n        hasBasic: true,\r\n        has256: level >= 2,\r\n        has16m: level >= 3\r\n      };\r\n    }\r\n    function supportsColor(haveStream, streamIsTTY) {\r\n      if (forceColor === 0) {\r\n        return 0;\r\n      }\r\n      if (hasFlag(\"color=16m\") || hasFlag(\"color=full\") || hasFlag(\"color=truecolor\")) {\r\n        return 3;\r\n      }\r\n      if (hasFlag(\"color=256\")) {\r\n        return 2;\r\n      }\r\n      if (haveStream && !streamIsTTY && forceColor === void 0) {\r\n        return 0;\r\n      }\r\n      const min = forceColor || 0;\r\n      if (env.TERM === \"dumb\") {\r\n        return min;\r\n      }\r\n      if (process.platform === \"win32\") {\r\n        const osRelease = os.release().split(\".\");\r\n        if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\r\n          return Number(osRelease[2]) >= 14931 ? 3 : 2;\r\n        }\r\n        return 1;\r\n      }\r\n      if (\"CI\" in env) {\r\n        if ([\"TRAVIS\", \"CIRCLECI\", \"APPVEYOR\", \"GITLAB_CI\", \"GITHUB_ACTIONS\", \"BUILDKITE\"].some((sign) => sign in env) || env.CI_NAME === \"codeship\") {\r\n          return 1;\r\n        }\r\n        return min;\r\n      }\r\n      if (\"TEAMCITY_VERSION\" in env) {\r\n        return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\r\n      }\r\n      if (env.COLORTERM === \"truecolor\") {\r\n        return 3;\r\n      }\r\n      if (\"TERM_PROGRAM\" in env) {\r\n        const version = parseInt((env.TERM_PROGRAM_VERSION || \"\").split(\".\")[0], 10);\r\n        switch (env.TERM_PROGRAM) {\r\n          case \"iTerm.app\":\r\n            return version >= 3 ? 3 : 2;\r\n          case \"Apple_Terminal\":\r\n            return 2;\r\n        }\r\n      }\r\n      if (/-256(color)?$/i.test(env.TERM)) {\r\n        return 2;\r\n      }\r\n      if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\r\n        return 1;\r\n      }\r\n      if (\"COLORTERM\" in env) {\r\n        return 1;\r\n      }\r\n      return min;\r\n    }\r\n    function getSupportLevel(stream) {\r\n      const level = supportsColor(stream, stream && stream.isTTY);\r\n      return translateLevel(level);\r\n    }\r\n    module2.exports = {\r\n      supportsColor: getSupportLevel,\r\n      stdout: translateLevel(supportsColor(true, tty.isatty(1))),\r\n      stderr: translateLevel(supportsColor(true, tty.isatty(2)))\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/node.js\r\nvar require_node = __commonJS({\r\n  \"../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/node.js\"(exports, module2) {\r\n    var tty = require(\"tty\");\r\n    var util = require(\"util\");\r\n    exports.init = init;\r\n    exports.log = log;\r\n    exports.formatArgs = formatArgs;\r\n    exports.save = save;\r\n    exports.load = load;\r\n    exports.useColors = useColors;\r\n    exports.destroy = util.deprecate(() => {\r\n    }, \"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\r\n    exports.colors = [6, 2, 3, 4, 5, 1];\r\n    try {\r\n      const supportsColor = require_supports_color();\r\n      if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\r\n        exports.colors = [\r\n          20,\r\n          21,\r\n          26,\r\n          27,\r\n          32,\r\n          33,\r\n          38,\r\n          39,\r\n          40,\r\n          41,\r\n          42,\r\n          43,\r\n          44,\r\n          45,\r\n          56,\r\n          57,\r\n          62,\r\n          63,\r\n          68,\r\n          69,\r\n          74,\r\n          75,\r\n          76,\r\n          77,\r\n          78,\r\n          79,\r\n          80,\r\n          81,\r\n          92,\r\n          93,\r\n          98,\r\n          99,\r\n          112,\r\n          113,\r\n          128,\r\n          129,\r\n          134,\r\n          135,\r\n          148,\r\n          149,\r\n          160,\r\n          161,\r\n          162,\r\n          163,\r\n          164,\r\n          165,\r\n          166,\r\n          167,\r\n          168,\r\n          169,\r\n          170,\r\n          171,\r\n          172,\r\n          173,\r\n          178,\r\n          179,\r\n          184,\r\n          185,\r\n          196,\r\n          197,\r\n          198,\r\n          199,\r\n          200,\r\n          201,\r\n          202,\r\n          203,\r\n          204,\r\n          205,\r\n          206,\r\n          207,\r\n          208,\r\n          209,\r\n          214,\r\n          215,\r\n          220,\r\n          221\r\n        ];\r\n      }\r\n    } catch (error) {\r\n    }\r\n    exports.inspectOpts = Object.keys(process.env).filter((key) => {\r\n      return /^debug_/i.test(key);\r\n    }).reduce((obj, key) => {\r\n      const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {\r\n        return k.toUpperCase();\r\n      });\r\n      let val = process.env[key];\r\n      if (/^(yes|on|true|enabled)$/i.test(val)) {\r\n        val = true;\r\n      } else if (/^(no|off|false|disabled)$/i.test(val)) {\r\n        val = false;\r\n      } else if (val === \"null\") {\r\n        val = null;\r\n      } else {\r\n        val = Number(val);\r\n      }\r\n      obj[prop] = val;\r\n      return obj;\r\n    }, {});\r\n    function useColors() {\r\n      return \"colors\" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\r\n    }\r\n    function formatArgs(args) {\r\n      const { namespace: name, useColors: useColors2 } = this;\r\n      if (useColors2) {\r\n        const c = this.color;\r\n        const colorCode = \"\u001B[3\" + (c < 8 ? c : \"8;5;\" + c);\r\n        const prefix = `  ${colorCode};1m${name} \u001B[0m`;\r\n        args[0] = prefix + args[0].split(\"\\n\").join(\"\\n\" + prefix);\r\n        args.push(colorCode + \"m+\" + module2.exports.humanize(this.diff) + \"\u001B[0m\");\r\n      } else {\r\n        args[0] = getDate() + name + \" \" + args[0];\r\n      }\r\n    }\r\n    function getDate() {\r\n      if (exports.inspectOpts.hideDate) {\r\n        return \"\";\r\n      }\r\n      return new Date().toISOString() + \" \";\r\n    }\r\n    function log(...args) {\r\n      return process.stderr.write(util.format(...args) + \"\\n\");\r\n    }\r\n    function save(namespaces) {\r\n      if (namespaces) {\r\n        process.env.DEBUG = namespaces;\r\n      } else {\r\n        delete process.env.DEBUG;\r\n      }\r\n    }\r\n    function load() {\r\n      return process.env.DEBUG;\r\n    }\r\n    function init(debug2) {\r\n      debug2.inspectOpts = {};\r\n      const keys = Object.keys(exports.inspectOpts);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        debug2.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\r\n      }\r\n    }\r\n    module2.exports = require_common()(exports);\r\n    var { formatters } = module2.exports;\r\n    formatters.o = function(v) {\r\n      this.inspectOpts.colors = this.useColors;\r\n      return util.inspect(v, this.inspectOpts).split(\"\\n\").map((str) => str.trim()).join(\" \");\r\n    };\r\n    formatters.O = function(v) {\r\n      this.inspectOpts.colors = this.useColors;\r\n      return util.inspect(v, this.inspectOpts);\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/index.js\r\nvar require_src = __commonJS({\r\n  \"../../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/index.js\"(exports, module2) {\r\n    if (typeof process === \"undefined\" || process.type === \"renderer\" || process.browser === true || process.__nwjs) {\r\n      module2.exports = require_browser();\r\n    } else {\r\n      module2.exports = require_node();\r\n    }\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64.js\r\nvar require_base64 = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64.js\"(exports) {\r\n    var intToCharMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\r\n    exports.encode = function(number) {\r\n      if (0 <= number && number < intToCharMap.length) {\r\n        return intToCharMap[number];\r\n      }\r\n      throw new TypeError(\"Must be between 0 and 63: \" + number);\r\n    };\r\n    exports.decode = function(charCode) {\r\n      var bigA = 65;\r\n      var bigZ = 90;\r\n      var littleA = 97;\r\n      var littleZ = 122;\r\n      var zero = 48;\r\n      var nine = 57;\r\n      var plus = 43;\r\n      var slash2 = 47;\r\n      var littleOffset = 26;\r\n      var numberOffset = 52;\r\n      if (bigA <= charCode && charCode <= bigZ) {\r\n        return charCode - bigA;\r\n      }\r\n      if (littleA <= charCode && charCode <= littleZ) {\r\n        return charCode - littleA + littleOffset;\r\n      }\r\n      if (zero <= charCode && charCode <= nine) {\r\n        return charCode - zero + numberOffset;\r\n      }\r\n      if (charCode == plus) {\r\n        return 62;\r\n      }\r\n      if (charCode == slash2) {\r\n        return 63;\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64-vlq.js\r\nvar require_base64_vlq = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64-vlq.js\"(exports) {\r\n    var base64 = require_base64();\r\n    var VLQ_BASE_SHIFT = 5;\r\n    var VLQ_BASE = 1 << VLQ_BASE_SHIFT;\r\n    var VLQ_BASE_MASK = VLQ_BASE - 1;\r\n    var VLQ_CONTINUATION_BIT = VLQ_BASE;\r\n    function toVLQSigned(aValue) {\r\n      return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;\r\n    }\r\n    function fromVLQSigned(aValue) {\r\n      var isNegative = (aValue & 1) === 1;\r\n      var shifted = aValue >> 1;\r\n      return isNegative ? -shifted : shifted;\r\n    }\r\n    exports.encode = function base64VLQ_encode(aValue) {\r\n      var encoded = \"\";\r\n      var digit;\r\n      var vlq = toVLQSigned(aValue);\r\n      do {\r\n        digit = vlq & VLQ_BASE_MASK;\r\n        vlq >>>= VLQ_BASE_SHIFT;\r\n        if (vlq > 0) {\r\n          digit |= VLQ_CONTINUATION_BIT;\r\n        }\r\n        encoded += base64.encode(digit);\r\n      } while (vlq > 0);\r\n      return encoded;\r\n    };\r\n    exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\r\n      var strLen = aStr.length;\r\n      var result = 0;\r\n      var shift = 0;\r\n      var continuation, digit;\r\n      do {\r\n        if (aIndex >= strLen) {\r\n          throw new Error(\"Expected more digits in base 64 VLQ value.\");\r\n        }\r\n        digit = base64.decode(aStr.charCodeAt(aIndex++));\r\n        if (digit === -1) {\r\n          throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\r\n        }\r\n        continuation = !!(digit & VLQ_CONTINUATION_BIT);\r\n        digit &= VLQ_BASE_MASK;\r\n        result = result + (digit << shift);\r\n        shift += VLQ_BASE_SHIFT;\r\n      } while (continuation);\r\n      aOutParam.value = fromVLQSigned(result);\r\n      aOutParam.rest = aIndex;\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/util.js\r\nvar require_util = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/util.js\"(exports) {\r\n    function getArg(aArgs, aName, aDefaultValue) {\r\n      if (aName in aArgs) {\r\n        return aArgs[aName];\r\n      } else if (arguments.length === 3) {\r\n        return aDefaultValue;\r\n      } else {\r\n        throw new Error('\"' + aName + '\" is a required argument.');\r\n      }\r\n    }\r\n    exports.getArg = getArg;\r\n    var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\r\n    var dataUrlRegexp = /^data:.+\\,.+$/;\r\n    function urlParse(aUrl) {\r\n      var match = aUrl.match(urlRegexp);\r\n      if (!match) {\r\n        return null;\r\n      }\r\n      return {\r\n        scheme: match[1],\r\n        auth: match[2],\r\n        host: match[3],\r\n        port: match[4],\r\n        path: match[5]\r\n      };\r\n    }\r\n    exports.urlParse = urlParse;\r\n    function urlGenerate(aParsedUrl) {\r\n      var url = \"\";\r\n      if (aParsedUrl.scheme) {\r\n        url += aParsedUrl.scheme + \":\";\r\n      }\r\n      url += \"//\";\r\n      if (aParsedUrl.auth) {\r\n        url += aParsedUrl.auth + \"@\";\r\n      }\r\n      if (aParsedUrl.host) {\r\n        url += aParsedUrl.host;\r\n      }\r\n      if (aParsedUrl.port) {\r\n        url += \":\" + aParsedUrl.port;\r\n      }\r\n      if (aParsedUrl.path) {\r\n        url += aParsedUrl.path;\r\n      }\r\n      return url;\r\n    }\r\n    exports.urlGenerate = urlGenerate;\r\n    function normalize(aPath) {\r\n      var path4 = aPath;\r\n      var url = urlParse(aPath);\r\n      if (url) {\r\n        if (!url.path) {\r\n          return aPath;\r\n        }\r\n        path4 = url.path;\r\n      }\r\n      var isAbsolute2 = exports.isAbsolute(path4);\r\n      var parts = path4.split(/\\/+/);\r\n      for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\r\n        part = parts[i];\r\n        if (part === \".\") {\r\n          parts.splice(i, 1);\r\n        } else if (part === \"..\") {\r\n          up++;\r\n        } else if (up > 0) {\r\n          if (part === \"\") {\r\n            parts.splice(i + 1, up);\r\n            up = 0;\r\n          } else {\r\n            parts.splice(i, 2);\r\n            up--;\r\n          }\r\n        }\r\n      }\r\n      path4 = parts.join(\"/\");\r\n      if (path4 === \"\") {\r\n        path4 = isAbsolute2 ? \"/\" : \".\";\r\n      }\r\n      if (url) {\r\n        url.path = path4;\r\n        return urlGenerate(url);\r\n      }\r\n      return path4;\r\n    }\r\n    exports.normalize = normalize;\r\n    function join(aRoot, aPath) {\r\n      if (aRoot === \"\") {\r\n        aRoot = \".\";\r\n      }\r\n      if (aPath === \"\") {\r\n        aPath = \".\";\r\n      }\r\n      var aPathUrl = urlParse(aPath);\r\n      var aRootUrl = urlParse(aRoot);\r\n      if (aRootUrl) {\r\n        aRoot = aRootUrl.path || \"/\";\r\n      }\r\n      if (aPathUrl && !aPathUrl.scheme) {\r\n        if (aRootUrl) {\r\n          aPathUrl.scheme = aRootUrl.scheme;\r\n        }\r\n        return urlGenerate(aPathUrl);\r\n      }\r\n      if (aPathUrl || aPath.match(dataUrlRegexp)) {\r\n        return aPath;\r\n      }\r\n      if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\r\n        aRootUrl.host = aPath;\r\n        return urlGenerate(aRootUrl);\r\n      }\r\n      var joined = aPath.charAt(0) === \"/\" ? aPath : normalize(aRoot.replace(/\\/+$/, \"\") + \"/\" + aPath);\r\n      if (aRootUrl) {\r\n        aRootUrl.path = joined;\r\n        return urlGenerate(aRootUrl);\r\n      }\r\n      return joined;\r\n    }\r\n    exports.join = join;\r\n    exports.isAbsolute = function(aPath) {\r\n      return aPath.charAt(0) === \"/\" || urlRegexp.test(aPath);\r\n    };\r\n    function relative(aRoot, aPath) {\r\n      if (aRoot === \"\") {\r\n        aRoot = \".\";\r\n      }\r\n      aRoot = aRoot.replace(/\\/$/, \"\");\r\n      var level = 0;\r\n      while (aPath.indexOf(aRoot + \"/\") !== 0) {\r\n        var index = aRoot.lastIndexOf(\"/\");\r\n        if (index < 0) {\r\n          return aPath;\r\n        }\r\n        aRoot = aRoot.slice(0, index);\r\n        if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\r\n          return aPath;\r\n        }\r\n        ++level;\r\n      }\r\n      return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\r\n    }\r\n    exports.relative = relative;\r\n    var supportsNullProto = function() {\r\n      var obj = Object.create(null);\r\n      return !(\"__proto__\" in obj);\r\n    }();\r\n    function identity(s) {\r\n      return s;\r\n    }\r\n    function toSetString(aStr) {\r\n      if (isProtoString(aStr)) {\r\n        return \"$\" + aStr;\r\n      }\r\n      return aStr;\r\n    }\r\n    exports.toSetString = supportsNullProto ? identity : toSetString;\r\n    function fromSetString(aStr) {\r\n      if (isProtoString(aStr)) {\r\n        return aStr.slice(1);\r\n      }\r\n      return aStr;\r\n    }\r\n    exports.fromSetString = supportsNullProto ? identity : fromSetString;\r\n    function isProtoString(s) {\r\n      if (!s) {\r\n        return false;\r\n      }\r\n      var length = s.length;\r\n      if (length < 9) {\r\n        return false;\r\n      }\r\n      if (s.charCodeAt(length - 1) !== 95 || s.charCodeAt(length - 2) !== 95 || s.charCodeAt(length - 3) !== 111 || s.charCodeAt(length - 4) !== 116 || s.charCodeAt(length - 5) !== 111 || s.charCodeAt(length - 6) !== 114 || s.charCodeAt(length - 7) !== 112 || s.charCodeAt(length - 8) !== 95 || s.charCodeAt(length - 9) !== 95) {\r\n        return false;\r\n      }\r\n      for (var i = length - 10; i >= 0; i--) {\r\n        if (s.charCodeAt(i) !== 36) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\r\n      var cmp = strcmp(mappingA.source, mappingB.source);\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.originalLine - mappingB.originalLine;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n      if (cmp !== 0 || onlyCompareOriginal) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      return strcmp(mappingA.name, mappingB.name);\r\n    }\r\n    exports.compareByOriginalPositions = compareByOriginalPositions;\r\n    function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\r\n      var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n      if (cmp !== 0 || onlyCompareGenerated) {\r\n        return cmp;\r\n      }\r\n      cmp = strcmp(mappingA.source, mappingB.source);\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.originalLine - mappingB.originalLine;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      return strcmp(mappingA.name, mappingB.name);\r\n    }\r\n    exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\r\n    function strcmp(aStr1, aStr2) {\r\n      if (aStr1 === aStr2) {\r\n        return 0;\r\n      }\r\n      if (aStr1 === null) {\r\n        return 1;\r\n      }\r\n      if (aStr2 === null) {\r\n        return -1;\r\n      }\r\n      if (aStr1 > aStr2) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    }\r\n    function compareByGeneratedPositionsInflated(mappingA, mappingB) {\r\n      var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = strcmp(mappingA.source, mappingB.source);\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.originalLine - mappingB.originalLine;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n      if (cmp !== 0) {\r\n        return cmp;\r\n      }\r\n      return strcmp(mappingA.name, mappingB.name);\r\n    }\r\n    exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\r\n    function parseSourceMapInput(str) {\r\n      return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, \"\"));\r\n    }\r\n    exports.parseSourceMapInput = parseSourceMapInput;\r\n    function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\r\n      sourceURL = sourceURL || \"\";\r\n      if (sourceRoot) {\r\n        if (sourceRoot[sourceRoot.length - 1] !== \"/\" && sourceURL[0] !== \"/\") {\r\n          sourceRoot += \"/\";\r\n        }\r\n        sourceURL = sourceRoot + sourceURL;\r\n      }\r\n      if (sourceMapURL) {\r\n        var parsed = urlParse(sourceMapURL);\r\n        if (!parsed) {\r\n          throw new Error(\"sourceMapURL could not be parsed\");\r\n        }\r\n        if (parsed.path) {\r\n          var index = parsed.path.lastIndexOf(\"/\");\r\n          if (index >= 0) {\r\n            parsed.path = parsed.path.substring(0, index + 1);\r\n          }\r\n        }\r\n        sourceURL = join(urlGenerate(parsed), sourceURL);\r\n      }\r\n      return normalize(sourceURL);\r\n    }\r\n    exports.computeSourceURL = computeSourceURL;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/array-set.js\r\nvar require_array_set = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/array-set.js\"(exports) {\r\n    var util = require_util();\r\n    var has = Object.prototype.hasOwnProperty;\r\n    var hasNativeMap = typeof Map !== \"undefined\";\r\n    function ArraySet() {\r\n      this._array = [];\r\n      this._set = hasNativeMap ? new Map() : Object.create(null);\r\n    }\r\n    ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\r\n      var set = new ArraySet();\r\n      for (var i = 0, len = aArray.length; i < len; i++) {\r\n        set.add(aArray[i], aAllowDuplicates);\r\n      }\r\n      return set;\r\n    };\r\n    ArraySet.prototype.size = function ArraySet_size() {\r\n      return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\r\n    };\r\n    ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\r\n      var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\r\n      var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\r\n      var idx = this._array.length;\r\n      if (!isDuplicate || aAllowDuplicates) {\r\n        this._array.push(aStr);\r\n      }\r\n      if (!isDuplicate) {\r\n        if (hasNativeMap) {\r\n          this._set.set(aStr, idx);\r\n        } else {\r\n          this._set[sStr] = idx;\r\n        }\r\n      }\r\n    };\r\n    ArraySet.prototype.has = function ArraySet_has(aStr) {\r\n      if (hasNativeMap) {\r\n        return this._set.has(aStr);\r\n      } else {\r\n        var sStr = util.toSetString(aStr);\r\n        return has.call(this._set, sStr);\r\n      }\r\n    };\r\n    ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\r\n      if (hasNativeMap) {\r\n        var idx = this._set.get(aStr);\r\n        if (idx >= 0) {\r\n          return idx;\r\n        }\r\n      } else {\r\n        var sStr = util.toSetString(aStr);\r\n        if (has.call(this._set, sStr)) {\r\n          return this._set[sStr];\r\n        }\r\n      }\r\n      throw new Error('\"' + aStr + '\" is not in the set.');\r\n    };\r\n    ArraySet.prototype.at = function ArraySet_at(aIdx) {\r\n      if (aIdx >= 0 && aIdx < this._array.length) {\r\n        return this._array[aIdx];\r\n      }\r\n      throw new Error(\"No element indexed by \" + aIdx);\r\n    };\r\n    ArraySet.prototype.toArray = function ArraySet_toArray() {\r\n      return this._array.slice();\r\n    };\r\n    exports.ArraySet = ArraySet;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/mapping-list.js\r\nvar require_mapping_list = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/mapping-list.js\"(exports) {\r\n    var util = require_util();\r\n    function generatedPositionAfter(mappingA, mappingB) {\r\n      var lineA = mappingA.generatedLine;\r\n      var lineB = mappingB.generatedLine;\r\n      var columnA = mappingA.generatedColumn;\r\n      var columnB = mappingB.generatedColumn;\r\n      return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\r\n    }\r\n    function MappingList() {\r\n      this._array = [];\r\n      this._sorted = true;\r\n      this._last = { generatedLine: -1, generatedColumn: 0 };\r\n    }\r\n    MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {\r\n      this._array.forEach(aCallback, aThisArg);\r\n    };\r\n    MappingList.prototype.add = function MappingList_add(aMapping) {\r\n      if (generatedPositionAfter(this._last, aMapping)) {\r\n        this._last = aMapping;\r\n        this._array.push(aMapping);\r\n      } else {\r\n        this._sorted = false;\r\n        this._array.push(aMapping);\r\n      }\r\n    };\r\n    MappingList.prototype.toArray = function MappingList_toArray() {\r\n      if (!this._sorted) {\r\n        this._array.sort(util.compareByGeneratedPositionsInflated);\r\n        this._sorted = true;\r\n      }\r\n      return this._array;\r\n    };\r\n    exports.MappingList = MappingList;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-generator.js\r\nvar require_source_map_generator = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-generator.js\"(exports) {\r\n    var base64VLQ = require_base64_vlq();\r\n    var util = require_util();\r\n    var ArraySet = require_array_set().ArraySet;\r\n    var MappingList = require_mapping_list().MappingList;\r\n    function SourceMapGenerator2(aArgs) {\r\n      if (!aArgs) {\r\n        aArgs = {};\r\n      }\r\n      this._file = util.getArg(aArgs, \"file\", null);\r\n      this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\r\n      this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\r\n      this._sources = new ArraySet();\r\n      this._names = new ArraySet();\r\n      this._mappings = new MappingList();\r\n      this._sourcesContents = null;\r\n    }\r\n    SourceMapGenerator2.prototype._version = 3;\r\n    SourceMapGenerator2.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\r\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\r\n      var generator = new SourceMapGenerator2({\r\n        file: aSourceMapConsumer.file,\r\n        sourceRoot\r\n      });\r\n      aSourceMapConsumer.eachMapping(function(mapping) {\r\n        var newMapping = {\r\n          generated: {\r\n            line: mapping.generatedLine,\r\n            column: mapping.generatedColumn\r\n          }\r\n        };\r\n        if (mapping.source != null) {\r\n          newMapping.source = mapping.source;\r\n          if (sourceRoot != null) {\r\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\r\n          }\r\n          newMapping.original = {\r\n            line: mapping.originalLine,\r\n            column: mapping.originalColumn\r\n          };\r\n          if (mapping.name != null) {\r\n            newMapping.name = mapping.name;\r\n          }\r\n        }\r\n        generator.addMapping(newMapping);\r\n      });\r\n      aSourceMapConsumer.sources.forEach(function(sourceFile) {\r\n        var sourceRelative = sourceFile;\r\n        if (sourceRoot !== null) {\r\n          sourceRelative = util.relative(sourceRoot, sourceFile);\r\n        }\r\n        if (!generator._sources.has(sourceRelative)) {\r\n          generator._sources.add(sourceRelative);\r\n        }\r\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n        if (content != null) {\r\n          generator.setSourceContent(sourceFile, content);\r\n        }\r\n      });\r\n      return generator;\r\n    };\r\n    SourceMapGenerator2.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {\r\n      var generated = util.getArg(aArgs, \"generated\");\r\n      var original = util.getArg(aArgs, \"original\", null);\r\n      var source = util.getArg(aArgs, \"source\", null);\r\n      var name = util.getArg(aArgs, \"name\", null);\r\n      if (!this._skipValidation) {\r\n        this._validateMapping(generated, original, source, name);\r\n      }\r\n      if (source != null) {\r\n        source = String(source);\r\n        if (!this._sources.has(source)) {\r\n          this._sources.add(source);\r\n        }\r\n      }\r\n      if (name != null) {\r\n        name = String(name);\r\n        if (!this._names.has(name)) {\r\n          this._names.add(name);\r\n        }\r\n      }\r\n      this._mappings.add({\r\n        generatedLine: generated.line,\r\n        generatedColumn: generated.column,\r\n        originalLine: original != null && original.line,\r\n        originalColumn: original != null && original.column,\r\n        source,\r\n        name\r\n      });\r\n    };\r\n    SourceMapGenerator2.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\r\n      var source = aSourceFile;\r\n      if (this._sourceRoot != null) {\r\n        source = util.relative(this._sourceRoot, source);\r\n      }\r\n      if (aSourceContent != null) {\r\n        if (!this._sourcesContents) {\r\n          this._sourcesContents = Object.create(null);\r\n        }\r\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\r\n      } else if (this._sourcesContents) {\r\n        delete this._sourcesContents[util.toSetString(source)];\r\n        if (Object.keys(this._sourcesContents).length === 0) {\r\n          this._sourcesContents = null;\r\n        }\r\n      }\r\n    };\r\n    SourceMapGenerator2.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\r\n      var sourceFile = aSourceFile;\r\n      if (aSourceFile == null) {\r\n        if (aSourceMapConsumer.file == null) {\r\n          throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's \"file\" property. Both were omitted.`);\r\n        }\r\n        sourceFile = aSourceMapConsumer.file;\r\n      }\r\n      var sourceRoot = this._sourceRoot;\r\n      if (sourceRoot != null) {\r\n        sourceFile = util.relative(sourceRoot, sourceFile);\r\n      }\r\n      var newSources = new ArraySet();\r\n      var newNames = new ArraySet();\r\n      this._mappings.unsortedForEach(function(mapping) {\r\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\r\n          var original = aSourceMapConsumer.originalPositionFor({\r\n            line: mapping.originalLine,\r\n            column: mapping.originalColumn\r\n          });\r\n          if (original.source != null) {\r\n            mapping.source = original.source;\r\n            if (aSourceMapPath != null) {\r\n              mapping.source = util.join(aSourceMapPath, mapping.source);\r\n            }\r\n            if (sourceRoot != null) {\r\n              mapping.source = util.relative(sourceRoot, mapping.source);\r\n            }\r\n            mapping.originalLine = original.line;\r\n            mapping.originalColumn = original.column;\r\n            if (original.name != null) {\r\n              mapping.name = original.name;\r\n            }\r\n          }\r\n        }\r\n        var source = mapping.source;\r\n        if (source != null && !newSources.has(source)) {\r\n          newSources.add(source);\r\n        }\r\n        var name = mapping.name;\r\n        if (name != null && !newNames.has(name)) {\r\n          newNames.add(name);\r\n        }\r\n      }, this);\r\n      this._sources = newSources;\r\n      this._names = newNames;\r\n      aSourceMapConsumer.sources.forEach(function(sourceFile2) {\r\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile2);\r\n        if (content != null) {\r\n          if (aSourceMapPath != null) {\r\n            sourceFile2 = util.join(aSourceMapPath, sourceFile2);\r\n          }\r\n          if (sourceRoot != null) {\r\n            sourceFile2 = util.relative(sourceRoot, sourceFile2);\r\n          }\r\n          this.setSourceContent(sourceFile2, content);\r\n        }\r\n      }, this);\r\n    };\r\n    SourceMapGenerator2.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {\r\n      if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\r\n        throw new Error(\"original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.\");\r\n      }\r\n      if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\r\n        return;\r\n      } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\r\n        return;\r\n      } else {\r\n        throw new Error(\"Invalid mapping: \" + JSON.stringify({\r\n          generated: aGenerated,\r\n          source: aSource,\r\n          original: aOriginal,\r\n          name: aName\r\n        }));\r\n      }\r\n    };\r\n    SourceMapGenerator2.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {\r\n      var previousGeneratedColumn = 0;\r\n      var previousGeneratedLine = 1;\r\n      var previousOriginalColumn = 0;\r\n      var previousOriginalLine = 0;\r\n      var previousName = 0;\r\n      var previousSource = 0;\r\n      var result = \"\";\r\n      var next;\r\n      var mapping;\r\n      var nameIdx;\r\n      var sourceIdx;\r\n      var mappings = this._mappings.toArray();\r\n      for (var i = 0, len = mappings.length; i < len; i++) {\r\n        mapping = mappings[i];\r\n        next = \"\";\r\n        if (mapping.generatedLine !== previousGeneratedLine) {\r\n          previousGeneratedColumn = 0;\r\n          while (mapping.generatedLine !== previousGeneratedLine) {\r\n            next += \";\";\r\n            previousGeneratedLine++;\r\n          }\r\n        } else {\r\n          if (i > 0) {\r\n            if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\r\n              continue;\r\n            }\r\n            next += \",\";\r\n          }\r\n        }\r\n        next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\r\n        previousGeneratedColumn = mapping.generatedColumn;\r\n        if (mapping.source != null) {\r\n          sourceIdx = this._sources.indexOf(mapping.source);\r\n          next += base64VLQ.encode(sourceIdx - previousSource);\r\n          previousSource = sourceIdx;\r\n          next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\r\n          previousOriginalLine = mapping.originalLine - 1;\r\n          next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\r\n          previousOriginalColumn = mapping.originalColumn;\r\n          if (mapping.name != null) {\r\n            nameIdx = this._names.indexOf(mapping.name);\r\n            next += base64VLQ.encode(nameIdx - previousName);\r\n            previousName = nameIdx;\r\n          }\r\n        }\r\n        result += next;\r\n      }\r\n      return result;\r\n    };\r\n    SourceMapGenerator2.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\r\n      return aSources.map(function(source) {\r\n        if (!this._sourcesContents) {\r\n          return null;\r\n        }\r\n        if (aSourceRoot != null) {\r\n          source = util.relative(aSourceRoot, source);\r\n        }\r\n        var key = util.toSetString(source);\r\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\r\n      }, this);\r\n    };\r\n    SourceMapGenerator2.prototype.toJSON = function SourceMapGenerator_toJSON() {\r\n      var map = {\r\n        version: this._version,\r\n        sources: this._sources.toArray(),\r\n        names: this._names.toArray(),\r\n        mappings: this._serializeMappings()\r\n      };\r\n      if (this._file != null) {\r\n        map.file = this._file;\r\n      }\r\n      if (this._sourceRoot != null) {\r\n        map.sourceRoot = this._sourceRoot;\r\n      }\r\n      if (this._sourcesContents) {\r\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\r\n      }\r\n      return map;\r\n    };\r\n    SourceMapGenerator2.prototype.toString = function SourceMapGenerator_toString() {\r\n      return JSON.stringify(this.toJSON());\r\n    };\r\n    exports.SourceMapGenerator = SourceMapGenerator2;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/binary-search.js\r\nvar require_binary_search = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/binary-search.js\"(exports) {\r\n    exports.GREATEST_LOWER_BOUND = 1;\r\n    exports.LEAST_UPPER_BOUND = 2;\r\n    function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\r\n      var mid = Math.floor((aHigh - aLow) / 2) + aLow;\r\n      var cmp = aCompare(aNeedle, aHaystack[mid], true);\r\n      if (cmp === 0) {\r\n        return mid;\r\n      } else if (cmp > 0) {\r\n        if (aHigh - mid > 1) {\r\n          return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\r\n        }\r\n        if (aBias == exports.LEAST_UPPER_BOUND) {\r\n          return aHigh < aHaystack.length ? aHigh : -1;\r\n        } else {\r\n          return mid;\r\n        }\r\n      } else {\r\n        if (mid - aLow > 1) {\r\n          return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\r\n        }\r\n        if (aBias == exports.LEAST_UPPER_BOUND) {\r\n          return mid;\r\n        } else {\r\n          return aLow < 0 ? -1 : aLow;\r\n        }\r\n      }\r\n    }\r\n    exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\r\n      if (aHaystack.length === 0) {\r\n        return -1;\r\n      }\r\n      var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare, aBias || exports.GREATEST_LOWER_BOUND);\r\n      if (index < 0) {\r\n        return -1;\r\n      }\r\n      while (index - 1 >= 0) {\r\n        if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\r\n          break;\r\n        }\r\n        --index;\r\n      }\r\n      return index;\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/quick-sort.js\r\nvar require_quick_sort = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/quick-sort.js\"(exports) {\r\n    function swap(ary, x, y) {\r\n      var temp = ary[x];\r\n      ary[x] = ary[y];\r\n      ary[y] = temp;\r\n    }\r\n    function randomIntInRange(low, high) {\r\n      return Math.round(low + Math.random() * (high - low));\r\n    }\r\n    function doQuickSort(ary, comparator, p, r) {\r\n      if (p < r) {\r\n        var pivotIndex = randomIntInRange(p, r);\r\n        var i = p - 1;\r\n        swap(ary, pivotIndex, r);\r\n        var pivot = ary[r];\r\n        for (var j = p; j < r; j++) {\r\n          if (comparator(ary[j], pivot) <= 0) {\r\n            i += 1;\r\n            swap(ary, i, j);\r\n          }\r\n        }\r\n        swap(ary, i + 1, j);\r\n        var q = i + 1;\r\n        doQuickSort(ary, comparator, p, q - 1);\r\n        doQuickSort(ary, comparator, q + 1, r);\r\n      }\r\n    }\r\n    exports.quickSort = function(ary, comparator) {\r\n      doQuickSort(ary, comparator, 0, ary.length - 1);\r\n    };\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-consumer.js\r\nvar require_source_map_consumer = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-consumer.js\"(exports) {\r\n    var util = require_util();\r\n    var binarySearch = require_binary_search();\r\n    var ArraySet = require_array_set().ArraySet;\r\n    var base64VLQ = require_base64_vlq();\r\n    var quickSort = require_quick_sort().quickSort;\r\n    function SourceMapConsumer2(aSourceMap, aSourceMapURL) {\r\n      var sourceMap = aSourceMap;\r\n      if (typeof aSourceMap === \"string\") {\r\n        sourceMap = util.parseSourceMapInput(aSourceMap);\r\n      }\r\n      return sourceMap.sections != null ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL) : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\r\n    }\r\n    SourceMapConsumer2.fromSourceMap = function(aSourceMap, aSourceMapURL) {\r\n      return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\r\n    };\r\n    SourceMapConsumer2.prototype._version = 3;\r\n    SourceMapConsumer2.prototype.__generatedMappings = null;\r\n    Object.defineProperty(SourceMapConsumer2.prototype, \"_generatedMappings\", {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get: function() {\r\n        if (!this.__generatedMappings) {\r\n          this._parseMappings(this._mappings, this.sourceRoot);\r\n        }\r\n        return this.__generatedMappings;\r\n      }\r\n    });\r\n    SourceMapConsumer2.prototype.__originalMappings = null;\r\n    Object.defineProperty(SourceMapConsumer2.prototype, \"_originalMappings\", {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get: function() {\r\n        if (!this.__originalMappings) {\r\n          this._parseMappings(this._mappings, this.sourceRoot);\r\n        }\r\n        return this.__originalMappings;\r\n      }\r\n    });\r\n    SourceMapConsumer2.prototype._charIsMappingSeparator = function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\r\n      var c = aStr.charAt(index);\r\n      return c === \";\" || c === \",\";\r\n    };\r\n    SourceMapConsumer2.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n      throw new Error(\"Subclasses must implement _parseMappings\");\r\n    };\r\n    SourceMapConsumer2.GENERATED_ORDER = 1;\r\n    SourceMapConsumer2.ORIGINAL_ORDER = 2;\r\n    SourceMapConsumer2.GREATEST_LOWER_BOUND = 1;\r\n    SourceMapConsumer2.LEAST_UPPER_BOUND = 2;\r\n    SourceMapConsumer2.prototype.eachMapping = function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\r\n      var context = aContext || null;\r\n      var order = aOrder || SourceMapConsumer2.GENERATED_ORDER;\r\n      var mappings;\r\n      switch (order) {\r\n        case SourceMapConsumer2.GENERATED_ORDER:\r\n          mappings = this._generatedMappings;\r\n          break;\r\n        case SourceMapConsumer2.ORIGINAL_ORDER:\r\n          mappings = this._originalMappings;\r\n          break;\r\n        default:\r\n          throw new Error(\"Unknown order of iteration.\");\r\n      }\r\n      var sourceRoot = this.sourceRoot;\r\n      mappings.map(function(mapping) {\r\n        var source = mapping.source === null ? null : this._sources.at(mapping.source);\r\n        source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\r\n        return {\r\n          source,\r\n          generatedLine: mapping.generatedLine,\r\n          generatedColumn: mapping.generatedColumn,\r\n          originalLine: mapping.originalLine,\r\n          originalColumn: mapping.originalColumn,\r\n          name: mapping.name === null ? null : this._names.at(mapping.name)\r\n        };\r\n      }, this).forEach(aCallback, context);\r\n    };\r\n    SourceMapConsumer2.prototype.allGeneratedPositionsFor = function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\r\n      var line = util.getArg(aArgs, \"line\");\r\n      var needle = {\r\n        source: util.getArg(aArgs, \"source\"),\r\n        originalLine: line,\r\n        originalColumn: util.getArg(aArgs, \"column\", 0)\r\n      };\r\n      needle.source = this._findSourceIndex(needle.source);\r\n      if (needle.source < 0) {\r\n        return [];\r\n      }\r\n      var mappings = [];\r\n      var index = this._findMapping(needle, this._originalMappings, \"originalLine\", \"originalColumn\", util.compareByOriginalPositions, binarySearch.LEAST_UPPER_BOUND);\r\n      if (index >= 0) {\r\n        var mapping = this._originalMappings[index];\r\n        if (aArgs.column === void 0) {\r\n          var originalLine = mapping.originalLine;\r\n          while (mapping && mapping.originalLine === originalLine) {\r\n            mappings.push({\r\n              line: util.getArg(mapping, \"generatedLine\", null),\r\n              column: util.getArg(mapping, \"generatedColumn\", null),\r\n              lastColumn: util.getArg(mapping, \"lastGeneratedColumn\", null)\r\n            });\r\n            mapping = this._originalMappings[++index];\r\n          }\r\n        } else {\r\n          var originalColumn = mapping.originalColumn;\r\n          while (mapping && mapping.originalLine === line && mapping.originalColumn == originalColumn) {\r\n            mappings.push({\r\n              line: util.getArg(mapping, \"generatedLine\", null),\r\n              column: util.getArg(mapping, \"generatedColumn\", null),\r\n              lastColumn: util.getArg(mapping, \"lastGeneratedColumn\", null)\r\n            });\r\n            mapping = this._originalMappings[++index];\r\n          }\r\n        }\r\n      }\r\n      return mappings;\r\n    };\r\n    exports.SourceMapConsumer = SourceMapConsumer2;\r\n    function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\r\n      var sourceMap = aSourceMap;\r\n      if (typeof aSourceMap === \"string\") {\r\n        sourceMap = util.parseSourceMapInput(aSourceMap);\r\n      }\r\n      var version = util.getArg(sourceMap, \"version\");\r\n      var sources = util.getArg(sourceMap, \"sources\");\r\n      var names = util.getArg(sourceMap, \"names\", []);\r\n      var sourceRoot = util.getArg(sourceMap, \"sourceRoot\", null);\r\n      var sourcesContent = util.getArg(sourceMap, \"sourcesContent\", null);\r\n      var mappings = util.getArg(sourceMap, \"mappings\");\r\n      var file = util.getArg(sourceMap, \"file\", null);\r\n      if (version != this._version) {\r\n        throw new Error(\"Unsupported version: \" + version);\r\n      }\r\n      if (sourceRoot) {\r\n        sourceRoot = util.normalize(sourceRoot);\r\n      }\r\n      sources = sources.map(String).map(util.normalize).map(function(source) {\r\n        return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ? util.relative(sourceRoot, source) : source;\r\n      });\r\n      this._names = ArraySet.fromArray(names.map(String), true);\r\n      this._sources = ArraySet.fromArray(sources, true);\r\n      this._absoluteSources = this._sources.toArray().map(function(s) {\r\n        return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\r\n      });\r\n      this.sourceRoot = sourceRoot;\r\n      this.sourcesContent = sourcesContent;\r\n      this._mappings = mappings;\r\n      this._sourceMapURL = aSourceMapURL;\r\n      this.file = file;\r\n    }\r\n    BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer2.prototype);\r\n    BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer2;\r\n    BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\r\n      var relativeSource = aSource;\r\n      if (this.sourceRoot != null) {\r\n        relativeSource = util.relative(this.sourceRoot, relativeSource);\r\n      }\r\n      if (this._sources.has(relativeSource)) {\r\n        return this._sources.indexOf(relativeSource);\r\n      }\r\n      var i;\r\n      for (i = 0; i < this._absoluteSources.length; ++i) {\r\n        if (this._absoluteSources[i] == aSource) {\r\n          return i;\r\n        }\r\n      }\r\n      return -1;\r\n    };\r\n    BasicSourceMapConsumer.fromSourceMap = function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\r\n      var smc = Object.create(BasicSourceMapConsumer.prototype);\r\n      var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\r\n      var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\r\n      smc.sourceRoot = aSourceMap._sourceRoot;\r\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(), smc.sourceRoot);\r\n      smc.file = aSourceMap._file;\r\n      smc._sourceMapURL = aSourceMapURL;\r\n      smc._absoluteSources = smc._sources.toArray().map(function(s) {\r\n        return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\r\n      });\r\n      var generatedMappings = aSourceMap._mappings.toArray().slice();\r\n      var destGeneratedMappings = smc.__generatedMappings = [];\r\n      var destOriginalMappings = smc.__originalMappings = [];\r\n      for (var i = 0, length = generatedMappings.length; i < length; i++) {\r\n        var srcMapping = generatedMappings[i];\r\n        var destMapping = new Mapping();\r\n        destMapping.generatedLine = srcMapping.generatedLine;\r\n        destMapping.generatedColumn = srcMapping.generatedColumn;\r\n        if (srcMapping.source) {\r\n          destMapping.source = sources.indexOf(srcMapping.source);\r\n          destMapping.originalLine = srcMapping.originalLine;\r\n          destMapping.originalColumn = srcMapping.originalColumn;\r\n          if (srcMapping.name) {\r\n            destMapping.name = names.indexOf(srcMapping.name);\r\n          }\r\n          destOriginalMappings.push(destMapping);\r\n        }\r\n        destGeneratedMappings.push(destMapping);\r\n      }\r\n      quickSort(smc.__originalMappings, util.compareByOriginalPositions);\r\n      return smc;\r\n    };\r\n    BasicSourceMapConsumer.prototype._version = 3;\r\n    Object.defineProperty(BasicSourceMapConsumer.prototype, \"sources\", {\r\n      get: function() {\r\n        return this._absoluteSources.slice();\r\n      }\r\n    });\r\n    function Mapping() {\r\n      this.generatedLine = 0;\r\n      this.generatedColumn = 0;\r\n      this.source = null;\r\n      this.originalLine = null;\r\n      this.originalColumn = null;\r\n      this.name = null;\r\n    }\r\n    BasicSourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n      var generatedLine = 1;\r\n      var previousGeneratedColumn = 0;\r\n      var previousOriginalLine = 0;\r\n      var previousOriginalColumn = 0;\r\n      var previousSource = 0;\r\n      var previousName = 0;\r\n      var length = aStr.length;\r\n      var index = 0;\r\n      var cachedSegments = {};\r\n      var temp = {};\r\n      var originalMappings = [];\r\n      var generatedMappings = [];\r\n      var mapping, str, segment, end, value;\r\n      while (index < length) {\r\n        if (aStr.charAt(index) === \";\") {\r\n          generatedLine++;\r\n          index++;\r\n          previousGeneratedColumn = 0;\r\n        } else if (aStr.charAt(index) === \",\") {\r\n          index++;\r\n        } else {\r\n          mapping = new Mapping();\r\n          mapping.generatedLine = generatedLine;\r\n          for (end = index; end < length; end++) {\r\n            if (this._charIsMappingSeparator(aStr, end)) {\r\n              break;\r\n            }\r\n          }\r\n          str = aStr.slice(index, end);\r\n          segment = cachedSegments[str];\r\n          if (segment) {\r\n            index += str.length;\r\n          } else {\r\n            segment = [];\r\n            while (index < end) {\r\n              base64VLQ.decode(aStr, index, temp);\r\n              value = temp.value;\r\n              index = temp.rest;\r\n              segment.push(value);\r\n            }\r\n            if (segment.length === 2) {\r\n              throw new Error(\"Found a source, but no line and column\");\r\n            }\r\n            if (segment.length === 3) {\r\n              throw new Error(\"Found a source and line, but no column\");\r\n            }\r\n            cachedSegments[str] = segment;\r\n          }\r\n          mapping.generatedColumn = previousGeneratedColumn + segment[0];\r\n          previousGeneratedColumn = mapping.generatedColumn;\r\n          if (segment.length > 1) {\r\n            mapping.source = previousSource + segment[1];\r\n            previousSource += segment[1];\r\n            mapping.originalLine = previousOriginalLine + segment[2];\r\n            previousOriginalLine = mapping.originalLine;\r\n            mapping.originalLine += 1;\r\n            mapping.originalColumn = previousOriginalColumn + segment[3];\r\n            previousOriginalColumn = mapping.originalColumn;\r\n            if (segment.length > 4) {\r\n              mapping.name = previousName + segment[4];\r\n              previousName += segment[4];\r\n            }\r\n          }\r\n          generatedMappings.push(mapping);\r\n          if (typeof mapping.originalLine === \"number\") {\r\n            originalMappings.push(mapping);\r\n          }\r\n        }\r\n      }\r\n      quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\r\n      this.__generatedMappings = generatedMappings;\r\n      quickSort(originalMappings, util.compareByOriginalPositions);\r\n      this.__originalMappings = originalMappings;\r\n    };\r\n    BasicSourceMapConsumer.prototype._findMapping = function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName, aColumnName, aComparator, aBias) {\r\n      if (aNeedle[aLineName] <= 0) {\r\n        throw new TypeError(\"Line must be greater than or equal to 1, got \" + aNeedle[aLineName]);\r\n      }\r\n      if (aNeedle[aColumnName] < 0) {\r\n        throw new TypeError(\"Column must be greater than or equal to 0, got \" + aNeedle[aColumnName]);\r\n      }\r\n      return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\r\n    };\r\n    BasicSourceMapConsumer.prototype.computeColumnSpans = function SourceMapConsumer_computeColumnSpans() {\r\n      for (var index = 0; index < this._generatedMappings.length; ++index) {\r\n        var mapping = this._generatedMappings[index];\r\n        if (index + 1 < this._generatedMappings.length) {\r\n          var nextMapping = this._generatedMappings[index + 1];\r\n          if (mapping.generatedLine === nextMapping.generatedLine) {\r\n            mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\r\n            continue;\r\n          }\r\n        }\r\n        mapping.lastGeneratedColumn = Infinity;\r\n      }\r\n    };\r\n    BasicSourceMapConsumer.prototype.originalPositionFor = function SourceMapConsumer_originalPositionFor(aArgs) {\r\n      var needle = {\r\n        generatedLine: util.getArg(aArgs, \"line\"),\r\n        generatedColumn: util.getArg(aArgs, \"column\")\r\n      };\r\n      var index = this._findMapping(needle, this._generatedMappings, \"generatedLine\", \"generatedColumn\", util.compareByGeneratedPositionsDeflated, util.getArg(aArgs, \"bias\", SourceMapConsumer2.GREATEST_LOWER_BOUND));\r\n      if (index >= 0) {\r\n        var mapping = this._generatedMappings[index];\r\n        if (mapping.generatedLine === needle.generatedLine) {\r\n          var source = util.getArg(mapping, \"source\", null);\r\n          if (source !== null) {\r\n            source = this._sources.at(source);\r\n            source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\r\n          }\r\n          var name = util.getArg(mapping, \"name\", null);\r\n          if (name !== null) {\r\n            name = this._names.at(name);\r\n          }\r\n          return {\r\n            source,\r\n            line: util.getArg(mapping, \"originalLine\", null),\r\n            column: util.getArg(mapping, \"originalColumn\", null),\r\n            name\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        source: null,\r\n        line: null,\r\n        column: null,\r\n        name: null\r\n      };\r\n    };\r\n    BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function BasicSourceMapConsumer_hasContentsOfAllSources() {\r\n      if (!this.sourcesContent) {\r\n        return false;\r\n      }\r\n      return this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(sc) {\r\n        return sc == null;\r\n      });\r\n    };\r\n    BasicSourceMapConsumer.prototype.sourceContentFor = function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n      if (!this.sourcesContent) {\r\n        return null;\r\n      }\r\n      var index = this._findSourceIndex(aSource);\r\n      if (index >= 0) {\r\n        return this.sourcesContent[index];\r\n      }\r\n      var relativeSource = aSource;\r\n      if (this.sourceRoot != null) {\r\n        relativeSource = util.relative(this.sourceRoot, relativeSource);\r\n      }\r\n      var url;\r\n      if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {\r\n        var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\r\n        if (url.scheme == \"file\" && this._sources.has(fileUriAbsPath)) {\r\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];\r\n        }\r\n        if ((!url.path || url.path == \"/\") && this._sources.has(\"/\" + relativeSource)) {\r\n          return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\r\n        }\r\n      }\r\n      if (nullOnMissing) {\r\n        return null;\r\n      } else {\r\n        throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\r\n      }\r\n    };\r\n    BasicSourceMapConsumer.prototype.generatedPositionFor = function SourceMapConsumer_generatedPositionFor(aArgs) {\r\n      var source = util.getArg(aArgs, \"source\");\r\n      source = this._findSourceIndex(source);\r\n      if (source < 0) {\r\n        return {\r\n          line: null,\r\n          column: null,\r\n          lastColumn: null\r\n        };\r\n      }\r\n      var needle = {\r\n        source,\r\n        originalLine: util.getArg(aArgs, \"line\"),\r\n        originalColumn: util.getArg(aArgs, \"column\")\r\n      };\r\n      var index = this._findMapping(needle, this._originalMappings, \"originalLine\", \"originalColumn\", util.compareByOriginalPositions, util.getArg(aArgs, \"bias\", SourceMapConsumer2.GREATEST_LOWER_BOUND));\r\n      if (index >= 0) {\r\n        var mapping = this._originalMappings[index];\r\n        if (mapping.source === needle.source) {\r\n          return {\r\n            line: util.getArg(mapping, \"generatedLine\", null),\r\n            column: util.getArg(mapping, \"generatedColumn\", null),\r\n            lastColumn: util.getArg(mapping, \"lastGeneratedColumn\", null)\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        line: null,\r\n        column: null,\r\n        lastColumn: null\r\n      };\r\n    };\r\n    exports.BasicSourceMapConsumer = BasicSourceMapConsumer;\r\n    function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\r\n      var sourceMap = aSourceMap;\r\n      if (typeof aSourceMap === \"string\") {\r\n        sourceMap = util.parseSourceMapInput(aSourceMap);\r\n      }\r\n      var version = util.getArg(sourceMap, \"version\");\r\n      var sections = util.getArg(sourceMap, \"sections\");\r\n      if (version != this._version) {\r\n        throw new Error(\"Unsupported version: \" + version);\r\n      }\r\n      this._sources = new ArraySet();\r\n      this._names = new ArraySet();\r\n      var lastOffset = {\r\n        line: -1,\r\n        column: 0\r\n      };\r\n      this._sections = sections.map(function(s) {\r\n        if (s.url) {\r\n          throw new Error(\"Support for url field in sections not implemented.\");\r\n        }\r\n        var offset = util.getArg(s, \"offset\");\r\n        var offsetLine = util.getArg(offset, \"line\");\r\n        var offsetColumn = util.getArg(offset, \"column\");\r\n        if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column) {\r\n          throw new Error(\"Section offsets must be ordered and non-overlapping.\");\r\n        }\r\n        lastOffset = offset;\r\n        return {\r\n          generatedOffset: {\r\n            generatedLine: offsetLine + 1,\r\n            generatedColumn: offsetColumn + 1\r\n          },\r\n          consumer: new SourceMapConsumer2(util.getArg(s, \"map\"), aSourceMapURL)\r\n        };\r\n      });\r\n    }\r\n    IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer2.prototype);\r\n    IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer2;\r\n    IndexedSourceMapConsumer.prototype._version = 3;\r\n    Object.defineProperty(IndexedSourceMapConsumer.prototype, \"sources\", {\r\n      get: function() {\r\n        var sources = [];\r\n        for (var i = 0; i < this._sections.length; i++) {\r\n          for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\r\n            sources.push(this._sections[i].consumer.sources[j]);\r\n          }\r\n        }\r\n        return sources;\r\n      }\r\n    });\r\n    IndexedSourceMapConsumer.prototype.originalPositionFor = function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\r\n      var needle = {\r\n        generatedLine: util.getArg(aArgs, \"line\"),\r\n        generatedColumn: util.getArg(aArgs, \"column\")\r\n      };\r\n      var sectionIndex = binarySearch.search(needle, this._sections, function(needle2, section2) {\r\n        var cmp = needle2.generatedLine - section2.generatedOffset.generatedLine;\r\n        if (cmp) {\r\n          return cmp;\r\n        }\r\n        return needle2.generatedColumn - section2.generatedOffset.generatedColumn;\r\n      });\r\n      var section = this._sections[sectionIndex];\r\n      if (!section) {\r\n        return {\r\n          source: null,\r\n          line: null,\r\n          column: null,\r\n          name: null\r\n        };\r\n      }\r\n      return section.consumer.originalPositionFor({\r\n        line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),\r\n        column: needle.generatedColumn - (section.generatedOffset.generatedLine === needle.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\r\n        bias: aArgs.bias\r\n      });\r\n    };\r\n    IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function IndexedSourceMapConsumer_hasContentsOfAllSources() {\r\n      return this._sections.every(function(s) {\r\n        return s.consumer.hasContentsOfAllSources();\r\n      });\r\n    };\r\n    IndexedSourceMapConsumer.prototype.sourceContentFor = function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\r\n      for (var i = 0; i < this._sections.length; i++) {\r\n        var section = this._sections[i];\r\n        var content = section.consumer.sourceContentFor(aSource, true);\r\n        if (content) {\r\n          return content;\r\n        }\r\n      }\r\n      if (nullOnMissing) {\r\n        return null;\r\n      } else {\r\n        throw new Error('\"' + aSource + '\" is not in the SourceMap.');\r\n      }\r\n    };\r\n    IndexedSourceMapConsumer.prototype.generatedPositionFor = function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\r\n      for (var i = 0; i < this._sections.length; i++) {\r\n        var section = this._sections[i];\r\n        if (section.consumer._findSourceIndex(util.getArg(aArgs, \"source\")) === -1) {\r\n          continue;\r\n        }\r\n        var generatedPosition = section.consumer.generatedPositionFor(aArgs);\r\n        if (generatedPosition) {\r\n          var ret = {\r\n            line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),\r\n            column: generatedPosition.column + (section.generatedOffset.generatedLine === generatedPosition.line ? section.generatedOffset.generatedColumn - 1 : 0)\r\n          };\r\n          return ret;\r\n        }\r\n      }\r\n      return {\r\n        line: null,\r\n        column: null\r\n      };\r\n    };\r\n    IndexedSourceMapConsumer.prototype._parseMappings = function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\r\n      this.__generatedMappings = [];\r\n      this.__originalMappings = [];\r\n      for (var i = 0; i < this._sections.length; i++) {\r\n        var section = this._sections[i];\r\n        var sectionMappings = section.consumer._generatedMappings;\r\n        for (var j = 0; j < sectionMappings.length; j++) {\r\n          var mapping = sectionMappings[j];\r\n          var source = section.consumer._sources.at(mapping.source);\r\n          source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\r\n          this._sources.add(source);\r\n          source = this._sources.indexOf(source);\r\n          var name = null;\r\n          if (mapping.name) {\r\n            name = section.consumer._names.at(mapping.name);\r\n            this._names.add(name);\r\n            name = this._names.indexOf(name);\r\n          }\r\n          var adjustedMapping = {\r\n            source,\r\n            generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),\r\n            generatedColumn: mapping.generatedColumn + (section.generatedOffset.generatedLine === mapping.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\r\n            originalLine: mapping.originalLine,\r\n            originalColumn: mapping.originalColumn,\r\n            name\r\n          };\r\n          this.__generatedMappings.push(adjustedMapping);\r\n          if (typeof adjustedMapping.originalLine === \"number\") {\r\n            this.__originalMappings.push(adjustedMapping);\r\n          }\r\n        }\r\n      }\r\n      quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\r\n      quickSort(this.__originalMappings, util.compareByOriginalPositions);\r\n    };\r\n    exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-node.js\r\nvar require_source_node = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-node.js\"(exports) {\r\n    var SourceMapGenerator2 = require_source_map_generator().SourceMapGenerator;\r\n    var util = require_util();\r\n    var REGEX_NEWLINE = /(\\r?\\n)/;\r\n    var NEWLINE_CODE = 10;\r\n    var isSourceNode = \"$$$isSourceNode$$$\";\r\n    function SourceNode(aLine, aColumn, aSource, aChunks, aName) {\r\n      this.children = [];\r\n      this.sourceContents = {};\r\n      this.line = aLine == null ? null : aLine;\r\n      this.column = aColumn == null ? null : aColumn;\r\n      this.source = aSource == null ? null : aSource;\r\n      this.name = aName == null ? null : aName;\r\n      this[isSourceNode] = true;\r\n      if (aChunks != null)\r\n        this.add(aChunks);\r\n    }\r\n    SourceNode.fromStringWithSourceMap = function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\r\n      var node = new SourceNode();\r\n      var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\r\n      var remainingLinesIndex = 0;\r\n      var shiftNextLine = function() {\r\n        var lineContents = getNextLine();\r\n        var newLine = getNextLine() || \"\";\r\n        return lineContents + newLine;\r\n        function getNextLine() {\r\n          return remainingLinesIndex < remainingLines.length ? remainingLines[remainingLinesIndex++] : void 0;\r\n        }\r\n      };\r\n      var lastGeneratedLine = 1, lastGeneratedColumn = 0;\r\n      var lastMapping = null;\r\n      aSourceMapConsumer.eachMapping(function(mapping) {\r\n        if (lastMapping !== null) {\r\n          if (lastGeneratedLine < mapping.generatedLine) {\r\n            addMappingWithCode(lastMapping, shiftNextLine());\r\n            lastGeneratedLine++;\r\n            lastGeneratedColumn = 0;\r\n          } else {\r\n            var nextLine = remainingLines[remainingLinesIndex] || \"\";\r\n            var code = nextLine.substr(0, mapping.generatedColumn - lastGeneratedColumn);\r\n            remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn - lastGeneratedColumn);\r\n            lastGeneratedColumn = mapping.generatedColumn;\r\n            addMappingWithCode(lastMapping, code);\r\n            lastMapping = mapping;\r\n            return;\r\n          }\r\n        }\r\n        while (lastGeneratedLine < mapping.generatedLine) {\r\n          node.add(shiftNextLine());\r\n          lastGeneratedLine++;\r\n        }\r\n        if (lastGeneratedColumn < mapping.generatedColumn) {\r\n          var nextLine = remainingLines[remainingLinesIndex] || \"\";\r\n          node.add(nextLine.substr(0, mapping.generatedColumn));\r\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\r\n          lastGeneratedColumn = mapping.generatedColumn;\r\n        }\r\n        lastMapping = mapping;\r\n      }, this);\r\n      if (remainingLinesIndex < remainingLines.length) {\r\n        if (lastMapping) {\r\n          addMappingWithCode(lastMapping, shiftNextLine());\r\n        }\r\n        node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\r\n      }\r\n      aSourceMapConsumer.sources.forEach(function(sourceFile) {\r\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\r\n        if (content != null) {\r\n          if (aRelativePath != null) {\r\n            sourceFile = util.join(aRelativePath, sourceFile);\r\n          }\r\n          node.setSourceContent(sourceFile, content);\r\n        }\r\n      });\r\n      return node;\r\n      function addMappingWithCode(mapping, code) {\r\n        if (mapping === null || mapping.source === void 0) {\r\n          node.add(code);\r\n        } else {\r\n          var source = aRelativePath ? util.join(aRelativePath, mapping.source) : mapping.source;\r\n          node.add(new SourceNode(mapping.originalLine, mapping.originalColumn, source, code, mapping.name));\r\n        }\r\n      }\r\n    };\r\n    SourceNode.prototype.add = function SourceNode_add(aChunk) {\r\n      if (Array.isArray(aChunk)) {\r\n        aChunk.forEach(function(chunk) {\r\n          this.add(chunk);\r\n        }, this);\r\n      } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\r\n        if (aChunk) {\r\n          this.children.push(aChunk);\r\n        }\r\n      } else {\r\n        throw new TypeError(\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk);\r\n      }\r\n      return this;\r\n    };\r\n    SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\r\n      if (Array.isArray(aChunk)) {\r\n        for (var i = aChunk.length - 1; i >= 0; i--) {\r\n          this.prepend(aChunk[i]);\r\n        }\r\n      } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\r\n        this.children.unshift(aChunk);\r\n      } else {\r\n        throw new TypeError(\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk);\r\n      }\r\n      return this;\r\n    };\r\n    SourceNode.prototype.walk = function SourceNode_walk(aFn) {\r\n      var chunk;\r\n      for (var i = 0, len = this.children.length; i < len; i++) {\r\n        chunk = this.children[i];\r\n        if (chunk[isSourceNode]) {\r\n          chunk.walk(aFn);\r\n        } else {\r\n          if (chunk !== \"\") {\r\n            aFn(chunk, {\r\n              source: this.source,\r\n              line: this.line,\r\n              column: this.column,\r\n              name: this.name\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n    SourceNode.prototype.join = function SourceNode_join(aSep) {\r\n      var newChildren;\r\n      var i;\r\n      var len = this.children.length;\r\n      if (len > 0) {\r\n        newChildren = [];\r\n        for (i = 0; i < len - 1; i++) {\r\n          newChildren.push(this.children[i]);\r\n          newChildren.push(aSep);\r\n        }\r\n        newChildren.push(this.children[i]);\r\n        this.children = newChildren;\r\n      }\r\n      return this;\r\n    };\r\n    SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\r\n      var lastChild = this.children[this.children.length - 1];\r\n      if (lastChild[isSourceNode]) {\r\n        lastChild.replaceRight(aPattern, aReplacement);\r\n      } else if (typeof lastChild === \"string\") {\r\n        this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\r\n      } else {\r\n        this.children.push(\"\".replace(aPattern, aReplacement));\r\n      }\r\n      return this;\r\n    };\r\n    SourceNode.prototype.setSourceContent = function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\r\n      this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\r\n    };\r\n    SourceNode.prototype.walkSourceContents = function SourceNode_walkSourceContents(aFn) {\r\n      for (var i = 0, len = this.children.length; i < len; i++) {\r\n        if (this.children[i][isSourceNode]) {\r\n          this.children[i].walkSourceContents(aFn);\r\n        }\r\n      }\r\n      var sources = Object.keys(this.sourceContents);\r\n      for (var i = 0, len = sources.length; i < len; i++) {\r\n        aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\r\n      }\r\n    };\r\n    SourceNode.prototype.toString = function SourceNode_toString() {\r\n      var str = \"\";\r\n      this.walk(function(chunk) {\r\n        str += chunk;\r\n      });\r\n      return str;\r\n    };\r\n    SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\r\n      var generated = {\r\n        code: \"\",\r\n        line: 1,\r\n        column: 0\r\n      };\r\n      var map = new SourceMapGenerator2(aArgs);\r\n      var sourceMappingActive = false;\r\n      var lastOriginalSource = null;\r\n      var lastOriginalLine = null;\r\n      var lastOriginalColumn = null;\r\n      var lastOriginalName = null;\r\n      this.walk(function(chunk, original) {\r\n        generated.code += chunk;\r\n        if (original.source !== null && original.line !== null && original.column !== null) {\r\n          if (lastOriginalSource !== original.source || lastOriginalLine !== original.line || lastOriginalColumn !== original.column || lastOriginalName !== original.name) {\r\n            map.addMapping({\r\n              source: original.source,\r\n              original: {\r\n                line: original.line,\r\n                column: original.column\r\n              },\r\n              generated: {\r\n                line: generated.line,\r\n                column: generated.column\r\n              },\r\n              name: original.name\r\n            });\r\n          }\r\n          lastOriginalSource = original.source;\r\n          lastOriginalLine = original.line;\r\n          lastOriginalColumn = original.column;\r\n          lastOriginalName = original.name;\r\n          sourceMappingActive = true;\r\n        } else if (sourceMappingActive) {\r\n          map.addMapping({\r\n            generated: {\r\n              line: generated.line,\r\n              column: generated.column\r\n            }\r\n          });\r\n          lastOriginalSource = null;\r\n          sourceMappingActive = false;\r\n        }\r\n        for (var idx = 0, length = chunk.length; idx < length; idx++) {\r\n          if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\r\n            generated.line++;\r\n            generated.column = 0;\r\n            if (idx + 1 === length) {\r\n              lastOriginalSource = null;\r\n              sourceMappingActive = false;\r\n            } else if (sourceMappingActive) {\r\n              map.addMapping({\r\n                source: original.source,\r\n                original: {\r\n                  line: original.line,\r\n                  column: original.column\r\n                },\r\n                generated: {\r\n                  line: generated.line,\r\n                  column: generated.column\r\n                },\r\n                name: original.name\r\n              });\r\n            }\r\n          } else {\r\n            generated.column++;\r\n          }\r\n        }\r\n      });\r\n      this.walkSourceContents(function(sourceFile, sourceContent) {\r\n        map.setSourceContent(sourceFile, sourceContent);\r\n      });\r\n      return { code: generated.code, map };\r\n    };\r\n    exports.SourceNode = SourceNode;\r\n  }\r\n});\r\n\r\n// ../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/source-map.js\r\nvar require_source_map = __commonJS({\r\n  \"../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/source-map.js\"(exports) {\r\n    exports.SourceMapGenerator = require_source_map_generator().SourceMapGenerator;\r\n    exports.SourceMapConsumer = require_source_map_consumer().SourceMapConsumer;\r\n    exports.SourceNode = require_source_node().SourceNode;\r\n  }\r\n});\r\n\r\n// src/index.ts\r\n__export(exports, {\r\n  default: () => vuePlugin,\r\n  parseVueRequest: () => parseVueRequest\r\n});\r\nvar import_fs2 = __toModule(require(\"fs\"));\r\n\r\n// ../../node_modules/.pnpm/@rollup+pluginutils@4.1.1/node_modules/@rollup/pluginutils/dist/es/index.js\r\nvar import_path = __toModule(require(\"path\"));\r\nvar import_picomatch = __toModule(require_picomatch2());\r\nfunction isArray(arg) {\r\n  return Array.isArray(arg);\r\n}\r\nfunction ensureArray(thing) {\r\n  if (isArray(thing))\r\n    return thing;\r\n  if (thing == null)\r\n    return [];\r\n  return [thing];\r\n}\r\nvar normalizePath = function normalizePath2(filename) {\r\n  return filename.split(import_path.win32.sep).join(import_path.posix.sep);\r\n};\r\nfunction getMatcherString(id, resolutionBase) {\r\n  if (resolutionBase === false || (0, import_path.isAbsolute)(id) || id.startsWith(\"*\")) {\r\n    return id;\r\n  }\r\n  const basePath = normalizePath((0, import_path.resolve)(resolutionBase || \"\")).replace(/[-^$*+?.()|[\\]{}]/g, \"\\\\$&\");\r\n  return import_path.posix.join(basePath, id);\r\n}\r\nvar createFilter = function createFilter2(include, exclude, options) {\r\n  const resolutionBase = options && options.resolve;\r\n  const getMatcher = (id) => id instanceof RegExp ? id : {\r\n    test: (what) => {\r\n      const pattern = getMatcherString(id, resolutionBase);\r\n      const fn = (0, import_picomatch.default)(pattern, { dot: true });\r\n      const result = fn(what);\r\n      return result;\r\n    }\r\n  };\r\n  const includeMatchers = ensureArray(include).map(getMatcher);\r\n  const excludeMatchers = ensureArray(exclude).map(getMatcher);\r\n  return function result(id) {\r\n    if (typeof id !== \"string\")\r\n      return false;\r\n    if (/\\0/.test(id))\r\n      return false;\r\n    const pathId = normalizePath(id);\r\n    for (let i = 0; i < excludeMatchers.length; ++i) {\r\n      const matcher = excludeMatchers[i];\r\n      if (matcher.test(pathId))\r\n        return false;\r\n    }\r\n    for (let i = 0; i < includeMatchers.length; ++i) {\r\n      const matcher = includeMatchers[i];\r\n      if (matcher.test(pathId))\r\n        return true;\r\n    }\r\n    return !includeMatchers.length;\r\n  };\r\n};\r\nvar reservedWords = \"break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public\";\r\nvar builtins = \"arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl\";\r\nvar forbiddenIdentifiers = new Set(`${reservedWords} ${builtins}`.split(\" \"));\r\nforbiddenIdentifiers.add(\"\");\r\n\r\n// src/compiler.ts\r\nvar compiler;\r\ntry {\r\n  compiler = require(\"vue/compiler-sfc\");\r\n} catch (e) {\r\n  try {\r\n    compiler = require(\"@vue/compiler-sfc\");\r\n  } catch (e2) {\r\n    throw new Error(`@vitejs/plugin-vue requires vue (>=3.2.13) or @vue/compiler-sfc to be present in the dependency tree.`);\r\n  }\r\n}\r\n\r\n// src/utils/query.ts\r\nvar import_querystring = __toModule(require(\"querystring\"));\r\nfunction parseVueRequest(id) {\r\n  const [filename, rawQuery] = id.split(`?`, 2);\r\n  const query = import_querystring.default.parse(rawQuery);\r\n  if (query.vue != null) {\r\n    query.vue = true;\r\n  }\r\n  if (query.src != null) {\r\n    query.src = true;\r\n  }\r\n  if (query.index != null) {\r\n    query.index = Number(query.index);\r\n  }\r\n  if (query.raw != null) {\r\n    query.raw = true;\r\n  }\r\n  return {\r\n    filename,\r\n    query\r\n  };\r\n}\r\n\r\n// src/utils/descriptorCache.ts\r\nvar import_fs = __toModule(require(\"fs\"));\r\nvar import_path2 = __toModule(require(\"path\"));\r\n\r\n// ../../node_modules/.pnpm/slash@4.0.0/node_modules/slash/index.js\r\nfunction slash(path4) {\r\n  const isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(path4);\r\n  const hasNonAscii = /[^\\u0000-\\u0080]+/.test(path4);\r\n  if (isExtendedLengthPath || hasNonAscii) {\r\n    return path4;\r\n  }\r\n  return path4.replace(/\\\\/g, \"/\");\r\n}\r\n\r\n// src/utils/descriptorCache.ts\r\nvar import_hash_sum = __toModule(require_hash_sum());\r\nvar cache = new Map();\r\nvar prevCache = new Map();\r\nfunction createDescriptor(filename, source, { root, isProduction, sourceMap }) {\r\n  const { descriptor, errors } = compiler.parse(source, {\r\n    filename,\r\n    sourceMap\r\n  });\r\n  const normalizedPath = slash(import_path2.default.normalize(import_path2.default.relative(root, filename)));\r\n  descriptor.id = (0, import_hash_sum.default)(normalizedPath + (isProduction ? source : \"\"));\r\n  cache.set(filename, descriptor);\r\n  return { descriptor, errors };\r\n}\r\nfunction getPrevDescriptor(filename) {\r\n  return prevCache.get(filename);\r\n}\r\nfunction setPrevDescriptor(filename, entry) {\r\n  prevCache.set(filename, entry);\r\n}\r\nfunction getDescriptor(filename, options, createIfNotFound = true) {\r\n  if (cache.has(filename)) {\r\n    return cache.get(filename);\r\n  }\r\n  if (createIfNotFound) {\r\n    const { descriptor, errors } = createDescriptor(filename, import_fs.default.readFileSync(filename, \"utf-8\"), options);\r\n    if (errors) {\r\n      throw errors[0];\r\n    }\r\n    return descriptor;\r\n  }\r\n}\r\nfunction setDescriptor(filename, entry) {\r\n  cache.set(filename, entry);\r\n}\r\n\r\n// src/template.ts\r\nvar import_path3 = __toModule(require(\"path\"));\r\n\r\n// src/utils/error.ts\r\nfunction createRollupError(id, error) {\r\n  const { message, name, stack } = error;\r\n  const rollupError = {\r\n    id,\r\n    plugin: \"vue\",\r\n    message,\r\n    name,\r\n    stack\r\n  };\r\n  if (\"code\" in error && error.loc) {\r\n    rollupError.loc = {\r\n      file: id,\r\n      line: error.loc.start.line,\r\n      column: error.loc.start.column\r\n    };\r\n  }\r\n  return rollupError;\r\n}\r\n\r\n// src/template.ts\r\nasync function transformTemplateAsModule(code, descriptor, options, pluginContext, ssr) {\r\n  const result = compile(code, descriptor, options, pluginContext, ssr);\r\n  let returnCode = result.code;\r\n  if (options.devServer && options.devServer.config.server.hmr !== false && !ssr && !options.isProduction) {\r\n    returnCode += `\r\nimport.meta.hot.accept(({ render }) => {\r\n      __VUE_HMR_RUNTIME__.rerender(${JSON.stringify(descriptor.id)}, render)\r\n    })`;\r\n  }\r\n  return {\r\n    code: returnCode,\r\n    map: result.map\r\n  };\r\n}\r\nfunction transformTemplateInMain(code, descriptor, options, pluginContext, ssr) {\r\n  const result = compile(code, descriptor, options, pluginContext, ssr);\r\n  return __spreadProps(__spreadValues({}, result), {\r\n    code: result.code.replace(/\\nexport (function|const) (render|ssrRender)/, \"\\n$1 _sfc_$2\")\r\n  });\r\n}\r\nfunction compile(code, descriptor, options, pluginContext, ssr) {\r\n  const filename = descriptor.filename;\r\n  const result = compiler.compileTemplate(__spreadProps(__spreadValues({}, resolveTemplateCompilerOptions(descriptor, options, ssr)), {\r\n    source: code\r\n  }));\r\n  if (result.errors.length) {\r\n    result.errors.forEach((error) => pluginContext.error(typeof error === \"string\" ? { id: filename, message: error } : createRollupError(filename, error)));\r\n  }\r\n  if (result.tips.length) {\r\n    result.tips.forEach((tip) => pluginContext.warn({\r\n      id: filename,\r\n      message: tip\r\n    }));\r\n  }\r\n  return result;\r\n}\r\nfunction resolveTemplateCompilerOptions(descriptor, options, ssr) {\r\n  var _a, _b, _c, _d, _e, _f, _g;\r\n  const block = descriptor.template;\r\n  if (!block) {\r\n    return;\r\n  }\r\n  const resolvedScript = getResolvedScript(descriptor, ssr);\r\n  const hasScoped = descriptor.styles.some((s) => s.scoped);\r\n  const { id, filename, cssVars } = descriptor;\r\n  let transformAssetUrls = (_a = options.template) == null ? void 0 : _a.transformAssetUrls;\r\n  let assetUrlOptions;\r\n  if (options.devServer) {\r\n    if (filename.startsWith(options.root)) {\r\n      assetUrlOptions = {\r\n        base: options.devServer.config.base + slash(import_path3.default.relative(options.root, import_path3.default.dirname(filename)))\r\n      };\r\n    }\r\n  } else {\r\n    assetUrlOptions = {\r\n      includeAbsolute: true\r\n    };\r\n  }\r\n  if (transformAssetUrls && typeof transformAssetUrls === \"object\") {\r\n    if (Object.values(transformAssetUrls).some((val) => Array.isArray(val))) {\r\n      transformAssetUrls = __spreadProps(__spreadValues({}, assetUrlOptions), {\r\n        tags: transformAssetUrls\r\n      });\r\n    } else {\r\n      transformAssetUrls = __spreadValues(__spreadValues({}, transformAssetUrls), assetUrlOptions);\r\n    }\r\n  } else {\r\n    transformAssetUrls = assetUrlOptions;\r\n  }\r\n  let preprocessOptions = block.lang && ((_b = options.template) == null ? void 0 : _b.preprocessOptions);\r\n  if (block.lang === \"pug\") {\r\n    preprocessOptions = __spreadValues({\r\n      doctype: \"html\"\r\n    }, preprocessOptions);\r\n  }\r\n  const expressionPlugins = ((_d = (_c = options.template) == null ? void 0 : _c.compilerOptions) == null ? void 0 : _d.expressionPlugins) || [];\r\n  const lang = ((_e = descriptor.scriptSetup) == null ? void 0 : _e.lang) || ((_f = descriptor.script) == null ? void 0 : _f.lang);\r\n  if (lang && /tsx?$/.test(lang) && !expressionPlugins.includes(\"typescript\")) {\r\n    expressionPlugins.push(\"typescript\");\r\n  }\r\n  return __spreadProps(__spreadValues({}, options.template), {\r\n    id,\r\n    filename,\r\n    scoped: hasScoped,\r\n    slotted: descriptor.slotted,\r\n    isProd: options.isProduction,\r\n    inMap: block.src ? void 0 : block.map,\r\n    ssr,\r\n    ssrCssVars: cssVars,\r\n    transformAssetUrls,\r\n    preprocessLang: block.lang,\r\n    preprocessOptions,\r\n    compilerOptions: __spreadProps(__spreadValues({}, (_g = options.template) == null ? void 0 : _g.compilerOptions), {\r\n      scopeId: hasScoped ? `data-v-${id}` : void 0,\r\n      bindingMetadata: resolvedScript ? resolvedScript.bindings : void 0,\r\n      expressionPlugins,\r\n      sourceMap: options.sourceMap\r\n    })\r\n  });\r\n}\r\n\r\n// src/script.ts\r\nvar clientCache = new WeakMap();\r\nvar ssrCache = new WeakMap();\r\nfunction getResolvedScript(descriptor, ssr) {\r\n  return (ssr ? ssrCache : clientCache).get(descriptor);\r\n}\r\nfunction setResolvedScript(descriptor, script, ssr) {\r\n  ;\r\n  (ssr ? ssrCache : clientCache).set(descriptor, script);\r\n}\r\nfunction isUseInlineTemplate(descriptor, isProd) {\r\n  var _a;\r\n  return isProd && !!descriptor.scriptSetup && !((_a = descriptor.template) == null ? void 0 : _a.src);\r\n}\r\nfunction resolveScript(descriptor, options, ssr) {\r\n  if (!descriptor.script && !descriptor.scriptSetup) {\r\n    return null;\r\n  }\r\n  const cacheToUse = ssr ? ssrCache : clientCache;\r\n  const cached = cacheToUse.get(descriptor);\r\n  if (cached) {\r\n    return cached;\r\n  }\r\n  let resolved = null;\r\n  resolved = compiler.compileScript(descriptor, __spreadProps(__spreadValues({}, options.script), {\r\n    id: descriptor.id,\r\n    isProd: options.isProduction,\r\n    inlineTemplate: isUseInlineTemplate(descriptor, !options.devServer),\r\n    refTransform: options.refTransform !== false,\r\n    templateOptions: resolveTemplateCompilerOptions(descriptor, options, ssr),\r\n    sourceMap: options.sourceMap\r\n  }));\r\n  cacheToUse.set(descriptor, resolved);\r\n  return resolved;\r\n}\r\n\r\n// src/main.ts\r\nvar import_querystring2 = __toModule(require(\"querystring\"));\r\nvar import_path4 = __toModule(require(\"path\"));\r\n\r\n// src/handleHotUpdate.ts\r\nvar import_debug = __toModule(require_src());\r\nvar debug = (0, import_debug.default)(\"vite:hmr\");\r\nvar directRequestRE = /(\\?|&)direct\\b/;\r\nasync function handleHotUpdate({ file, modules, read, server }, options) {\r\n  var _a;\r\n  const prevDescriptor = getDescriptor(file, options, false);\r\n  if (!prevDescriptor) {\r\n    return;\r\n  }\r\n  setPrevDescriptor(file, prevDescriptor);\r\n  const content = await read();\r\n  const { descriptor } = createDescriptor(file, content, options);\r\n  let needRerender = false;\r\n  const affectedModules = new Set();\r\n  const mainModule = modules.find((m) => !/type=/.test(m.url) || /type=script/.test(m.url));\r\n  const templateModule = modules.find((m) => /type=template/.test(m.url));\r\n  if (hasScriptChanged(prevDescriptor, descriptor)) {\r\n    let scriptModule;\r\n    if (((_a = descriptor.script) == null ? void 0 : _a.lang) && !descriptor.script.src) {\r\n      const scriptModuleRE = new RegExp(`type=script.*&lang.${descriptor.script.lang}$`);\r\n      scriptModule = modules.find((m) => scriptModuleRE.test(m.url));\r\n    }\r\n    affectedModules.add(scriptModule || mainModule);\r\n  }\r\n  if (!isEqualBlock(descriptor.template, prevDescriptor.template)) {\r\n    if (mainModule && !affectedModules.has(mainModule)) {\r\n      setResolvedScript(descriptor, getResolvedScript(prevDescriptor, false), false);\r\n    }\r\n    affectedModules.add(templateModule);\r\n    needRerender = true;\r\n  }\r\n  let didUpdateStyle = false;\r\n  const prevStyles = prevDescriptor.styles || [];\r\n  const nextStyles = descriptor.styles || [];\r\n  if (prevDescriptor.cssVars.join(\"\") !== descriptor.cssVars.join(\"\")) {\r\n    affectedModules.add(mainModule);\r\n  }\r\n  if (prevStyles.some((s) => s.scoped) !== nextStyles.some((s) => s.scoped)) {\r\n    affectedModules.add(templateModule);\r\n    affectedModules.add(mainModule);\r\n  }\r\n  for (let i = 0; i < nextStyles.length; i++) {\r\n    const prev = prevStyles[i];\r\n    const next = nextStyles[i];\r\n    if (!prev || !isEqualBlock(prev, next)) {\r\n      didUpdateStyle = true;\r\n      const mod = modules.find((m) => m.url.includes(`type=style&index=${i}`) && m.url.endsWith(`.${next.lang || \"css\"}`) && !directRequestRE.test(m.url));\r\n      if (mod) {\r\n        affectedModules.add(mod);\r\n        if (mod.url.includes(\"&inline\")) {\r\n          affectedModules.add(mainModule);\r\n        }\r\n      } else {\r\n        affectedModules.add(mainModule);\r\n      }\r\n    }\r\n  }\r\n  if (prevStyles.length > nextStyles.length) {\r\n    affectedModules.add(mainModule);\r\n  }\r\n  const prevCustoms = prevDescriptor.customBlocks || [];\r\n  const nextCustoms = descriptor.customBlocks || [];\r\n  if (prevCustoms.length !== nextCustoms.length) {\r\n    affectedModules.add(mainModule);\r\n  } else {\r\n    for (let i = 0; i < nextCustoms.length; i++) {\r\n      const prev = prevCustoms[i];\r\n      const next = nextCustoms[i];\r\n      if (!prev || !isEqualBlock(prev, next)) {\r\n        const mod = modules.find((m) => m.url.includes(`type=${prev.type}&index=${i}`));\r\n        if (mod) {\r\n          affectedModules.add(mod);\r\n        } else {\r\n          affectedModules.add(mainModule);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const updateType = [];\r\n  if (needRerender) {\r\n    updateType.push(`template`);\r\n    if (!templateModule) {\r\n      affectedModules.add(mainModule);\r\n    }\r\n  }\r\n  if (didUpdateStyle) {\r\n    updateType.push(`style`);\r\n  }\r\n  if (updateType.length) {\r\n    debug(`[vue:update(${updateType.join(\"&\")})] ${file}`);\r\n  }\r\n  return [...affectedModules].filter(Boolean);\r\n}\r\nfunction isEqualBlock(a, b) {\r\n  if (!a && !b)\r\n    return true;\r\n  if (!a || !b)\r\n    return false;\r\n  if (a.src && b.src && a.src === b.src)\r\n    return true;\r\n  if (a.content !== b.content)\r\n    return false;\r\n  const keysA = Object.keys(a.attrs);\r\n  const keysB = Object.keys(b.attrs);\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  }\r\n  return keysA.every((key) => a.attrs[key] === b.attrs[key]);\r\n}\r\nfunction isOnlyTemplateChanged(prev, next) {\r\n  return !hasScriptChanged(prev, next) && prev.styles.length === next.styles.length && prev.styles.every((s, i) => isEqualBlock(s, next.styles[i])) && prev.customBlocks.length === next.customBlocks.length && prev.customBlocks.every((s, i) => isEqualBlock(s, next.customBlocks[i]));\r\n}\r\nfunction hasScriptChanged(prev, next) {\r\n  if (!isEqualBlock(prev.script, next.script)) {\r\n    return true;\r\n  }\r\n  if (!isEqualBlock(prev.scriptSetup, next.scriptSetup)) {\r\n    return true;\r\n  }\r\n  const prevResolvedScript = getResolvedScript(prev, false);\r\n  const prevImports = prevResolvedScript == null ? void 0 : prevResolvedScript.imports;\r\n  if (prevImports) {\r\n    return next.shouldForceReload(prevImports);\r\n  }\r\n  return false;\r\n}\r\n\r\n// src/main.ts\r\nvar import_source_map = __toModule(require_source_map());\r\nvar import_vite = __toModule(require(\"vite\"));\r\n\r\n// src/helper.ts\r\nvar EXPORT_HELPER_ID = \"plugin-vue:export-helper\";\r\nvar helperCode = `\r\nexport default (sfc, props) => {\r\n  const target = sfc.__vccOpts || sfc;\r\n  for (const [key, val] of props) {\r\n    target[key] = val;\r\n  }\r\n  return target;\r\n}\r\n`;\r\n\r\n// src/main.ts\r\nasync function transformMain(code, filename, options, pluginContext, ssr, asCustomElement) {\r\n  var _a, _b, _c, _d;\r\n  const { devServer, isProduction } = options;\r\n  const prevDescriptor = getPrevDescriptor(filename);\r\n  const { descriptor, errors } = createDescriptor(filename, code, options);\r\n  if (errors.length) {\r\n    errors.forEach((error) => pluginContext.error(createRollupError(filename, error)));\r\n    return null;\r\n  }\r\n  const attachedProps = [];\r\n  const hasScoped = descriptor.styles.some((s) => s.scoped);\r\n  const { code: scriptCode, map } = await genScriptCode(descriptor, options, pluginContext, ssr);\r\n  const hasTemplateImport = descriptor.template && !isUseInlineTemplate(descriptor, !devServer);\r\n  let templateCode = \"\";\r\n  let templateMap;\r\n  if (hasTemplateImport) {\r\n    ;\r\n    ({ code: templateCode, map: templateMap } = await genTemplateCode(descriptor, options, pluginContext, ssr));\r\n  }\r\n  if (hasTemplateImport) {\r\n    attachedProps.push(ssr ? [\"ssrRender\", \"_sfc_ssrRender\"] : [\"render\", \"_sfc_render\"]);\r\n  } else {\r\n    if (prevDescriptor && !isEqualBlock(descriptor.template, prevDescriptor.template)) {\r\n      attachedProps.push([ssr ? \"ssrRender\" : \"render\", \"() => {}\"]);\r\n    }\r\n  }\r\n  const stylesCode = await genStyleCode(descriptor, pluginContext, asCustomElement, attachedProps);\r\n  const customBlocksCode = await genCustomBlockCode(descriptor, pluginContext);\r\n  const output = [\r\n    scriptCode,\r\n    templateCode,\r\n    stylesCode,\r\n    customBlocksCode\r\n  ];\r\n  if (hasScoped) {\r\n    attachedProps.push([`__scopeId`, JSON.stringify(`data-v-${descriptor.id}`)]);\r\n  }\r\n  if (devServer && !isProduction) {\r\n    attachedProps.push([`__file`, JSON.stringify(filename)]);\r\n  }\r\n  if (devServer && devServer.config.server.hmr !== false && !ssr && !isProduction) {\r\n    output.push(`_sfc_main.__hmrId = ${JSON.stringify(descriptor.id)}`);\r\n    output.push(`typeof __VUE_HMR_RUNTIME__ !== 'undefined' && __VUE_HMR_RUNTIME__.createRecord(_sfc_main.__hmrId, _sfc_main)`);\r\n    if (prevDescriptor && isOnlyTemplateChanged(prevDescriptor, descriptor)) {\r\n      output.push(`export const _rerender_only = true`);\r\n    }\r\n    output.push(`import.meta.hot.accept(({ default: updated, _rerender_only }) => {`, `  if (_rerender_only) {`, `    __VUE_HMR_RUNTIME__.rerender(updated.__hmrId, updated.render)`, `  } else {`, `    __VUE_HMR_RUNTIME__.reload(updated.__hmrId, updated)`, `  }`, `})`);\r\n  }\r\n  if (ssr) {\r\n    const normalizedFilename = normalizePath(import_path4.default.relative(options.root, filename));\r\n    output.push(`import { useSSRContext as __vite_useSSRContext } from 'vue'`, `const _sfc_setup = _sfc_main.setup`, `_sfc_main.setup = (props, ctx) => {`, `  const ssrContext = __vite_useSSRContext()`, `  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(${JSON.stringify(normalizedFilename)})`, `  return _sfc_setup ? _sfc_setup(props, ctx) : undefined`, `}`);\r\n  }\r\n  let resolvedMap = options.sourceMap ? map : void 0;\r\n  if (resolvedMap && templateMap) {\r\n    const generator = import_source_map.SourceMapGenerator.fromSourceMap(new import_source_map.SourceMapConsumer(map));\r\n    const offset = ((_a = scriptCode.match(/\\r?\\n/g)) == null ? void 0 : _a.length) || 1;\r\n    const templateMapConsumer = new import_source_map.SourceMapConsumer(templateMap);\r\n    templateMapConsumer.eachMapping((m) => {\r\n      generator.addMapping({\r\n        source: m.source,\r\n        original: { line: m.originalLine, column: m.originalColumn },\r\n        generated: {\r\n          line: m.generatedLine + offset,\r\n          column: m.generatedColumn\r\n        }\r\n      });\r\n    });\r\n    resolvedMap = generator.toJSON();\r\n    resolvedMap.sourcesContent = templateMap.sourcesContent;\r\n  }\r\n  if (!attachedProps.length) {\r\n    output.push(`export default _sfc_main`);\r\n  } else {\r\n    output.push(`import _export_sfc from '${EXPORT_HELPER_ID}'`, `export default /*#__PURE__*/_export_sfc(_sfc_main, [${attachedProps.map(([key, val]) => `['${key}',${val}]`).join(\",\")}])`);\r\n  }\r\n  let resolvedCode = output.join(\"\\n\");\r\n  if ((((_b = descriptor.script) == null ? void 0 : _b.lang) === \"ts\" || ((_c = descriptor.scriptSetup) == null ? void 0 : _c.lang) === \"ts\") && !((_d = descriptor.script) == null ? void 0 : _d.src)) {\r\n    const { code: code2, map: map2 } = await (0, import_vite.transformWithEsbuild)(resolvedCode, filename, { loader: \"ts\", sourcemap: options.sourceMap }, resolvedMap);\r\n    resolvedCode = code2;\r\n    resolvedMap = resolvedMap ? map2 : resolvedMap;\r\n  }\r\n  return {\r\n    code: resolvedCode,\r\n    map: resolvedMap || {\r\n      mappings: \"\"\r\n    }\r\n  };\r\n}\r\nasync function genTemplateCode(descriptor, options, pluginContext, ssr) {\r\n  const template = descriptor.template;\r\n  if (!template.lang && !template.src) {\r\n    return transformTemplateInMain(template.content, descriptor, options, pluginContext, ssr);\r\n  } else {\r\n    if (template.src) {\r\n      await linkSrcToDescriptor(template.src, descriptor, pluginContext);\r\n    }\r\n    const src = template.src || descriptor.filename;\r\n    const srcQuery = template.src ? `&src` : ``;\r\n    const attrsQuery = attrsToQuery(template.attrs, \"js\", true);\r\n    const query = `?vue&type=template${srcQuery}${attrsQuery}`;\r\n    const request = JSON.stringify(src + query);\r\n    const renderFnName = ssr ? \"ssrRender\" : \"render\";\r\n    return {\r\n      code: `import { ${renderFnName} as _sfc_${renderFnName} } from ${request}`,\r\n      map: void 0\r\n    };\r\n  }\r\n}\r\nasync function genScriptCode(descriptor, options, pluginContext, ssr) {\r\n  let scriptCode = `const _sfc_main = {}`;\r\n  let map;\r\n  const script = resolveScript(descriptor, options, ssr);\r\n  if (script) {\r\n    if ((!script.lang || script.lang === \"ts\") && !script.src) {\r\n      scriptCode = compiler.rewriteDefault(script.content, \"_sfc_main\", script.lang === \"ts\" ? [\"typescript\"] : void 0);\r\n      map = script.map;\r\n    } else {\r\n      if (script.src) {\r\n        await linkSrcToDescriptor(script.src, descriptor, pluginContext);\r\n      }\r\n      const src = script.src || descriptor.filename;\r\n      const langFallback = script.src && import_path4.default.extname(src).slice(1) || \"js\";\r\n      const attrsQuery = attrsToQuery(script.attrs, langFallback);\r\n      const srcQuery = script.src ? `&src` : ``;\r\n      const query = `?vue&type=script${srcQuery}${attrsQuery}`;\r\n      const request = JSON.stringify(src + query);\r\n      scriptCode = `import _sfc_main from ${request}\r\nexport * from ${request}`;\r\n    }\r\n  }\r\n  return {\r\n    code: scriptCode,\r\n    map\r\n  };\r\n}\r\nasync function genStyleCode(descriptor, pluginContext, asCustomElement, attachedProps) {\r\n  let stylesCode = ``;\r\n  let hasCSSModules = false;\r\n  if (descriptor.styles.length) {\r\n    for (let i = 0; i < descriptor.styles.length; i++) {\r\n      const style = descriptor.styles[i];\r\n      if (style.src) {\r\n        await linkSrcToDescriptor(style.src, descriptor, pluginContext);\r\n      }\r\n      const src = style.src || descriptor.filename;\r\n      const attrsQuery = attrsToQuery(style.attrs, \"css\");\r\n      const srcQuery = style.src ? `&src` : ``;\r\n      const directQuery = asCustomElement ? `&inline` : ``;\r\n      const query = `?vue&type=style&index=${i}${srcQuery}${directQuery}`;\r\n      const styleRequest = src + query + attrsQuery;\r\n      if (style.module) {\r\n        if (asCustomElement) {\r\n          throw new Error(`<style module> is not supported in custom elements mode.`);\r\n        }\r\n        if (!hasCSSModules) {\r\n          stylesCode += `\r\nconst cssModules = {}`;\r\n          attachedProps.push([`__cssModules`, `cssModules`]);\r\n          hasCSSModules = true;\r\n        }\r\n        stylesCode += genCSSModulesCode(i, styleRequest, style.module);\r\n      } else {\r\n        if (asCustomElement) {\r\n          stylesCode += `\r\nimport _style_${i} from ${JSON.stringify(styleRequest)}`;\r\n        } else {\r\n          stylesCode += `\r\nimport ${JSON.stringify(styleRequest)}`;\r\n        }\r\n      }\r\n    }\r\n    if (asCustomElement) {\r\n      attachedProps.push([\r\n        `styles`,\r\n        `[${descriptor.styles.map((_, i) => `_style_${i}`).join(\",\")}]`\r\n      ]);\r\n    }\r\n  }\r\n  return stylesCode;\r\n}\r\nfunction genCSSModulesCode(index, request, moduleName) {\r\n  const styleVar = `style${index}`;\r\n  const exposedName = typeof moduleName === \"string\" ? moduleName : \"$style\";\r\n  const moduleRequest = request.replace(/\\.(\\w+)$/, \".module.$1\");\r\n  return `\r\nimport ${styleVar} from ${JSON.stringify(moduleRequest)}\r\ncssModules[\"${exposedName}\"] = ${styleVar}`;\r\n}\r\nasync function genCustomBlockCode(descriptor, pluginContext) {\r\n  let code = \"\";\r\n  for (let index = 0; index < descriptor.customBlocks.length; index++) {\r\n    const block = descriptor.customBlocks[index];\r\n    if (block.src) {\r\n      await linkSrcToDescriptor(block.src, descriptor, pluginContext);\r\n    }\r\n    const src = block.src || descriptor.filename;\r\n    const attrsQuery = attrsToQuery(block.attrs, block.type);\r\n    const srcQuery = block.src ? `&src` : ``;\r\n    const query = `?vue&type=${block.type}&index=${index}${srcQuery}${attrsQuery}`;\r\n    const request = JSON.stringify(src + query);\r\n    code += `import block${index} from ${request}\r\n`;\r\n    code += `if (typeof block${index} === 'function') block${index}(_sfc_main)\r\n`;\r\n  }\r\n  return code;\r\n}\r\nasync function linkSrcToDescriptor(src, descriptor, pluginContext) {\r\n  var _a;\r\n  const srcFile = ((_a = await pluginContext.resolve(src, descriptor.filename)) == null ? void 0 : _a.id) || src;\r\n  setDescriptor(srcFile.replace(/\\?.*$/, \"\"), descriptor);\r\n}\r\nvar ignoreList = [\"id\", \"index\", \"src\", \"type\", \"lang\", \"module\"];\r\nfunction attrsToQuery(attrs, langFallback, forceLangFallback = false) {\r\n  let query = ``;\r\n  for (const name in attrs) {\r\n    const value = attrs[name];\r\n    if (!ignoreList.includes(name)) {\r\n      query += `&${import_querystring2.default.escape(name)}${value ? `=${import_querystring2.default.escape(String(value))}` : ``}`;\r\n    }\r\n  }\r\n  if (langFallback || attrs.lang) {\r\n    query += `lang` in attrs ? forceLangFallback ? `&lang.${langFallback}` : `&lang.${attrs.lang}` : `&lang.${langFallback}`;\r\n  }\r\n  return query;\r\n}\r\n\r\n// src/style.ts\r\nasync function transformStyle(code, descriptor, index, options, pluginContext) {\r\n  const block = descriptor.styles[index];\r\n  const result = await compiler.compileStyleAsync(__spreadProps(__spreadValues({}, options.style), {\r\n    filename: descriptor.filename,\r\n    id: `data-v-${descriptor.id}`,\r\n    isProd: options.isProduction,\r\n    source: code,\r\n    scoped: block.scoped\r\n  }));\r\n  if (result.errors.length) {\r\n    result.errors.forEach((error) => {\r\n      if (error.line && error.column) {\r\n        error.loc = {\r\n          file: descriptor.filename,\r\n          line: error.line + block.loc.start.line,\r\n          column: error.column\r\n        };\r\n      }\r\n      pluginContext.error(error);\r\n    });\r\n    return null;\r\n  }\r\n  return {\r\n    code: result.code,\r\n    map: result.map || { mappings: \"\" }\r\n  };\r\n}\r\n\r\n// src/index.ts\r\nfunction vuePlugin(rawOptions = {}) {\r\n  const {\r\n    include = /\\.vue$/,\r\n    exclude,\r\n    customElement = /\\.ce\\.vue$/,\r\n    refTransform = false\r\n  } = rawOptions;\r\n  const filter = createFilter(include, exclude);\r\n  const customElementFilter = typeof customElement === \"boolean\" ? () => customElement : createFilter(customElement);\r\n  const refTransformFilter = refTransform === false ? () => false : refTransform === true ? createFilter(/\\.(j|t)sx?$/, /node_modules/) : createFilter(refTransform);\r\n  const canUseRefTransform = typeof compiler.shouldTransformRef === \"function\";\r\n  let options = __spreadProps(__spreadValues({\r\n    isProduction: process.env.NODE_ENV === \"production\"\r\n  }, rawOptions), {\r\n    include,\r\n    exclude,\r\n    customElement,\r\n    refTransform,\r\n    root: process.cwd(),\r\n    sourceMap: true\r\n  });\r\n  const isSSR = (opt) => opt === void 0 ? !!options.ssr : typeof opt === \"boolean\" ? opt : (opt == null ? void 0 : opt.ssr) === true;\r\n  return {\r\n    name: \"vite:vue\",\r\n    handleHotUpdate(ctx) {\r\n      if (!filter(ctx.file)) {\r\n        return;\r\n      }\r\n      return handleHotUpdate(ctx, options);\r\n    },\r\n    config(config) {\r\n      return {\r\n        define: {\r\n          __VUE_OPTIONS_API__: true,\r\n          __VUE_PROD_DEVTOOLS__: false\r\n        },\r\n        ssr: {\r\n          external: [\"vue\", \"@vue/server-renderer\"]\r\n        }\r\n      };\r\n    },\r\n    configResolved(config) {\r\n      options = __spreadProps(__spreadValues({}, options), {\r\n        root: config.root,\r\n        sourceMap: config.command === \"build\" ? !!config.build.sourcemap : true,\r\n        isProduction: config.isProduction\r\n      });\r\n    },\r\n    configureServer(server) {\r\n      options.devServer = server;\r\n    },\r\n    async resolveId(id) {\r\n      if (id === EXPORT_HELPER_ID) {\r\n        return id;\r\n      }\r\n      if (parseVueRequest(id).query.vue) {\r\n        return id;\r\n      }\r\n    },\r\n    load(id, opt) {\r\n      const ssr = isSSR(opt);\r\n      if (id === EXPORT_HELPER_ID) {\r\n        return helperCode;\r\n      }\r\n      const { filename, query } = parseVueRequest(id);\r\n      if (query.vue) {\r\n        if (query.src) {\r\n          return import_fs2.default.readFileSync(filename, \"utf-8\");\r\n        }\r\n        const descriptor = getDescriptor(filename, options);\r\n        let block;\r\n        if (query.type === \"script\") {\r\n          block = getResolvedScript(descriptor, ssr);\r\n        } else if (query.type === \"template\") {\r\n          block = descriptor.template;\r\n        } else if (query.type === \"style\") {\r\n          block = descriptor.styles[query.index];\r\n        } else if (query.index != null) {\r\n          block = descriptor.customBlocks[query.index];\r\n        }\r\n        if (block) {\r\n          return {\r\n            code: block.content,\r\n            map: block.map\r\n          };\r\n        }\r\n      }\r\n    },\r\n    transform(code, id, opt) {\r\n      const ssr = isSSR(opt);\r\n      const { filename, query } = parseVueRequest(id);\r\n      if (query.raw) {\r\n        return;\r\n      }\r\n      if (!filter(filename) && !query.vue) {\r\n        if (!query.vue && refTransformFilter(filename)) {\r\n          if (!canUseRefTransform) {\r\n            this.warn(\"refTransform requires @vue/compiler-sfc@^3.2.5.\");\r\n          } else if (compiler.shouldTransformRef(code)) {\r\n            return compiler.transformRef(code, {\r\n              filename,\r\n              sourceMap: true\r\n            });\r\n          }\r\n        }\r\n        return;\r\n      }\r\n      if (!query.vue) {\r\n        return transformMain(code, filename, options, this, ssr, customElementFilter(filename));\r\n      } else {\r\n        const descriptor = getDescriptor(filename, options);\r\n        if (query.type === \"template\") {\r\n          return transformTemplateAsModule(code, descriptor, options, this, ssr);\r\n        } else if (query.type === \"style\") {\r\n          return transformStyle(code, descriptor, Number(query.index), options, this);\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\nmodule.exports = vuePlugin;\r\nvuePlugin[\"default\"] = vuePlugin;\r\n// Annotate the CommonJS export names for ESM import in node:\r\n0 && (module.exports = {\r\n  parseVueRequest\r\n});\r\n", "export default require(\"./node_modules/@vitejs/plugin-vue/dist/index.js\");"],
  "mappings": "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ACJ;AACJ;AACA,SAAS,aAAa,SAAS,cAAc;AACzC,MAAI,CAAC,QAAQ,yBAAyB;AAClC,UAAM,IAAI,MAAM,wKAEkB;AAAA,EACtC;AACA,SAAO,aAAa,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,KAAK,OAAO,OAAO,EAAE,UAAU,QAAQ,SAAS,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,uBAAuB;AAC/K;AA57gDA,IAmBM,gBAoBA,eAMA,sBAGA,uBAEA,OAmEA,iBACA,qBACA,gBAsDA,WAUA,UAUA,WAKA,WAKA,UAKA,WAaA,qBAIA,eAIA,kBACA,qBAWA,gBAYA,iBAkBA,gBAwCA,UA4CA,iBAWA,UAwBA,WAGA,MAIA,IACA,MACA,MACA,QACA,gBACA,QACA,SACA,OACA,OACA,YACA,UACA,UACA,UACA,gBACA,cACA,eACA,gBAMA,oBACA,qBAOA,YAIA,UAGA,aAIA,WAIA,YAIA,cACA,SAqBA,eAgEA,UACA,UACA,UACA,YACA,iBACA,YACA,cACA,sBACA,cACA,sBACA,gBACA,aACA,eACA,mBACA,2BACA,mBACA,gBACA,iBACA,aACA,aACA,cACA,mBACA,aACA,iBACA,iBACA,iBACA,sBACA,aACA,UACA,YACA,gBACA,oBACA,eACA,cACA,UACA,OACA,QACA,WACA,cAGA,eAmDA,SAiLA,WACA,YAaA,gBACA,sBACA,2BA+BA,UASA,gBAyBA,YAuDA,gBA6JA,YAKA,eA2JA,+BAyBA,aAuEF,QAqVE,YASA,OAKA,YACA,YACA,QACA,UACA,QACA,SACA,mBA4BA,YAgBF,kBACE,YACA,aACA,aACA,kBACA,kBACA,eA6BA,IAocF,8BACA,yBACE,yBACA,oBAEA,4BACA,uBA0CA,eAKA,UACA,wBACA,4BAoBA,qBAKA,aACA,eACA,gBACA,aACA,oBACA,aACA,oBACA,aACA,oBACA,iBACA,WACA,iBACA,gBACA,gBACA,oBACA,qBACA,iBACA,kBACA,oBACA,0BACA,2BACA,4BACA,YACA,cACA,UACA,eACA,mBACA,cACA,cACA,iBACA,WACA,cACA,oBACA,mBACA,sBACA,2BACA,2BACA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GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,IAAI;AACj8D,IAAM,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,G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Aa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MA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",
  "names": ["map", "list", "pad", "length", "string", "error", "tag", "isComponent", "input", "node", "range", "list2", "object", "plugin", "parser", "tokenTypes", "result", "config", "match", "loc", "root", "i", "returnType", "hoistStatic", "id", "n", "sourceMap", "version", "indent", "prefix", "postfix", "isReferenced", "last", "source", "children", "binding", "props", "walk", "seen", "hash", "fill", "read", "from", "path", "trim", "e", "inspect", "x", "warned", "base", "add", "sep", "self", "relative", "isVoidTag", "clone", "isFragment", "exhaustiveCheck", "errors", "end", "registerBinding", "snip", "parentStack", "scriptAst", "s", "startOffset", "endOffset", "parse", "options", "extend", "init", "types", "isEmpty", "processor", "swap", "randomIntInRange", "doQuickSort", "comparator", "parser$1", "rule", "selector", "document", "val", "comment", "ScopeHandler", "bodyNode", "declaration", "node2", "jsx", "arrowExpression", "parseElement", "isString", "left", "expr", "startsExpr", "type", "tokenIsKeyword", "isPrivate", "urlParse", "normalize", "isAbsolute", "join", "sourceFile", "SourceMapConsumer_parseMappings", "needle", "section", "advance", "name", "toString", "compare", "write", "byteLength", "BitSet", "has", "Chunk", "SourceMap", "Mappings", "MagicString", "appendLeft", "appendRight", "replacer", "prependLeft", "prependRight", "slice", "trimEnd", "trimStart", "inherits", "index", "exp", "escape", "stringifier", "base64VLQ_encode", "base64VLQ_decode", "ArraySet_fromArray", "ArraySet_size", "ArraySet_add", "ArraySet_has", "ArraySet_indexOf", "ArraySet_at", "ArraySet_toArray", "MappingList_forEach", "MappingList_add", "MappingList_toArray", "SourceMapGenerator_fromSourceMap", "SourceMapGenerator_addMapping", "SourceMapGenerator_setSourceContent", "SourceMapGenerator_applySourceMap", "SourceMapGenerator_validateMapping", "SourceMapGenerator_serializeMappings", "SourceMapGenerator_generateSourcesContent", "SourceMapGenerator_toJSON", "SourceMapGenerator_toString", "SourceMapConsumer_charIsMappingSeparator", "SourceMapConsumer_eachMapping", "SourceMapConsumer_allGeneratedPositionsFor", "SourceMapConsumer_fromSourceMap", "SourceMapConsumer_findMapping", "SourceMapConsumer_computeColumnSpans", "SourceMapConsumer_originalPositionFor", "BasicSourceMapConsumer_hasContentsOfAllSources", "SourceMapConsumer_sourceContentFor", "SourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_originalPositionFor", "IndexedSourceMapConsumer_hasContentsOfAllSources", "IndexedSourceMapConsumer_sourceContentFor", "IndexedSourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_parseMappings", "SourceNode_fromStringWithSourceMap", "SourceNode_add", "SourceNode_prepend", "SourceNode_walk", "SourceNode_join", "SourceNode_replaceRight", "SourceNode_setSourceContent", "SourceNode_walkSourceContents", "SourceNode_toString", "SourceNode_toStringWithSourceMap", "lastLine", "stringify", "warnOnce", "split", "filter", "cloneNode", "Node", "remove", "_getRequireWildcardCache", "_setPrototypeOf", "o", "p", "Container", "append", "prepend", "Root", "Selector", "merge", "cssesc", "ClassName", "Comment", "ID", "Namespace", "namespace", "Tag", "String", "Pseudo", "Attribute", "concat", "Universal", "Combinator", "Nesting", "equals", "combinator", "tokenize", "getSource", "Parser", "attribute", "nesting", "pseudo", "universal", "current", "Processor", "noop", "resolve", "transform", "process", "className", "__commonJS", "__require", "__export", "exports", "chars", "input", "prepend", "append", "length", "advance", "base", "prefix", "n", "parse", "range", "isObject", "result", "format", "pad", "fold", "foldObject", "seen", "foldValue", "toString", "sum", "env", "namespace", "self", "formatter", "extend", "delimiter", "split", "warned", "error", "argv", "tty", "version", "require_node", "util", "init", "log", "intToCharMap", "base64", "VLQ_BASE_SHIFT", "VLQ_BASE", "VLQ_BASE_MASK", "VLQ_CONTINUATION_BIT", "toVLQSigned", "fromVLQSigned", "base64VLQ_encode", "base64VLQ_decode", "urlParse", "normalize", "join", "relative", "has", "hasNativeMap", "ArraySet", "ArraySet_fromArray", "ArraySet_size", "ArraySet_add", "ArraySet_has", "ArraySet_indexOf", "ArraySet_at", "ArraySet_toArray", "generatedPositionAfter", "MappingList", "MappingList_forEach", "MappingList_add", "MappingList_toArray", "SourceMapGenerator_fromSourceMap", "SourceMapGenerator_addMapping", "SourceMapGenerator_setSourceContent", "SourceMapGenerator_applySourceMap", "SourceMapGenerator_validateMapping", "SourceMapGenerator_serializeMappings", "SourceMapGenerator_generateSourcesContent", "SourceMapGenerator_toJSON", "map", "SourceMapGenerator_toString", "swap", "randomIntInRange", "doQuickSort", "binarySearch", "quickSort", "sourceMap", "IndexedSourceMapConsumer", "BasicSourceMapConsumer", "SourceMapConsumer_charIsMappingSeparator", "SourceMapConsumer_parseMappings", "SourceMapConsumer_eachMapping", "SourceMapConsumer_allGeneratedPositionsFor", "SourceMapConsumer_fromSourceMap", "Mapping", "SourceMapConsumer_findMapping", "SourceMapConsumer_computeColumnSpans", "SourceMapConsumer_originalPositionFor", "BasicSourceMapConsumer_hasContentsOfAllSources", "SourceMapConsumer_sourceContentFor", "SourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_originalPositionFor", "IndexedSourceMapConsumer_hasContentsOfAllSources", "IndexedSourceMapConsumer_sourceContentFor", "IndexedSourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_parseMappings", "REGEX_NEWLINE", "NEWLINE_CODE", "isSourceNode", "SourceNode", "SourceNode_fromStringWithSourceMap", "node", "SourceNode_add", "SourceNode_prepend", "SourceNode_walk", "SourceNode_join", "SourceNode_replaceRight", "SourceNode_setSourceContent", "SourceNode_walkSourceContents", "SourceNode_toString", "SourceNode_toStringWithSourceMap", "isArray", "id", "reservedWords", "root", "errors", "compile", "read", "map2", "transformStyle", "filter", "config"]
}
